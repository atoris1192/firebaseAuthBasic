{"version":3,"sources":["../node_modules/whatwg-fetch/fetch.js","../node_modules/promise-polyfill/lib/polyfill.js","../node_modules/core-js/modules/_global.js","../node_modules/core-js/modules/_core.js","../node_modules/core-js/modules/_is-object.js","../node_modules/core-js/modules/_an-object.js","../node_modules/core-js/modules/_fails.js","../node_modules/core-js/modules/_descriptors.js","../node_modules/core-js/modules/_dom-create.js","../node_modules/core-js/modules/_ie8-dom-define.js","../node_modules/core-js/modules/_to-primitive.js","../node_modules/core-js/modules/_object-dp.js","../node_modules/core-js/modules/_property-desc.js","../node_modules/core-js/modules/_hide.js","../node_modules/core-js/modules/_has.js","../node_modules/core-js/modules/_uid.js","../node_modules/core-js/modules/_redefine.js","../node_modules/core-js/modules/_a-function.js","../node_modules/core-js/modules/_ctx.js","../node_modules/core-js/modules/_export.js","../node_modules/core-js/modules/_cof.js","../node_modules/core-js/modules/_iobject.js","../node_modules/core-js/modules/_defined.js","../node_modules/core-js/modules/_to-object.js","../node_modules/core-js/modules/_to-integer.js","../node_modules/core-js/modules/_to-length.js","../node_modules/core-js/modules/_is-array.js","../node_modules/core-js/modules/_shared.js","../node_modules/core-js/modules/_wks.js","../node_modules/core-js/modules/_array-species-constructor.js","../node_modules/core-js/modules/_array-species-create.js","../node_modules/core-js/modules/_array-methods.js","../node_modules/core-js/modules/_add-to-unscopables.js","../node_modules/core-js/modules/es6.array.find.js","../node_modules/core-js/fn/array/find.js","../node_modules/core-js/modules/es6.array.find-index.js","../node_modules/core-js/fn/array/find-index.js","../node_modules/core-js/modules/_to-iobject.js","../node_modules/core-js/modules/_to-absolute-index.js","../node_modules/core-js/modules/_array-includes.js","../node_modules/core-js/modules/_shared-key.js","../node_modules/core-js/modules/_object-keys-internal.js","../node_modules/core-js/modules/_enum-bug-keys.js","../node_modules/core-js/modules/_object-keys.js","../node_modules/core-js/modules/_object-gops.js","../node_modules/core-js/modules/_object-pie.js","../node_modules/core-js/modules/_object-assign.js","../node_modules/core-js/modules/es6.object.assign.js","../node_modules/core-js/fn/object/assign.js","../node_modules/core-js/modules/_is-regexp.js","../node_modules/core-js/modules/_string-context.js","../node_modules/core-js/modules/_fails-is-regexp.js","../node_modules/core-js/modules/es6.string.starts-with.js","../node_modules/core-js/fn/string/starts-with.js","../node_modules/core-js/modules/_string-repeat.js","../node_modules/core-js/modules/es6.string.repeat.js","../node_modules/core-js/fn/string/repeat.js","../node_modules/core-js/modules/_meta.js","../node_modules/core-js/modules/_set-to-string-tag.js","../node_modules/core-js/modules/_wks-ext.js","../node_modules/core-js/modules/_library.js","../node_modules/core-js/modules/_wks-define.js","../node_modules/core-js/modules/_enum-keys.js","../node_modules/core-js/modules/_object-dps.js","../node_modules/core-js/modules/_html.js","../node_modules/core-js/modules/_object-create.js","../node_modules/core-js/modules/_object-gopn.js","../node_modules/core-js/modules/_object-gopn-ext.js","../node_modules/core-js/modules/_object-gopd.js","../node_modules/core-js/modules/es6.symbol.js","../node_modules/core-js/modules/_classof.js","../node_modules/core-js/modules/es6.object.to-string.js","../node_modules/core-js/modules/es7.symbol.async-iterator.js","../node_modules/core-js/modules/es7.symbol.observable.js","../node_modules/core-js/fn/symbol/index.js","../node_modules/core-js/modules/_string-at.js","../node_modules/core-js/modules/_iterators.js","../node_modules/core-js/modules/_iter-create.js","../node_modules/core-js/modules/_object-gpo.js","../node_modules/core-js/modules/_iter-define.js","../node_modules/core-js/modules/es6.string.iterator.js","../node_modules/core-js/modules/_iter-step.js","../node_modules/core-js/modules/es6.array.iterator.js","../node_modules/core-js/modules/web.dom.iterable.js","../node_modules/core-js/fn/symbol/iterator.js","../node_modules/@firebase/polyfill/dist/index.esm.js","../node_modules/tslib/tslib.es6.js","../node_modules/@firebase/util/dist/index.cjs.js","../node_modules/@firebase/app/dist/index.cjs.js","../node_modules/firebase/app/dist/index.cjs.js","../../node_modules/google-closure-library/closure/goog/base.js","../../node_modules/google-closure-library/closure/goog/promise/thenable.js","../../node_modules/google-closure-library/closure/goog/debug/error.js","../../node_modules/google-closure-library/closure/goog/asserts/asserts.js","../../node_modules/google-closure-library/closure/goog/async/freelist.js","../../node_modules/google-closure-library/closure/goog/async/workqueue.js","../../node_modules/google-closure-library/closure/goog/async/run.js","../../node_modules/google-closure-library/closure/goog/array/array.js","../../node_modules/google-closure-library/closure/goog/net/xhrio.js","../../node_modules/google-closure-library/closure/goog/string/string.js","../../node_modules/google-closure-library/closure/goog/labs/useragent/util.js","../../node_modules/google-closure-library/closure/goog/object/object.js","../../node_modules/google-closure-library/closure/goog/async/nexttick.js","../../node_modules/google-closure-library/closure/goog/labs/useragent/engine.js","../../node_modules/google-closure-library/closure/goog/labs/useragent/browser.js","../../node_modules/google-closure-library/closure/goog/promise/promise.js","../../node_modules/google-closure-library/closure/goog/disposable/disposable.js","../../node_modules/google-closure-library/closure/goog/reflect/reflect.js","../../node_modules/google-closure-library/closure/goog/useragent/useragent.js","../../node_modules/google-closure-library/closure/goog/debug/debug.js","../../node_modules/google-closure-library/closure/goog/events/browserfeature.js","../../node_modules/google-closure-library/closure/goog/events/event.js","../../node_modules/google-closure-library/closure/goog/events/browserevent.js","../../node_modules/google-closure-library/closure/goog/events/eventtype.js","../../node_modules/google-closure-library/closure/goog/events/listenable.js","../../node_modules/google-closure-library/closure/goog/events/listener.js","../../node_modules/google-closure-library/closure/goog/events/listenermap.js","../../node_modules/google-closure-library/closure/goog/events/events.js","../../node_modules/google-closure-library/closure/goog/events/eventtarget.js","../../node_modules/google-closure-library/closure/goog/timer/timer.js","../../node_modules/google-closure-library/closure/goog/structs/structs.js","../../node_modules/google-closure-library/closure/goog/structs/map.js","../../node_modules/google-closure-library/closure/goog/uri/utils.js","../../node_modules/google-closure-library/closure/goog/uri/uri.js","src/iframeclient/ifchandler.js","../../node_modules/google-closure-library/closure/goog/dom/browserfeature.js","../../node_modules/google-closure-library/closure/goog/string/const.js","../../node_modules/google-closure-library/closure/goog/html/trustedresourceurl.js","../../node_modules/google-closure-library/closure/goog/html/safeurl.js","../../node_modules/google-closure-library/closure/goog/html/safehtml.js","../../node_modules/google-closure-library/closure/goog/dom/dom.js","../../node_modules/google-closure-library/closure/goog/json/json.js","src/utils.js","../../node_modules/google-closure-library/closure/goog/window/window.js","../../node_modules/google-closure-library/closure/goog/labs/useragent/platform.js","../../node_modules/google-closure-library/closure/goog/dom/safe.js","../../node_modules/google-closure-library/closure/goog/html/uncheckedconversions.js","src/recaptchaverifier/grecaptchamock.js","src/deprecation.js","src/object.js","src/actioncodeinfo.js","src/error_auth.js","src/actioncodesettings.js","../../node_modules/google-closure-library/closure/goog/crypt/crypt.js","../../node_modules/google-closure-library/closure/goog/crypt/base64.js","src/idtoken.js","src/defines.js","src/idp.js","src/additionaluserinfo.js","src/actioncodeurl.js","src/dynamiclink.js","src/authcredential.js","src/rpchandler.js","src/auth.js","src/authevent.js","src/universallinksubscriber.js","src/error_invalidorigin.js","src/error_withcredential.js","../../node_modules/google-closure-library/closure/goog/net/xmlhttpfactory.js","../../node_modules/google-closure-library/closure/goog/net/xmlhttp.js","../../node_modules/google-closure-library/closure/goog/net/corsxmlhttpfactory.js","../../node_modules/google-closure-library/closure/goog/net/httpstatus.js","../../node_modules/google-closure-library/closure/goog/debug/logrecord.js","../../node_modules/google-closure-library/closure/goog/debug/logger.js","../../node_modules/google-closure-library/closure/goog/log/log.js","../../node_modules/google-closure-library/closure/goog/net/fetchxmlhttpfactory.js","../../node_modules/google-closure-library/closure/goog/functions/functions.js","../../node_modules/google-closure-library/closure/goog/net/eventtype.js","../../node_modules/google-closure-library/closure/goog/net/errorcode.js","../../node_modules/google-closure-library/third_party/closure/goog/mochikit/async/deferred.js","../../node_modules/google-closure-library/closure/goog/net/jsloader.js","src/iframeclient/iframewrapper.js","src/storage/asyncstorage.js","src/storage/storage.js","src/messagechannel/receiver.js","src/messagechannel/defines.js","src/messagechannel/postmessager.js","src/messagechannel/sender.js","src/storage/indexeddb.js","src/storage/hybridindexeddb.js","src/storage/inmemorystorage.js","src/storage/localstorage.js","src/storage/nullstorage.js","src/storage/sessionstorage.js","src/storage/factory.js","src/authstorage.js","src/storageautheventmanager.js","src/storageoauthhandlermanager.js","../../node_modules/google-closure-library/closure/goog/crypt/hash.js","../../node_modules/google-closure-library/closure/goog/crypt/sha2.js","../../node_modules/google-closure-library/closure/goog/crypt/sha256.js","src/cordovahandler.js","src/storagependingredirectmanager.js","src/autheventmanager.js","src/authsettings.js","src/confirmationresult.js","src/idtokenresult.js","src/proactiverefresh.js","src/authuser.js","src/token.js","src/storageredirectusermanager.js","src/storageusermanager.js","src/recaptchaverifier/grecaptcha.js","src/recaptchaverifier/mockloader.js","src/recaptchaverifier/realloader.js","src/recaptchaverifier/recaptchaverifier.js","src/args.js","src/exports_lib.js","src/exports_auth.js","../node_modules/firebase/auth/dist/index.esm.js","main.js"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__rest","e","indexOf","getOwnPropertySymbols","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__exportStar","m","exports","__values","o","__read","ar","error","__spread","concat","__await","__asyncGenerator","asyncIterator","q","a","resume","settle","fulfill","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","k","default","__importDefault","goog","goog.global","goog.isString","val","goog.isBoolean","goog.nullFunction","goog.typeOf","className","toString","splice","propertyIsEnumerable","goog.isNull","goog.isArray","goog.isArrayLike","type","goog.isFunction","goog.isObject","goog.UID_PROPERTY_","Math","random","goog.uidCounter_","goog.bindNative_","fn","selfObj","var_args","bind","goog.bindJs_","Error","boundArgs","slice","newArgs","unshift","goog.bind","Function","goog.bind.apply","goog.partial","args","goog.now","Date","now","goog.inherits","childCtor","parentCtor","tempCtor","superClass_","base","childCtor.base","me","methodName","goog.Thenable.addImplementation","ctor","goog.Thenable.isImplementedBy","object","goog.debug.Error","opt_msg","captureStackTrace","stack","message","String","name","goog.asserts.AssertionError","messagePattern","messageArgs","splitParts","split","returnString","subLast","sub","goog.debug.Error.call","goog.asserts.fail","opt_message","reset","create_","reset_","occupants_","head_","goog.async.FreeList","get","item","put","goog.async.WorkQueue.DEFAULT_MAX_UNUSED","goog.async.WorkQueue","workTail_","workHead_","goog.async.WorkQueue.freelist_","goog.async.WorkItem","add","goog.async.WorkQueue.prototype.add","scope","goog.async.WorkQueue.freelist_.get","set","goog.async.WorkQueue.prototype.remove","goog.async.run.workQueue_.remove","goog.async.WorkItem.prototype.set","goog.async.WorkItem.prototype.reset","goog.array.indexOf","arr","obj","opt_fromIndex","fromIndex","goog.array.forEach","forEach","opt_obj","l","arr2","goog.array.forEachRight","goog.array.map","map","res","goog.array.some","some","goog.array.find","goog.net.XhrIo.isContentTypeHeader_","charAt","goog.array.contains","goog.array.remove","rv","goog.array.removeAllIf","removedCount","index","goog.array.concat","goog.array.toArray","goog.string.subs","str","subsArguments","join","goog.string.trim","trim","exec","goog.string.htmlEscape","goog.string.ALL_RE_.test","test","replace","goog.string.AMP_RE_","goog.string.LT_RE_","goog.string.GT_RE_","goog.string.QUOT_RE_","goog.string.SINGLE_QUOTE_RE_","goog.string.NULL_RE_","goog.string.ALL_RE_","goog.string.contains","subString","goog.string.compareElements_","left","right","goog.labs.userAgent.util.userAgent_","navigator","goog.global.navigator","userAgent","goog.labs.userAgent.util.matchUserAgent","goog.object.forEach","goog.object.isEmpty","goog.object.clone","goog.object.PROTOTYPE_FIELDS_","goog.object.extend","source","j","goog.object.PROTOTYPE_FIELDS_.length","goog.async.throwException","exception","goog.global.setTimeout","setTimeout","Channel","window","postMessage","addEventListener","iframe","document","createElement","style","display","src","documentElement","appendChild","win","contentWindow","doc","open","write","close","origin","location","protocol","host","onmessage","data","channel","head","tail","cb","script","onreadystatechange","script.onreadystatechange","parentNode","removeChild","goog.async.run","callback","opt_context","goog.async.run.schedule_","goog.async.run.initializeRunner_","goog.async.run.workQueueScheduled_","goog.async.run.workQueue_.add","goog.global.Promise","goog.global.Promise.resolve","promise","undefined","goog.async.run.processWorkQueue","goog.global.setImmediate","setImmediate","goog.global.Window","Window","goog.async.nextTick.setImmediate_","goog.async.nextTick.getSetImmediateEmulator_","goog.async.run.workQueue_","remove","goog.async.WorkQueue.freelist_.put","goog.Promise","resolver","state_","goog.Promise.State_.PENDING","result_","callbackEntriesTail_","callbackEntries_","parent_","hadUnhandledRejection_","executing_","self","resolve_","goog.Promise.State_.FULFILLED","reason","goog.Promise.CancellationError","goog.Promise.State_.REJECTED","PENDING","FULFILLED","REJECTED","goog.Promise.CallbackEntry_","context","onRejected","onFulfilled","child","always","goog.Promise.CallbackEntry_.prototype.reset","goog.Promise.freelist_","entry","goog.Promise.freelist_.get","goog.Promise.resolve","opt_value","goog.Promise.reject","opt_reason","goog.Promise.resolveThen_","goog.Promise.maybeThen_","isThenable","goog.Promise.all","promises","toFulfill","values","onFulfill","onReject","goog.Promise.allSettled","toSettle","results","onSettled","goog.Promise.prototype.then","opt_onFulfilled","opt_onRejected","addChildPromise_","goog.Promise.prototype","thenAlways","goog.Promise.prototype.thenAlways","goog.Promise.getCallbackEntry_","addCallbackEntry_","thenCatch","goog.Promise.prototype.thenCatch","cancel","goog.Promise.prototype.cancel","err","cancelInternal_","goog.Promise.prototype.cancelInternal_","childCount","childEntry","beforeChildEntry","childPromise","previous","removeEntryAfter_","popEntry_","executeCallback_","goog.Promise.prototype.addCallbackEntry_","callbackEntry","hasEntry_","scheduleCallbacks_","queueEntry_","goog.Promise.prototype.addChildPromise_","unblockAndFulfill_","goog.Promise.prototype.unblockAndFulfill_","unblockAndReject_","goog.Promise.prototype.unblockAndReject_","goog.Promise.prototype.resolve_","state","x","BLOCKED","goog.Promise.addUnhandledRejection_","goog.Promise.tryThen_","thenable","called","goog.Promise.prototype.scheduleCallbacks_","executeCallbacks_","goog.Promise.prototype.popEntry_","goog.Promise.prototype.executeCallbacks_","goog.Promise.prototype.executeCallback_","goog.Promise.invokeCallback_","goog.Promise.handleRejection_.call","goog.Promise.freelist_.put","goog.Promise.handleRejection_","goog.Promise.CancellationError.base","goog.Disposable","goog.Disposable.MONITORING_MODE","goog.Disposable.MonitoringMode.OFF","goog.Disposable.instances_","disposed_","onDisposeCallbacks_","OFF","goog.Disposable.prototype.dispose","disposeInternal","uid","goog.Disposable.prototype.disposeInternal","goog.reflect.sinkValue","goog.reflect.cache","valueFn","cacheObj","goog.userAgent.isVersionOrHigherCache_","goog.userAgent.OPERA","goog.userAgent.IE","goog.userAgent.EDGE","goog.userAgent.EDGE_OR_IE","goog.userAgent.GECKO","toLowerCase","goog.userAgent.WEBKIT","goog.userAgent.getDocumentMode_","goog.userAgent.VERSION","version","goog.userAgent.getVersionRegexResult_","docMode","parseFloat","order","v1Subs","v2Subs","subCount","max","subIdx","v1Sub","v2Sub","v1Comp","v2Comp","parseInt","mode","goog.debug.freezeInternal_","freeze","arg","HAS_W3C_EVENT_SUPPORT","Number","goog.userAgent.DOCUMENT_MODE","SET_KEY_CODE_TO_PREVENT_DEFAULT","goog.userAgent.isVersionOrHigher","PASSIVE_EVENTS","goog.global.addEventListener","passive","options","goog.global.removeEventListener","removeEventListener","purify","goog.events.Event","opt_target","currentTarget","returnValue_","preventDefault","goog.events.Event.prototype.preventDefault","goog.events.BrowserEvent","opt_e","opt_currentTarget","goog.events.Event.call","goog.events.BrowserEvent.base","relatedTarget","button","screenY","screenX","clientY","clientX","metaKey","shiftKey","altKey","ctrlKey","pointerId","pointerType","event_","init","relevantTouch","changedTouches","srcElement","MOUSEOVER","fromElement","MOUSEOUT","toElement","pageX","pageY","goog.events.BrowserEvent.IE_POINTER_TYPE_MAP","defaultPrevented","TOUCH","PEN","MOUSE","goog.events.BrowserEvent.prototype.preventDefault","goog.events.BrowserEvent.superClass_.preventDefault.call","be","returnValue","goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT","VK_F1","keyCode","VK_F12","ex","getBrowserEvent","goog.events.BrowserEvent.prototype.getBrowserEvent","goog.events.Listenable.IMPLEMENTED_BY_PROP","goog.events.ListenableKey.counter_","goog.events.Listener","listener","capture","opt_handler","proxy","handler","removed","callOnce","goog.events.Listener.prototype.markAsRemoved","goog.events.ListenerMap","listeners","typeCount_","goog.events.ListenerMap.prototype.add","opt_useCapture","opt_listenerScope","typeStr","listenerArray","goog.events.ListenerMap.findListenerIndex_","listenerObj","goog.events.ListenerMap.prototype.removeByKey","markAsRemoved","goog.events.LISTENER_MAP_PROP_","goog.events.onStringMap_","goog.events.listenerCountEstimate_","goog.events.listen","opt_options","once","goog.events.listenOnce","goog.events.wrapListener","listen","goog.events.listen_","listenerMap","goog.events.getListenerMap_","goog.events.getProxy","goog.events.BrowserFeature.PASSIVE_EVENTS","attachEvent","goog.events.getOnString_","addListener","removeListener","proxyCallbackFunction","goog.events.handleBrowserEvent_","goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT","eventObject","listenOnce","goog.events.unlisten","eventTargetListeners_","goog.events.unlistenByKey","removeByKey","detachEvent","goog.events.onString_","goog.events.fireListeners_","retval","goog.events.fireListener","listenerFn","listenerHandler","opt_evt","parts","cur","ieEvent","evt","useReturnValue","ancestors","parent","goog.events.LISTENER_WRAPPER_PROP_","handleEvent","goog.events.EventTarget","goog.Disposable.call","actualEventTarget_","parentEventTarget_","goog.events.EventTarget.prototype.addEventListener","opt_capture","opt_handlerScope","goog.events.EventTarget.prototype.removeEventListener","dispatchEvent","goog.events.EventTarget.prototype.dispatchEvent","ancestorsTree","ancestor","getParentEventTarget","oldEvent","opt_ancestorsTree","fireListeners","goog.events.EventTarget.prototype.disposeInternal","goog.events.EventTarget.superClass_.disposeInternal.call","removeAllListeners","count","goog.events.EventTarget.prototype.listen","goog.events.EventTarget.prototype.listenOnce","goog.events.EventTarget.prototype.fireListeners","unlistenByKey","goog.Timer.callOnce","opt_delay","goog.Timer.MAX_TIMEOUT_","goog.Timer.INVALID_TIMEOUT_ID_","goog.Timer.promise","delay","timerKey","opt_result","goog.global.clearTimeout","clearTimeout","goog.structs.getValues","col","getValues","goog.structs.getKeys","getKeys","goog.structs.forEach","keys","goog.structs.Map","opt_map","map_","keys_","count_","argLength","addAll","goog.structs.Map.prototype","goog.structs.Map.prototype.getValues","cleanupKeysArray_","goog.structs.Map.prototype.getKeys","clear","goog.structs.Map.prototype.clear","goog.structs.Map.prototype.cleanupKeysArray_","srcIndex","destIndex","goog.structs.Map.hasKey_","seen","goog.structs.Map.prototype.get","opt_val","goog.structs.Map.prototype.set","goog.structs.Map.prototype.forEach","goog.uri.utils.splitRe_","goog.uri.utils.parseQueryData","encodedQuery","pairs","indexOfEquals","substring","decodeURIComponent","goog.Uri","opt_uri","opt_ignoreCase","domain_","userInfo_","scheme_","port_","fragment_","path_","ignoreCase_","setScheme","setUserInfo","setDomain","setPort","setPath","queryData_","goog.Uri.QueryData","encodedQuery_","keyMap_","setQueryData","setFragment","uri","match","SCHEME","goog.Uri.decodeOrEmpty_","USER_INFO","DOMAIN","PORT","PATH","QUERY_DATA","FRAGMENT","goog.Uri.prototype.toString","out","scheme","getScheme","goog.Uri.encodeSpecialChars_","goog.Uri.reDisallowedInSchemeOrUserInfo_","domain","getDomain","userInfo","getUserInfo","encodeURIComponent","doubleEncodedString","port","getPort","path","getPath","hasDomain","goog.Uri.reDisallowedInAbsolutePath_","goog.Uri.reDisallowedInRelativePath_","query","getEncodedQuery","fragment","getFragment","goog.Uri.reDisallowedInFragment_","goog.Uri.prototype.setScheme","newScheme","opt_decode","goog.Uri.prototype.setPort","newPort","isNaN","goog.Uri.prototype.setQueryData","queryData","setIgnoreCase","goog.Uri.reDisallowedInQuery_","goog.Uri.prototype.setParameterValue","goog.Uri.prototype.getParameterValue","paramName","goog.Uri.parse","goog.Uri.create","opt_domain","opt_path","fireauth.iframeclient.SCHEME","opt_preserveReserved","decodeURI","unescapedPart","extra","opt_removeDoubleEncoding","encoded","encodeURI","goog.Uri.encodeChar_","ch","charCodeAt","opt_query","goog.Uri.QueryData.prototype.ensureKeyMapInitialized_","goog.Uri.QueryData.createFromMap","setValues","goog.Uri.QueryData.prototype","goog.Uri.QueryData.prototype.add","ensureKeyMapInitialized_","invalidateCache_","getKeyName_","goog.Uri.QueryData.prototype.remove","goog.Uri.QueryData.prototype.clear","goog.Uri.QueryData.prototype.containsKey","goog.Uri.QueryData.prototype.forEach","opt_scope","goog.Uri.QueryData.prototype.getKeys","vals","goog.Uri.QueryData.prototype.getValues","opt_key","containsKey","goog.Uri.QueryData.prototype.set","goog.Uri.QueryData.prototype.get","opt_default","goog.Uri.QueryData.prototype.setValues","goog.Uri.QueryData.prototype.toString","sb","encodedKey","param","goog.Uri.QueryData.prototype.getKeyName_","keyName","goog.Uri.QueryData.prototype.setIgnoreCase","ignoreCase","lowerCase","CAN_ADD_NAME_OR_TYPE_ATTRIBUTES","goog.string.Const","stringConstValueWithSecurityContract__googStringSecurityPrivate_","STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_","goog.string.Const.TYPE_MARKER_","implementsGoogStringTypedString","getTypedStringValue","goog.string.Const.prototype.getTypedStringValue","goog.string.Const.prototype.toString","goog.string.Const.unwrap","stringConst","goog.string.Const.create__googStringSecurityPrivate_","goog.html.TrustedResourceUrl","privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_","TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","goog.html.TrustedResourceUrl.prototype.getTypedStringValue","goog.html.TrustedResourceUrl.prototype.toString","goog.html.TrustedResourceUrl.unwrap","trustedResourceUrl","goog.html.TrustedResourceUrl.format","format","formatStr","goog.html.TrustedResourceUrl.BASE_URL_.test","goog.html.TrustedResourceUrl.FORMAT_MARKER_","id","JSON","stringify","goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse","goog.html.TrustedResourceUrl.BASE_URL_","url","goog.html.SafeUrl","privateDoNotAccessOrElseSafeHtmlWrappedValue_","SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","goog.html.SafeUrl.prototype.getTypedStringValue","goog.html.SafeUrl.prototype.toString","goog.html.SafeUrl.unwrap","safeUrl","goog.html.SAFE_URL_PATTERN_","goog.html.SAFE_URL_PATTERN_.test","goog.html.SafeUrl.INNOCUOUS_STRING","goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse","goog.html.SafeHtml","SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","goog.html.SafeHtml.prototype.getTypedStringValue","goog.html.SafeHtml.prototype.toString","goog.html.SafeHtml.unwrap","safeHtml","goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_","html","initSecurityPrivateDoNotAccessOrElse_","goog.dom.getElementHelper_","element","getElementById","goog.dom.setProperties","properties","cssText","htmlFor","goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty","setAttribute","goog.dom.DIRECT_ATTRIBUTE_MAP_","lastIndexOf","prefix","tagName","opt_attributes","attributes","goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES","tagNameArr","clone","goog.dom.append_","childHandler","createTextNode","startIndex","nodeType","goog.dom.isNodeList","serializeInternal","serialize","goog.json.Serializer","goog.json.Serializer.prototype.serializeInternal","sep","serializeArray","Boolean","valueOf","serializeString_","serializeObject_","isFinite","goog.json.Serializer.charToJsonCharCache_","goog.json.Serializer.charsToReplace_","substr","fireauth.util.isLocalStorageNotSynchronized","ua","fireauth.util.getUserAgentString","fireauth.util.getCurrentUrl","fireauth.util.goTo","opt_window","finalUrl","goog.html.SafeUrl.sanitize","href","fireauth.util.getKeyDiff","diff","fireauth.util.supportsCors","fireauth.util.getBrowserName","browserName","fireauth.util.BrowserName.CHROME","matches","chromeVersion","fireauth.util.isMobileBrowser","opt_userAgent","uaLower","fireauth.util.closeWindow","fireauth.util.popup","opt_url","opt_width","opt_height","opt_name","floor","width","height","top","screen","availHeight","availWidth","fireauth.util.BrowserName.FIREFOX","parentWin","safeLinkRef","linkRef","option","optionString","click","createEvent","initMouseEvent","newWin","sanitizedLinkRef","opener","focus","fireauth.util.onPopupClose","repeat","fireauth.util.POPUP_WAIT_CYCLE_MS_","closed","fireauth.util.IP_ADDRESS_REGEXP_","fireauth.util.EMAIL_ADDRESS_REGEXP_","fireauth.util.onDomReady","goog.global.document","readyState","LOAD","fireauth.util.checkIfCordova","fireauth.util.isAndroidOrIosFileEnvironment","timeoutId","fireauth.util.CORDOVA_ONDEVICEREADY_TIMEOUT_MS_","fireauth.util.getCurrentScheme","fireauth.util.isIframe","fireauth.util.isWorker","fireauth.util.getEnvironment","firebase","INTERNAL","REACT_NATIVE","NODE","WORKER","BROWSER","fireauth.util.isNativeEnvironment","environment","fireauth.util.generateRandomAlphaNumericString","numOfChars","chars","allowedChars","FIREFOX","CHROME","OPERA","IEMOBILE","IE","EDGE","SILK","BLACKBERRY","WEBOS","ANDROID","re","SAFARI","OTHER","fireauth.util.Framework","DEFAULT","FIREBASEUI","fireauth.util.getClientVersion","clientVersion","opt_frameworkVersion","frameworkVersion","frameworkSet","providedFrameworks","sort","reportedEnvironment","fireauth.util.getObjectRef","varStrName","pieces","last","fireauth.util.isWebStorageSupported","storage","fireauth.util.generateEventId","fireauth.util.isPopupRedirectSupported","fireauth.util.isHttpOrHttps","fireauth.util.runsInBackground","fireauth.util.stringifyJSON","goog.json.serialize","fireauth.util.copyWithoutNullsOrUndefined","trimmedObj","fireauth.util.parseJSON","json","parse","opt_prefix","fireauth.util.iframeCanSyncWebStorage","fireauth.util.resetUnloadedGapiModules","beacon","hint","fireauth.util.Delay","shortDelay","longDelay","shortDelay_","longDelay_","isMobile_","fireauth.util.Delay.prototype.get","min","fireauth.util.Delay.OFFLINE_DELAY_MS_","fireauth.util.isAppVisible","fireauth.util.onAppVisible","onVisibilityChange","fireauth.util.utcTimestampToDateString","utcTimestamp","date","getTime","toUTCString","fireauth.util.isAuthHandlerOrIframe","fireauth.util.getServiceWorkerController","serviceWorker","controller","fireauth.util.getActiveServiceWorker","ready","registration","active","fireauth.deprecation.shownMessages_","fireauth.deprecation.log","console","warn","fireauth.object.readonlyConfigurable_","configurable","enumerable","fireauth.object.setReadonlyProperty","fireauth.object.setReadonlyProperties","props","fireauth.object.makeReadonlyCopy","output","fireauth.object.makeWritableCopy","fireauth.object.hasNonEmptyFields","opt_fields","field","fireauth.object.unsafeCreateReadOnlyCopy","copy","fireauth.ActionCodeInfo","response","email","fireauth.ActionCodeInfo.ServerFieldName.EMAIL","newEmail","fireauth.ActionCodeInfo.ServerFieldName.NEW_EMAIL","operation","fireauth.ActionCodeInfo.ServerFieldName.REQUEST_TYPE","fireauth.ActionCodeInfo.RequestType.EMAIL_SIGNIN","fireauth.ActionCodeInfo.DataField.FROM_EMAIL","fireauth.ActionCodeInfo.DataField.EMAIL","fireauth.ActionCodeInfo.PropertyName.OPERATION","fireauth.ActionCodeInfo.PropertyName.DATA","EMAIL_SIGNIN","EMAIL","NEW_EMAIL","REQUEST_TYPE","FROM_EMAIL","DATA","OPERATION","fireauth.AuthError","code","fireauth.AuthError.ERROR_CODE_PREFIX","fireauth.AuthError.MESSAGES_","toPlainObject","fireauth.AuthError.prototype.toPlainObject","toJSON","fireauth.AuthError.prototype.toJSON","fireauth.AuthError.fromPlainObject","fullCode","fireauth.AuthError.ERROR_CODE_PREFIX.length","ARGUMENT_ERROR","APP_NOT_AUTHORIZED","APP_NOT_INSTALLED","CAPTCHA_CHECK_FAILED","CODE_EXPIRED","CORDOVA_NOT_READY","CORS_UNSUPPORTED","CREDENTIAL_ALREADY_IN_USE","CREDENTIAL_MISMATCH","CREDENTIAL_TOO_OLD_LOGIN_AGAIN","DYNAMIC_LINK_NOT_ACTIVATED","EMAIL_EXISTS","EXPIRED_OOB_CODE","EXPIRED_POPUP_REQUEST","INTERNAL_ERROR","INVALID_APP_CREDENTIAL","INVALID_APP_ID","INVALID_AUTH","INVALID_AUTH_EVENT","INVALID_CODE","INVALID_CONTINUE_URI","INVALID_CORDOVA_CONFIGURATION","INVALID_CUSTOM_TOKEN","INVALID_DYNAMIC_LINK_DOMAIN","INVALID_EMAIL","INVALID_API_KEY","INVALID_CERT_HASH","INVALID_IDP_RESPONSE","INVALID_PERSISTENCE","INVALID_MESSAGE_PAYLOAD","INVALID_OAUTH_PROVIDER","INVALID_OAUTH_CLIENT_ID","INVALID_ORIGIN","INVALID_OOB_CODE","INVALID_PASSWORD","INVALID_PHONE_NUMBER","INVALID_PROVIDER_ID","INVALID_RECIPIENT_EMAIL","INVALID_SENDER","INVALID_SESSION_INFO","MISSING_ANDROID_PACKAGE_NAME","MISSING_AUTH_DOMAIN","MISSING_APP_CREDENTIAL","MISSING_CODE","MISSING_CONTINUE_URI","MISSING_IFRAME_START","MISSING_IOS_BUNDLE_ID","MISSING_OR_INVALID_NONCE","MISSING_PHONE_NUMBER","MISSING_SESSION_INFO","MODULE_DESTROYED","NEED_CONFIRMATION","NETWORK_REQUEST_FAILED","NO_AUTH_EVENT","NO_SUCH_PROVIDER","NULL_USER","OPERATION_NOT_ALLOWED","OPERATION_NOT_SUPPORTED","POPUP_BLOCKED","POPUP_CLOSED_BY_USER","PROVIDER_ALREADY_LINKED","QUOTA_EXCEEDED","REDIRECT_CANCELLED_BY_USER","REDIRECT_OPERATION_PENDING","REJECTED_CREDENTIAL","TIMEOUT","TOKEN_EXPIRED","TOO_MANY_ATTEMPTS_TRY_LATER","UNAUTHORIZED_DOMAIN","UNSUPPORTED_PERSISTENCE","USER_CANCELLED","USER_DELETED","USER_DISABLED","USER_MISMATCH","USER_SIGNED_OUT","WEAK_PASSWORD","WEB_STORAGE_UNSUPPORTED","fireauth.ActionCodeSettings","settingsObj","continueUrl","fireauth.ActionCodeSettings.RawField.URL","initialize_","continueUrl_","amv_","apn_","installApp_","androidSettings","fireauth.ActionCodeSettings.RawField.ANDROID","apn","fireauth.ActionCodeSettings.AndroidRawField.PACKAGE_NAME","installApp","fireauth.ActionCodeSettings.AndroidRawField.INSTALL_APP","amv","fireauth.ActionCodeSettings.AndroidRawField.MINIMUM_VERSION","ibi_","iosSettings","fireauth.ActionCodeSettings.RawField.IOS","ibi","fireauth.ActionCodeSettings.IosRawField.BUNDLE_ID","canHandleCodeInApp","fireauth.ActionCodeSettings.RawField.HANDLE_CODE_IN_APP","canHandleCodeInApp_","dynamicLinkDomain","fireauth.ActionCodeSettings.RawField.DYNAMIC_LINK_DOMAIN","dynamicLinkDomain_","DYNAMIC_LINK_DOMAIN","HANDLE_CODE_IN_APP","IOS","URL","INSTALL_APP","MINIMUM_VERSION","PACKAGE_NAME","BUNDLE_ID","fireauth.ActionCodeSettings.prototype.buildRequest","request","goog.crypt.byteArrayToHex","array","numByte","hexByte","goog.crypt.base64.byteToCharMap_","goog.crypt.base64.charToByteMap_","goog.crypt.base64.decodeString","input","goog.crypt.base64.decodeStringInternal_","pushByte","fromCharCode","getByte","default_val","nextCharIndex","goog.crypt.base64.init_","byte1","byte2","byte3","byte4","goog.crypt.base64.ENCODED_VALS.charAt","goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt","fireauth.IdToken","token","localId_","providerId_","anonymous_","isAnonymous","fireauth.IdToken.prototype.isAnonymous","fireauth.IdToken.parse","tokenString","fireauth.IdToken.parseIdTokenClaims","fields","jsonInfo","padLen","fireauth.constants.Endpoint","PRODUCTION","firebaseAuthEndpoint","secureTokenEndpoint","STAGING","TEST","opt_id","endpointKey","endpoint","fireauth.constants.getEndpointConfig","fireauth.idp.RESERVED_OAUTH1_PARAMS","fireauth.idp.RESERVED_OAUTH2_PARAMS","fireauth.idp.Settings","FACEBOOK","languageParam","popupWidth","popupHeight","providerId","reservedOAuthParameters","GITHUB","GOOGLE","TWITTER","fireauth.idp.getIdpSettings","fireauth.AdditionalUserInfo.fromPlainObject","resp","factory","fireauth.FacebookAdditionalUserInfo","fireauth.GoogleAdditionalUserInfo","fireauth.GithubAdditionalUserInfo","fireauth.TwitterAdditionalUserInfo","fireauth.AdditionalUserInfo.VerifyAssertionField.PROVIDER_ID","fireauth.FederatedAdditionalUserInfo","fireauth.AdditionalUserInfo.VerifyAssertionField.ID_TOKEN","fireauth.GenericAdditionalUserInfo","ID_TOKEN","PROVIDER_ID","info","idToken","ANONYMOUS","CUSTOM","isNewUser","fireauth.GenericAdditionalUserInfo.call","fireauth.FederatedAdditionalUserInfo.base","profile","fireauth.FederatedAdditionalUserInfo.call","fireauth.FacebookAdditionalUserInfo.base","fireauth.GithubAdditionalUserInfo.base","fireauth.GoogleAdditionalUserInfo.base","fireauth.TwitterAdditionalUserInfo.base","fireauth.ActionCodeUrl","actionCodeUrl","uri_","fireauth.DynamicLink.parseDeepLink","link","getParameterValue","doubleDeepLink","iOSdeepLink","iOSDoubledeepLink","fireauth.AuthCredential.verifyTokenResponseUid","idTokenResolver","fireauth.RpcHandler.AuthServerField.ID_TOKEN","parsedIdToken","fireauth.SAMLAuthCredential","pendingToken","pendingToken_","getIdTokenProvider","fireauth.SAMLAuthCredential.prototype.getIdTokenProvider","rpcHandler","verifyAssertion","makeVerifyAssertionRequest_","linkToIdToken","fireauth.SAMLAuthCredential.prototype.linkToIdToken","verifyAssertionForLinking","matchIdTokenWithUid","fireauth.SAMLAuthCredential.prototype.matchIdTokenWithUid","verifyAssertionForExisting","fireauth.SAMLAuthCredential.prototype.makeVerifyAssertionRequest_","fireauth.SAMLAuthCredential.prototype.toPlainObject","fireauth.OAuthCredential","oauthResponse","signInMethod","fireauth.OAuthCredential.prototype.getIdTokenProvider","fireauth.OAuthCredential.prototype.linkToIdToken","fireauth.OAuthCredential.prototype.matchIdTokenWithUid","fireauth.OAuthCredential.prototype.makeVerifyAssertionRequest_","postBody","fireauth.OAuthCredential.prototype.toPlainObject","fireauth.FederatedProvider","opt_reservedParams","reservedParams_","customParameters_","languageParameter","defaultLanguageCode","setCustomParameters","fireauth.FederatedProvider.prototype.setCustomParameters","customParameters","fireauth.SAMLAuthProvider","fireauth.constants.SAML_PREFIX","fireauth.FederatedProvider.call","fireauth.SAMLAuthProvider.base","fireauth.OAuthProvider","fireauth.OAuthProvider.base","scopes_","addScope","fireauth.OAuthProvider.prototype.addScope","getScopes","fireauth.OAuthProvider.prototype.getScopes","credential","fireauth.OAuthProvider.prototype.credential","opt_idToken","opt_accessToken","opt_rawNonce","fireauth.FacebookAuthProvider","fireauth.OAuthProvider.call","fireauth.FacebookAuthProvider.base","accessTokenOrObject","accessToken","fireauth.GithubAuthProvider","fireauth.GithubAuthProvider.base","fireauth.GithubAuthProvider.credential","fireauth.GoogleAuthProvider","fireauth.GoogleAuthProvider.base","fireauth.GoogleAuthProvider.credential","idTokenOrObject","fireauth.TwitterAuthProvider","fireauth.TwitterAuthProvider.base","tokenOrObject","secret","tokenObject","fireauth.EmailAuthCredential","password","opt_signInMethod","email_","password_","PASSWORD","fireauth.EmailAuthProvider","fireauth.EmailAuthCredential.prototype.getIdTokenProvider","invokeRpc_","fireauth.RpcHandler.ApiMethod.EMAIL_LINK_SIGNIN","fireauth.RpcHandler.ApiMethod.VERIFY_PASSWORD","fireauth.EmailAuthCredential.prototype.linkToIdToken","fireauth.RpcHandler.ApiMethod.EMAIL_LINK_SIGNIN_FOR_LINKING","fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO_SENSITIVE","fireauth.EmailAuthCredential.prototype.matchIdTokenWithUid","fireauth.EmailAuthCredential.prototype.toPlainObject","fireauth.EmailAuthProvider.credentialWithLink","emailLink","fireauth.EmailAuthProvider.getActionCodeFromSignInEmailLink","CODE","SIGN_IN","MODE","EMAIL_LINK","EMAIL_PASSWORD","params","verificationId","verificationCode","temporaryProof","phoneNumber","params_","PHONE","fireauth.PhoneAuthCredential","fireauth.PhoneAuthCredential.prototype.getIdTokenProvider","verifyPhoneNumber","makeVerifyPhoneNumberRequest_","fireauth.PhoneAuthCredential.prototype.linkToIdToken","fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER_FOR_LINKING","fireauth.PhoneAuthCredential.prototype.matchIdTokenWithUid","fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER_FOR_EXISTING","fireauth.PhoneAuthCredential.prototype.toPlainObject","fireauth.PhoneAuthCredential.prototype.makeVerifyPhoneNumberRequest_","fireauth.PhoneAuthProvider","opt_auth","auth_","fireauth.PhoneAuthProvider.prototype.verifyPhoneNumber","applicationVerifier","rpcHandler_","assertion","sendVerificationCode","fireauth.PhoneAuthProvider.credential","accessTokenSecret","rawNonce","fireauth.FacebookAuthProvider.credential","fireauth.TwitterAuthProvider.credential","fireauth.AuthProvider.checkIfOAuthSupported","provider","fireauth.AuthEvent","opt_eventId","opt_urlResponse","opt_sessionId","opt_error","opt_postBody","type_","eventId_","urlResponse_","sessionId_","postBody_","error_","fireauth.AuthEvent.prototype.toPlainObject","fireauth.AuthEvent.fromPlainObject","rawResponse","fireauth.UniversalLinkSubscriber","masterCb_","cb_","fireauth.UniversalLinkSubscriber.instance_","subscribe","fireauth.UniversalLinkSubscriber.prototype.subscribe","this.masterCb_","event","unsubscribe","fireauth.UniversalLinkSubscriber.prototype.unsubscribe","ele","fireauth.InvalidOriginError","fireauth.InvalidOriginError.CHROME_EXTENSION_MESSAGE_TEMPLATE_","fireauth.InvalidOriginError.HTTP_MESSAGE_TEMPLATE_","fireauth.InvalidOriginError.base","fireauth.AuthErrorWithCredential","opt_credentialInfo","fireauth.AuthError.call","fireauth.AuthErrorWithCredential.base","credentialInfo","fireauth.AuthErrorWithCredential.prototype.toPlainObject","fireauth.AuthErrorWithCredential.prototype.toJSON","fireauth.AuthErrorWithCredential.fromPlainObject","fireauth.AuthProvider.getCredentialFromResponse","goog.net.XmlHttpFactory","cachedOptions_","goog.net.XmlHttpFactory.prototype.getOptions","internalGetOptions","goog.net.DefaultXmlHttpFactory","createInstance","goog.net.DefaultXmlHttpFactory.prototype.createInstance","progId","getProgId_","ActiveXObject","XMLHttpRequest","goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions","USE_NULL_FUNCTION","LOCAL_REQUEST_ERROR","goog.net.DefaultXmlHttpFactory.prototype.getProgId_","ieProgId_","ACTIVE_X_IDENTS","candidate","goog.net.XmlHttp.factory_","goog.net.CorsXmlHttpFactory","goog.net.CorsXmlHttpFactory.prototype.createInstance","xhr","XDomainRequest","goog.net.IeCorsXhrAdapter","goog.net.CorsXmlHttpFactory.prototype.internalGetOptions","xdr_","UNINITIALIZED","responseText","status","statusText","onload","handleLoad_","onerror","handleError_","onprogress","handleProgress_","ontimeout","handleTimeout_","goog.net.IeCorsXhrAdapter.prototype","goog.net.IeCorsXhrAdapter.prototype.open","method","opt_async","send","goog.net.IeCorsXhrAdapter.prototype.send","opt_content","abort","goog.net.IeCorsXhrAdapter.prototype.abort","setRequestHeader","goog.net.IeCorsXhrAdapter.prototype.setRequestHeader","getResponseHeader","goog.net.IeCorsXhrAdapter.prototype.getResponseHeader","contentType","goog.net.IeCorsXhrAdapter.prototype.handleLoad_","OK","setReadyState_","COMPLETE","goog.net.IeCorsXhrAdapter.prototype.handleError_","INTERNAL_SERVER_ERROR","goog.net.IeCorsXhrAdapter.prototype.handleTimeout_","goog.net.IeCorsXhrAdapter.prototype.handleProgress_","LOADING","goog.net.IeCorsXhrAdapter.prototype.setReadyState_","getAllResponseHeaders","goog.net.IeCorsXhrAdapter.prototype.getAllResponseHeaders","goog.debug.LogRecord","level","msg","loggerName","opt_time","opt_sequenceNumber","exception_","goog.debug.LogRecord.nextSequenceNumber_","goog.debug.LogRecord.prototype.reset","goog.debug.Logger","name_","children_","level_","goog.debug.Logger.Level","goog.debug.Logger.Level.prototype.toString","goog.debug.Logger.Level.SEVERE","goog.debug.Logger.Level.WARNING","goog.debug.Logger.Level.CONFIG","goog.debug.Logger.Level.FINE","goog.debug.Logger.prototype.getEffectiveLevel","getEffectiveLevel","log","goog.debug.Logger.prototype.log","opt_exception","isLoggable","logRecord","doLogRecord_","goog.debug.LogManager.loggers_","goog.debug.LogManager.rootLogger_","goog.debug.Logger.ROOT_LOGGER_NAME","goog.debug.LogManager.rootLogger_.setLevel","ret","logger","lastDotIndex","leafName","parentLogger","goog.debug.LogManager.getLogger","goog.log.fine","goog.net.FetchXmlHttpFactory","worker","worker_","goog.net.FetchXmlHttpFactory.prototype.createInstance","instance","goog.net.FetchXmlHttp","goog.functions.constant","retValue","goog.events.EventTarget.call","goog.net.FetchXmlHttp.base","goog.net.FetchXmlHttp.RequestState.UNSENT","requestHeaders_","Headers","responseHeaders_","method_","url_","inProgress_","logger_","UNSENT","goog.net.FetchXmlHttp.prototype.open","OPENED","dispatchCallback_","goog.net.FetchXmlHttp.prototype","goog.net.FetchXmlHttp.prototype.send","opt_data","requestInit","headers","credentials","cache","fetch","Request","handleResponse_","handleSendFailure_","goog.net.FetchXmlHttp.prototype.abort","DONE","goog.net.FetchXmlHttp.prototype.handleResponse_","HEADER_RECEIVED","text","handleResponseText_","goog.net.FetchXmlHttp.prototype.handleResponseText_","goog.net.FetchXmlHttp.prototype.handleSendFailure_","goog.net.FetchXmlHttp.prototype.setRequestHeader","header","append","goog.net.FetchXmlHttp.prototype.getResponseHeader","goog.net.FetchXmlHttp.prototype.getAllResponseHeaders","lines","iter","entries","pair","goog.net.FetchXmlHttp.prototype.dispatchCallback_","goog.net.XhrIo","opt_xmlHttpFactory","goog.net.XhrIo.base","xmlHttpFactory_","active_","xhrOptions_","xhr_","lastError_","lastMethod_","lastUri_","inAbort_","inOpen_","inSend_","errorDispatched_","timeoutInterval_","timeoutId_","responseType_","goog.net.XhrIo.ResponseType.DEFAULT","useXhr2Timeout_","withCredentials_","goog.net.XhrIo.HTTP_SCHEME_PATTERN","goog.net.XhrIo.METHODS_WITH_FORM_DATA","goog.net.XhrIo.prototype.send","opt_method","opt_headers","toUpperCase","createXhr","goog.net.XmlHttp.factory_.createInstance","getOptions","goog.net.XmlHttp.factory_.getOptions","onReadyStateChange_","formatMsg_","content","contentTypeKey","contentIsFormData","goog.net.XhrIo.CONTENT_TYPE_HEADER","goog.net.XhrIo.FORM_CONTENT_TYPE","responseType","withCredentials","cleanUpTimeoutTimer_","goog.net.XhrIo.shouldUseXhr2Timeout_","timeout_","goog.net.XhrIo.prototype","goog.net.XhrIo.prototype.timeout_","goog.net.XhrIo.prototype.error_","dispatchErrors_","cleanUpXhr_","goog.net.XhrIo.prototype.dispatchErrors_","ERROR","goog.net.XhrIo.prototype.abort","ABORT","goog.net.XhrIo.prototype.disposeInternal","goog.net.XhrIo.superClass_.disposeInternal.call","goog.net.XhrIo.prototype.disposeInternal.base","goog.net.XhrIo.prototype.onReadyStateChange_","isDisposed","onReadyStateChangeHelper_","onReadyStateChangeEntryPoint_","goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_","goog.net.XhrIo.prototype.onReadyStateChangeHelper_","getReadyState","getStatus","READY_STATE_CHANGE","isComplete","isSuccess","CREATED","ACCEPTED","NO_CONTENT","PARTIAL_CONTENT","NOT_MODIFIED","QUIRK_IE_NO_CONTENT","goog.global.self","goog.global.self.location","goog.global.self.location.protocol","goog.net.XhrIo.HTTP_SCHEME_PATTERN.test","SUCCESS","LOADED","getStatusText","goog.net.XhrIo.prototype.cleanUpXhr_","opt_fromDispose","clearedOnReadyStateChange","READY","goog.net.XhrIo.prototype.cleanUpTimeoutTimer_","goog.net.XhrIo.prototype.getReadyState","goog.net.XhrIo.prototype.getStatus","goog.net.XhrIo.prototype.getResponseText","getResponse","goog.net.XhrIo.prototype.getResponse","TEXT","ARRAY_BUFFER","mozResponseArrayBuffer","goog.net.XhrIo.prototype.formatMsg_","goog.async.Deferred","opt_onCancelFunction","opt_defaultScope","sequence_","onCancelFunction_","defaultScope_","hadError_","fired_","silentlyCanceled_","blocking_","blocked_","unhandledErrorId_","branches_","goog.async.Deferred.prototype.cancel","opt_deepCancel","hasFired","goog.async.Deferred.CanceledError","check_","errback","updateResult_","continue_","goog.async.Deferred.prototype.continue_","goog.async.Deferred.prototype.updateResult_","fire_","goog.async.Deferred.prototype.check_","goog.async.Deferred.AlreadyCalledError","goog.async.Deferred.prototype.callback","goog.async.Deferred.prototype.addErrback","eb","addCallbacks","goog.async.Deferred.prototype.addCallbacks","goog.async.Deferred.prototype.then","rej","goog.async.Deferred.prototype.hasErrback_","sequenceRow","goog.async.Deferred.prototype.fire_","hasErrback_","goog.async.Deferred.errorMap_","id_","isNewlyBlocked","unhandledException","sequenceEntry","onCallback","onErrback","deferredError","goog.async.Deferred.Error_","throwError","goog.async.Deferred.Error_.prototype.throwError","goog.net.jsloader.safeLoad","trustedUri","script_","deferred","goog.net.jsloader.cancel_","timeout","timeoutDuration","goog.net.jsloader.DEFAULT_TIMEOUT","goog.net.jsloader.cleanup_","goog.net.jsloader.Error","goog.net.jsloader.ErrorCode.TIMEOUT","cleanupWhenDone","script.onerror","goog.net.jsloader.ErrorCode.LOAD_ERROR","goog.net.jsloader.getScriptParentElement_","scriptParent","headElements","getElementsByTagName","scriptNode","goog.dom.TagName.SCRIPT","removeScriptNode","opt_timeout","LOAD_ERROR","goog.net.jsloader.Error.base","fireauth.XmlHttpFactory","xmlHttpRequest","xmlHttpRequest_","fireauth.XmlHttpFactory.prototype.createInstance","fireauth.XmlHttpFactory.prototype.internalGetOptions","fireauth.RpcHandler","apiKey","opt_config","opt_firebaseClientVersion","apiKey_","config","secureTokenEndpoint_","fireauth.RpcHandler.SECURE_TOKEN_ENDPOINT_","secureTokenTimeout_","fireauth.RpcHandler.DEFAULT_SECURE_TOKEN_TIMEOUT_","secureTokenHeaders_","fireauth.RpcHandler.DEFAULT_SECURE_TOKEN_HEADERS_","firebaseEndpoint_","fireauth.RpcHandler.FIREBASE_ENDPOINT_","firebaseTimeout_","fireauth.RpcHandler.DEFAULT_FIREBASE_TIMEOUT_","firebaseHeaders_","fireauth.RpcHandler.DEFAULT_FIREBASE_HEADERS_","isNode","rpcHandlerXhrFactory_","fireauth.RpcHandler.prototype.updateCustomLocaleHeader","languageCode","fireauth.RpcHandler.FIREBASE_LOCALE_KEY_","fireauth.RpcHandler.prototype.updateClientVersion","fireauth.RpcHandler.prototype.sendXhr_","opt_callback","opt_httpMethod","sendXhr","sendXhrUsingXhrIo_","fireauth.RpcHandler.loadGApi_","fireauth.RpcHandler.loadGApiJs_","sendXhrUsingGApiClient_","fireauth.RpcHandler.prototype.sendXhrUsingXhrIo_","xhrIo","requestTimeout","getResponseText","dispose","fireauth.RpcHandler.GAPI_SRC_","fireauth.RpcHandler.GAPI_CALLBACK_NAME_","addErrback","fireauth.RpcHandler.prototype.sendXhrUsingGApiClient_","fireauth.RpcHandler.loadGApi_.then","oauth2Token","fireauth.RpcHandler.prototype.requestStsToken","sendXhr_","fireauth.RpcHandler.getDeveloperError_","POST","fireauth.RpcHandler.prototype.requestFirebaseEndpoint","httpMethod","opt_customErrorMap","opt_cachebuster","setParameterValue","getApiKey","isGet","GET","fireauth.RpcHandler.validateRequestHasEmail_","fireauth.util.EMAIL_ADDRESS_REGEXP_.test","fireauth.RpcHandler.validateEmailIfPresent_","fireauth.RpcHandler.prototype.fetchProvidersForIdentifier","identifier","fireauth.RpcHandler.ApiMethod.CREATE_AUTH_URI","fireauth.RpcHandler.prototype.fetchSignInMethodsForIdentifier","fireauth.RpcHandler.prototype.getAuthorizedDomains","fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG","fireauth.RpcHandler.validateIdTokenResponse_","fireauth.RpcHandler.validateVerifyPhoneNumberRequest_","signInAnonymously","fireauth.RpcHandler.prototype.signInAnonymously","fireauth.RpcHandler.ApiMethod.SIGN_IN_ANONYMOUSLY","updateEmail","fireauth.RpcHandler.prototype.updateEmail","fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO","updatePassword","fireauth.RpcHandler.prototype.updatePassword","newPassword","fireauth.RpcHandler.PROFILE_FIELD_TO_ENUM_NAME_","updateProfile","fireauth.RpcHandler.prototype.updateProfile","profileData","fieldsToDelete","enumName","fieldName","fieldValue","fireauth.RpcHandler.prototype","sendPasswordResetEmail","fireauth.RpcHandler.prototype.sendPasswordResetEmail","additionalRequestData","PASSWORD_RESET","fireauth.RpcHandler.ApiMethod.GET_OOB_CODE","sendSignInLinkToEmail","fireauth.RpcHandler.prototype.sendSignInLinkToEmail","fireauth.RpcHandler.ApiMethod.GET_EMAIL_SIGNIN_CODE","sendEmailVerification","fireauth.RpcHandler.prototype.sendEmailVerification","VERIFY_EMAIL","fireauth.RpcHandler.ApiMethod.GET_EMAIL_VERIFICATION_CODE","fireauth.RpcHandler.prototype.sendVerificationCode","fireauth.RpcHandler.ApiMethod.SEND_VERIFICATION_CODE","fireauth.RpcHandler.prototype.verifyPhoneNumber","fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER","fireauth.RpcHandler.prototype.deleteLinkedAccounts","providersToDelete","fireauth.RpcHandler.ApiMethod.DELETE_LINKED_ACCOUNTS","fireauth.RpcHandler.validateVerifyAssertionRequest_","fireauth.RpcHandler.processVerifyAssertionResponse_","fireauth.constants.OIDC_PREFIX","NONCE","fireauth.RpcHandler.validateVerifyAssertionResponse_","FEDERATED_USER_ID_ALREADY_LINKED","fireauth.RpcHandler.getDeveloperErrorFromCode_","fireauth.RpcHandler.prototype.verifyAssertion","fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION","fireauth.RpcHandler.prototype.verifyAssertionForLinking","fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION_FOR_LINKING","fireauth.RpcHandler.prototype.verifyAssertionForExisting","fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION_FOR_EXISTING","fireauth.RpcHandler.validateApplyActionCodeRequest_","confirmPasswordReset","fireauth.RpcHandler.prototype.confirmPasswordReset","fireauth.RpcHandler.ApiMethod.RESET_PASSWORD","checkActionCode","fireauth.RpcHandler.prototype.checkActionCode","fireauth.RpcHandler.ApiMethod.CHECK_ACTION_CODE","applyActionCode","fireauth.RpcHandler.prototype.applyActionCode","fireauth.RpcHandler.ApiMethod.APPLY_OOB_CODE","APPLY_OOB_CODE","requestValidator","responseField","CHECK_ACTION_CODE","responseValidator","fireauth.RpcHandler.validateCheckActionCodeResponse_","CREATE_ACCOUNT","fireauth.RpcHandler.validateCreateAccountRequest_","returnSecureToken","CREATE_AUTH_URI","DELETE_ACCOUNT","requestRequiredFields","DELETE_LINKED_ACCOUNTS","fireauth.RpcHandler.validateDeleteLinkedAccountsRequest_","EMAIL_LINK_SIGNIN","EMAIL_LINK_SIGNIN_FOR_LINKING","GET_ACCOUNT_INFO","GET_EMAIL_SIGNIN_CODE","fireauth.RpcHandler.validateEmailSignInCodeRequest_","GET_EMAIL_VERIFICATION_CODE","fireauth.RpcHandler.validateEmailVerificationCodeRequest_","GET_OOB_CODE","fireauth.RpcHandler.validateOobCodeRequest_","GET_PROJECT_CONFIG","cachebuster","GET_RECAPTCHA_PARAM","fireauth.RpcHandler.validateGetRecaptchaParamResponse_","RESET_PASSWORD","SEND_VERIFICATION_CODE","SESSION_INFO","SET_ACCOUNT_INFO","SET_ACCOUNT_INFO_SENSITIVE","fireauth.RpcHandler.validateSetAccountInfoSensitive_","SIGN_IN_ANONYMOUSLY","VERIFY_ASSERTION","responsePreprocessor","VERIFY_ASSERTION_FOR_EXISTING","fireauth.RpcHandler.validateVerifyAssertionForExistingResponse_","USER_NOT_FOUND","VERIFY_ASSERTION_FOR_LINKING","fireauth.RpcHandler.validateVerifyAssertionLinkRequest_","VERIFY_CUSTOM_TOKEN","fireauth.RpcHandler.validateVerifyCustomTokenRequest_","VERIFY_PASSWORD","fireauth.RpcHandler.validateVerifyPasswordRequest_","VERIFY_PHONE_NUMBER","VERIFY_PHONE_NUMBER_FOR_LINKING","fireauth.RpcHandler.validateVerifyPhoneNumberLinkRequest_","fireauth.RpcHandler.validateVerifyPhoneNumberForLinkingResponse_","VERIFY_PHONE_NUMBER_FOR_EXISTING","customErrorMap","fireauth.RpcHandler.verifyPhoneNumberForExistingErrorMap_","fireauth.RpcHandler.prototype.invokeRpc_","requestFirebaseEndpoint","tempResponse","serverErrorCode","errorReasonMap","apiaryError","errorMap","MISSING_CUSTOM_TOKEN","INVALID_IDENTIFIER","MISSING_PASSWORD","PASSWORD_LOGIN_DISABLED","INVALID_PENDING_TOKEN","EMAIL_NOT_FOUND","RESET_PASSWORD_EXCEED_LIMIT","MISSING_OOB_CODE","INVALID_ID_TOKEN","INVALID_TEMPORARY_PROOF","SESSION_EXPIRED","prefixCode","errorMessage","fireauth.iframeclient.IframeWrapper","iframe_","onIframeOpen_","open_","fireauth.iframeclient.IframeWrapper.prototype.open_","fireauth.iframeclient.IframeWrapper.loadGApiJs_","onOpen","clearTimerAndResolve","networkErrorTimer","restyle","fireauth.iframeclient.IframeWrapper.PING_TIMEOUT_.get","ping","fireauth.iframeclient.IframeWrapper.prototype.sendMessage","fireauth.iframeclient.IframeWrapper.prototype.registerEvent","register","AUTH_EVENT","fireauth.iframeclient.IframeWrapper.GAPI_LOADER_SRC_","fireauth.iframeclient.IframeWrapper.NETWORK_TIMEOUT_","fireauth.iframeclient.IframeWrapper.PING_TIMEOUT_","fireauth.iframeclient.IframeWrapper.cachedGApiLoader_","onGapiLoad","loader","fireauth.iframeclient.IframeWrapper.NETWORK_TIMEOUT_.get","cbName","fireauth.iframeclient.IframeUrlBuilder","authDomain","appName","authDomain_","appName_","v_","endpointId_","frameworks_","fireauth.iframeclient.IframeUrlBuilder.prototype.toString","fireauth.iframeclient.OAuthUrlBuilder","authType","authType_","redirectUrl_","provider_","fireauth.iframeclient.OAuthUrlBuilder.prototype.toString","getAuthLanguage_","getLanguageCode","scopes","additionalParams_","frameworks","fireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_","getAuthFrameworks_","getFramework","fireauth.iframeclient.IfcHandler","opt_clientVersion","opt_endpointId","clientVersion_","iframeUrl_","fullClientVersion_","authEventListeners_","isInitialized_","originValidator_","fireauth.iframeclient.IfcHandler.getOriginValidator_","getAuthorizedDomains","authorizedDomains","domainPattern","chromeExtUri","fireauth.util.IP_ADDRESS_REGEXP_.test","escapedDomainPattern","RegExp","fireauth.iframeclient.IfcHandler.prototype.initialize","builder","setEndpointId","opt_frameworks","iframeWrapper_","registerEvents_","fireauth.iframeclient.IfcHandler.prototype","startPopupTimeout","fireauth.iframeclient.IfcHandler.prototype.startPopupTimeout","popupWin","onError","popupClosedByUserError","webStorageNotSupportedError","isResolved","initializeAndWait","isWebStorageSupported","isSupported","shouldBeInitializedEarly","fireauth.iframeclient.IfcHandler.prototype.shouldBeInitializedEarly","hasVolatileStorage","fireauth.iframeclient.IfcHandler.prototype.hasVolatileStorage","fireauth_CordovaHandler_prototype$processPopup","fireauth.iframeclient.IfcHandler.prototype.processPopup","onInitialize","opt_alreadyRedirected","getRpcHandler_","onReady","oauthHelperWidgetUrl","fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl","fireauth.iframeclient.IfcHandler.prototype.getRpcHandler_","processRedirect","fireauth.iframeclient.IfcHandler.prototype.processRedirect","fireauth.iframeclient.IfcHandler.prototype.initializeAndWait","initialize","unloadsOnRedirect","fireauth.iframeclient.IfcHandler.prototype.unloadsOnRedirect","opt_redirectUrl","opt_additionalParams","setEventId","fireauth.iframeclient.IfcHandler.prototype.registerEvents_","registerEvent","resolveResponse","isHandled","authEvent","ACK","fireauth.iframeclient.IfcHandler.prototype.isWebStorageSupported","WEB_STORAGE_SUPPORT_EVENT","sendMessage","fireauth_CordovaHandler_prototype$addAuthEventListener","fireauth.iframeclient.IfcHandler.prototype.addAuthEventListener","fireauth_CordovaHandler_prototype$removeAuthEventListener","fireauth.iframeclient.IfcHandler.prototype.removeAuthEventListener","fireauth.storage.AsyncStorage","opt_asyncStorage","storage_","ASYNC_STORAGE","fireauth.storage.AsyncStorage.prototype","fireauth.storage.AsyncStorage.prototype.get","fireauth.storage.AsyncStorage.prototype.set","fireauth_storage_AsyncStorage_prototype$remove","fireauth.storage.AsyncStorage.prototype.remove","addStorageListener","fireauth.storage.AsyncStorage.prototype.addStorageListener","removeStorageListener","fireauth.storage.AsyncStorage.prototype.removeStorageListener","fireauth.messagechannel.Receiver","eventTarget","eventTarget_","eventHandlers_","messageEventHandler_","handleEvent_","fireauth.messagechannel.Receiver.receivers_","fireauth.messagechannel.Receiver.getInstance","receiver","fireauth.messagechannel.Receiver.receivers_.push","fireauth.messagechannel.Receiver.prototype.handleEvent_","eventType","eventId","handlers","ports","allResponses","fireauth.messagechannel.Receiver.prototype.subscribe","fireauth.messagechannel.Receiver.prototype.unsubscribe","fireauth.messagechannel.WorkerClientPostMessager","fireauth.messagechannel.WorkerClientPostMessager.prototype.postMessage","transfer","fireauth.messagechannel.Sender","postMessager","postMessager_","closed_","messageHandlers_","fireauth.messagechannel.Sender.prototype.send","opt_useLongTimeout","onMessage","ackTimer","completionTimer","CONNECTION_UNAVAILABLE","ackTimeout","LONG_ACK","messageChannel","MessageChannel","pow","digits","port1","start","UNSUPPORTED_EVENT","COMPLETION","UNKNOWN","INVALID_RESPONSE","port2","removeMessageHandler_","fireauth.messagechannel.Sender.prototype.removeMessageHandler_","messageHandler","fireauth.messagechannel.Sender.prototype.close","fireauth.storage.IndexedDB","fireauth.storage.IndexedDB.isAvailable","localMap_","storageListeners_","pendingOpsTracker_","indexedDB_","goog.global.indexedDB","indexedDB","INDEXEDDB","sender_","receiver_","pollTimerId_","poll_","serviceWorkerReceiverAvailable_","activeServiceWorker_","sync_","sw","fireauth.storage.IndexedDB.prototype.deleteDb_","deleteDatabase","fireauth.storage.IndexedDB.DB_NAME_","onsuccess","request.onsuccess","request.onerror","fireauth.storage.IndexedDB.prototype.initializeDb_","fireauth.storage.IndexedDB.VERSION_","onupgradeneeded","request.onupgradeneeded","db","createObjectStore","fireauth.storage.IndexedDB.DATA_OBJECT_STORE_NAME_","fireauth.storage.IndexedDB.DATA_KEY_PATH_","objectStoreNames","contains","deleteDb_","initializeDb_","newDb","fireauth.storage.IndexedDB.prototype.initializeDbAndRun_","initPromise_","fireauth.storage.IndexedDB.prototype.getDataObjectStore_","tx","objectStore","fireauth.storage.IndexedDB.prototype.getTransaction_","isReadWrite","transaction","fireauth.storage.IndexedDB.prototype.onIDBRequest_","fireauth.storage.IndexedDB.prototype.set","isLocked","dbTemp","initializeDbAndRun_","getDataObjectStore_","getTransaction_","onIDBRequest_","notifySW_","fireauth.storage.IndexedDB.prototype.notifySW_","fireauth.storage.IndexedDB.prototype","fireauth.storage.IndexedDB.prototype.get","fireauth.storage.IndexedDB.prototype.remove","fireauth.storage.IndexedDB.prototype.sync_","openCursor","cursor","centralCopy","diffKeys","fireauth.storage.IndexedDB.prototype.addStorageListener","startListeners_","fireauth.storage.IndexedDB.prototype.removeStorageListener","stopListeners_","fireauth.storage.IndexedDB.prototype.startListeners_","fireauth.storage.IndexedDB.STOP_ERROR_","fireauth.storage.IndexedDB.POLLING_DELAY_","fireauth.storage.IndexedDB.prototype.stopListeners_","fireauth.storage.HybridIndexedDB","fallbackStorage","fallbackStorage_","underlyingStoragePromise_","randomId","randomKey","fireauth.storage.HybridIndexedDB.KEY_","fireauth.storage.IndexedDB.managerInstance_","fireauth.storage.HybridIndexedDB.prototype","fireauth.storage.HybridIndexedDB.prototype.get","fireauth.storage.HybridIndexedDB.prototype.set","fireauth.storage.HybridIndexedDB.prototype.remove","fireauth.storage.HybridIndexedDB.prototype.addStorageListener","fireauth.storage.HybridIndexedDB.prototype.removeStorageListener","fireauth.storage.InMemoryStorage","IN_MEMORY","fireauth.storage.InMemoryStorage.prototype","fireauth.storage.InMemoryStorage.prototype.get","fireauth.storage.InMemoryStorage.prototype.set","fireauth.storage.InMemoryStorage.prototype.remove","fireauth.storage.InMemoryStorage.prototype.addStorageListener","fireauth.storage.InMemoryStorage.prototype.removeStorageListener","fireauth.storage.LocalStorage","fireauth.storage.LocalStorage.isAvailable","fireauth.storage.LocalStorage.getGlobalStorage","LOCAL_STORAGE","setItem","fireauth.storage.LocalStorage.STORAGE_AVAILABLE_KEY_","removeItem","fireauth.storage.LocalStorage.prototype","fireauth.storage.LocalStorage.prototype.get","getItem","fireauth.storage.LocalStorage.prototype.set","fireauth.storage.LocalStorage.prototype.remove","fireauth.storage.LocalStorage.prototype.addStorageListener","fireauth.storage.LocalStorage.prototype.removeStorageListener","fireauth.storage.NullStorage","NULL_STORAGE","fireauth.storage.NullStorage.prototype","fireauth.storage.NullStorage.prototype.get","fireauth.storage.NullStorage.prototype.set","fireauth.storage.NullStorage.prototype.remove","fireauth.storage.NullStorage.prototype.addStorageListener","fireauth.storage.NullStorage.prototype.removeStorageListener","fireauth.storage.SessionStorage","fireauth.storage.SessionStorage.isAvailable","fireauth.storage.SessionStorage.getGlobalStorage","SESSION_STORAGE","fireauth.storage.SessionStorage.STORAGE_AVAILABLE_KEY_","fireauth.storage.SessionStorage.prototype","fireauth.storage.SessionStorage.prototype.get","fireauth.storage.SessionStorage.prototype.set","fireauth.storage.SessionStorage.prototype.remove","fireauth.storage.SessionStorage.prototype.addStorageListener","fireauth.storage.SessionStorage.prototype.removeStorageListener","fireauth.storage.Factory","envMap","fireauth.storage.Factory.EnvConfig.BROWSER","fireauth.storage.Factory.EnvConfig.NODE","fireauth.storage.Factory.EnvConfig.REACT_NATIVE","fireauth.storage.Factory.EnvConfig.WORKER","env_","env","persistent","temporary","fireauth.authStorage.Persistence","LOCAL","NONE","SESSION","fireauth.authStorage.validatePersistenceArgument","invalidTypeError","unsupportedTypeError","fireauth.authStorage.Manager","safariLocalStorageNotSynced","runsInBackground","webStorageSupported","safariLocalStorageNotSynced_","runsInBackground_","webStorageSupported_","listeners_","fireauth.storage.Factory.instance_","persistentStorage_","storageFactory","temporaryStorage_","inMemoryStorage_","storageChangeEventHandler_","storageChangeEvent_","fireauth.authStorage.Manager.getInstance","fireauth.authStorage.Manager.instance_","fireauth.authStorage.Manager.prototype.getStorage_","fireauth.authStorage.Manager.prototype.getKeyName_","dataKey","fireauth.authStorage.SEPARATOR_","fireauth.authStorage.Manager.prototype.migrateFromLocalStorage","getStorage_","oldStorageValue","fireauth.authStorage.Manager.prototype","fireauth.authStorage.Manager.prototype.get","fireauth.authStorage.Manager.prototype.remove","fireauth.authStorage.Manager.prototype.set","serializedValue","fireauth.authStorage.Manager.prototype.addListener","startManualListeners_","fireauth.authStorage.Manager.prototype.removeListener","stopManualListeners_","fireauth.authStorage.Manager.prototype.startManualListeners_","manualListenerTimer_","setInterval","currentValue","oldValue","newValue","poll","fireauth.authStorage.Manager.LOCAL_STORAGE_POLLING_TIMER_","fireauth.authStorage.Manager.prototype.stopManualListeners_","clearInterval","fireauth.authStorage.Manager.prototype.storageChangeEvent_","storedValue","realValue","callListeners_","triggerListeners","fireauth.authStorage.IE10_LOCAL_STORAGE_SYNC_DELAY","fireauth.authStorage.Manager.prototype.callListeners_","fireauth.storage.AuthEventManager","appId","appId_","manager_","fireauth.storage.AuthEventManager.prototype.getAuthEvent","fireauth.storage.AuthEventManager.Keys.AUTH_EVENT","fireauth.storage.OAuthHandlerManager","goog.crypt.Hash","blockSize","goog.crypt.Sha2","numHashBlocks","initHashBlocks","goog.crypt.Sha2.BLOCKSIZE_","chunk_","Uint8Array","total_","inChunk_","hash_","numHashBlocks_","initHashBlocks_","w_","Int32Array","goog.crypt.Sha2.Kx_","goog.crypt.Sha2.K_","goog.crypt.Sha2.PADDING_","goog.crypt.Sha2.prototype.reset","goog.crypt.Sha2.prototype.computeChunk_","chunk","w","offset","rounds","w_15","w_2","partialSum1","partialSum2","h","t2","t1","goog.crypt.Sha2.prototype.update","opt_length","inChunk","computeChunk_","goog.crypt.Sha256","goog.crypt.Sha2.call","goog.crypt.Sha256.base","goog.crypt.Sha256.INIT_HASH_BLOCK_","fireauth.CordovaHandler","storageKey_","fireauth.util.STORAGE_KEY_SEPARATOR_","savePartialEventManager_","getAndDeletePartialEventManager_","initialAuthEvent_","inAppBrowserRef_","pendingRedirect_","fireauth.CordovaHandler.getError_","fireauth.CordovaHandler.prototype.initializeAndWait","isReady_","appIdentifier","openUrl","openInAppBrowser","fireauth.CordovaHandler.prototype.generateSessionId_","fireauth.CordovaHandler.SESSION_ID_TOTAL_CHARS_","fireauth.CordovaHandler.prototype.computeSecureHash_","sha256","update","digest","totalBits","fireauth.CordovaHandler.prototype","fireauth.CordovaHandler.prototype.startPopupTimeout","fireauth.CordovaHandler.prototype.processPopup","fireauth.CordovaHandler.prototype.unloadsOnRedirect","fireauth.CordovaHandler.prototype.shouldBeInitializedEarly","fireauth.CordovaHandler.prototype.hasVolatileStorage","fireauth.CordovaHandler.prototype.processRedirect","onClose","authEventCallback","onResume","getInitialAuthEvent_","processRedirectInternal_","closeBrowsertab","addAuthEventListener","fireauth.CordovaHandler.REDIRECT_TIMEOUT_MS_","getPartialStoredEvent_","cleanup","removeAuthEventListener","fireauth.CordovaHandler.prototype.processRedirectInternal_","sessionId","generateSessionId_","appDisplayName","additionalParams","hashedSessionId","computeSecureHash_","isAvailable","fireauth.CordovaHandler.prototype.dispatchEvent_","fireauth.CordovaHandler.prototype.getInitialAuthEvent_","setAuthEventListener_","fireauth.CordovaHandler.prototype.getPartialStoredEvent_","getAuthEvent","fireauth.CordovaHandler.prototype.setAuthEventListener_","universalLinkCb","eventData","initialResolve","noEventTimer","noEvent","callbackUrl","errorObject","dispatchEvent_","fireauth.CordovaHandler.INITIAL_TIMEOUT_MS_","existingHandlerOpenURL","fireauth.CordovaHandler.prototype.addAuthEventListener","fireauth.CordovaHandler.prototype.removeAuthEventListener","fireauth.storage.PendingRedirectManager","fireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_","fireauth.storage.PendingRedirectManager.prototype.setPendingStatus","fireauth.storage.PendingRedirectManager.PENDING_FLAG_","fireauth.storage.PendingRedirectManager.prototype.removePendingStatus","fireauth.storage.PendingRedirectManager.prototype.getPendingStatus","fireauth.AuthEventManager","subscribedHandlers_","initialized_","authEventHandler_","handleAuthEvent_","redirectAuthEventProcessor_","fireauth.RedirectAuthEventProcessor","popupAuthEventProcessor_","fireauth.PopupAuthEventProcessor","pendingRedirectStorageManager_","fireauth.AuthEventManager.KEY_SEPARATOR_","typeToManager_","oauthSignInHandler_","fireauth.AuthEventManager.instantiateOAuthSignInHandler","fireauth.constants.clientEndpoint","SDK_VERSION","fireauth.AuthEventManager.prototype.reset","fireauth.AuthEventManager.prototype","clearRedirectResult","fireauth.AuthEventManager.prototype.clearRedirectResult","fireauth.AuthEventManager.prototype.initialize","previousOauthSignInHandler","fireauth.AuthEventManager.prototype.initializeWithNoPendingRedirectResult_","notSupportedEvent","fireauth.AuthEventManager.isCordovaFalsePositive_","defaultToEmptyResponse","fireauth.AuthEventManager.prototype.subscribe","getPendingStatus","removePendingStatus","initializeWithNoPendingRedirectResult_","fireauth.AuthEventManager.prototype.unsubscribe","fireauth.AuthEventManager.prototype.handleAuthEvent_","processed","potentialHandler","canHandleAuthEvent","eventManager","processAuthEvent","fireauth.AuthEventManager.POPUP_TIMEOUT_MS_","fireauth.AuthEventManager.REDIRECT_TIMEOUT_MS_","getRedirectResult","fireauth.AuthEventManager.prototype.getRedirectResult","fireauth.AuthEventManager.prototype.processPopup","processPopup","fireauth.AuthEventManager.prototype.processRedirect","setPendingStatus","fireauth.AuthEventManager.prototype.startPopupTimeout","owner","resolvePendingPopupEvent","fireauth.AuthEventManager.POPUP_TIMEOUT_MS_.get","fireauth.AuthEventManager.manager_","redirectedUserPromise_","redirectResolve_","redirectReject_","redirectTimeoutPromise_","unrecoverableErrorDetected_","redirectResultResolved_","fireauth.RedirectAuthEventProcessor.prototype.reset","fireauth.RedirectAuthEventProcessor.prototype.processAuthEvent","isWebStorageNotSupported","isOperationNotSupported","setRedirectResult_","processErrorEvent_","getAuthEventHandlerFinisher","processSuccessEvent_","processUnknownEvent_","fireauth.RedirectAuthEventProcessor.prototype.defaultToEmptyResponse","fireauth.RedirectAuthEventProcessor.prototype.clearRedirectResult","fireauth.RedirectAuthEventProcessor.prototype.processSuccessEvent_","requestUri","isRedirect","popupRedirectResponse","fireauth.RedirectAuthEventProcessor.prototype.setRedirectReject_","this.redirectedUserPromise_","fireauth.RedirectAuthEventProcessor.prototype.setRedirectResolve_","popupRedirectResult","fireauth.RedirectAuthEventProcessor.prototype.setRedirectResult_","setRedirectReject_","setRedirectResolve_","fireauth.RedirectAuthEventProcessor.prototype.getRedirectResult","startRedirectTimeout_","fireauth.RedirectAuthEventProcessor.prototype.startRedirectTimeout_","fireauth.AuthEventManager.REDIRECT_TIMEOUT_MS_.get","fireauth.PopupAuthEventProcessor.prototype.processAuthEvent","fireauth.PopupAuthEventProcessor.prototype.processSuccessEvent_","fireauth.AuthSettings","appVerificationDisabledForTesting_","getAppVerificationDisabledForTesting","setAppVerificationDisabledForTesting","fireauth.ConfirmationResult","credentialResolver","credentialResolver_","confirm","fireauth.ConfirmationResult.prototype.confirm","fireauth.ConfirmationResult.initialize","auth","appVerifier","phoneAuthProvider","fireauth.IdTokenResult","fireauth.ProactiveRefresh","retryPolicy","getWaitDuration","operation_","retryPolicy_","getWaitDuration_","lowerBound_","RETRIAL_MIN_WAIT","upperBound_","RETRIAL_MAX_WAIT","pending_","nextErrorWaitInterval_","fireauth.ProactiveRefresh.prototype.start","process_","fireauth.ProactiveRefresh.prototype.getNextRun_","hasSucceeded","currentErrorWaitInterval","fireauth.ProactiveRefresh.prototype.process_","stop","getNextRun_","fireauth.ProactiveRefresh.prototype.stop","fireauth.StsTokenManager","accessToken_","refreshToken_","expirationTime_","fireauth.StsTokenManager.prototype.toPlainObject","fireauth.StsTokenManager.prototype.parseServerResponse","refreshToken","expirationTime","fireauth.StsTokenManager.calcOffsetTimestamp_","setAccessToken","setRefreshToken","fireauth.StsTokenManager.prototype.copy","tokenManagerToCopy","fireauth.StsTokenManager.prototype.requestToken_","requestStsToken","getToken","fireauth.StsTokenManager.prototype.getToken","opt_forceRefresh","forceRefresh","isRefreshTokenExpired","isExpired_","fireauth.StsTokenManager.TOKEN_REFRESH_BUFFER_","requestToken_","exchangeRefreshToken_","fireauth.UserMetadata","opt_createdAt","opt_lastLoginAt","createdAt_","lastLoginAt_","fireauth.UserMetadata.prototype.clone","fireauth.UserMetadata.prototype.toPlainObject","fireauth.AuthUserInfo","opt_email","opt_displayName","opt_photoURL","opt_phoneNumber","fireauth.UserEvent","opt_properties","appOptions","stsTokenResponse","opt_accountInfo","pendingPromises_","clientFullVersion","stsTokenManager_","setLastAccessToken_","parseServerResponse","setAccountInfo","fireauth.AuthUser.base","popupRedirectEnabled_","authEventManager_","fireauth.AuthEventManager.getManager","stateChangeListeners_","userInvalidatedError_","proactiveRefresh_","initializeProactiveRefreshUtility_","userTokenChangeListener_","handleUserTokenChange_","languageCode_","onLanguageCodeChanged_","this.onLanguageCodeChanged_","setLanguageCode","languageCodeChangeEventDispatcher_","onFrameworkChanged_","this.onFrameworkChanged_","setFramework","frameworkChangeEventDispatcher_","fireauth.AuthUser","fireauth.AuthUser.prototype.setLanguageCode","updateCustomLocaleHeader","fireauth.AuthUser.prototype.getLanguageCode","fireauth.AuthUser.prototype.setLanguageCodeChangeDispatcher","dispatcher","LANGUAGE_CODE_CHANGED","fireauth.AuthUser.prototype.setFramework","framework","updateClientVersion","fireauth.AuthUser.prototype.getFramework","fireauth.AuthUser.prototype.setFrameworkChangeDispatcher","FRAMEWORK_CHANGED","fireauth.AuthUser.prototype.handleUserTokenChange_","fireauth.AuthUser.prototype.getAuth_","fireauth.AuthUser.prototype.initializeProactiveRefreshUtility_","getIdToken","waitInterval","OFFSET_DURATION","fireauth.AuthUser.prototype.startProactiveRefresh","destroyed_","TOKEN_CHANGED","fireauth.AuthUser.prototype.stopProactiveRefresh","fireauth.AuthUser.prototype.setLastAccessToken_","lastAccessToken","lastAccessToken_","fireauth.AuthUser.prototype.removeStateChangeListener","fireauth.AuthUser.prototype.notifyStateChangeListeners_","fireauth.AuthUser.prototype.enablePopupRedirect","fireauth.AuthUser.prototype.setAccountInfo","accountInfo","FIREBASE","fireauth.AuthUser.returnNothing_","fireauth.AuthUser.prototype.checkDestroyed_","fireauth.AuthUser.prototype.getProviderIds","fireauth.AuthUser.prototype.addProviderData","providerData","removeProviderData","fireauth.AuthUser.prototype.removeProviderData","fireauth.AuthUser.prototype.updateProperty","propName","fireauth.AuthUser.prototype.copy","userToCopy","addProviderData","fireauth.AuthUser.prototype","reload","fireauth.AuthUser.prototype.reload","registerPendingPromise_","checkDestroyed_","reloadWithoutSaving_","notifyStateChangeListeners_","fireauth.AuthUser.prototype.reloadWithoutSaving_","setUserAccountInfoFromToken_","updateProperty","getIdTokenResult","fireauth.AuthUser.prototype.getIdTokenResult","fireauth.AuthUser.prototype.getIdToken","fireauth.AuthUser.prototype.updateTokensIfPresent_","notifyAuthListeners_","fireauth.AuthUser.prototype.setUserAccountInfoFromToken_","fireauth.RpcHandler.ApiMethod.GET_ACCOUNT_INFO","parseAccountInfo_","fireauth.AuthUser.prototype.parseAccountInfo_","users","user","linkedAccounts","extractLinkedAccounts_","fireauth.AuthUser.prototype.extractLinkedAccounts_","providerInfo","reauthenticateAndRetrieveDataWithCredential","fireauth.AuthUser.prototype.reauthenticateAndRetrieveDataWithCredential","userCredential","updateTokensIfPresent_","getUserCredential_","REAUTHENTICATE","reauthenticateWithCredential","fireauth.AuthUser.prototype.reauthenticateWithCredential","REAUTH_WITH_CREDENTIAL","fireauth.AuthUser.prototype.checkIfAlreadyLinked_","getProviderIds","linkAndRetrieveDataWithCredential","fireauth.AuthUser.prototype.linkAndRetrieveDataWithCredential","checkIfAlreadyLinked_","LINK","finalizeLinking_","linkWithCredential","fireauth.AuthUser.prototype.linkWithCredential","LINK_WITH_CREDENTIAL","linkWithPhoneNumber","fireauth.AuthUser.prototype.linkWithPhoneNumber","getAuth_","reauthenticateWithPhoneNumber","fireauth.AuthUser.prototype.reauthenticateWithPhoneNumber","fireauth.AuthUser.prototype.getUserCredential_","idTokenResponse","operationType","additionalUserInfo","fireauth.AuthUser.prototype.finalizeLinking_","fireauth.AuthUser.prototype.updateEmail","updatePhoneNumber","fireauth.AuthUser.prototype.updatePhoneNumber","phoneCredential","fireauth.AuthUser.prototype.updatePassword","fireauth.AuthUser.prototype.updateProfile","profileRequest","unlink","fireauth.AuthUser.prototype.unlink","deleteLinkedAccounts","remainingProviderIds","pId","delete","fireauth.AuthUser.prototype.delete","fireauth.RpcHandler.ApiMethod.DELETE_ACCOUNT","setLanguageCodeChangeDispatcher","setFrameworkChangeDispatcher","stopProactiveRefresh","fireauth.AuthUser.prototype.canHandleAuthEvent","LINK_VIA_POPUP","getPopupEventId","popupEventId_","pendingPopupResolvePromise_","REAUTH_VIA_POPUP","LINK_VIA_REDIRECT","getRedirectEventId","redirectEventId_","REAUTH_VIA_REDIRECT","fireauth.AuthUser.prototype.resolvePendingPopupEvent","pendingPopupRejectPromise_","popupTimeoutPromise_","fireauth.AuthUser.prototype.getAuthEventHandlerFinisher","finishPopupAndRedirectLink","finishPopupAndRedirectReauth","linkWithPopup","fireauth.AuthUser.prototype.linkWithPopup","runOperationWithPopup_","additionalCheck","reauthenticateWithPopup","fireauth.AuthUser.prototype.reauthenticateWithPopup","fireauth.AuthUser.prototype.runOperationWithPopup_","isReauthOperation","settings","generateEventId_","getAuthEventManager","linkWithRedirect","fireauth.AuthUser.prototype.linkWithRedirect","runOperationWithRedirect_","reauthenticateWithRedirect","fireauth.AuthUser.prototype.reauthenticateWithRedirect","fireauth.AuthUser.prototype.runOperationWithRedirect_","errorThrown","redirectStorageManager_","fireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_","redirectUser","removeRedirectUser","fireauth.AuthUser.prototype.getAuthEventManager","fireauth.AuthUser.prototype.finishPopupAndRedirectLink","fireauth.AuthUser.prototype.finishPopupAndRedirectReauth","fireauth.AuthUser.prototype.sendEmailVerification","opt_actionCodeSettings","latestIdToken","buildRequest","fireauth.AuthUser.prototype.registerPendingPromise_","opt_skipInvalidationCheck","processedP","checkIfInvalidated_","fireauth.AuthUser.prototype.checkIfInvalidated_","USER_INVALIDATED","fireauth.AuthUser.prototype.toJSON","fireauth.AuthUser.prototype.toPlainObject","fireauth.AuthUser.fromPlainObject","stsTokenManagerResponse","firebaseUser","fireauth.AuthUser.initializeFromIdTokenResponse","opt_redirectStorageManager","fireauth.AuthUser.copyUser","opt_appOptions","getRefreshToken","getExpirationTime","newUser","fireauth.storage.RedirectUserManager","fireauth.storage.RedirectUserManager.prototype.removeRedirectUser","fireauth.storage.RedirectUserManager.prototype.getRedirectUser","opt_authDomain","fireauth.storage.UserManager","currentAuthUserKey_","onReady_","fireauth.storage.UserManager.getAuthUserKey_","switchToLocalOnExternalEvent_","fireauth.storage.UserManager.prototype.switchToLocalOnExternalEvent_","localKey","waitForReady_","removeAllExcept_","fireauth.storage.UserManager.prototype.removeAllExcept_","persistence","storageKey","fireauth.storage.UserManager.PERSISTENCE_KEY_","fireauth.storage.UserManager.prototype.initialize_","sessionKey","inMemoryKey","migrateFromLocalStorage","currentKey","fireauth.storage.UserManager.AUTH_USER_KEY_NAME_","setPersistence","fireauth.storage.UserManager.prototype.setPersistence","currentUser","fireauth.storage.UserManager.prototype.savePersistenceForRedirect","fireauth.storage.UserManager.prototype.setCurrentUser","fireauth.storage.UserManager.prototype.removeCurrentUser","fireauth.storage.UserManager.prototype.getCurrentUser","fireauth.storage.UserManager.prototype.waitForReady_","fireauth.Auth","app","deleted_","app_","authListeners_","userChangeListeners_","onIdTokenChanged_","createSubscribe","initIdTokenChangeObserver_","userStateChangeUid_","onUserStateChanged_","initUserStateObserver_","setCurrentUser_","userStorageManager_","getStorageKey","redirectUserStorageManager_","authStateLoaded_","initAuthState_","redirectStateIsReady_","initAuthRedirectState_","isStateResolved_","getSyncAuthUserChanges_","syncAuthUserChanges_","userStateChangeListener_","handleUserStateChange_","userDeleteListener_","handleUserDelete_","userInvalidatedListener_","handleUserInvalidated_","initAuthEventManager_","logFramework","firebaseServices_","fireauth.Auth.base","initializeReadableWritableProps_","fireauth.Auth.LanguageCodeChangeEvent","fireauth.Auth.FrameworkChangeEvent","fireauth.Auth.prototype","fireauth.Auth.prototype.setPersistence","fireauth.Auth.prototype.setLanguageCode","notifyLanguageCodeListeners_","fireauth.Auth.prototype.getLanguageCode","useDeviceLanguage","fireauth.Auth.prototype.useDeviceLanguage","fireauth.Auth.prototype.logFramework","frameworkId","fireauth.Auth.prototype.getFramework","fireauth.Auth.prototype.initializeReadableWritableProps_","fireauth.Auth.prototype.toJSON","currentUser_","fireauth.Auth.prototype.getAuthEventManager_","eventManagerProviderPromise_","fireauth.Auth.prototype.initAuthEventManager_","enablePopupRedirect","redirectUser_","fireauth.Auth.prototype.canHandleAuthEvent","SIGN_IN_VIA_REDIRECT","SIGN_IN_VIA_POPUP","fireauth.Auth.prototype.resolvePendingPopupEvent","fireauth.Auth.prototype.getAuthEventHandlerFinisher","finishPopupAndRedirectSignIn","fireauth.Auth.prototype.finishPopupAndRedirectSignIn","signInWithIdTokenResponse","signInWithPopup","fireauth.Auth.prototype.signInWithPopup","getAuthEventManager_","manager","signInWithRedirect","fireauth.Auth.prototype.signInWithRedirect","savePersistenceForRedirect","fireauth.Auth.prototype.getRedirectResult","updateCurrentUser","fireauth.Auth.prototype.updateCurrentUser","fireauth.Auth.prototype.signInWithIdTokenResponse","fireauth.Auth.prototype.setCurrentUser_","attachEventListeners_","removeStateChangeListener","startProactiveRefresh","setUserLanguage_","setUserFramework_","signOut","fireauth.Auth.prototype.signOut","removeCurrentUser","fireauth.Auth.prototype.initRedirectUser_","getRedirectUser","fireauth.Auth.prototype.initAuthState_","initRedirectUser_","getCurrentUser","setCurrentUser","fireauth.Auth.prototype.initAuthRedirectState_","fireauth.Auth.prototype.syncAuthUserChanges_","thisId","thatId","otherUser","fireauth.Auth.prototype.handleUserStateChange_","fireauth_Auth_prototype$handleUserTokenChange_","fireauth.Auth.prototype.handleUserTokenChange_","fireauth.Auth.prototype.handleUserDelete_","fireauth.Auth.prototype.handleUserInvalidated_","fireauth.Auth.prototype.signInWithIdTokenProvider_","idTokenPromise","fireauth.Auth.prototype.initIdTokenChangeObserver_","observer","addAuthTokenListener","fireauth.Auth.prototype.initUserStateObserver_","addUserChangeListener_","onIdTokenChanged","fireauth.Auth.prototype.onIdTokenChanged","nextOrObserver","opt_completed","onAuthStateChanged","fireauth.Auth.prototype.onAuthStateChanged","getUid","getIdTokenInternal","fireauth.Auth.prototype.getIdTokenInternal","stsAccessToken","signInWithCustomToken","fireauth.Auth.prototype.signInWithCustomToken","signInWithIdTokenProvider_","fireauth.RpcHandler.ApiMethod.VERIFY_CUSTOM_TOKEN","signInAndRetrieveDataWithCustomToken","fireauth.Auth.prototype.signInAndRetrieveDataWithCustomToken","SIGN_IN_WITH_CUSTOM_TOKEN","signInAndRetrieveDataWithEmailAndPassword","fireauth.Auth.prototype.signInAndRetrieveDataWithEmailAndPassword","SIGN_IN_WITH_EMAIL_AND_PASSWORD","signInWithEmailAndPassword","fireauth.Auth.prototype.signInWithEmailAndPassword","createUserWithEmailAndPassword","fireauth.Auth.prototype.createUserWithEmailAndPassword","fireauth.RpcHandler.ApiMethod.CREATE_ACCOUNT","createUserAndRetrieveDataWithEmailAndPassword","fireauth.Auth.prototype.createUserAndRetrieveDataWithEmailAndPassword","CREATE_USER_WITH_EMAIL_AND_PASSWORD","signInWithCredential","fireauth.Auth.prototype.signInWithCredential","SIGN_IN_WITH_CREDENTIAL","signInAndRetrieveDataWithCredential","fireauth.Auth.prototype.signInAndRetrieveDataWithCredential","fireauth.Auth.prototype.signInAnonymously","signInAnonymouslyAndRetrieveData","fireauth.Auth.prototype.signInAnonymouslyAndRetrieveData","fireauth.Auth.prototype.app_","fireauth.Auth.prototype.currentUser_","fireauth.Auth.prototype.getUid","fireauth.Auth.prototype.getLastAccessToken_","fireauth.Auth.prototype.notifyAuthListeners_","getLastAccessToken_","addAuthTokenListenerInternal","fireauth.Auth.prototype.addAuthTokenListenerInternal","removeAuthTokenListenerInternal","fireauth.Auth.prototype.removeAuthTokenListenerInternal","removeAuthTokenListener","fireauth.Auth.prototype.addAuthTokenListener","fireauth.Auth.prototype.removeAuthTokenListener","fireauth.Auth.prototype.addUserChangeListener_","fireauth.Auth.prototype.delete","fireauth.Auth.prototype.registerPendingPromise_","fetchProvidersForEmail","fireauth.Auth.prototype.fetchProvidersForEmail","FETCH_PROVIDERS_FOR_EMAIL","fetchProvidersForIdentifier","getRpcHandler","fetchSignInMethodsForEmail","fireauth.Auth.prototype.fetchSignInMethodsForEmail","fetchSignInMethodsForIdentifier","isSignInWithEmailLink","fireauth.Auth.prototype.isSignInWithEmailLink","fireauth.Auth.prototype.sendSignInLinkToEmail","actionCodeSettings","actionCodeSettingsBuilder","verifyPasswordResetCode","fireauth.Auth.prototype.verifyPasswordResetCode","fireauth.Auth.prototype.confirmPasswordReset","fireauth.Auth.prototype.checkActionCode","fireauth.Auth.prototype.applyActionCode","fireauth.Auth.prototype.sendPasswordResetEmail","signInWithPhoneNumber","fireauth.Auth.prototype.signInWithPhoneNumber","signInWithEmailLink","fireauth.Auth.prototype.signInWithEmailLink","opt_link","fireauth.grecaptcha","render","fireauth.grecaptcha.prototype.render","fireauth.grecaptcha.prototype.reset","fireauth.grecaptcha.prototype.getResponse","execute","fireauth.grecaptcha.prototype.execute","fireauth.GRecaptchaMockFactory","counter_","fireauth.GRecaptchaMockFactory.START_INSTANCE_ID","fireauth.GRecaptchaMockFactory.instance_","fireauth.GRecaptchaMockFactory.prototype.render","elementOrId","fireauth.RecaptchaMock","fireauth.GRecaptchaMockFactory.prototype.reset","mock","getMock_","getId_","fireauth.GRecaptchaMockFactory.prototype.getResponse","fireauth.GRecaptchaMockFactory.prototype.execute","fireauth.GRecaptchaMockFactory.prototype.getMock_","fireauth.GRecaptchaMockFactory.prototype.getId_","timerId_","responseToken_","isVisible_","element_","onClickHandler_","this.onClickHandler_","CLICK","fireauth.RecaptchaMock.prototype.getResponse","checkIfDeleted_","fireauth.RecaptchaMock.prototype.execute","expirationCallback","fireauth.GRecaptchaMockFactory.EXPIRATION_TIME_MS","fireauth.GRecaptchaMockFactory.SOLVE_TIME_MS","fireauth.RecaptchaMock.prototype.delete","fireauth.RecaptchaMock.prototype.checkIfDeleted_","fireauth.RecaptchaMockLoader","loadRecaptchaDeps","fireauth.RecaptchaMockLoader.prototype.loadRecaptchaDeps","clearSingleRecaptcha","fireauth.RecaptchaMockLoader.prototype.clearSingleRecaptcha","fireauth.RecaptchaMockLoader.instance_","fireauth.RecaptchaRealLoader","Infinity","hl_","cbName_","fireauth.RecaptchaRealLoader.RECAPTCHA_SRC_","fireauth.RecaptchaRealLoader.DEFAULT_DEPENDENCY_TIMEOUT_","fireauth.RecaptchaRealLoader.prototype.loadRecaptchaDeps","hl","timer","fireauth.RecaptchaRealLoader.DEFAULT_DEPENDENCY_TIMEOUT_.get","container","parameters","widgetId","fireauth.RecaptchaRealLoader.prototype.clearSingleRecaptcha","fireauth.RecaptchaRealLoader.instance_","fireauth.BaseRecaptchaVerifier","opt_parameters","opt_getLanguageCode","opt_rpcHandlerConfig","opt_isTestingMode","widgetId_","cachedReadyPromise_","container_","grecaptcha_","recaptchaLoader_","parameters_","fireauth.BaseRecaptchaVerifier.ParamName.SITEKEY","isInvisible_","fireauth.BaseRecaptchaVerifier.ParamName.SIZE","hasChildNodes","getLanguageCode_","tokenListeners_","existingCallback","fireauth.BaseRecaptchaVerifier.ParamName.CALLBACK","existingExpiredCallback","fireauth.BaseRecaptchaVerifier.ParamName.EXPIRED_CALLBACK","CALLBACK","EXPIRED_CALLBACK","SITEKEY","SIZE","fireauth.BaseRecaptchaVerifier.prototype.dispatchEvent_","fireauth.BaseRecaptchaVerifier.prototype.removeTokenChangeListener_","fireauth.BaseRecaptchaVerifier.prototype.registerPendingPromise_","fireauth.BaseRecaptchaVerifier.prototype.isReady_","grecaptcha","fireauth.RpcHandler.ApiMethod.GET_RECAPTCHA_PARAM","fireauth.BaseRecaptchaVerifier.prototype","fireauth.BaseRecaptchaVerifier.prototype.render","checkIfDestroyed_","outerContainer","goog.dom.createDom","goog.dom.TagName.DIV","verify","fireauth.BaseRecaptchaVerifier.prototype.verify","recaptchaToken","removeTokenChangeListener_","fireauth.BaseRecaptchaVerifier.prototype.reset","fireauth.BaseRecaptchaVerifier.prototype.checkIfDestroyed_","fireauth.BaseRecaptchaVerifier.prototype.clear","node","firstChild","fireauth.RecaptchaVerifier","opt_app","isTestingMode","fireauth.BaseRecaptchaVerifier.call","fireauth.RecaptchaVerifier.base","fireauth.args.validate","apiName","expected","actual","opt_isSetter","actualAsArray","numRequiredArgs","isOptionalSection","optional","maxNumArgs","minNumArgs","numExpectedString","optionalUndefined","validator","fireauth.args.ORDINAL_NUMBERS_.length","fireauth.args.ORDINAL_NUMBERS_","errorPrefix","ordinal","expectedType","typeLabel","fireauth.args.string","opt_optional","fireauth.args.bool","fireauth.args.object","fireauth.args.func","fireauth.args.null","fireauth.args.element","Element","fireauth.args.firebaseAuth","fireauth.args.firebaseApp","App","fireauth.args.authCredential","opt_requiredProviderId","matchesRequiredProvider","fireauth.args.authProvider","fireauth.args.applicationVerifier","fireauth.args.or","optionA","optionB","fireauth.exportlib.exportPrototypeMethods","protObj","fnMap","obfuscatedFnName","unobfuscatedFnName","fireauth.exportlib.wrapMethodWithArgumentVerifier_","fireauth.exportlib.exportPrototypeProperties","propMap","obfuscatedPropName","unobfuscatedPropName","getter","setter","expectedArg","fireauth.exportlib.exportFunction","parentObj","func","opt_expectedArgs","wrapper","argumentsAsArray","shortName","fireauth.exportlib.extractMethodNameFromFullPath_","fireauth.args.firebaseUser","fireauth.EmailAuthProvider.credential","registerService","namespace","fireauth.exportlib.AUTH_TYPE","extendApp","extendNamespace","require","initializeApp"],"mappingsldpQA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;;ACFA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;;ACDA;AACA;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;;;;ACHA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;;;;;;;;;;;;;;;AAcA;AAEA,IAAIA,aAAa,GAAGC,MAAM,CAACC,cAAP,IACf;AAAEC,EAAAA,SAAS,EAAE;AAAb,aAA6BC,KAA7B,IAAsC,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAAED,EAAAA,CAAC,CAACF,SAAF,GAAcG,CAAd;AAAkB,CAD3D,IAEhB,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,OAAK,IAAIC,CAAT,IAAcD,CAAd,EAAiB,IAAIA,CAAC,CAACE,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBF,CAAC,CAACE,CAAD,CAAD,GAAOD,CAAC,CAACC,CAAD,CAAR;AAAc,CAF9E;;AAIO,SAASE,SAAT,CAAmBJ,CAAnB,EAAsBC,CAAtB,EAAyB;AAC5BN,EAAAA,aAAa,CAACK,CAAD,EAAIC,CAAJ,CAAb;;AACA,WAASI,EAAT,GAAc;AAAE,SAAKC,WAAL,GAAmBN,CAAnB;AAAuB;;AACvCA,EAAAA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaL,MAAM,CAACY,MAAP,CAAcP,CAAd,CAAb,IAAiCI,E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","file":"main.1f19ae8e.map","sourceRoot":"../src","sourcesContent":["(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","'use strict';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","require('../../modules/es6.array.find');\nmodule.exports = require('../../modules/_core').Array.find;\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","require('../../modules/es6.array.find-index');\nmodule.exports = require('../../modules/_core').Array.findIndex;\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","exports.f = Object.getOwnPropertySymbols;\n","exports.f = {}.propertyIsEnumerable;\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","require('../../modules/es6.string.starts-with');\nmodule.exports = require('../../modules/_core').String.startsWith;\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","require('../../modules/es6.string.repeat');\nmodule.exports = require('../../modules/_core').String.repeat;\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","exports.f = require('./_wks');\n","module.exports = false;\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","'use strict';\n// 19.1.3.6 Object.prototype.toString()\nvar classof = require('./_classof');\nvar test = {};\ntest[require('./_wks')('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  require('./_redefine')(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n","require('./_wks-define')('asyncIterator');\n","require('./_wks-define')('observable');\n","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","module.exports = {};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n","import 'whatwg-fetch';\nimport 'promise-polyfill/lib/polyfill';\nimport 'core-js/fn/array/find';\nimport 'core-js/fn/array/find-index';\nimport 'core-js/fn/object/assign';\nimport 'core-js/fn/string/starts-with';\nimport 'core-js/fn/string/repeat';\nimport 'core-js/fn/symbol';\nimport 'core-js/fn/symbol/iterator';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = require('@firebase/util');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.8.3',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nrequire('@firebase/polyfill');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nmodule.exports = firebase;\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Bootstrap for the Google JS Library (Closure).\n *\n * In uncompiled mode base.js will attempt to load Closure's deps file, unless\n * the global <code>CLOSURE_NO_DEPS</code> is set to true.  This allows projects\n * to include their own deps file(s) from different locations.\n *\n * Avoid including base.js more than once. This is strictly discouraged and not\n * supported. goog.require(...) won't work properly in that case.\n *\n * @provideGoog\n */\n\n\n/**\n * @define {boolean} Overridden to true by the compiler.\n */\nvar COMPILED = false;\n\n\n/**\n * Base namespace for the Closure library.  Checks to see goog is already\n * defined in the current scope before assigning to prevent clobbering if\n * base.js is loaded more than once.\n *\n * @const\n */\nvar goog = goog || {};\n\n/**\n * Reference to the global context.  In most cases this will be 'window'.\n * @const\n * @suppress {newCheckTypes}\n */\ngoog.global = this;\n\n\n/**\n * A hook for overriding the define values in uncompiled mode.\n *\n * In uncompiled mode, `CLOSURE_UNCOMPILED_DEFINES` may be defined before\n * loading base.js.  If a key is defined in `CLOSURE_UNCOMPILED_DEFINES`,\n * `goog.define` will use the value instead of the default value.  This\n * allows flags to be overwritten without compilation (this is normally\n * accomplished with the compiler's \"define\" flag).\n *\n * Example:\n * <pre>\n *   var CLOSURE_UNCOMPILED_DEFINES = {'goog.DEBUG': false};\n * </pre>\n *\n * @type {Object<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_UNCOMPILED_DEFINES;\n\n\n/**\n * A hook for overriding the define values in uncompiled or compiled mode,\n * like CLOSURE_UNCOMPILED_DEFINES but effective in compiled code.  In\n * uncompiled code CLOSURE_UNCOMPILED_DEFINES takes precedence.\n *\n * Also unlike CLOSURE_UNCOMPILED_DEFINES the values must be number, boolean or\n * string literals or the compiler will emit an error.\n *\n * While any @define value may be set, only those set with goog.define will be\n * effective for uncompiled code.\n *\n * Example:\n * <pre>\n *   var CLOSURE_DEFINES = {'goog.DEBUG': false} ;\n * </pre>\n *\n * @type {Object<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_DEFINES;\n\n\n/**\n * Returns true if the specified value is not undefined.\n *\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined.\n */\ngoog.isDef = function(val) {\n  // void 0 always evaluates to undefined and hence we do not need to depend on\n  // the definition of the global variable named 'undefined'.\n  return val !== void 0;\n};\n\n/**\n * Returns true if the specified value is a string.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a string.\n */\ngoog.isString = function(val) {\n  return typeof val == 'string';\n};\n\n\n/**\n * Returns true if the specified value is a boolean.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is boolean.\n */\ngoog.isBoolean = function(val) {\n  return typeof val == 'boolean';\n};\n\n\n/**\n * Returns true if the specified value is a number.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a number.\n */\ngoog.isNumber = function(val) {\n  return typeof val == 'number';\n};\n\n\n/**\n * Builds an object structure for the provided namespace path, ensuring that\n * names that already exist are not overwritten. For example:\n * \"a.b.c\" -> a = {};a.b={};a.b.c={};\n * Used by goog.provide and goog.exportSymbol.\n * @param {string} name name of the object that this file defines.\n * @param {*=} opt_object the object to expose at the end of the path.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is `goog.global`.\n * @private\n */\ngoog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {\n  var parts = name.split('.');\n  var cur = opt_objectToExportTo || goog.global;\n\n  // Internet Explorer exhibits strange behavior when throwing errors from\n  // methods externed in this manner.  See the testExportSymbolExceptions in\n  // base_test.html for an example.\n  if (!(parts[0] in cur) && typeof cur.execScript != 'undefined') {\n    cur.execScript('var ' + parts[0]);\n  }\n\n  for (var part; parts.length && (part = parts.shift());) {\n    if (!parts.length && goog.isDef(opt_object)) {\n      // last part and we have an object; use it\n      cur[part] = opt_object;\n    } else if (cur[part] && cur[part] !== Object.prototype[part]) {\n      cur = cur[part];\n    } else {\n      cur = cur[part] = {};\n    }\n  }\n};\n\n\n/**\n * Defines a named value. In uncompiled mode, the value is retrieved from\n * CLOSURE_DEFINES or CLOSURE_UNCOMPILED_DEFINES if the object is defined and\n * has the property specified, and otherwise used the defined defaultValue.\n * When compiled the default can be overridden using the compiler\n * options or the value set in the CLOSURE_DEFINES object.\n *\n * @param {string} name The distinguished name to provide.\n * @param {string|number|boolean} defaultValue\n */\ngoog.define = function(name, defaultValue) {\n  var value = defaultValue;\n  if (!COMPILED) {\n    var uncompiledDefines = goog.global.CLOSURE_UNCOMPILED_DEFINES;\n    var defines = goog.global.CLOSURE_DEFINES;\n    if (uncompiledDefines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (uncompiledDefines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(uncompiledDefines, name)) {\n      value = uncompiledDefines[name];\n    } else if (\n        defines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (defines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(defines, name)) {\n      value = defines[name];\n    }\n  }\n  goog.exportPath_(name, value);\n};\n\n\n/**\n * @define {boolean} DEBUG is provided as a convenience so that debugging code\n * that should not be included in a production. It can be easily stripped\n * by specifying --define goog.DEBUG=false to the Closure Compiler aka\n * JSCompiler. For example, most toString() methods should be declared inside an\n * \"if (goog.DEBUG)\" conditional because they are generally used for debugging\n * purposes and it is difficult for the JSCompiler to statically determine\n * whether they are used.\n */\ngoog.define('goog.DEBUG', true);\n\n\n/**\n * @define {string} LOCALE defines the locale being used for compilation. It is\n * used to select locale specific data to be compiled in js binary. BUILD rule\n * can specify this value by \"--define goog.LOCALE=<locale_name>\" as a compiler\n * option.\n *\n * Take into account that the locale code format is important. You should use\n * the canonical Unicode format with hyphen as a delimiter. Language must be\n * lowercase, Language Script - Capitalized, Region - UPPERCASE.\n * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.\n *\n * See more info about locale codes here:\n * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\n *\n * For language codes you should use values defined by ISO 693-1. See it here\n * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from\n * this rule: the Hebrew language. For legacy reasons the old code (iw) should\n * be used instead of the new code (he).\n *\n */\ngoog.define('goog.LOCALE', 'en');  // default to en\n\n\n/**\n * @define {boolean} Whether this code is running on trusted sites.\n *\n * On untrusted sites, several native functions can be defined or overridden by\n * external libraries like Prototype, Datejs, and JQuery and setting this flag\n * to false forces closure to use its own implementations when possible.\n *\n * If your JavaScript can be loaded by a third party site and you are wary about\n * relying on non-standard implementations, specify\n * \"--define goog.TRUSTED_SITE=false\" to the compiler.\n */\ngoog.define('goog.TRUSTED_SITE', true);\n\n\n/**\n * @define {boolean} Whether a project is expected to be running in strict mode.\n *\n * This define can be used to trigger alternate implementations compatible with\n * running in EcmaScript Strict mode or warn about unavailable functionality.\n * @see https://goo.gl/PudQ4y\n *\n */\ngoog.define('goog.STRICT_MODE_COMPATIBLE', false);\n\n\n/**\n * @define {boolean} Whether code that calls {@link goog.setTestOnly} should\n *     be disallowed in the compilation unit.\n */\ngoog.define('goog.DISALLOW_TEST_ONLY_CODE', COMPILED && !goog.DEBUG);\n\n\n/**\n * @define {boolean} Whether to use a Chrome app CSP-compliant method for\n *     loading scripts via goog.require. @see appendScriptSrcNode_.\n */\ngoog.define('goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING', false);\n\n\n/**\n * Defines a namespace in Closure.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * The presence of one or more goog.provide() calls in a file indicates\n * that the file defines the given objects/namespaces.\n * Provided symbols must not be null or undefined.\n *\n * In addition, goog.provide() creates the object stubs for a namespace\n * (for example, goog.provide(\"goog.foo.bar\") will create the object\n * goog.foo.bar if it does not already exist).\n *\n * Build tools also scan for provide/require/module statements\n * to discern dependencies, build dependency files (see deps.js), etc.\n *\n * @see goog.require\n * @see goog.module\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n */\ngoog.provide = function(name) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.provide can not be used within a module.');\n  }\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n  }\n\n  goog.constructNamespace_(name);\n};\n\n\n/**\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n * @param {Object=} opt_obj The object to embed in the namespace.\n * @private\n */\ngoog.constructNamespace_ = function(name, opt_obj) {\n  if (!COMPILED) {\n    delete goog.implicitNamespaces_[name];\n\n    var namespace = name;\n    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {\n      if (goog.getObjectByName(namespace)) {\n        break;\n      }\n      goog.implicitNamespaces_[namespace] = true;\n    }\n  }\n\n  goog.exportPath_(name, opt_obj);\n};\n\n\n/**\n * Module identifier validation regexp.\n * Note: This is a conservative check, it is very possible to be more lenient,\n *   the primary exclusion here is \"/\" and \"\\\" and a leading \".\", these\n *   restrictions are intended to leave the door open for using goog.require\n *   with relative file paths rather than module identifiers.\n * @private\n */\ngoog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\n\n\n/**\n * Defines a module in Closure.\n *\n * Marks that this file must be loaded as a module and claims the namespace.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * goog.module() has three requirements:\n * - goog.module may not be used in the same file as goog.provide.\n * - goog.module must be the first statement in the file.\n * - only one goog.module is allowed per file.\n *\n * When a goog.module annotated file is loaded, it is enclosed in\n * a strict function closure. This means that:\n * - any variables declared in a goog.module file are private to the file\n * (not global), though the compiler is expected to inline the module.\n * - The code must obey all the rules of \"strict\" JavaScript.\n * - the file will be marked as \"use strict\"\n *\n * NOTE: unlike goog.provide, goog.module does not declare any symbols by\n * itself. If declared symbols are desired, use\n * goog.module.declareLegacyNamespace().\n *\n *\n * See the public goog.module proposal: http://goo.gl/Va1hin\n *\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\", is expected but not required.\n * @return {void}\n */\ngoog.module = function(name) {\n  if (!goog.isString(name) || !name ||\n      name.search(goog.VALID_MODULE_RE_) == -1) {\n    throw new Error('Invalid module identifier');\n  }\n  if (!goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'Module ' + name + ' has been loaded incorrectly. Note, ' +\n        'modules cannot be loaded as normal scripts. They require some kind of ' +\n        'pre-processing step. You\\'re likely trying to load a module via a ' +\n        'script tag or as a part of a concatenated bundle without rewriting the ' +\n        'module. For more info see: ' +\n        'https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.');\n  }\n  if (goog.moduleLoaderState_.moduleName) {\n    throw new Error('goog.module may only be called once per module.');\n  }\n\n  // Store the module name for the loader.\n  goog.moduleLoaderState_.moduleName = name;\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n    delete goog.implicitNamespaces_[name];\n  }\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n *\n * Note: This is not an alternative to goog.require, it does not\n * indicate a hard dependency, instead it is used to indicate\n * an optional dependency or to access the exports of a module\n * that has already been loaded.\n * @suppress {missingProvide}\n */\ngoog.module.get = function(name) {\n  if (!COMPILED && name in goog.loadedModules_) {\n    if (goog.loadedModules_[name].type != goog.ModuleType.GOOG) {\n      throw new Error('Can only goog.module.get for goog.modules.');\n    }\n    if (goog.loadedModules_[name].moduleId != name) {\n      throw new Error('Cannot goog.module.get by path.');\n    }\n  }\n\n  return goog.module.getInternal_(name);\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n * @private\n */\ngoog.module.getInternal_ = function(name) {\n  if (!COMPILED) {\n    if (name in goog.loadedModules_) {\n      return goog.loadedModules_[name].exports;\n    } else if (!goog.implicitNamespaces_[name]) {\n      var ns = goog.getObjectByName(name);\n      return ns != null ? ns : null;\n    }\n  }\n  return null;\n};\n\n\n/**\n * Types of modules the debug loader can load.\n * @enum {string}\n */\ngoog.ModuleType = {\n  ES6: 'es6',\n  GOOG: 'goog'\n};\n\n\n/**\n * @private {?{\n *   moduleName: (string|undefined),\n *   declareLegacyNamespace:boolean,\n *   path:(string|undefined),\n *   type: goog.ModuleType\n * }}\n */\ngoog.moduleLoaderState_ = null;\n\n\n/**\n * @private\n * @return {boolean} Whether a is currently being initialized.\n */\ngoog.isInModuleLoader_ = function() {\n  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();\n};\n\n\n/**\n * @private\n * @return {boolean} Whether a goog.module is currently being initialized.\n */\ngoog.isInGoogModuleLoader_ = function() {\n  return !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.GOOG;\n};\n\n\n/**\n * @private\n * @return {boolean} Whether an es6 module is currently being initialized.\n */\ngoog.isInEs6ModuleLoader_ = function() {\n  return !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.ES6;\n};\n\n\n/**\n * @private\n * @return {?string|undefined} Path of the current module being initialized.\n */\ngoog.getModulePath_ = function() {\n  return goog.moduleLoaderState_ && goog.moduleLoaderState_.path;\n};\n\n\n/**\n * Provide the module's exports as a globally accessible object under the\n * module's declared name.  This is intended to ease migration to goog.module\n * for files that have existing usages.\n * @suppress {missingProvide}\n */\ngoog.module.declareLegacyNamespace = function() {\n  if (!COMPILED && !goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'goog.module.declareLegacyNamespace must be called from ' +\n        'within a goog.module');\n  }\n  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {\n    throw new Error(\n        'goog.module must be called prior to ' +\n        'goog.module.declareLegacyNamespace.');\n  }\n  goog.moduleLoaderState_.declareLegacyNamespace = true;\n};\n\n\n/**\n * Marks that the current file should only be used for testing, and never for\n * live code in production.\n *\n * In the case of unit tests, the message may optionally be an exact namespace\n * for the test (e.g. 'goog.stringTest'). The linter will then ignore the extra\n * provide (if not explicitly defined in the code).\n *\n * @param {string=} opt_message Optional message to add to the error that's\n *     raised when used in production code.\n */\ngoog.setTestOnly = function(opt_message) {\n  if (goog.DISALLOW_TEST_ONLY_CODE) {\n    opt_message = opt_message || '';\n    throw new Error(\n        'Importing test-only code into non-debug environment' +\n        (opt_message ? ': ' + opt_message : '.'));\n  }\n};\n\n\n/**\n * Forward declares a symbol. This is an indication to the compiler that the\n * symbol may be used in the source yet is not required and may not be provided\n * in compilation.\n *\n * The most common usage of forward declaration is code that takes a type as a\n * function parameter but does not need to require it. By forward declaring\n * instead of requiring, no hard dependency is made, and (if not required\n * elsewhere) the namespace may never be required and thus, not be pulled\n * into the JavaScript binary. If it is required elsewhere, it will be type\n * checked as normal.\n *\n * Before using goog.forwardDeclare, please read the documentation at\n * https://github.com/google/closure-compiler/wiki/Bad-Type-Annotation to\n * understand the options and tradeoffs when working with forward declarations.\n *\n * @param {string} name The namespace to forward declare in the form of\n *     \"goog.package.part\".\n */\ngoog.forwardDeclare = function(name) {};\n\n\n/**\n * Forward declare type information. Used to assign types to goog.global\n * referenced object that would otherwise result in unknown type references\n * and thus block property disambiguation.\n */\ngoog.forwardDeclare('Document');\ngoog.forwardDeclare('HTMLScriptElement');\ngoog.forwardDeclare('XMLHttpRequest');\n\n\nif (!COMPILED) {\n  /**\n   * Check if the given name has been goog.provided. This will return false for\n   * names that are available only as implicit namespaces.\n   * @param {string} name name of the object to look for.\n   * @return {boolean} Whether the name has been provided.\n   * @private\n   */\n  goog.isProvided_ = function(name) {\n    return (name in goog.loadedModules_) ||\n        (!goog.implicitNamespaces_[name] &&\n         goog.isDefAndNotNull(goog.getObjectByName(name)));\n  };\n\n  /**\n   * Namespaces implicitly defined by goog.provide. For example,\n   * goog.provide('goog.events.Event') implicitly declares that 'goog' and\n   * 'goog.events' must be namespaces.\n   *\n   * @type {!Object<string, (boolean|undefined)>}\n   * @private\n   */\n  goog.implicitNamespaces_ = {'goog.module': true};\n\n  // NOTE: We add goog.module as an implicit namespace as goog.module is defined\n  // here and because the existing module package has not been moved yet out of\n  // the goog.module namespace. This satisifies both the debug loader and\n  // ahead-of-time dependency management.\n}\n\n\n/**\n * Returns an object based on its fully qualified external name.  The object\n * is not found if null or undefined.  If you are using a compilation pass that\n * renames property names beware that using this function will not find renamed\n * properties.\n *\n * @param {string} name The fully qualified name.\n * @param {Object=} opt_obj The object within which to look; default is\n *     |goog.global|.\n * @return {?} The value (object or primitive) or, if not found, null.\n */\ngoog.getObjectByName = function(name, opt_obj) {\n  var parts = name.split('.');\n  var cur = opt_obj || goog.global;\n  for (var i = 0; i < parts.length; i++) {\n    cur = cur[parts[i]];\n    if (!goog.isDefAndNotNull(cur)) {\n      return null;\n    }\n  }\n  return cur;\n};\n\n\n/**\n * Globalizes a whole namespace, such as goog or goog.lang.\n *\n * @param {!Object} obj The namespace to globalize.\n * @param {Object=} opt_global The object to add the properties to.\n * @deprecated Properties may be explicitly exported to the global scope, but\n *     this should no longer be done in bulk.\n */\ngoog.globalize = function(obj, opt_global) {\n  var global = opt_global || goog.global;\n  for (var x in obj) {\n    global[x] = obj[x];\n  }\n};\n\n\n/**\n * Adds a dependency from a file to the files it requires.\n * @param {string} relPath The path to the js file.\n * @param {!Array<string>} provides An array of strings with\n *     the names of the objects this file provides.\n * @param {!Array<string>} requires An array of strings with\n *     the names of the objects this file requires.\n * @param {boolean|!Object<string>=} opt_loadFlags Parameters indicating\n *     how the file must be loaded.  The boolean 'true' is equivalent\n *     to {'module': 'goog'} for backwards-compatibility.  Valid properties\n *     and values include {'module': 'goog'} and {'lang': 'es6'}.\n */\ngoog.addDependency = function(relPath, provides, requires, opt_loadFlags) {\n  if (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n    goog.debugLoader_.addDependency(relPath, provides, requires, opt_loadFlags);\n  }\n};\n\n\n\n\n// NOTE(nnaze): The debug DOM loader was included in base.js as an original way\n// to do \"debug-mode\" development.  The dependency system can sometimes be\n// confusing, as can the debug DOM loader's asynchronous nature.\n//\n// With the DOM loader, a call to goog.require() is not blocking -- the script\n// will not load until some point after the current script.  If a namespace is\n// needed at runtime, it needs to be defined in a previous script, or loaded via\n// require() with its registered dependencies.\n//\n// User-defined namespaces may need their own deps file. For a reference on\n// creating a deps file, see:\n// Externally: https://developers.google.com/closure/library/docs/depswriter\n//\n// Because of legacy clients, the DOM loader can't be easily removed from\n// base.js.  Work was done to make it disableable or replaceable for\n// different environments (DOM-less JavaScript interpreters like Rhino or V8,\n// for example). See bootstrap/ for more information.\n\n\n/**\n * @define {boolean} Whether to enable the debug loader.\n *\n * If enabled, a call to goog.require() will attempt to load the namespace by\n * appending a script tag to the DOM (if the namespace has been registered).\n *\n * If disabled, goog.require() will simply assert that the namespace has been\n * provided (and depend on the fact that some outside tool correctly ordered\n * the script).\n */\ngoog.define('goog.ENABLE_DEBUG_LOADER', true);\n\n\n/**\n * @param {string} msg\n * @private\n */\ngoog.logToConsole_ = function(msg) {\n  if (goog.global.console) {\n    goog.global.console['error'](msg);\n  }\n};\n\n\n/**\n * @param {string} requireOrPath\n * @return {boolean}\n * @private\n */\ngoog.isPath_ = function(requireOrPath) {\n  // Paths must be relative.\n  return requireOrPath.indexOf('./') == 0 || requireOrPath.indexOf('../') == 0;\n};\n\n\n/**\n * Implements a system for the dynamic resolution of dependencies that works in\n * parallel with the BUILD system. Note that all calls to goog.require will be\n * stripped by the compiler.\n * @see goog.provide\n * @param {string} name Namespace to include (as was given in goog.provide()) in\n *     the form \"goog.package.part\".\n * @return {?} If called within a goog.module file, the associated namespace or\n *     module otherwise null.\n */\ngoog.require = function(name) {\n  if (goog.isPath_(name)) {\n    if (goog.isInGoogModuleLoader_()) {\n      if (!goog.getModulePath_()) {\n        throw new Error(\n            'Current module has no path information. Was it loaded via ' +\n            'goog.loadModule without a path argument?');\n      }\n\n      name = goog.normalizePath_(goog.getModulePath_() + '/../' + name);\n    } else {\n      throw new Error('Cannot require by path outside of goog.modules.');\n    }\n  }\n\n  if (!COMPILED) {\n    // Might need to lazy load on old IE.\n    if (goog.ENABLE_DEBUG_LOADER) {\n      goog.debugLoader_.requested(name);\n    }\n\n    // If the object already exists we do not need to do anything.\n    if (goog.isProvided_(name)) {\n      if (goog.isInModuleLoader_()) {\n        return goog.module.getInternal_(name);\n      }\n    } else if (goog.ENABLE_DEBUG_LOADER) {\n      var moduleLoaderState = goog.moduleLoaderState_;\n      goog.moduleLoaderState_ = null;\n      try {\n        goog.debugLoader_.load_(name);\n      } finally {\n        goog.moduleLoaderState_ = moduleLoaderState;\n      }\n    }\n\n    return null;\n  }\n};\n\n\n/**\n * Path for included scripts.\n * @type {string}\n */\ngoog.basePath = '';\n\n\n/**\n * A hook for overriding the base path.\n * @type {string|undefined}\n */\ngoog.global.CLOSURE_BASE_PATH;\n\n\n/**\n * Whether to attempt to load Closure's deps file. By default, when uncompiled,\n * deps files will attempt to be loaded.\n * @type {boolean|undefined}\n */\ngoog.global.CLOSURE_NO_DEPS;\n\n\n/**\n * A function to import a single script. This is meant to be overridden when\n * Closure is being run in non-HTML contexts, such as web workers. It's defined\n * in the global scope so that it can be set before base.js is loaded, which\n * allows deps.js to be imported properly.\n *\n * The first parameter the script source, which is a relative URI. The second,\n * optional parameter is the script contents, in the event the script needed\n * transformation. It should return true if the script was imported, false\n * otherwise.\n * @type {(function(string, string=): boolean)|undefined}\n */\ngoog.global.CLOSURE_IMPORT_SCRIPT;\n\n\n/**\n * Null function used for default values of callbacks, etc.\n * @return {void} Nothing.\n */\ngoog.nullFunction = function() {};\n\n\n/**\n * When defining a class Foo with an abstract method bar(), you can do:\n * Foo.prototype.bar = goog.abstractMethod\n *\n * Now if a subclass of Foo fails to override bar(), an error will be thrown\n * when bar() is invoked.\n *\n * @type {!Function}\n * @throws {Error} when invoked to indicate the method should be overridden.\n */\ngoog.abstractMethod = function() {\n  throw new Error('unimplemented abstract method');\n};\n\n\n/**\n * Adds a `getInstance` static method that always returns the same\n * instance object.\n * @param {!Function} ctor The constructor for the class to add the static\n *     method to.\n * @suppress {missingProperties} 'instance_' isn't a property on 'Function'\n *     but we don't have a better type to use here.\n */\ngoog.addSingletonGetter = function(ctor) {\n  // instance_ is immediately set to prevent issues with sealed constructors\n  // such as are encountered when a constructor is returned as the export object\n  // of a goog.module in unoptimized code.\n  ctor.instance_ = undefined;\n  ctor.getInstance = function() {\n    if (ctor.instance_) {\n      return ctor.instance_;\n    }\n    if (goog.DEBUG) {\n      // NOTE: JSCompiler can't optimize away Array#push.\n      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;\n    }\n    return ctor.instance_ = new ctor;\n  };\n};\n\n\n/**\n * All singleton classes that have been instantiated, for testing. Don't read\n * it directly, use the `goog.testing.singleton` module. The compiler\n * removes this variable if unused.\n * @type {!Array<!Function>}\n * @private\n */\ngoog.instantiatedSingletons_ = [];\n\n\n/**\n * @define {boolean} Whether to load goog.modules using `eval` when using\n * the debug loader.  This provides a better debugging experience as the\n * source is unmodified and can be edited using Chrome Workspaces or similar.\n * However in some environments the use of `eval` is banned\n * so we provide an alternative.\n */\ngoog.define('goog.LOAD_MODULE_USING_EVAL', true);\n\n\n/**\n * @define {boolean} Whether the exports of goog.modules should be sealed when\n * possible.\n */\ngoog.define('goog.SEAL_MODULE_EXPORTS', goog.DEBUG);\n\n\n/**\n * The registry of initialized modules:\n * The module identifier or path to module exports map.\n * @private @const {!Object<string, {exports:?,type:string,moduleId:string}>}\n */\ngoog.loadedModules_ = {};\n\n\n/**\n * True if the debug loader enabled and used.\n * @const {boolean}\n */\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\n\n\n/**\n * @define {string} How to decide whether to transpile.  Valid values\n * are 'always', 'never', and 'detect'.  The default ('detect') is to\n * use feature detection to determine which language levels need\n * transpilation.\n */\n// NOTE(user): we could expand this to accept a language level to bypass\n// detection: e.g. goog.TRANSPILE == 'es5' would transpile ES6 files but\n// would leave ES3 and ES5 files alone.\ngoog.define('goog.TRANSPILE', 'detect');\n\n\n/**\n * @define {string} Path to the transpiler.  Executing the script at this\n * path (relative to base.js) should define a function $jscomp.transpile.\n */\ngoog.define('goog.TRANSPILER', 'transpile.js');\n\n\n/**\n * @package {?boolean}\n * Visible for testing.\n */\ngoog.hasBadLetScoping = null;\n\n\n/**\n * @return {boolean}\n * @package Visible for testing.\n */\ngoog.useSafari10Workaround = function() {\n  if (goog.hasBadLetScoping == null) {\n    var hasBadLetScoping;\n    try {\n      hasBadLetScoping = !eval(\n          '\"use strict\";' +\n          'let x = 1; function f() { return typeof x; };' +\n          'f() == \"number\";');\n    } catch (e) {\n      // Assume that ES6 syntax isn't supported.\n      hasBadLetScoping = false;\n    }\n    goog.hasBadLetScoping = hasBadLetScoping;\n  }\n  return goog.hasBadLetScoping;\n};\n\n\n/**\n * @param {string} moduleDef\n * @return {string}\n * @package Visible for testing.\n */\ngoog.workaroundSafari10EvalBug = function(moduleDef) {\n  return '(function(){' + moduleDef +\n      '\\n' +  // Terminate any trailing single line comment.\n      ';' +   // Terminate any trailing expression.\n      '})();\\n';\n};\n\n\n/**\n * @param {function(?):?|string} moduleDef The module definition.\n * @param {string=} opt_path Path of this module. Required to goog.require ES6\n *     modules by path.\n */\ngoog.loadModule = function(moduleDef, opt_path) {\n  // NOTE: we allow function definitions to be either in the from\n  // of a string to eval (which keeps the original source intact) or\n  // in a eval forbidden environment (CSP) we allow a function definition\n  // which in its body must call `goog.module`, and return the exports\n  // of the module.\n  var previousState = goog.moduleLoaderState_;\n  try {\n    goog.moduleLoaderState_ = {\n      moduleName: '',\n      declareLegacyNamespace: false,\n      type: goog.ModuleType.GOOG,\n      path: opt_path\n    };\n    var exports;\n    if (goog.isFunction(moduleDef)) {\n      exports = moduleDef.call(undefined, {});\n    } else if (goog.isString(moduleDef)) {\n      if (goog.useSafari10Workaround()) {\n        moduleDef = goog.workaroundSafari10EvalBug(moduleDef);\n      }\n\n      exports = goog.loadModuleFromSource_.call(undefined, moduleDef);\n    } else {\n      throw new Error('Invalid module definition');\n    }\n\n    var moduleName = goog.moduleLoaderState_.moduleName;\n    if (goog.isString(moduleName) && moduleName) {\n      // Don't seal legacy namespaces as they may be used as a parent of\n      // another namespace\n      if (goog.moduleLoaderState_.declareLegacyNamespace) {\n        goog.constructNamespace_(moduleName, exports);\n      } else if (\n          goog.SEAL_MODULE_EXPORTS && Object.seal &&\n          typeof exports == 'object' && exports != null) {\n        Object.seal(exports);\n      }\n\n      var data = {\n        exports: exports,\n        type: goog.ModuleType.GOOG,\n        moduleId: goog.moduleLoaderState_.moduleName\n      };\n      goog.loadedModules_[moduleName] = data;\n      opt_path && (goog.loadedModules_[opt_path] = data);\n    } else {\n      throw new Error('Invalid module name \\\"' + moduleName + '\\\"');\n    }\n  } finally {\n    goog.moduleLoaderState_ = previousState;\n  }\n};\n\n\n/**\n * @private @const\n */\ngoog.loadModuleFromSource_ = /** @type {function(string):?} */ (function() {\n  // NOTE: we avoid declaring parameters or local variables here to avoid\n  // masking globals or leaking values into the module definition.\n  'use strict';\n  var exports = {};\n  eval(arguments[0]);\n  return exports;\n});\n\n\n/**\n * Normalize a file path by removing redundant \"..\" and extraneous \".\" file\n * path components.\n * @param {string} path\n * @return {string}\n * @private\n */\ngoog.normalizePath_ = function(path) {\n  var components = path.split('/');\n  var i = 0;\n  while (i < components.length) {\n    if (components[i] == '.') {\n      components.splice(i, 1);\n    } else if (\n        i && components[i] == '..' && components[i - 1] &&\n        components[i - 1] != '..') {\n      components.splice(--i, 2);\n    } else {\n      i++;\n    }\n  }\n  return components.join('/');\n};\n\n\n/**\n * Provides a hook for loading a file when using Closure's goog.require() API\n * with goog.modules.  In particular this hook is provided to support Node.js.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_LOAD_FILE_SYNC;\n\n\n/**\n * Loads file by synchronous XHR. Should not be used in production environments.\n * @param {string} src Source URL.\n * @return {?string} File contents, or null if load failed.\n * @private\n */\ngoog.loadFileSync_ = function(src) {\n  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {\n    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);\n  } else {\n    try {\n      /** @type {XMLHttpRequest} */\n      var xhr = new goog.global['XMLHttpRequest']();\n      xhr.open('get', src, false);\n      xhr.send();\n      // NOTE: Successful http: requests have a status of 200, but successful\n      // file: requests may have a status of zero.  Any other status, or a\n      // thrown exception (particularly in case of file: requests) indicates\n      // some sort of error, which we treat as a missing or unavailable file.\n      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;\n    } catch (err) {\n      // No need to rethrow or log, since errors should show up on their own.\n      return null;\n    }\n  }\n};\n\n\n/**\n * Lazily retrieves the transpiler and applies it to the source.\n * @param {string} code JS code.\n * @param {string} path Path to the code.\n * @return {string} The transpiled code.\n * @private\n */\ngoog.transpile_ = function(code, path) {\n  var jscomp = goog.global['$jscomp'];\n  if (!jscomp) {\n    goog.global['$jscomp'] = jscomp = {};\n  }\n  var transpile = jscomp.transpile;\n  if (!transpile) {\n    var transpilerPath = goog.basePath + goog.TRANSPILER;\n    var transpilerCode = goog.loadFileSync_(transpilerPath);\n    if (transpilerCode) {\n      // This must be executed synchronously, since by the time we know we\n      // need it, we're about to load and write the ES6 code synchronously,\n      // so a normal script-tag load will be too slow. Wrapped in a function\n      // so that code is eval'd in the global scope.\n      (function() {\n        eval(transpilerCode + '\\n//# sourceURL=' + transpilerPath);\n      }).call(goog.global);\n      // Even though the transpiler is optional, if $gwtExport is found, it's\n      // a sign the transpiler was loaded and the $jscomp.transpile *should*\n      // be there.\n      if (goog.global['$gwtExport'] && goog.global['$gwtExport']['$jscomp'] &&\n          !goog.global['$gwtExport']['$jscomp']['transpile']) {\n        throw new Error(\n            'The transpiler did not properly export the \"transpile\" ' +\n            'method. $gwtExport: ' + JSON.stringify(goog.global['$gwtExport']));\n      }\n      // transpile.js only exports a single $jscomp function, transpile. We\n      // grab just that and add it to the existing definition of $jscomp which\n      // contains the polyfills.\n      goog.global['$jscomp'].transpile =\n          goog.global['$gwtExport']['$jscomp']['transpile'];\n      jscomp = goog.global['$jscomp'];\n      transpile = jscomp.transpile;\n    }\n  }\n  if (!transpile) {\n    // The transpiler is an optional component.  If it's not available then\n    // replace it with a pass-through function that simply logs.\n    var suffix = ' requires transpilation but no transpiler was found.';\n    transpile = jscomp.transpile = function(code, path) {\n      // TODO(user): figure out some way to get this error to show up\n      // in test results, noting that the failure may occur in many\n      // different ways, including in loadModule() before the test\n      // runner even comes up.\n      goog.logToConsole_(path + suffix);\n      return code;\n    };\n  }\n  // Note: any transpilation errors/warnings will be logged to the console.\n  return transpile(code, path);\n};\n\n//==============================================================================\n// Language Enhancements\n//==============================================================================\n\n\n/**\n * This is a \"fixed\" version of the typeof operator.  It differs from the typeof\n * operator in such a way that null returns 'null' and arrays return 'array'.\n * @param {?} value The value to get the type of.\n * @return {string} The name of the type.\n */\ngoog.typeOf = function(value) {\n  var s = typeof value;\n  if (s == 'object') {\n    if (value) {\n      // Check these first, so we can avoid calling Object.prototype.toString if\n      // possible.\n      //\n      // IE improperly marshals typeof across execution contexts, but a\n      // cross-context object will still return false for \"instanceof Object\".\n      if (value instanceof Array) {\n        return 'array';\n      } else if (value instanceof Object) {\n        return s;\n      }\n\n      // HACK: In order to use an Object prototype method on the arbitrary\n      //   value, the compiler requires the value be cast to type Object,\n      //   even though the ECMA spec explicitly allows it.\n      var className = Object.prototype.toString.call(\n          /** @type {!Object} */ (value));\n      // In Firefox 3.6, attempting to access iframe window objects' length\n      // property throws an NS_ERROR_FAILURE, so we need to special-case it\n      // here.\n      if (className == '[object Window]') {\n        return 'object';\n      }\n\n      // We cannot always use constructor == Array or instanceof Array because\n      // different frames have different Array objects. In IE6, if the iframe\n      // where the array was created is destroyed, the array loses its\n      // prototype. Then dereferencing val.splice here throws an exception, so\n      // we can't use goog.isFunction. Calling typeof directly returns 'unknown'\n      // so that will work. In this case, this function will return false and\n      // most array functions will still work because the array is still\n      // array-like (supports length and []) even though it has lost its\n      // prototype.\n      // Mark Miller noticed that Object.prototype.toString\n      // allows access to the unforgeable [[Class]] property.\n      //  15.2.4.2 Object.prototype.toString ( )\n      //  When the toString method is called, the following steps are taken:\n      //      1. Get the [[Class]] property of this object.\n      //      2. Compute a string value by concatenating the three strings\n      //         \"[object \", Result(1), and \"]\".\n      //      3. Return Result(2).\n      // and this behavior survives the destruction of the execution context.\n      if ((className == '[object Array]' ||\n           // In IE all non value types are wrapped as objects across window\n           // boundaries (not iframe though) so we have to do object detection\n           // for this edge case.\n           typeof value.length == 'number' &&\n               typeof value.splice != 'undefined' &&\n               typeof value.propertyIsEnumerable != 'undefined' &&\n               !value.propertyIsEnumerable('splice')\n\n               )) {\n        return 'array';\n      }\n      // HACK: There is still an array case that fails.\n      //     function ArrayImpostor() {}\n      //     ArrayImpostor.prototype = [];\n      //     var impostor = new ArrayImpostor;\n      // this can be fixed by getting rid of the fast path\n      // (value instanceof Array) and solely relying on\n      // (value && Object.prototype.toString.vall(value) === '[object Array]')\n      // but that would require many more function calls and is not warranted\n      // unless closure code is receiving objects from untrusted sources.\n\n      // IE in cross-window calls does not correctly marshal the function type\n      // (it appears just as an object) so we cannot use just typeof val ==\n      // 'function'. However, if the object has a call property, it is a\n      // function.\n      if ((className == '[object Function]' ||\n           typeof value.call != 'undefined' &&\n               typeof value.propertyIsEnumerable != 'undefined' &&\n               !value.propertyIsEnumerable('call'))) {\n        return 'function';\n      }\n\n    } else {\n      return 'null';\n    }\n\n  } else if (s == 'function' && typeof value.call == 'undefined') {\n    // In Safari typeof nodeList returns 'function', and on Firefox typeof\n    // behaves similarly for HTML{Applet,Embed,Object}, Elements and RegExps. We\n    // would like to return object for those and we can detect an invalid\n    // function by making sure that the function object has a call method.\n    return 'object';\n  }\n  return s;\n};\n\n\n/**\n * Returns true if the specified value is null.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is null.\n */\ngoog.isNull = function(val) {\n  return val === null;\n};\n\n\n/**\n * Returns true if the specified value is defined and not null.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined and not null.\n */\ngoog.isDefAndNotNull = function(val) {\n  // Note that undefined == null.\n  return val != null;\n};\n\n\n/**\n * Returns true if the specified value is an array.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArray = function(val) {\n  return goog.typeOf(val) == 'array';\n};\n\n\n/**\n * Returns true if the object looks like an array. To qualify as array like\n * the value needs to be either a NodeList or an object with a Number length\n * property. Note that for this function neither strings nor functions are\n * considered \"array-like\".\n *\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArrayLike = function(val) {\n  var type = goog.typeOf(val);\n  // We do not use goog.isObject here in order to exclude function values.\n  return type == 'array' || type == 'object' && typeof val.length == 'number';\n};\n\n\n/**\n * Returns true if the object looks like a Date. To qualify as Date-like the\n * value needs to be an object and have a getFullYear() function.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a like a Date.\n */\ngoog.isDateLike = function(val) {\n  return goog.isObject(val) && typeof val.getFullYear == 'function';\n};\n\n\n/**\n * Returns true if the specified value is a function.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a function.\n */\ngoog.isFunction = function(val) {\n  return goog.typeOf(val) == 'function';\n};\n\n\n/**\n * Returns true if the specified value is an object.  This includes arrays and\n * functions.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an object.\n */\ngoog.isObject = function(val) {\n  var type = typeof val;\n  return type == 'object' && val != null || type == 'function';\n  // return Object(val) === val also works, but is slower, especially if val is\n  // not an object.\n};\n\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. The unique ID is\n * guaranteed to be unique across the current session amongst objects that are\n * passed into `getUid`. There is no guarantee that the ID is unique or\n * consistent across sessions. It is unsafe to generate unique ID for function\n * prototypes.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\ngoog.getUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In Opera window.hasOwnProperty exists but always returns false so we avoid\n  // using it. As a consequence the unique ID generated for BaseClass.prototype\n  // and SubClass.prototype will be the same.\n  return obj[goog.UID_PROPERTY_] ||\n      (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\n\n\n/**\n * Whether the given object is already assigned a unique ID.\n *\n * This does not modify the object.\n *\n * @param {!Object} obj The object to check.\n * @return {boolean} Whether there is an assigned unique id for the object.\n */\ngoog.hasUid = function(obj) {\n  return !!obj[goog.UID_PROPERTY_];\n};\n\n\n/**\n * Removes the unique ID from an object. This is useful if the object was\n * previously mutated using `goog.getUid` in which case the mutation is\n * undone.\n * @param {Object} obj The object to remove the unique ID field from.\n */\ngoog.removeUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In IE, DOM nodes are not instances of Object and throw an exception if we\n  // try to delete.  Instead we try to use removeAttribute.\n  if (obj !== null && 'removeAttribute' in obj) {\n    obj.removeAttribute(goog.UID_PROPERTY_);\n  }\n\n  try {\n    delete obj[goog.UID_PROPERTY_];\n  } catch (ex) {\n  }\n};\n\n\n/**\n * Name for unique ID property. Initialized in a way to help avoid collisions\n * with other closure JavaScript on the same page.\n * @type {string}\n * @private\n */\ngoog.UID_PROPERTY_ = 'closure_uid_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * Counter for UID.\n * @type {number}\n * @private\n */\ngoog.uidCounter_ = 0;\n\n\n/**\n * Adds a hash code field to an object. The hash code is unique for the\n * given object.\n * @param {Object} obj The object to get the hash code for.\n * @return {number} The hash code for the object.\n * @deprecated Use goog.getUid instead.\n */\ngoog.getHashCode = goog.getUid;\n\n\n/**\n * Removes the hash code field from an object.\n * @param {Object} obj The object to remove the field from.\n * @deprecated Use goog.removeUid instead.\n */\ngoog.removeHashCode = goog.removeUid;\n\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n *\n * WARNINGS:\n * <code>goog.cloneObject</code> does not detect reference loops. Objects that\n * refer to themselves will cause infinite recursion.\n *\n * <code>goog.cloneObject</code> is unaware of unique identifiers, and copies\n * UIDs created by <code>getUid</code> into cloned results.\n *\n * @param {*} obj The value to clone.\n * @return {*} A clone of the input value.\n * @deprecated goog.cloneObject is unsafe. Prefer the goog.object methods.\n */\ngoog.cloneObject = function(obj) {\n  var type = goog.typeOf(obj);\n  if (type == 'object' || type == 'array') {\n    if (typeof obj.clone === 'function') {\n      return obj.clone();\n    }\n    var clone = type == 'array' ? [] : {};\n    for (var key in obj) {\n      clone[key] = goog.cloneObject(obj[key]);\n    }\n    return clone;\n  }\n\n  return obj;\n};\n\n\n/**\n * A native implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindNative_ = function(fn, selfObj, var_args) {\n  return /** @type {!Function} */ (fn.call.apply(fn.bind, arguments));\n};\n\n\n/**\n * A pure-JS implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindJs_ = function(fn, selfObj, var_args) {\n  if (!fn) {\n    throw new Error();\n  }\n\n  if (arguments.length > 2) {\n    var boundArgs = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      // Prepend the bound arguments to the current arguments.\n      var newArgs = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(newArgs, boundArgs);\n      return fn.apply(selfObj, newArgs);\n    };\n\n  } else {\n    return function() {\n      return fn.apply(selfObj, arguments);\n    };\n  }\n};\n\n\n/**\n * Partially applies this function to a particular 'this object' and zero or\n * more arguments. The result is a new function with some arguments of the first\n * function pre-filled and the value of this 'pre-specified'.\n *\n * Remaining arguments specified at call-time are appended to the pre-specified\n * ones.\n *\n * Also see: {@link #partial}.\n *\n * Usage:\n * <pre>var barMethBound = goog.bind(myFunction, myObj, 'arg1', 'arg2');\n * barMethBound('arg3', 'arg4');</pre>\n *\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @suppress {deprecated} See above.\n */\ngoog.bind = function(fn, selfObj, var_args) {\n  // TODO(nicksantos): narrow the type signature.\n  if (Function.prototype.bind &&\n      // NOTE(nicksantos): Somebody pulled base.js into the default Chrome\n      // extension environment. This means that for Chrome extensions, they get\n      // the implementation of Function.prototype.bind that calls goog.bind\n      // instead of the native one. Even worse, we don't want to introduce a\n      // circular dependency between goog.bind and Function.prototype.bind, so\n      // we have to hack this to make sure it works correctly.\n      Function.prototype.bind.toString().indexOf('native code') != -1) {\n    goog.bind = goog.bindNative_;\n  } else {\n    goog.bind = goog.bindJs_;\n  }\n  return goog.bind.apply(null, arguments);\n};\n\n\n/**\n * Like goog.bind(), except that a 'this object' is not required. Useful when\n * the target function is already bound.\n *\n * Usage:\n * var g = goog.partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn.\n * @return {!Function} A partially-applied form of the function goog.partial()\n *     was invoked as a method of.\n */\ngoog.partial = function(fn, var_args) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Clone the array (with slice()) and append additional arguments\n    // to the existing arguments.\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(this, newArgs);\n  };\n};\n\n\n/**\n * Copies all the members of a source object to a target object. This method\n * does not work on all browsers for all objects that contain keys such as\n * toString or hasOwnProperty. Use goog.object.extend for this purpose.\n * @param {Object} target Target.\n * @param {Object} source Source.\n */\ngoog.mixin = function(target, source) {\n  for (var x in source) {\n    target[x] = source[x];\n  }\n\n  // For IE7 or lower, the for-in-loop does not contain any properties that are\n  // not enumerable on the prototype object (for example, isPrototypeOf from\n  // Object.prototype) but also it will not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n};\n\n\n/**\n * @return {number} An integer value representing the number of milliseconds\n *     between midnight, January 1, 1970 and the current time.\n */\ngoog.now = (goog.TRUSTED_SITE && Date.now) || (function() {\n             // Unary plus operator converts its operand to a number which in\n             // the case of\n             // a date is done by calling getTime().\n             return +new Date();\n           });\n\n\n/**\n * Evals JavaScript in the global scope.  In IE this uses execScript, other\n * browsers use goog.global.eval. If goog.global.eval does not evaluate in the\n * global scope (for example, in Safari), appends a script tag instead.\n * Throws an exception if neither execScript or eval is defined.\n * @param {string} script JavaScript string.\n */\ngoog.globalEval = function(script) {\n  if (goog.global.execScript) {\n    goog.global.execScript(script, 'JavaScript');\n  } else if (goog.global.eval) {\n    // Test to see if eval works\n    if (goog.evalWorksForGlobals_ == null) {\n      try {\n        goog.global.eval('var _evalTest_ = 1;');\n      } catch (ignore) {\n      }\n      if (typeof goog.global['_evalTest_'] != 'undefined') {\n        try {\n          delete goog.global['_evalTest_'];\n        } catch (ignore) {\n          // Microsoft edge fails the deletion above in strict mode.\n        }\n        goog.evalWorksForGlobals_ = true;\n      } else {\n        goog.evalWorksForGlobals_ = false;\n      }\n    }\n\n    if (goog.evalWorksForGlobals_) {\n      goog.global.eval(script);\n    } else {\n      /** @type {!Document} */\n      var doc = goog.global.document;\n      var scriptElt =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('SCRIPT'));\n      scriptElt.type = 'text/javascript';\n      scriptElt.defer = false;\n      // Note(user): can't use .innerHTML since \"t('<test>')\" will fail and\n      // .text doesn't work in Safari 2.  Therefore we append a text node.\n      scriptElt.appendChild(doc.createTextNode(script));\n      doc.head.appendChild(scriptElt);\n      doc.head.removeChild(scriptElt);\n    }\n  } else {\n    throw new Error('goog.globalEval not available');\n  }\n};\n\n\n/**\n * Indicates whether or not we can call 'eval' directly to eval code in the\n * global scope. Set to a Boolean by the first call to goog.globalEval (which\n * empirically tests whether eval works for globals). @see goog.globalEval\n * @type {?boolean}\n * @private\n */\ngoog.evalWorksForGlobals_ = null;\n\n\n/**\n * Optional map of CSS class names to obfuscated names used with\n * goog.getCssName().\n * @private {!Object<string, string>|undefined}\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMapping_;\n\n\n/**\n * Optional obfuscation style for CSS class names. Should be set to either\n * 'BY_WHOLE' or 'BY_PART' if defined.\n * @type {string|undefined}\n * @private\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMappingStyle_;\n\n\n\n/**\n * A hook for modifying the default behavior goog.getCssName. The function\n * if present, will receive the standard output of the goog.getCssName as\n * its input.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAP_FN;\n\n\n/**\n * Handles strings that are intended to be used as CSS class names.\n *\n * This function works in tandem with @see goog.setCssNameMapping.\n *\n * Without any mapping set, the arguments are simple joined with a hyphen and\n * passed through unaltered.\n *\n * When there is a mapping, there are two possible styles in which these\n * mappings are used. In the BY_PART style, each part (i.e. in between hyphens)\n * of the passed in css name is rewritten according to the map. In the BY_WHOLE\n * style, the full css name is looked up in the map directly. If a rewrite is\n * not specified by the map, the compiler will output a warning.\n *\n * When the mapping is passed to the compiler, it will replace calls to\n * goog.getCssName with the strings from the mapping, e.g.\n *     var x = goog.getCssName('foo');\n *     var y = goog.getCssName(this.baseClass, 'active');\n *  becomes:\n *     var x = 'foo';\n *     var y = this.baseClass + '-active';\n *\n * If one argument is passed it will be processed, if two are passed only the\n * modifier will be processed, as it is assumed the first argument was generated\n * as a result of calling goog.getCssName.\n *\n * @param {string} className The class name.\n * @param {string=} opt_modifier A modifier to be appended to the class name.\n * @return {string} The class name or the concatenation of the class name and\n *     the modifier.\n */\ngoog.getCssName = function(className, opt_modifier) {\n  // String() is used for compatibility with compiled soy where the passed\n  // className can be non-string objects.\n  if (String(className).charAt(0) == '.') {\n    throw new Error(\n        'className passed in goog.getCssName must not start with \".\".' +\n        ' You passed: ' + className);\n  }\n\n  var getMapping = function(cssName) {\n    return goog.cssNameMapping_[cssName] || cssName;\n  };\n\n  var renameByParts = function(cssName) {\n    // Remap all the parts individually.\n    var parts = cssName.split('-');\n    var mapped = [];\n    for (var i = 0; i < parts.length; i++) {\n      mapped.push(getMapping(parts[i]));\n    }\n    return mapped.join('-');\n  };\n\n  var rename;\n  if (goog.cssNameMapping_) {\n    rename =\n        goog.cssNameMappingStyle_ == 'BY_WHOLE' ? getMapping : renameByParts;\n  } else {\n    rename = function(a) {\n      return a;\n    };\n  }\n\n  var result =\n      opt_modifier ? className + '-' + rename(opt_modifier) : rename(className);\n\n  // The special CLOSURE_CSS_NAME_MAP_FN allows users to specify further\n  // processing of the class name.\n  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {\n    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);\n  }\n\n  return result;\n};\n\n\n/**\n * Sets the map to check when returning a value from goog.getCssName(). Example:\n * <pre>\n * goog.setCssNameMapping({\n *   \"goog\": \"a\",\n *   \"disabled\": \"b\",\n * });\n *\n * var x = goog.getCssName('goog');\n * // The following evaluates to: \"a a-b\".\n * goog.getCssName('goog') + ' ' + goog.getCssName(x, 'disabled')\n * </pre>\n * When declared as a map of string literals to string literals, the JSCompiler\n * will replace all calls to goog.getCssName() using the supplied map if the\n * --process_closure_primitives flag is set.\n *\n * @param {!Object} mapping A map of strings to strings where keys are possible\n *     arguments to goog.getCssName() and values are the corresponding values\n *     that should be returned.\n * @param {string=} opt_style The style of css name mapping. There are two valid\n *     options: 'BY_PART', and 'BY_WHOLE'.\n * @see goog.getCssName for a description.\n */\ngoog.setCssNameMapping = function(mapping, opt_style) {\n  goog.cssNameMapping_ = mapping;\n  goog.cssNameMappingStyle_ = opt_style;\n};\n\n\n/**\n * To use CSS renaming in compiled mode, one of the input files should have a\n * call to goog.setCssNameMapping() with an object literal that the JSCompiler\n * can extract and use to replace all calls to goog.getCssName(). In uncompiled\n * mode, JavaScript code should be loaded before this base.js file that declares\n * a global variable, CLOSURE_CSS_NAME_MAPPING, which is used below. This is\n * to ensure that the mapping is loaded before any calls to goog.getCssName()\n * are made in uncompiled mode.\n *\n * A hook for overriding the CSS name mapping.\n * @type {!Object<string, string>|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAPPING;\n\n\nif (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {\n  // This does not call goog.setCssNameMapping() because the JSCompiler\n  // requires that goog.setCssNameMapping() be called with an object literal.\n  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;\n}\n\n\n/**\n * Gets a localized message.\n *\n * This function is a compiler primitive. If you give the compiler a localized\n * message bundle, it will replace the string at compile-time with a localized\n * version, and expand goog.getMsg call to a concatenated string.\n *\n * Messages must be initialized in the form:\n * <code>\n * var MSG_NAME = goog.getMsg('Hello {$placeholder}', {'placeholder': 'world'});\n * </code>\n *\n * This function produces a string which should be treated as plain text. Use\n * {@link goog.html.SafeHtmlFormatter} in conjunction with goog.getMsg to\n * produce SafeHtml.\n *\n * @param {string} str Translatable string, places holders in the form {$foo}.\n * @param {Object<string, string>=} opt_values Maps place holder name to value.\n * @return {string} message with placeholders filled.\n */\ngoog.getMsg = function(str, opt_values) {\n  if (opt_values) {\n    str = str.replace(/\\{\\$([^}]+)}/g, function(match, key) {\n      return (opt_values != null && key in opt_values) ? opt_values[key] :\n                                                         match;\n    });\n  }\n  return str;\n};\n\n\n/**\n * Gets a localized message. If the message does not have a translation, gives a\n * fallback message.\n *\n * This is useful when introducing a new message that has not yet been\n * translated into all languages.\n *\n * This function is a compiler primitive. Must be used in the form:\n * <code>var x = goog.getMsgWithFallback(MSG_A, MSG_B);</code>\n * where MSG_A and MSG_B were initialized with goog.getMsg.\n *\n * @param {string} a The preferred message.\n * @param {string} b The fallback message.\n * @return {string} The best translated message.\n */\ngoog.getMsgWithFallback = function(a, b) {\n  return a;\n};\n\n\n/**\n * Exposes an unobfuscated global namespace path for the given object.\n * Note that fields of the exported object *will* be obfuscated, unless they are\n * exported in turn via this function or goog.exportProperty.\n *\n * Also handy for making public items that are defined in anonymous closures.\n *\n * ex. goog.exportSymbol('public.path.Foo', Foo);\n *\n * ex. goog.exportSymbol('public.path.Foo.staticFunction', Foo.staticFunction);\n *     public.path.Foo.staticFunction();\n *\n * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',\n *                       Foo.prototype.myMethod);\n *     new public.path.Foo().myMethod();\n *\n * @param {string} publicPath Unobfuscated name to export.\n * @param {*} object Object the name should point to.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is goog.global.\n */\ngoog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {\n  goog.exportPath_(publicPath, object, opt_objectToExportTo);\n};\n\n\n/**\n * Exports a property unobfuscated into the object's namespace.\n * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);\n * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);\n * @param {Object} object Object whose static property is being exported.\n * @param {string} publicName Unobfuscated name to export.\n * @param {*} symbol Object the name should point to.\n */\ngoog.exportProperty = function(object, publicName, symbol) {\n  object[publicName] = symbol;\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n * <pre>\n * function ParentClass(a, b) { }\n * ParentClass.prototype.foo = function(a) { };\n *\n * function ChildClass(a, b, c) {\n *   ChildClass.base(this, 'constructor', a, b);\n * }\n * goog.inherits(ChildClass, ParentClass);\n *\n * var child = new ChildClass('a', 'b', 'see');\n * child.foo(); // This works.\n * </pre>\n *\n * @param {!Function} childCtor Child class.\n * @param {!Function} parentCtor Parent class.\n * @suppress {strictMissingProperties} superClass_ and base is not defined on\n *    Function.\n */\ngoog.inherits = function(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {}\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.superClass_ = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  /** @override */\n  childCtor.prototype.constructor = childCtor;\n\n  /**\n   * Calls superclass constructor/method.\n   *\n   * This function is only available if you use goog.inherits to\n   * express inheritance relationships between classes.\n   *\n   * NOTE: This is a replacement for goog.base and for superClass_\n   * property defined in childCtor.\n   *\n   * @param {!Object} me Should always be \"this\".\n   * @param {string} methodName The method name to call. Calling\n   *     superclass constructor can be done with the special string\n   *     'constructor'.\n   * @param {...*} var_args The arguments to pass to superclass\n   *     method/constructor.\n   * @return {*} The return value of the superclass method/constructor.\n   */\n  childCtor.base = function(me, methodName, var_args) {\n    // Copying using loop to avoid deop due to passing arguments object to\n    // function. This is faster in many JS engines as of late 2014.\n    var args = new Array(arguments.length - 2);\n    for (var i = 2; i < arguments.length; i++) {\n      args[i - 2] = arguments[i];\n    }\n    return parentCtor.prototype[methodName].apply(me, args);\n  };\n};\n\n\n/**\n * Call up to the superclass.\n *\n * If this is called from a constructor, then this calls the superclass\n * constructor with arguments 1-N.\n *\n * If this is called from a prototype method, then you must pass the name of the\n * method as the second argument to this function. If you do not, you will get a\n * runtime error. This calls the superclass' method with arguments 2-N.\n *\n * This function only works if you use goog.inherits to express inheritance\n * relationships between your classes.\n *\n * This function is a compiler primitive. At compile-time, the compiler will do\n * macro expansion to remove a lot of the extra overhead that this function\n * introduces. The compiler will also enforce a lot of the assumptions that this\n * function makes, and treat it as a compiler error if you break them.\n *\n * @param {!Object} me Should always be \"this\".\n * @param {*=} opt_methodName The method name if calling a super method.\n * @param {...*} var_args The rest of the arguments.\n * @return {*} The return value of the superclass method.\n * @suppress {es5Strict} This method can not be used in strict mode, but\n *     all Closure Library consumers must depend on this file.\n * @deprecated goog.base is not strict mode compatible.  Prefer the static\n *     \"base\" method added to the constructor by goog.inherits\n *     or ES6 classes and the \"super\" keyword.\n */\ngoog.base = function(me, opt_methodName, var_args) {\n  var caller = arguments.callee.caller;\n\n  if (goog.STRICT_MODE_COMPATIBLE || (goog.DEBUG && !caller)) {\n    throw new Error(\n        'arguments.caller not defined.  goog.base() cannot be used ' +\n        'with strict mode code. See ' +\n        'http://www.ecma-international.org/ecma-262/5.1/#sec-C');\n  }\n\n  if (typeof caller.superClass_ !== 'undefined') {\n    // Copying using loop to avoid deop due to passing arguments object to\n    // function. This is faster in many JS engines as of late 2014.\n    var ctorArgs = new Array(arguments.length - 1);\n    for (var i = 1; i < arguments.length; i++) {\n      ctorArgs[i - 1] = arguments[i];\n    }\n    // This is a constructor. Call the superclass constructor.\n    return caller.superClass_.constructor.apply(me, ctorArgs);\n  }\n\n  if (typeof opt_methodName != 'string' && typeof opt_methodName != 'symbol') {\n    throw new Error(\n        'method names provided to goog.base must be a string or a symbol');\n  }\n\n  // Copying using loop to avoid deop due to passing arguments object to\n  // function. This is faster in many JS engines as of late 2014.\n  var args = new Array(arguments.length - 2);\n  for (var i = 2; i < arguments.length; i++) {\n    args[i - 2] = arguments[i];\n  }\n  var foundCaller = false;\n  for (var ctor = me.constructor; ctor;\n       ctor = ctor.superClass_ && ctor.superClass_.constructor) {\n    if (ctor.prototype[opt_methodName] === caller) {\n      foundCaller = true;\n    } else if (foundCaller) {\n      return ctor.prototype[opt_methodName].apply(me, args);\n    }\n  }\n\n  // If we did not find the caller in the prototype chain, then one of two\n  // things happened:\n  // 1) The caller is an instance method.\n  // 2) This method was not called by the right caller.\n  if (me[opt_methodName] === caller) {\n    return me.constructor.prototype[opt_methodName].apply(me, args);\n  } else {\n    throw new Error(\n        'goog.base called from a method of one name ' +\n        'to a method of a different name');\n  }\n};\n\n\n/**\n * Allow for aliasing within scope functions.  This function exists for\n * uncompiled code - in compiled code the calls will be inlined and the aliases\n * applied.  In uncompiled code the function is simply run since the aliases as\n * written are valid JavaScript.\n *\n *\n * @param {function()} fn Function to call.  This function can contain aliases\n *     to namespaces (e.g. \"var dom = goog.dom\") or classes\n *     (e.g. \"var Timer = goog.Timer\").\n */\ngoog.scope = function(fn) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.scope is not supported within a module.');\n  }\n  fn.call(goog.global);\n};\n\n\n/*\n * To support uncompiled, strict mode bundles that use eval to divide source\n * like so:\n *    eval('someSource;//# sourceUrl sourcefile.js');\n * We need to export the globally defined symbols \"goog\" and \"COMPILED\".\n * Exporting \"goog\" breaks the compiler optimizations, so we required that\n * be defined externally.\n * NOTE: We don't use goog.exportSymbol here because we don't want to trigger\n * extern generation when that compiler option is enabled.\n */\nif (!COMPILED) {\n  goog.global['COMPILED'] = COMPILED;\n}\n\n\n//==============================================================================\n// goog.defineClass implementation\n//==============================================================================\n\n\n/**\n * Creates a restricted form of a Closure \"class\":\n *   - from the compiler's perspective, the instance returned from the\n *     constructor is sealed (no new properties may be added).  This enables\n *     better checks.\n *   - the compiler will rewrite this definition to a form that is optimal\n *     for type checking and optimization (initially this will be a more\n *     traditional form).\n *\n * @param {Function} superClass The superclass, Object or null.\n * @param {goog.defineClass.ClassDescriptor} def\n *     An object literal describing\n *     the class.  It may have the following properties:\n *     \"constructor\": the constructor function\n *     \"statics\": an object literal containing methods to add to the constructor\n *        as \"static\" methods or a function that will receive the constructor\n *        function as its only parameter to which static properties can\n *        be added.\n *     all other properties are added to the prototype.\n * @return {!Function} The class constructor.\n */\ngoog.defineClass = function(superClass, def) {\n  // TODO(johnlenz): consider making the superClass an optional parameter.\n  var constructor = def.constructor;\n  var statics = def.statics;\n  // Wrap the constructor prior to setting up the prototype and static methods.\n  if (!constructor || constructor == Object.prototype.constructor) {\n    constructor = function() {\n      throw new Error(\n          'cannot instantiate an interface (no constructor defined).');\n    };\n  }\n\n  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);\n  if (superClass) {\n    goog.inherits(cls, superClass);\n  }\n\n  // Remove all the properties that should not be copied to the prototype.\n  delete def.constructor;\n  delete def.statics;\n\n  goog.defineClass.applyProperties_(cls.prototype, def);\n  if (statics != null) {\n    if (statics instanceof Function) {\n      statics(cls);\n    } else {\n      goog.defineClass.applyProperties_(cls, statics);\n    }\n  }\n\n  return cls;\n};\n\n\n/**\n * @typedef {{\n *   constructor: (!Function|undefined),\n *   statics: (Object|undefined|function(Function):void)\n * }}\n */\ngoog.defineClass.ClassDescriptor;\n\n\n/**\n * @define {boolean} Whether the instances returned by goog.defineClass should\n *     be sealed when possible.\n *\n * When sealing is disabled the constructor function will not be wrapped by\n * goog.defineClass, making it incompatible with ES6 class methods.\n */\ngoog.define('goog.defineClass.SEAL_CLASS_INSTANCES', goog.DEBUG);\n\n\n/**\n * If goog.defineClass.SEAL_CLASS_INSTANCES is enabled and Object.seal is\n * defined, this function will wrap the constructor in a function that seals the\n * results of the provided constructor function.\n *\n * @param {!Function} ctr The constructor whose results maybe be sealed.\n * @param {Function} superClass The superclass constructor.\n * @return {!Function} The replacement constructor.\n * @private\n */\ngoog.defineClass.createSealingConstructor_ = function(ctr, superClass) {\n  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {\n    // Do now wrap the constructor when sealing is disabled. Angular code\n    // depends on this for injection to work properly.\n    return ctr;\n  }\n\n  // Compute whether the constructor is sealable at definition time, rather\n  // than when the instance is being constructed.\n  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);\n\n  /**\n   * @this {Object}\n   * @return {?}\n   */\n  var wrappedCtr = function() {\n    // Don't seal an instance of a subclass when it calls the constructor of\n    // its super class as there is most likely still setup to do.\n    var instance = ctr.apply(this, arguments) || this;\n    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];\n\n    if (this.constructor === wrappedCtr && superclassSealable &&\n        Object.seal instanceof Function) {\n      Object.seal(instance);\n    }\n    return instance;\n  };\n\n  return wrappedCtr;\n};\n\n\n/**\n * @param {Function} ctr The constructor to test.\n * @return {boolean} Whether the constructor has been tagged as unsealable\n *     using goog.tagUnsealableClass.\n * @private\n */\ngoog.defineClass.isUnsealable_ = function(ctr) {\n  return ctr && ctr.prototype &&\n      ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];\n};\n\n\n// TODO(johnlenz): share these values with the goog.object\n/**\n * The names of the fields that are defined on Object.prototype.\n * @type {!Array<string>}\n * @private\n * @const\n */\ngoog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = [\n  'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n  'toLocaleString', 'toString', 'valueOf'\n];\n\n\n// TODO(johnlenz): share this function with the goog.object\n/**\n * @param {!Object} target The object to add properties to.\n * @param {!Object} source The object to copy properties from.\n * @private\n */\ngoog.defineClass.applyProperties_ = function(target, source) {\n  // TODO(johnlenz): update this to support ES5 getters/setters\n\n  var key;\n  for (key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n\n  // For IE the for-in-loop does not contain any properties that are not\n  // enumerable on the prototype object (for example isPrototypeOf from\n  // Object.prototype) and it will also not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {\n    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\n\n\n/**\n * Sealing classes breaks the older idiom of assigning properties on the\n * prototype rather than in the constructor. As such, goog.defineClass\n * must not seal subclasses of these old-style classes until they are fixed.\n * Until then, this marks a class as \"broken\", instructing defineClass\n * not to seal subclasses.\n * @param {!Function} ctr The legacy constructor to tag as unsealable.\n */\ngoog.tagUnsealableClass = function(ctr) {\n  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {\n    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;\n  }\n};\n\n\n/**\n * Name for unsealable tag property.\n * @const @private {string}\n */\ngoog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = 'goog_defineClass_legacy_unsealable';\n\n\n// There's a bug in the compiler where without collapse properties the\n// Closure namespace defines do not guard code correctly. To help reduce code\n// size also check for !COMPILED even though it redundant until this is fixed.\nif (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n\n  /**\n   * Tries to detect whether is in the context of an HTML document.\n   * @return {boolean} True if it looks like HTML document.\n   * @private\n   */\n  goog.inHtmlDocument_ = function() {\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    return doc != null && 'write' in doc;  // XULDocument misses write.\n  };\n\n\n  /**\n   * We'd like to check for if the document readyState is 'loading'; however\n   * there are bugs on IE 10 and below where the readyState being anything other\n   * than 'complete' is not reliable.\n   * @return {boolean}\n   * @private\n   */\n  goog.isDocumentLoading_ = function() {\n    // attachEvent is available on IE 6 thru 10 only, and thus can be used to\n    // detect those browsers.\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n    return doc.attachEvent ? doc.readyState != 'complete' :\n                             doc.readyState == 'loading';\n  };\n\n\n  /**\n   * Tries to detect the base path of base.js script that bootstraps Closure.\n   * @private\n   */\n  goog.findBasePath_ = function() {\n    if (goog.isDef(goog.global.CLOSURE_BASE_PATH) &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        goog.isString(goog.global.CLOSURE_BASE_PATH)) {\n      goog.basePath = goog.global.CLOSURE_BASE_PATH;\n      return;\n    } else if (!goog.inHtmlDocument_()) {\n      return;\n    }\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    // If we have a currentScript available, use it exclusively.\n    var currentScript = doc.currentScript;\n    if (currentScript) {\n      var scripts = [currentScript];\n    } else {\n      var scripts = doc.getElementsByTagName('SCRIPT');\n    }\n    // Search backwards since the current script is in almost all cases the one\n    // that has base.js.\n    for (var i = scripts.length - 1; i >= 0; --i) {\n      var script = /** @type {!HTMLScriptElement} */ (scripts[i]);\n      var src = script.src;\n      var qmark = src.lastIndexOf('?');\n      var l = qmark == -1 ? src.length : qmark;\n      if (src.substr(l - 7, 7) == 'base.js') {\n        goog.basePath = src.substr(0, l - 7);\n        return;\n      }\n    }\n  };\n\n  goog.findBasePath_();\n\n  /** @struct @constructor @final */\n  goog.Transpiler = function() {\n    /** @private {?Object<string, boolean>} */\n    this.requiresTranspilation_ = null;\n  };\n\n\n  /**\n   * Returns a newly created map from language mode string to a boolean\n   * indicating whether transpilation should be done for that mode.\n   *\n   * Guaranteed invariant:\n   * For any two modes, l1 and l2 where l2 is a newer mode than l1,\n   * `map[l1] == true` implies that `map[l2] == true`.\n   *\n   * Note this method is extracted and used elsewhere, so it cannot rely on\n   * anything external (it should easily be able to be transformed into a\n   * standalone, top level function).\n   *\n   * @private\n   * @return {!Object<string, boolean>}\n   */\n  goog.Transpiler.prototype.createRequiresTranspilation_ = function() {\n    var /** !Object<string, boolean> */ requiresTranspilation = {'es3': false};\n    var transpilationRequiredForAllLaterModes = false;\n\n    /**\n     * Adds an entry to requiresTranspliation for the given language mode.\n     *\n     * IMPORTANT: Calls must be made in order from oldest to newest language\n     * mode.\n     * @param {string} modeName\n     * @param {function(): boolean} isSupported Returns true if the JS engine\n     *     supports the given mode.\n     */\n    function addNewerLanguageTranspilationCheck(modeName, isSupported) {\n      if (transpilationRequiredForAllLaterModes) {\n        requiresTranspilation[modeName] = true;\n      } else if (isSupported()) {\n        requiresTranspilation[modeName] = false;\n      } else {\n        requiresTranspilation[modeName] = true;\n        transpilationRequiredForAllLaterModes = true;\n      }\n    }\n\n    /**\n     * Does the given code evaluate without syntax errors and return a truthy\n     * result?\n     */\n    function /** boolean */ evalCheck(/** string */ code) {\n      try {\n        return !!eval(code);\n      } catch (ignored) {\n        return false;\n      }\n    }\n\n    var userAgent = goog.global.navigator && goog.global.navigator.userAgent ?\n        goog.global.navigator.userAgent :\n        '';\n\n    // Identify ES3-only browsers by their incorrect treatment of commas.\n    addNewerLanguageTranspilationCheck('es5', function() {\n      return evalCheck('[1,].length==1');\n    });\n    addNewerLanguageTranspilationCheck('es6', function() {\n      // Edge has a non-deterministic (i.e., not reproducible) bug with ES6:\n      // https://github.com/Microsoft/ChakraCore/issues/1496.\n      var re = /Edge\\/(\\d+)(\\.\\d)*/i;\n      var edgeUserAgent = userAgent.match(re);\n      if (edgeUserAgent && Number(edgeUserAgent[1]) < 15) {\n        return false;\n      }\n      // Test es6: [FF50 (?), Edge 14 (?), Chrome 50]\n      //   (a) default params (specifically shadowing locals),\n      //   (b) destructuring, (c) block-scoped functions,\n      //   (d) for-of (const), (e) new.target/Reflect.construct\n      var es6fullTest =\n          'class X{constructor(){if(new.target!=String)throw 1;this.x=42}}' +\n          'let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof ' +\n          'String))throw 1;for(const a of[2,3]){if(a==2)continue;function ' +\n          'f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()' +\n          '==3}';\n\n      return evalCheck('(()=>{\"use strict\";' + es6fullTest + '})()');\n    });\n    // TODO(joeltine): Remove es6-impl references for b/31340605.\n    // Consider es6-impl (widely-implemented es6 features) to be supported\n    // whenever es6 is supported. Technically es6-impl is a lower level of\n    // support than es6, but we don't have tests specifically for it.\n    addNewerLanguageTranspilationCheck('es6-impl', function() {\n      return true;\n    });\n    // ** and **= are the only new features in 'es7'\n    addNewerLanguageTranspilationCheck('es7', function() {\n      return evalCheck('2 ** 2 == 4');\n    });\n    // async functions are the only new features in 'es8'\n    addNewerLanguageTranspilationCheck('es8', function() {\n      return evalCheck('async () => 1, true');\n    });\n    addNewerLanguageTranspilationCheck('es9', function() {\n      return evalCheck('({...rest} = {}), true');\n    });\n    addNewerLanguageTranspilationCheck('es_next', function() {\n      return evalCheck('({...rest} = {}), true');\n    });\n    return requiresTranspilation;\n  };\n\n\n  /**\n   * Determines whether the given language needs to be transpiled.\n   * @param {string} lang\n   * @param {string|undefined} module\n   * @return {boolean}\n   */\n  goog.Transpiler.prototype.needsTranspile = function(lang, module) {\n    // TODO(user): ES6 module support detection.\n    if (goog.TRANSPILE == 'always') {\n      return true;\n    } else if (goog.TRANSPILE == 'never') {\n      return false;\n    } else if (!this.requiresTranspilation_) {\n      this.requiresTranspilation_ = this.createRequiresTranspilation_();\n    }\n    if (lang in this.requiresTranspilation_) {\n      return this.requiresTranspilation_[lang];\n    } else {\n      throw new Error('Unknown language mode: ' + lang);\n    }\n  };\n\n\n  /**\n   * Lazily retrieves the transpiler and applies it to the source.\n   * @param {string} code JS code.\n   * @param {string} path Path to the code.\n   * @return {string} The transpiled code.\n   */\n  goog.Transpiler.prototype.transpile = function(code, path) {\n    // TODO(user): We should delete goog.transpile_ and just have this\n    // function. But there's some compile error atm where goog.global is being\n    // stripped incorrectly without this.\n    return goog.transpile_(code, path);\n  };\n\n\n  /** @private @final {!goog.Transpiler} */\n  goog.transpiler_ = new goog.Transpiler();\n\n  /**\n   * Rewrites closing script tags in input to avoid ending an enclosing script\n   * tag.\n   *\n   * @param {string} str\n   * @return {string}\n   * @private\n   */\n  goog.protectScriptTag_ = function(str) {\n    return str.replace(/<\\/(SCRIPT)/ig, '\\\\x3c/$1');\n  };\n\n\n  /**\n   * A debug loader is responsible for downloading and executing javascript\n   * files in an unbundled, uncompiled environment.\n   *\n   * This can be custimized via the setDependencyFactory method, or by\n   * CLOSURE_IMPORT_SCRIPT/CLOSURE_LOAD_FILE_SYNC.\n   *\n   * @struct @constructor @final @private\n   */\n  goog.DebugLoader_ = function() {\n    /** @private @const {!Object<string, !goog.Dependency>} */\n    this.dependencies_ = {};\n    /** @private @const {!Object<string, string>} */\n    this.idToPath_ = {};\n    /** @private @const {!Object<string, boolean>} */\n    this.written_ = {};\n    /** @private @const {!Array<!goog.Dependency>} */\n    this.loadingDeps_ = [];\n    /** @private {!Array<!goog.Dependency>} */\n    this.depsToLoad_ = [];\n    /** @private {boolean} */\n    this.paused_ = false;\n    /** @private {!goog.DependencyFactory} */\n    this.factory_ = new goog.DependencyFactory(goog.transpiler_);\n    /** @private @const {!Object<string, !Function>} */\n    this.deferredCallbacks_ = {};\n    /** @private @const {!Array<string>} */\n    this.deferredQueue_ = [];\n  };\n\n  /**\n   * @param {!Array<string>} namespaces\n   * @param {function(): undefined} callback Function to call once all the\n   *     namespaces have loaded.\n   */\n  goog.DebugLoader_.prototype.bootstrap = function(namespaces, callback) {\n    var cb = callback;\n    function resolve() {\n      if (cb) {\n        goog.global.setTimeout(cb, 0);\n        cb = null;\n      }\n    }\n\n    if (!namespaces.length) {\n      resolve();\n      return;\n    }\n\n    var deps = [];\n    for (var i = 0; i < namespaces.length; i++) {\n      var path = this.getPathFromDeps_(namespaces[i]);\n      if (!path) {\n        throw new Error('Unregonized namespace: ' + namespaces[i]);\n      }\n      deps.push(this.dependencies_[path]);\n    }\n\n    var require = goog.require;\n    var loaded = 0;\n    for (var i = 0; i < namespaces.length; i++) {\n      require(namespaces[i]);\n      deps[i].onLoad(function() {\n        if (++loaded == namespaces.length) {\n          resolve();\n        }\n      });\n    }\n  };\n\n\n  /**\n   * Loads the Closure Dependency file.\n   *\n   * Exposed a public function so CLOSURE_NO_DEPS can be set to false, base\n   * loaded, setDependencyFactory called, and then this called. i.e. allows\n   * custom loading of the deps file.\n   */\n  goog.DebugLoader_.prototype.loadClosureDeps = function() {\n    // Circumvent addDependency, which would try to transpile deps.js if\n    // transpile is set to always.\n    var relPath = 'deps.js';\n    this.depsToLoad_.push(this.factory_.createDependency(\n        goog.normalizePath_(goog.basePath + relPath), relPath, [], [], {},\n        false));\n    this.loadDeps_();\n  };\n\n\n  /**\n   * Notifies the debug loader when a dependency has been requested.\n   *\n   * @param {string} absPathOrId Path of the dependency or goog id.\n   * @param {boolean=} opt_force\n   */\n  goog.DebugLoader_.prototype.requested = function(absPathOrId, opt_force) {\n    var path = this.getPathFromDeps_(absPathOrId);\n    if (path &&\n        (opt_force || this.areDepsLoaded_(this.dependencies_[path].requires))) {\n      var callback = this.deferredCallbacks_[path];\n      if (callback) {\n        delete this.deferredCallbacks_[path];\n        callback();\n      }\n    }\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.DebugLoader_.prototype.setDependencyFactory = function(factory) {\n    this.factory_ = factory;\n  };\n\n\n  /**\n   * Travserses the dependency graph and queues the given dependency, and all of\n   * its transitive dependencies, for loading and then starts loading if not\n   * paused.\n   *\n   * @param {string} absPathOrId\n   * @private\n   */\n  goog.DebugLoader_.prototype.load_ = function(absPathOrId) {\n    if (!this.getPathFromDeps_(absPathOrId)) {\n      var errorMessage = 'goog.require could not find: ' + absPathOrId;\n\n      goog.logToConsole_(errorMessage);\n      throw Error(errorMessage);\n    } else {\n      var loader = this;\n\n      var deps = [];\n\n      /** @param {string} absPathOrId */\n      var visit = function(absPathOrId) {\n        var path = loader.getPathFromDeps_(absPathOrId);\n\n        if (!path) {\n          throw new Error('Bad dependency path or symbol: ' + absPathOrId);\n        }\n\n        if (loader.written_[path]) {\n          return;\n        }\n\n        loader.written_[path] = true;\n\n        var dep = loader.dependencies_[path];\n        for (var i = 0; i < dep.requires.length; i++) {\n          if (!goog.isProvided_(dep.requires[i])) {\n            visit(dep.requires[i]);\n          }\n        }\n\n        deps.push(dep);\n      };\n\n      visit(absPathOrId);\n\n      var wasLoading = !!this.depsToLoad_.length;\n      this.depsToLoad_ = this.depsToLoad_.concat(deps);\n\n      if (!this.paused_ && !wasLoading) {\n        this.loadDeps_();\n      }\n    }\n  };\n\n\n  /**\n   * Loads any queued dependencies until they are all loaded or paused.\n   *\n   * @private\n   */\n  goog.DebugLoader_.prototype.loadDeps_ = function() {\n    var loader = this;\n    var paused = this.paused_;\n\n    while (this.depsToLoad_.length && !paused) {\n      (function() {\n        var loadCallDone = false;\n        var dep = loader.depsToLoad_.shift();\n\n        var loaded = false;\n        loader.loading_(dep);\n\n        var controller = {\n          pause: function() {\n            if (loadCallDone) {\n              throw new Error('Cannot call pause after the call to load.');\n            } else {\n              paused = true;\n            }\n          },\n          resume: function() {\n            if (loadCallDone) {\n              loader.resume_();\n            } else {\n              // Some dep called pause and then resume in the same load call.\n              // Just keep running this same loop.\n              paused = false;\n            }\n          },\n          loaded: function() {\n            if (loaded) {\n              throw new Error('Double call to loaded.');\n            }\n\n            loaded = true;\n            loader.loaded_(dep);\n          },\n          pending: function() {\n            // Defensive copy.\n            var pending = [];\n            for (var i = 0; i < loader.loadingDeps_.length; i++) {\n              pending.push(loader.loadingDeps_[i]);\n            }\n            return pending;\n          },\n          /**\n           * @param {string} path\n           * @param {goog.ModuleType} type\n           */\n          setModuleState: function(path, type) {\n            goog.moduleLoaderState_ = {\n              path: path,\n              type: type,\n              moduleName: '',\n              declareLegacyNamespace: false\n            };\n          },\n          registerEs6ModuleExports: function(path, exports) {\n            goog.loadedModules_[path] = {\n              exports: exports,\n              type: goog.ModuleType.ES6,\n              moduleId: ''\n            };\n          },\n          registerGoogModuleExports: function(moduleId, exports) {\n            goog.loadedModules_[moduleId] = {\n              exports: exports,\n              type: goog.ModuleType.GOOG,\n              moduleId: moduleId\n            };\n          },\n          clearModuleState: function() {\n            goog.moduleLoaderState_ = null;\n          },\n          defer: function(callback) {\n            if (loadCallDone) {\n              throw new Error(\n                  'Cannot register with defer after the call to load.');\n            }\n            loader.defer_(dep, callback);\n          },\n          areDepsLoaded: function() {\n            return loader.areDepsLoaded_(dep.requires);\n          }\n        };\n\n        try {\n          dep.load(controller);\n        } finally {\n          loadCallDone = true;\n        }\n      })();\n    }\n\n    if (paused) {\n      this.pause_();\n    }\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.pause_ = function() {\n    this.paused_ = true;\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.resume_ = function() {\n    if (this.paused_) {\n      this.paused_ = false;\n      this.loadDeps_();\n    }\n  };\n\n\n  /**\n   * Marks the given dependency as loading (load has been called but it has not\n   * yet marked itself as finished). Useful for dependencies that want to know\n   * what else is loading. Example: goog.modules cannot eval if there are\n   * loading dependencies.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loading_ = function(dep) {\n    this.loadingDeps_.push(dep);\n  };\n\n\n  /**\n   * Marks the given dependency as having finished loading and being available\n   * for require.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loaded_ = function(dep) {\n    for (var i = 0; i < this.loadingDeps_.length; i++) {\n      if (this.loadingDeps_[i] == dep) {\n        this.loadingDeps_.splice(i, 1);\n        break;\n      }\n    }\n\n    for (var i = 0; i < this.deferredQueue_.length; i++) {\n      if (this.deferredQueue_[i] == dep.path) {\n        this.deferredQueue_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (this.loadingDeps_.length == this.deferredQueue_.length &&\n        !this.depsToLoad_.length) {\n      // Something has asked to load these, but they may not be directly\n      // required again later, so load them now that we know we're done loading\n      // everything else. e.g. a goog module entry point.\n      while (this.deferredQueue_.length) {\n        this.requested(this.deferredQueue_.shift(), true);\n      }\n    }\n\n    dep.loaded();\n  };\n\n\n  /**\n   * @param {!Array<string>} pathsOrIds\n   * @return {boolean}\n   * @private\n   */\n  goog.DebugLoader_.prototype.areDepsLoaded_ = function(pathsOrIds) {\n    for (var i = 0; i < pathsOrIds.length; i++) {\n      var path = this.getPathFromDeps_(pathsOrIds[i]);\n      if (!path ||\n          (!(path in this.deferredCallbacks_) &&\n           !goog.isProvided_(pathsOrIds[i]))) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * @param {string} absPathOrId\n   * @return {?string}\n   * @private\n   */\n  goog.DebugLoader_.prototype.getPathFromDeps_ = function(absPathOrId) {\n    if (absPathOrId in this.idToPath_) {\n      return this.idToPath_[absPathOrId];\n    } else if (absPathOrId in this.dependencies_) {\n      return absPathOrId;\n    } else {\n      return null;\n    }\n  };\n\n\n  /**\n   * @param {!goog.Dependency} dependency\n   * @param {!Function} callback\n   * @private\n   */\n  goog.DebugLoader_.prototype.defer_ = function(dependency, callback) {\n    this.deferredCallbacks_[dependency.path] = callback;\n    this.deferredQueue_.push(dependency.path);\n  };\n\n\n  /**\n   * Interface for goog.Dependency implementations to have some control over\n   * loading of dependencies.\n   *\n   * @record\n   */\n  goog.LoadController = function() {};\n\n\n  /**\n   * Tells the controller to halt loading of more dependencies.\n   */\n  goog.LoadController.prototype.pause = function() {};\n\n\n  /**\n   * Tells the controller to resume loading of more dependencies if paused.\n   */\n  goog.LoadController.prototype.resume = function() {};\n\n\n  /**\n   * Tells the controller that this dependency has finished loading.\n   *\n   * This causes this to be removed from pending() and any load callbacks to\n   * fire.\n   */\n  goog.LoadController.prototype.loaded = function() {};\n\n\n  /**\n   * List of dependencies on which load has been called but which have not\n   * called loaded on their controller. This includes the current dependency.\n   *\n   * @return {!Array<!goog.Dependency>}\n   */\n  goog.LoadController.prototype.pending = function() {};\n\n\n  /**\n   * Registers an object as an ES6 module's exports so that goog.modules may\n   * require it by path.\n   *\n   * @param {string} path Full path of the module.\n   * @param {?} exports\n   */\n  goog.LoadController.prototype.registerEs6ModuleExports = function(\n      path, exports) {};\n\n\n  /**\n   * Sets the current module state. Allows goog.modules to require by path\n   * and lets goog.require return values.\n   *\n   * @param {string} path Full path of the current module.\n   * @param {goog.ModuleType} type Type of module.\n   */\n  goog.LoadController.prototype.setModuleState = function(path, type) {};\n\n\n  /**\n   * Clears the current module state.\n   */\n  goog.LoadController.prototype.clearModuleState = function() {};\n\n\n  /**\n   * Registers a callback to call once the dependency is actually requested\n   * via goog.require + all of the immediate dependencies have been loaded or\n   * all other files have been loaded. Allows for lazy loading until\n   * require'd without pausing dependency loading, which is needed on old IE.\n   *\n   * @param {!Function} callback\n   */\n  goog.LoadController.prototype.defer = function(callback) {};\n\n\n  /**\n   * @return {boolean}\n   */\n  goog.LoadController.prototype.areDepsLoaded = function() {};\n\n\n  /**\n   * Basic super class for all dependencies Closure Library can load.\n   *\n   * This default implementation is designed to load untranspiled, non-module\n   * scripts in a web broswer.\n   *\n   * For transpiled non-goog.module files {@see goog.TranspiledDependency}.\n   * For goog.modules see {@see goog.GoogModuleDependency}.\n   * For untranspiled ES6 modules {@see goog.Es6ModuleDependency}.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   */\n  goog.Dependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    /** @const */\n    this.path = path;\n    /** @const */\n    this.relativePath = relativePath;\n    /** @const */\n    this.provides = provides;\n    /** @const */\n    this.requires = requires;\n    /** @const */\n    this.loadFlags = loadFlags;\n    /** @private {boolean} */\n    this.loaded_ = false;\n    /** @private {!Array<function()>} */\n    this.loadCallbacks_ = [];\n  };\n\n\n  /**\n   * @param {function()} callback Callback to fire as soon as this has loaded.\n   * @final\n   */\n  goog.Dependency.prototype.onLoad = function(callback) {\n    if (this.loaded_) {\n      callback();\n    } else {\n      this.loadCallbacks_.push(callback);\n    }\n  };\n\n\n  /**\n   * Marks this dependency as loaded and fires any callbacks registered with\n   * onLoad.\n   * @final\n   */\n  goog.Dependency.prototype.loaded = function() {\n    this.loaded_ = true;\n    var callbacks = this.loadCallbacks_;\n    this.loadCallbacks_ = [];\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i]();\n    }\n  };\n\n\n  /**\n   * Whether or not document.written / appended script tags should be deferred.\n   *\n   * @private {boolean}\n   */\n  goog.Dependency.defer_ = false;\n\n\n  /**\n   * Map of script ready / state change callbacks. Old IE cannot handle putting\n   * these properties on goog.global.\n   *\n   * @private @const {!Object<string, function(?):undefined>}\n   */\n  goog.Dependency.callbackMap_ = {};\n\n\n  /**\n   * @param {function(...?):?} callback\n   * @return {string}\n   * @private\n   */\n  goog.Dependency.registerCallback_ = function(callback) {\n    var key = Math.random().toString(32);\n    goog.Dependency.callbackMap_[key] = callback;\n    return key;\n  };\n\n\n  /**\n   * @param {string} key\n   * @private\n   */\n  goog.Dependency.unregisterCallback_ = function(key) {\n    delete goog.Dependency.callbackMap_[key];\n  };\n\n\n  /**\n   * @param {string} key\n   * @param {...?} var_args\n   * @private\n   * @suppress {unusedPrivateMembers}\n   */\n  goog.Dependency.callback_ = function(key, var_args) {\n    if (key in goog.Dependency.callbackMap_) {\n      var callback = goog.Dependency.callbackMap_[key];\n      var args = [];\n      for (var i = 1; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n      callback.apply(undefined, args);\n    } else {\n      var errorMessage = 'Callback key ' + key +\n          ' does not exist (was base.js loaded more than once?).';\n      throw Error(errorMessage);\n    }\n  };\n\n\n  /**\n   * Starts loading this dependency. This dependency can pause loading if it\n   * needs to and resume it later via the controller interface.\n   *\n   * When this is loaded it should call controller.loaded(). Note that this will\n   * end up calling the loaded method of this dependency; there is no need to\n   * call it explicitly.\n   *\n   * @param {!goog.LoadController} controller\n   */\n  goog.Dependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      if (this.relativePath == 'deps.js') {\n        // Some old code is relying on base.js auto loading deps.js failing with\n        // no error before later setting CLOSURE_IMPORT_SCRIPT.\n        // CLOSURE_IMPORT_SCRIPT should be set *before* base.js is loaded, or\n        // CLOSURE_NO_DEPS set to true.\n        goog.logToConsole_(\n            'Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, ' +\n            'or seting CLOSURE_NO_DEPS to true.');\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    // If the user tries to require a new symbol after document load,\n    // something has gone terribly wrong. Doing a document.write would\n    // wipe out the page. This does not apply to the CSP-compliant method\n    // of writing script tags.\n    if (doc.readyState == 'complete' &&\n        !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {\n      // Certain test frameworks load base.js multiple times, which tries\n      // to write deps.js each time. If that happens, just fail silently.\n      // These frameworks wipe the page between each load of base.js, so this\n      // is OK.\n      var isDeps = /\\bdeps.js$/.test(this.path);\n      if (isDeps) {\n        controller.loaded();\n        return;\n      } else {\n        throw Error('Cannot write \"' + this.path + '\" after document load');\n      }\n    }\n\n    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING &&\n        goog.isDocumentLoading_()) {\n      var key = goog.Dependency.registerCallback_(function(script) {\n        if (!goog.DebugLoader_.IS_OLD_IE_ || script.readyState == 'complete') {\n          goog.Dependency.unregisterCallback_(key);\n          controller.loaded();\n        }\n      });\n\n      var event =\n          goog.DebugLoader_.IS_OLD_IE_ ? 'onreadystatechange' : 'onload';\n      var defer = goog.Dependency.defer_ ? 'defer' : '';\n      doc.write(\n          '<script src=\"' + this.path + '\" ' + event +\n          '=\"goog.Dependency.callback_(\\'' + key +\n          '\\', this)\" type=\"text/javascript\" ' + defer + '><' +\n          '/script>');\n    } else {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = goog.Dependency.defer_;\n      scriptEl.async = false;\n      scriptEl.type = 'text/javascript';\n\n      if (goog.DebugLoader_.IS_OLD_IE_) {\n        // Execution order is not guaranteed on old IE, halt loading and write\n        // these scripts one at a time, after each loads.\n        controller.pause();\n        scriptEl.onreadystatechange = function() {\n          if (scriptEl.readyState == 'loaded' ||\n              scriptEl.readyState == 'complete') {\n            controller.loaded();\n            controller.resume();\n          }\n        };\n      } else {\n        scriptEl.onload = function() {\n          scriptEl.onload = null;\n          controller.loaded();\n        };\n      }\n\n      scriptEl.src = this.path;\n      doc.head.appendChild(scriptEl);\n    }\n  };\n\n\n  /**\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.Dependency}\n   */\n  goog.Es6ModuleDependency = function(path, relativePath, requires, loadFlags) {\n    goog.Es6ModuleDependency.base(\n        this, 'constructor', path, relativePath, [], requires, loadFlags);\n  };\n  goog.inherits(goog.Es6ModuleDependency, goog.Dependency);\n\n\n  /** @override */\n  goog.Es6ModuleDependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      controller.pause();\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    var dep = this;\n\n    // TODO(user): Does document.writing really speed up anything? Any\n    // difference between this and just waiting for interactive mode and then\n    // appending?\n    function write(src, contents) {\n      if (contents) {\n        doc.write(\n            '<script type=\"module\" crossorigin>' + contents + '</' +\n            'script>');\n      } else {\n        doc.write(\n            '<script type=\"module\" crossorigin src=\"' + src + '\"></' +\n            'script>');\n      }\n    }\n\n    function append(src, contents) {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = true;\n      scriptEl.async = false;\n      scriptEl.type = 'module';\n      scriptEl.setAttribute('crossorigin', true);\n\n      if (contents) {\n        scriptEl.textContent = contents;\n      } else {\n        scriptEl.src = src;\n      }\n\n      doc.head.appendChild(scriptEl);\n    }\n\n    var create;\n\n    if (goog.isDocumentLoading_()) {\n      create = write;\n      // We can ONLY call document.write if we are guaranteed that any\n      // non-module script tags document.written after this are deferred.\n      // Small optimization, in theory document.writing is faster.\n      goog.Dependency.defer_ = true;\n    } else {\n      create = append;\n    }\n\n    // Write 4 separate tags here:\n    // 1) Sets the module state at the correct time (just before execution).\n    // 2) A src node for this, which just hopefully lets the browser load it a\n    //    little early (no need to parse #3).\n    // 3) Import the module and register it.\n    // 4) Clear the module state at the correct time. Guarnteed to run even\n    //    if there is an error in the module (#3 will not run if there is an\n    //    error in the module).\n    var beforeKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(beforeKey);\n      controller.setModuleState(dep.path, goog.ModuleType.ES6);\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + beforeKey + '\")');\n\n    // TODO(user): Does this really speed up anything?\n    create(this.path, undefined);\n\n    var registerKey = goog.Dependency.registerCallback_(function(exports) {\n      goog.Dependency.unregisterCallback_(registerKey);\n      controller.registerEs6ModuleExports(dep.path, exports);\n    });\n    create(\n        undefined,\n        'import * as m from \"' + this.path + '\"; goog.Dependency.callback_(\"' +\n            registerKey + '\", m)');\n\n    var afterKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(afterKey);\n      controller.clearModuleState();\n      controller.loaded();\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + afterKey + '\")');\n  };\n\n\n  /**\n   * Superclass of any dependency that needs to be loaded into memory,\n   * transformed, and then eval'd (goog.modules and transpiled files).\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor @abstract\n   * @extends {goog.Dependency}\n   */\n  goog.TransformedDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.TransformedDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @private {?string} */\n    this.contents_ = null;\n  };\n  goog.inherits(goog.TransformedDependency, goog.Dependency);\n\n\n  /** @override */\n  goog.TransformedDependency.prototype.load = function(controller) {\n    if (!goog.global.CLOSURE_IMPORT_SCRIPT && goog.inHtmlDocument_() &&\n        goog.isDocumentLoading_()) {\n      /** @type {!HTMLDocument} */\n      var doc = goog.global.document;\n      // Required on some older browsers to load the contents in its own script\n      // tag. Otherwise the document.write acts like an eval apparently?\n      var dep = this;\n\n      var key = goog.Dependency.registerCallback_(function() {\n        goog.Dependency.unregisterCallback_(key);\n        dep.loadImpl_(controller);\n      });\n\n      doc.write(\n          '<script type=\"text/javascript\">' +\n          goog.protectScriptTag_('goog.Dependency.callback_(\"' + key + '\");') +\n          '</' +\n          'script>');\n    } else {\n      this.loadImpl_(controller);\n    }\n  };\n\n\n  /**\n   * @param {!goog.LoadController} controller\n   * @private\n   */\n  goog.TransformedDependency.prototype.loadImpl_ = function(controller) {\n    this.contents_ = goog.loadFileSync_(this.path);\n\n    if (this.contents_) {\n      this.contents_ = this.transform(this.contents_);\n      if (this.contents_) {\n        this.contents_ += '\\n//# sourceURL=' + this.path;\n      }\n    }\n\n    if (!this.contents_) {\n      // loadFileSync_ or transform are responsible. Assume they logged an\n      // error.\n      controller.pause();\n      return;\n    }\n\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT('', this.contents_)) {\n        this.contents_ = null;\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    var dep = this;\n    var isEs6 = this.loadFlags['module'] == goog.ModuleType.ES6;\n\n    function load(shouldEval) {\n      if (!dep.contents_) {\n        return;\n      }\n\n      if (isEs6) {\n        controller.setModuleState(dep.path, goog.ModuleType.ES6);\n      }\n\n      try {\n        var contents = dep.contents_;\n        dep.contents_ = null;\n        if (shouldEval) {\n          goog.globalEval(contents);\n        } else {\n          /** @type {!HTMLDocument} */\n          var doc = goog.global.document;\n          doc.write(\n              '<script type=\"text/javascript\">' +\n              goog.protectScriptTag_(contents) + '</' +\n              'script>');\n        }\n      } finally {\n        if (isEs6) {\n          controller.clearModuleState();\n        }\n      }\n\n      if (isEs6) {\n        // Due to circular dependencies this may not be available for require\n        // right now.\n        goog.global['$jscomp']['require']['ensure']([dep.path], function() {\n          controller.registerEs6ModuleExports(\n              dep.path, goog.global['$jscomp']['require'](dep.path));\n        });\n      }\n\n      controller.loaded();\n    }\n\n    var pending = controller.pending();\n    // If one thing is pending it is this.\n    if (pending.length > 1 && goog.DebugLoader_.IS_OLD_IE_) {\n      // If anything else is loading we need to lazy load due to bugs in old IE.\n      // Do not pause here; it breaks old IE as well.\n      controller.defer(function() {\n        load(true);\n      });\n      return;\n    }\n\n    if (isEs6 && goog.inHtmlDocument_() && goog.isDocumentLoading_()) {\n      // TODO(user): Externs are missing onreadystatechange for\n      // HTMLDocument.\n      /** @type {?} */\n      var doc = goog.global.document;\n      // Transpiled ES6 modules still need to load like regular ES6 modules,\n      // aka only after the document is interactive.\n      controller.pause();\n      var oldCallback = doc.onreadystatechange;\n      doc.onreadystatechange = function() {\n        if (doc.attachEvent ? doc.readyState == 'complete' :\n                              doc.readyState == 'interactive') {\n          doc.onreadystatechange = oldCallback;\n          load(true);\n          controller.resume();\n        }\n        if (goog.isFunction(oldCallback)) {\n          oldCallback.apply(undefined, arguments);\n        }\n      };\n    } else {\n      // Always eval on old IE.\n      load(\n          goog.DebugLoader_.IS_OLD_IE_ || !goog.inHtmlDocument_() ||\n          !goog.isDocumentLoading_());\n    }\n  };\n\n\n  /**\n   * @param {string} contents\n   * @return {string}\n   * @abstract\n   */\n  goog.TransformedDependency.prototype.transform = function(contents) {};\n\n\n  /**\n   * Any non-goog.module dependency which needs to be transpiled before eval.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.TranspiledDependency = function(\n      path, relativePath, provides, requires, loadFlags, transpiler) {\n    goog.TranspiledDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @protected @const*/\n    this.transpiler = transpiler;\n  };\n  goog.inherits(goog.TranspiledDependency, goog.TransformedDependency);\n\n\n  /** @override */\n  goog.TranspiledDependency.prototype.transform = function(contents) {\n    return this.transpiler.transpile(contents, this.path);\n  };\n\n\n  /**\n   * A goog.module, transpiled or not. Will always perform some minimal\n   * transformation even when not transpiled to wrap in a goog.loadModule\n   * statement.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @param {boolean} needsTranspile\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.GoogModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags, needsTranspile,\n      transpiler) {\n    goog.GoogModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @private @const */\n    this.needsTranspile_ = needsTranspile;\n    /** @private @const */\n    this.transpiler_ = transpiler;\n  };\n  goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency);\n\n\n  /** @override */\n  goog.GoogModuleDependency.prototype.transform = function(contents) {\n    if (this.needsTranspile_) {\n      contents = this.transpiler_.transpile(contents, this.path);\n    }\n\n    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {\n      return '' +\n          'goog.loadModule(function(exports) {' +\n          '\"use strict\";' + contents +\n          '\\n' +  // terminate any trailing single line comment.\n          ';return exports' +\n          '}, \"' + this.path + '\");' +\n          '\\n//# sourceURL=' + this.path + '\\n';\n    } else {\n      return '' +\n          'goog.loadModule(' +\n          goog.global.JSON.stringify(\n              contents + '\\n//# sourceURL=' + this.path + '\\n') +\n          ', \"' + this.path + '\");';\n    }\n  };\n\n\n  /**\n   * Whether the browser is IE9 or earlier, which needs special handling\n   * for deferred modules.\n   * @const @private {boolean}\n   */\n  goog.DebugLoader_.IS_OLD_IE_ =\n      !!(!goog.global.atob && goog.global.document && goog.global.document.all);\n\n\n  /**\n   * @param {string} relPath\n   * @param {!Array<string>|undefined} provides\n   * @param {!Array<string>} requires\n   * @param {boolean|!Object<string>=} opt_loadFlags\n   * @see goog.addDependency\n   */\n  goog.DebugLoader_.prototype.addDependency = function(\n      relPath, provides, requires, opt_loadFlags) {\n    provides = provides || [];\n    relPath = relPath.replace(/\\\\/g, '/');\n    var path = goog.normalizePath_(goog.basePath + relPath);\n    if (!opt_loadFlags || typeof opt_loadFlags === 'boolean') {\n      opt_loadFlags = opt_loadFlags ? {'module': goog.ModuleType.GOOG} : {};\n    }\n    var dep = this.factory_.createDependency(\n        path, relPath, provides, requires, opt_loadFlags,\n        goog.transpiler_.needsTranspile(\n            opt_loadFlags['lang'] || 'es3', opt_loadFlags['module']));\n    this.dependencies_[path] = dep;\n    for (var i = 0; i < provides.length; i++) {\n      this.idToPath_[provides[i]] = path;\n    }\n    this.idToPath_[relPath] = path;\n  };\n\n  /**\n   * Creates goog.Dependency instances for the debug loader to load.\n   *\n   * Should be overridden to have the debug loader use custom subclasses of\n   * goog.Dependency.\n   *\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   */\n  goog.DependencyFactory = function(transpiler) {\n    /** @protected @const */\n    this.transpiler = transpiler;\n  };\n\n\n  /**\n   * @param {string} path Absolute path of the file.\n   * @param {string} relativePath Path relative to closure’s base.js.\n   * @param {!Array<string>} provides Array of provided goog.provide/module ids.\n   * @param {!Array<string>} requires Array of required goog.provide/module /\n   *     relative ES6 module paths.\n   * @param {!Object<string, string>} loadFlags\n   * @param {boolean} needsTranspile True if the file needs to be transpiled\n   *     per the goog.Transpiler.\n   * @return {!goog.Dependency}\n   */\n  goog.DependencyFactory.prototype.createDependency = function(\n      path, relativePath, provides, requires, loadFlags, needsTranspile) {\n    if (loadFlags['module'] == goog.ModuleType.ES6) {\n      throw new Error(\n          'ES6 modules are not currently supported by the debug loader.');\n    }\n\n    if (loadFlags['module'] == goog.ModuleType.GOOG) {\n      return new goog.GoogModuleDependency(\n          path, relativePath, provides, requires, loadFlags, needsTranspile,\n          this.transpiler);\n    } else if (needsTranspile) {\n      return new goog.TranspiledDependency(\n          path, relativePath, provides, requires, loadFlags, this.transpiler);\n    } else {\n      if (loadFlags['module'] == goog.ModuleType.ES6) {\n        return new goog.Es6ModuleDependency(\n            path, relativePath, requires, loadFlags);\n      } else {\n        return new goog.Dependency(\n            path, relativePath, provides, requires, loadFlags);\n      }\n    }\n  };\n\n\n  /** @private @const */\n  goog.debugLoader_ = new goog.DebugLoader_();\n\n\n  /**\n   * Loads the Closure Dependency file.\n   *\n   * Exposed a public function so CLOSURE_NO_DEPS can be set to false, base\n   * loaded, setDependencyFactory called, and then this called. i.e. allows\n   * custom loading of the deps file.\n   */\n  goog.loadClosureDeps = function() {\n    goog.debugLoader_.loadClosureDeps();\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * Note: if you wish to call this function and provide your own implemnetation\n   * it is a wise idea to set CLOSURE_NO_DEPS to true, otherwise the dependency\n   * file and all of its goog.addDependency calls will use the default factory.\n   * You can call goog.loadClosureDeps to load the Closure dependency file\n   * later, after your factory is injected.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.setDependencyFactory = function(factory) {\n    goog.debugLoader_.setDependencyFactory(factory);\n  };\n\n\n  if (!goog.global.CLOSURE_NO_DEPS) {\n    goog.debugLoader_.loadClosureDeps();\n  }\n\n\n  /**\n   * Bootstraps the given namespaces and calls the callback once they are\n   * available either via goog.require. This is a replacement for using\n   * `goog.require` to bootstrap Closure Javascript. Previously a `goog.require`\n   * in an HTML file would guarantee that the require'd namespace was available\n   * in the next immediate script tag. With ES6 modules this no longer a\n   * guarantee.\n   *\n   * @param {!Array<string>} namespaces\n   * @param {function(): ?} callback Function to call once all the namespaces\n   *     have loaded. Always called asynchronously.\n   */\n  goog.bootstrap = function(namespaces, callback) {\n    goog.debugLoader_.bootstrap(namespaces, callback);\n  };\n}\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('goog.Thenable');\n\n/** @suppress {extraRequire} */\ngoog.forwardDeclare('goog.Promise'); // for the type reference.\n\n\n\n/**\n * Provides a more strict interface for Thenables in terms of\n * http://promisesaplus.com for interop with {@see goog.Promise}.\n *\n * @interface\n * @extends {IThenable<TYPE>}\n * @template TYPE\n */\ngoog.Thenable = function() {};\n\n\n/**\n * Adds callbacks that will operate on the result of the Thenable, returning a\n * new child Promise.\n *\n * If the Thenable is fulfilled, the `onFulfilled` callback will be\n * invoked with the fulfillment value as argument, and the child Promise will\n * be fulfilled with the return value of the callback. If the callback throws\n * an exception, the child Promise will be rejected with the thrown value\n * instead.\n *\n * If the Thenable is rejected, the `onRejected` callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value of the callback or thrown value.\n *\n * @param {?(function(this:THIS, TYPE): VALUE)=} opt_onFulfilled A\n *     function that will be invoked with the fulfillment value if the Promise\n *     is fulfilled.\n * @param {?(function(this:THIS, *): *)=} opt_onRejected A function that will\n *     be invoked with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     with the default this.\n *\n * @return {RESULT} A new Promise that will receive the result\n *     of the fulfillment or rejection callback.\n * @template VALUE\n * @template THIS\n *\n * When a Promise (or thenable) is returned from the fulfilled callback,\n * the result is the payload of that promise, not the promise itself.\n *\n * @template RESULT := type('goog.Promise',\n *     cond(isUnknown(VALUE), unknown(),\n *       mapunion(VALUE, (V) =>\n *         cond(isTemplatized(V) && sub(rawTypeOf(V), 'IThenable'),\n *           templateTypeOf(V, 0),\n *           cond(sub(V, 'Thenable'),\n *              unknown(),\n *              V)))))\n *  =:\n *\n */\ngoog.Thenable.prototype.then = function(\n    opt_onFulfilled, opt_onRejected, opt_context) {};\n\n\n/**\n * An expando property to indicate that an object implements\n * `goog.Thenable`.\n *\n * {@see addImplementation}.\n *\n * @const\n */\ngoog.Thenable.IMPLEMENTED_BY_PROP = '$goog_Thenable';\n\n\n/**\n * Marks a given class (constructor) as an implementation of Thenable, so\n * that we can query that fact at runtime. The class must have already\n * implemented the interface.\n * Exports a 'then' method on the constructor prototype, so that the objects\n * also implement the extern {@see goog.Thenable} interface for interop with\n * other Promise implementations.\n * @param {function(new:goog.Thenable,...?)} ctor The class constructor. The\n *     corresponding class must have already implemented the interface.\n */\ngoog.Thenable.addImplementation = function(ctor) {\n  // Use bracket notation instead of goog.exportSymbol() so that the compiler\n  // won't create a 'var ctor;' extern when the \"create externs from exports\"\n  // mode is enabled.\n  ctor.prototype['then'] = ctor.prototype.then;\n  if (COMPILED) {\n    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;\n  } else {\n    // Avoids dictionary access in uncompiled mode.\n    ctor.prototype.$goog_Thenable = true;\n  }\n};\n\n\n/**\n * @param {?} object\n * @return {boolean} Whether a given instance implements `goog.Thenable`.\n *     The class/superclass of the instance must call `addImplementation`.\n */\ngoog.Thenable.isImplementedBy = function(object) {\n  if (!object) {\n    return false;\n  }\n  try {\n    if (COMPILED) {\n      return !!object[goog.Thenable.IMPLEMENTED_BY_PROP];\n    }\n    return !!object.$goog_Thenable;\n  } catch (e) {\n    // Property access seems to be forbidden.\n    return false;\n  }\n};\n","// Copyright 2009 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Provides a base class for custom Error objects such that the\n * stack is correctly maintained.\n *\n * You should never need to throw goog.debug.Error(msg) directly, Error(msg) is\n * sufficient.\n *\n */\n\ngoog.provide('goog.debug.Error');\n\n\n\n/**\n * Base class for custom error objects.\n * @param {*=} opt_msg The message associated with the error.\n * @constructor\n * @extends {Error}\n */\ngoog.debug.Error = function(opt_msg) {\n\n  // Attempt to ensure there is a stack trace.\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, goog.debug.Error);\n  } else {\n    var stack = new Error().stack;\n    if (stack) {\n      /** @override */\n      this.stack = stack;\n    }\n  }\n\n  if (opt_msg) {\n    /** @override */\n    this.message = String(opt_msg);\n  }\n\n  /**\n   * Whether to report this error to the server. Setting this to false will\n   * cause the error reporter to not report the error back to the server,\n   * which can be useful if the client knows that the error has already been\n   * logged on the server.\n   * @type {boolean}\n   */\n  this.reportErrorToServer = true;\n};\ngoog.inherits(goog.debug.Error, Error);\n\n\n/** @override */\ngoog.debug.Error.prototype.name = 'CustomError';\n","// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\ngoog.provide('goog.asserts');\ngoog.provide('goog.asserts.AssertionError');\n\ngoog.require('goog.debug.Error');\ngoog.require('goog.dom.NodeType');\n\n\n/**\n * @define {boolean} Whether to strip out asserts or to leave them in.\n */\ngoog.define('goog.asserts.ENABLE_ASSERTS', goog.DEBUG);\n\n\n\n/**\n * Error object for failed assertions.\n * @param {string} messagePattern The pattern that was used to form message.\n * @param {!Array<*>} messageArgs The items to substitute into the pattern.\n * @constructor\n * @extends {goog.debug.Error}\n * @final\n */\ngoog.asserts.AssertionError = function(messagePattern, messageArgs) {\n  goog.debug.Error.call(this, goog.asserts.subs_(messagePattern, messageArgs));\n\n  /**\n   * The message pattern used to format the error message. Error handlers can\n   * use this to uniquely identify the assertion.\n   * @type {string}\n   */\n  this.messagePattern = messagePattern;\n};\ngoog.inherits(goog.asserts.AssertionError, goog.debug.Error);\n\n\n/** @override */\ngoog.asserts.AssertionError.prototype.name = 'AssertionError';\n\n\n/**\n * The default error handler.\n * @param {!goog.asserts.AssertionError} e The exception to be handled.\n */\ngoog.asserts.DEFAULT_ERROR_HANDLER = function(e) {\n  throw e;\n};\n\n\n/**\n * The handler responsible for throwing or logging assertion errors.\n * @private {function(!goog.asserts.AssertionError)}\n */\ngoog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;\n\n\n/**\n * Does simple python-style string substitution.\n * subs(\"foo%s hot%s\", \"bar\", \"dog\") becomes \"foobar hotdog\".\n * @param {string} pattern The string containing the pattern.\n * @param {!Array<*>} subs The items to substitute into the pattern.\n * @return {string} A copy of `str` in which each occurrence of\n *     {@code %s} has been replaced an argument from `var_args`.\n * @private\n */\ngoog.asserts.subs_ = function(pattern, subs) {\n  var splitParts = pattern.split('%s');\n  var returnString = '';\n\n  // Replace up to the last split part. We are inserting in the\n  // positions between split parts.\n  var subLast = splitParts.length - 1;\n  for (var i = 0; i < subLast; i++) {\n    // keep unsupplied as '%s'\n    var sub = (i < subs.length) ? subs[i] : '%s';\n    returnString += splitParts[i] + sub;\n  }\n  return returnString + splitParts[subLast];\n};\n\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\ngoog.asserts.doAssertFailure_ = function(\n    defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  var message = 'Assertion failed';\n  if (givenMessage) {\n    message += ': ' + givenMessage;\n    var args = givenArgs;\n  } else if (defaultMessage) {\n    message += ': ' + defaultMessage;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  var e = new goog.asserts.AssertionError('' + message, args || []);\n  goog.asserts.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\ngoog.asserts.setErrorHandler = function(errorHandler) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    goog.asserts.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\ngoog.asserts.assert = function(condition, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !condition) {\n    goog.asserts.doAssertFailure_(\n        '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\ngoog.asserts.fail = function(opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    goog.asserts.errorHandler_(\n        new goog.asserts.AssertionError(\n            'Failure' + (opt_message ? ': ' + opt_message : ''),\n            Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\ngoog.asserts.assertNumber = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    goog.asserts.doAssertFailure_(\n        'Expected number but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\ngoog.asserts.assertString = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {\n    goog.asserts.doAssertFailure_(\n        'Expected string but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\ngoog.asserts.assertFunction = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    goog.asserts.doAssertFailure_(\n        'Expected function but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\ngoog.asserts.assertObject = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {\n    goog.asserts.doAssertFailure_(\n        'Expected object but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\ngoog.asserts.assertArray = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {\n    goog.asserts.doAssertFailure_(\n        'Expected array but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\ngoog.asserts.assertBoolean = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    goog.asserts.doAssertFailure_(\n        'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\ngoog.asserts.assertElement = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    goog.asserts.doAssertFailure_(\n        'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\ngoog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {\n    goog.asserts.doAssertFailure_(\n        'Expected instanceof %s but got %s.',\n        [goog.asserts.getType_(type), goog.asserts.getType_(value)],\n        opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks whether the value is a finite number, if goog.asserts.ENABLE_ASSERTS\n * is true.\n *\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not a number, or is\n *     a non-finite number such as NaN, Infinity or -Infinity.\n * @return {number} The value initially passed in.\n */\ngoog.asserts.assertFinite = function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS &&\n      (typeof value != 'number' || !isFinite(value))) {\n    goog.asserts.doAssertFailure_(\n        'Expected %s to be a finite number but it is not.', [value],\n        opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\ngoog.asserts.assertObjectPrototypeIsIntact = function() {\n  for (var key in Object.prototype) {\n    goog.asserts.fail(key + ' should not be enumerable in Object.prototype.');\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\ngoog.asserts.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return /** @type {string} */ (value.constructor.displayName) ||\n        value.constructor.name || Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n","// Copyright 2015 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Simple freelist.\n *\n * An anterative to goog.structs.SimplePool, it imposes the requirement that the\n * objects in the list contain a \"next\" property that can be used to maintain\n * the pool.\n */\n\ngoog.provide('goog.async.FreeList');\n\n\n/**\n * @template ITEM\n */\ngoog.async.FreeList = goog.defineClass(null, {\n  /**\n   * @param {function():ITEM} create\n   * @param {function(ITEM):void} reset\n   * @param {number} limit\n   */\n  constructor: function(create, reset, limit) {\n    /** @private @const {number} */\n    this.limit_ = limit;\n    /** @private @const {function()} */\n    this.create_ = create;\n    /** @private @const {function(ITEM):void} */\n    this.reset_ = reset;\n\n    /** @private {number} */\n    this.occupants_ = 0;\n    /** @private {ITEM} */\n    this.head_ = null;\n  },\n\n  /**\n   * @return {ITEM}\n   */\n  get: function() {\n    var item;\n    if (this.occupants_ > 0) {\n      this.occupants_--;\n      item = this.head_;\n      this.head_ = item.next;\n      item.next = null;\n    } else {\n      item = this.create_();\n    }\n    return item;\n  },\n\n  /**\n   * @param {ITEM} item An item available for possible future reuse.\n   */\n  put: function(item) {\n    this.reset_(item);\n    if (this.occupants_ < this.limit_) {\n      this.occupants_++;\n      item.next = this.head_;\n      this.head_ = item;\n    }\n  },\n\n  /**\n   * Visible for testing.\n   * @package\n   * @return {number}\n   */\n  occupants: function() { return this.occupants_; }\n});\n","// Copyright 2015 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('goog.async.WorkItem');\ngoog.provide('goog.async.WorkQueue');\n\ngoog.require('goog.asserts');\ngoog.require('goog.async.FreeList');\n\n\n// TODO(johnlenz): generalize the WorkQueue if this is used by more\n// than goog.async.run.\n\n\n\n/**\n * A low GC workqueue. The key elements of this design:\n *   - avoids the need for goog.bind or equivalent by carrying scope\n *   - avoids the need for array reallocation by using a linked list\n *   - minimizes work entry objects allocation by recycling objects\n * @constructor\n * @final\n * @struct\n */\ngoog.async.WorkQueue = function() {\n  this.workHead_ = null;\n  this.workTail_ = null;\n};\n\n\n/** @define {number} The maximum number of entries to keep for recycling. */\ngoog.define('goog.async.WorkQueue.DEFAULT_MAX_UNUSED', 100);\n\n\n/** @const @private {goog.async.FreeList<goog.async.WorkItem>} */\ngoog.async.WorkQueue.freelist_ = new goog.async.FreeList(\n    function() { return new goog.async.WorkItem(); },\n    function(item) { item.reset(); }, goog.async.WorkQueue.DEFAULT_MAX_UNUSED);\n\n\n/**\n * @param {function()} fn\n * @param {Object|null|undefined} scope\n */\ngoog.async.WorkQueue.prototype.add = function(fn, scope) {\n  var item = this.getUnusedItem_();\n  item.set(fn, scope);\n\n  if (this.workTail_) {\n    this.workTail_.next = item;\n    this.workTail_ = item;\n  } else {\n    goog.asserts.assert(!this.workHead_);\n    this.workHead_ = item;\n    this.workTail_ = item;\n  }\n};\n\n\n/**\n * @return {goog.async.WorkItem}\n */\ngoog.async.WorkQueue.prototype.remove = function() {\n  var item = null;\n\n  if (this.workHead_) {\n    item = this.workHead_;\n    this.workHead_ = this.workHead_.next;\n    if (!this.workHead_) {\n      this.workTail_ = null;\n    }\n    item.next = null;\n  }\n  return item;\n};\n\n\n/**\n * @param {goog.async.WorkItem} item\n */\ngoog.async.WorkQueue.prototype.returnUnused = function(item) {\n  goog.async.WorkQueue.freelist_.put(item);\n};\n\n\n/**\n * @return {goog.async.WorkItem}\n * @private\n */\ngoog.async.WorkQueue.prototype.getUnusedItem_ = function() {\n  return goog.async.WorkQueue.freelist_.get();\n};\n\n\n\n/**\n * @constructor\n * @final\n * @struct\n */\ngoog.async.WorkItem = function() {\n  /** @type {?function()} */\n  this.fn = null;\n  /** @type {Object|null|undefined} */\n  this.scope = null;\n  /** @type {?goog.async.WorkItem} */\n  this.next = null;\n};\n\n\n/**\n * @param {function()} fn\n * @param {Object|null|undefined} scope\n */\ngoog.async.WorkItem.prototype.set = function(fn, scope) {\n  this.fn = fn;\n  this.scope = scope;\n  this.next = null;\n};\n\n\n/** Reset the work item so they don't prevent GC before reuse */\ngoog.async.WorkItem.prototype.reset = function() {\n  this.fn = null;\n  this.scope = null;\n  this.next = null;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('goog.async.run');\n\ngoog.require('goog.async.WorkQueue');\ngoog.require('goog.async.nextTick');\ngoog.require('goog.async.throwException');\n\n\n/**\n * Fires the provided callback just before the current callstack unwinds, or as\n * soon as possible after the current JS execution context.\n * @param {function(this:THIS)} callback\n * @param {THIS=} opt_context Object to use as the \"this value\" when calling\n *     the provided function.\n * @template THIS\n */\ngoog.async.run = function(callback, opt_context) {\n  if (!goog.async.run.schedule_) {\n    goog.async.run.initializeRunner_();\n  }\n  if (!goog.async.run.workQueueScheduled_) {\n    // Nothing is currently scheduled, schedule it now.\n    goog.async.run.schedule_();\n    goog.async.run.workQueueScheduled_ = true;\n  }\n\n  goog.async.run.workQueue_.add(callback, opt_context);\n};\n\n\n/**\n * Initializes the function to use to process the work queue.\n * @private\n */\ngoog.async.run.initializeRunner_ = function() {\n  // If Promises are available in the browser, just schedule the callback\n  // on a fulfilled promise, which is specified to be async, but as fast as\n  // possible.  Use goog.global.Promise instead of just Promise because the\n  // relevant externs may be missing, and don't alias it because this could\n  // confuse the compiler into thinking the polyfill is required when it should\n  // be treated as optional.\n  if (goog.global.Promise && goog.global.Promise.resolve) {\n    var promise = goog.global.Promise.resolve(undefined);\n    goog.async.run.schedule_ = function() {\n      promise.then(goog.async.run.processWorkQueue);\n    };\n  } else {\n    goog.async.run.schedule_ = function() {\n      goog.async.nextTick(goog.async.run.processWorkQueue);\n    };\n  }\n};\n\n\n/**\n * Forces goog.async.run to use nextTick instead of Promise.\n *\n * This should only be done in unit tests. It's useful because MockClock\n * replaces nextTick, but not the browser Promise implementation, so it allows\n * Promise-based code to be tested with MockClock.\n *\n * However, we also want to run promises if the MockClock is no longer in\n * control so we schedule a backup \"setTimeout\" to the unmocked timeout if\n * provided.\n *\n * @param {function(function())=} opt_realSetTimeout\n */\ngoog.async.run.forceNextTick = function(opt_realSetTimeout) {\n  goog.async.run.schedule_ = function() {\n    goog.async.nextTick(goog.async.run.processWorkQueue);\n    if (opt_realSetTimeout) {\n      opt_realSetTimeout(goog.async.run.processWorkQueue);\n    }\n  };\n};\n\n\n/**\n * The function used to schedule work asynchronousely.\n * @private {function()}\n */\ngoog.async.run.schedule_;\n\n\n/** @private {boolean} */\ngoog.async.run.workQueueScheduled_ = false;\n\n\n/** @private {!goog.async.WorkQueue} */\ngoog.async.run.workQueue_ = new goog.async.WorkQueue();\n\n\nif (goog.DEBUG) {\n  /**\n   * Reset the work queue. Only available for tests in debug mode.\n   */\n  goog.async.run.resetQueue = function() {\n    goog.async.run.workQueueScheduled_ = false;\n    goog.async.run.workQueue_ = new goog.async.WorkQueue();\n  };\n}\n\n\n/**\n * Run any pending goog.async.run work items. This function is not intended\n * for general use, but for use by entry point handlers to run items ahead of\n * goog.async.nextTick.\n */\ngoog.async.run.processWorkQueue = function() {\n  // NOTE: additional work queue items may be added while processing.\n  var item = null;\n  while (item = goog.async.run.workQueue_.remove()) {\n    try {\n      item.fn.call(item.scope);\n    } catch (e) {\n      goog.async.throwException(e);\n    }\n    goog.async.run.workQueue_.returnUnused(item);\n  }\n\n  // There are no more work items, allow processing to be scheduled again.\n  goog.async.run.workQueueScheduled_ = false;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for manipulating arrays.\n *\n * @author arv@google.com (Erik Arvidsson)\n */\n\n\ngoog.provide('goog.array');\n\ngoog.require('goog.asserts');\n\n\n/**\n * @define {boolean} NATIVE_ARRAY_PROTOTYPES indicates whether the code should\n * rely on Array.prototype functions, if available.\n *\n * The Array.prototype functions can be defined by external libraries like\n * Prototype and setting this flag to false forces closure to use its own\n * goog.array implementation.\n *\n * If your javascript can be loaded by a third party site and you are wary about\n * relying on the prototype functions, specify\n * \"--define goog.NATIVE_ARRAY_PROTOTYPES=false\" to the JSCompiler.\n *\n * Setting goog.TRUSTED_SITE to false will automatically set\n * NATIVE_ARRAY_PROTOTYPES to false.\n */\ngoog.define('goog.NATIVE_ARRAY_PROTOTYPES', goog.TRUSTED_SITE);\n\n\n/**\n * @define {boolean} If true, JSCompiler will use the native implementation of\n * array functions where appropriate (e.g., `Array#filter`) and remove the\n * unused pure JS implementation.\n */\ngoog.define('goog.array.ASSUME_NATIVE_FUNCTIONS', false);\n\n\n/**\n * Returns the last element in an array without removing it.\n * Same as goog.array.last.\n * @param {IArrayLike<T>|string} array The array.\n * @return {T} Last item in array.\n * @template T\n */\ngoog.array.peek = function(array) {\n  return array[array.length - 1];\n};\n\n\n/**\n * Returns the last element in an array without removing it.\n * Same as goog.array.peek.\n * @param {IArrayLike<T>|string} array The array.\n * @return {T} Last item in array.\n * @template T\n */\ngoog.array.last = goog.array.peek;\n\n// NOTE(arv): Since most of the array functions are generic it allows you to\n// pass an array-like object. Strings have a length and are considered array-\n// like. However, the 'in' operator does not work on strings so we cannot just\n// use the array path even if the browser supports indexing into strings. We\n// therefore end up splitting the string.\n\n\n/**\n * Returns the index of the first element of an array with a specified value, or\n * -1 if the element is not present in the array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-indexof}\n *\n * @param {IArrayLike<T>|string} arr The array to be searched.\n * @param {T} obj The object for which we are searching.\n * @param {number=} opt_fromIndex The index at which to start the search. If\n *     omitted the search starts at index 0.\n * @return {number} The index of the first matching array element.\n * @template T\n */\ngoog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ?\n    function(arr, obj, opt_fromIndex) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);\n    } :\n    function(arr, obj, opt_fromIndex) {\n      var fromIndex = opt_fromIndex == null ?\n          0 :\n          (opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) :\n                               opt_fromIndex);\n\n      if (goog.isString(arr)) {\n        // Array.prototype.indexOf uses === so only strings should be found.\n        if (!goog.isString(obj) || obj.length != 1) {\n          return -1;\n        }\n        return arr.indexOf(obj, fromIndex);\n      }\n\n      for (var i = fromIndex; i < arr.length; i++) {\n        if (i in arr && arr[i] === obj) return i;\n      }\n      return -1;\n    };\n\n\n/**\n * Returns the index of the last element of an array with a specified value, or\n * -1 if the element is not present in the array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-lastindexof}\n *\n * @param {!IArrayLike<T>|string} arr The array to be searched.\n * @param {T} obj The object for which we are searching.\n * @param {?number=} opt_fromIndex The index at which to start the search. If\n *     omitted the search starts at the end of the array.\n * @return {number} The index of the last matching array element.\n * @template T\n */\ngoog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ?\n    function(arr, obj, opt_fromIndex) {\n      goog.asserts.assert(arr.length != null);\n\n      // Firefox treats undefined and null as 0 in the fromIndex argument which\n      // leads it to always return -1\n      var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;\n      return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);\n    } :\n    function(arr, obj, opt_fromIndex) {\n      var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;\n\n      if (fromIndex < 0) {\n        fromIndex = Math.max(0, arr.length + fromIndex);\n      }\n\n      if (goog.isString(arr)) {\n        // Array.prototype.lastIndexOf uses === so only strings should be found.\n        if (!goog.isString(obj) || obj.length != 1) {\n          return -1;\n        }\n        return arr.lastIndexOf(obj, fromIndex);\n      }\n\n      for (var i = fromIndex; i >= 0; i--) {\n        if (i in arr && arr[i] === obj) return i;\n      }\n      return -1;\n    };\n\n\n/**\n * Calls a function for each element in an array. Skips holes in the array.\n * See {@link http://tinyurl.com/developer-mozilla-org-array-foreach}\n *\n * @param {IArrayLike<T>|string} arr Array or array like object over\n *     which to iterate.\n * @param {?function(this: S, T, number, ?): ?} f The function to call for every\n *     element. This function takes 3 arguments (the element, the index and the\n *     array). The return value is ignored.\n * @param {S=} opt_obj The object to be used as the value of 'this' within f.\n * @template T,S\n */\ngoog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      Array.prototype.forEach.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var arr2 = goog.isString(arr) ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2) {\n          f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n        }\n      }\n    };\n\n\n/**\n * Calls a function for each element in an array, starting from the last\n * element rather than the first.\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this: S, T, number, ?): ?} f The function to call for every\n *     element. This function\n *     takes 3 arguments (the element, the index and the array). The return\n *     value is ignored.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @template T,S\n */\ngoog.array.forEachRight = function(arr, f, opt_obj) {\n  var l = arr.length;  // must be fixed during loop... see docs\n  var arr2 = goog.isString(arr) ? arr.split('') : arr;\n  for (var i = l - 1; i >= 0; --i) {\n    if (i in arr2) {\n      f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n    }\n  }\n};\n\n\n/**\n * Calls a function for each element in an array, and if the function returns\n * true adds the element to a new array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-filter}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?):boolean} f The function to call for\n *     every element. This function\n *     takes 3 arguments (the element, the index and the array) and must\n *     return a Boolean. If the return value is true the element is added to the\n *     result array. If it is false the element is not included.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {!Array<T>} a new array in which only elements that passed the test\n *     are present.\n * @template T,S\n */\ngoog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.filter.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var res = [];\n      var resLength = 0;\n      var arr2 = goog.isString(arr) ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2) {\n          var val = arr2[i];  // in case f mutates arr2\n          if (f.call(/** @type {?} */ (opt_obj), val, i, arr)) {\n            res[resLength++] = val;\n          }\n        }\n      }\n      return res;\n    };\n\n\n/**\n * Calls a function for each element in an array and inserts the result into a\n * new array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-map}\n *\n * @param {IArrayLike<VALUE>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this:THIS, VALUE, number, ?): RESULT} f The function to call\n *     for every element. This function takes 3 arguments (the element,\n *     the index and the array) and should return something. The result will be\n *     inserted into a new array.\n * @param {THIS=} opt_obj The object to be used as the value of 'this' within f.\n * @return {!Array<RESULT>} a new array with the results from f.\n * @template THIS, VALUE, RESULT\n */\ngoog.array.map = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.map.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var res = new Array(l);\n      var arr2 = goog.isString(arr) ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2) {\n          res[i] = f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n        }\n      }\n      return res;\n    };\n\n\n/**\n * Passes every element of an array into a function and accumulates the result.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-reduce}\n *\n * For example:\n * var a = [1, 2, 3, 4];\n * goog.array.reduce(a, function(r, v, i, arr) {return r + v;}, 0);\n * returns 10\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {function(this:S, R, T, number, ?) : R} f The function to call for\n *     every element. This function\n *     takes 4 arguments (the function's previous result or the initial value,\n *     the value of the current array element, the current array index, and the\n *     array itself)\n *     function(previousValue, currentValue, index, array).\n * @param {?} val The initial value to pass into the function on the first call.\n * @param {S=} opt_obj  The object to be used as the value of 'this'\n *     within f.\n * @return {R} Result of evaluating f repeatedly across the values of the array.\n * @template T,S,R\n */\ngoog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ?\n    function(arr, f, val, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n      if (opt_obj) {\n        f = goog.bind(f, opt_obj);\n      }\n      return Array.prototype.reduce.call(arr, f, val);\n    } :\n    function(arr, f, val, opt_obj) {\n      var rval = val;\n      goog.array.forEach(arr, function(val, index) {\n        rval = f.call(/** @type {?} */ (opt_obj), rval, val, index, arr);\n      });\n      return rval;\n    };\n\n\n/**\n * Passes every element of an array into a function and accumulates the result,\n * starting from the last element and working towards the first.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-reduceright}\n *\n * For example:\n * var a = ['a', 'b', 'c'];\n * goog.array.reduceRight(a, function(r, v, i, arr) {return r + v;}, '');\n * returns 'cba'\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, R, T, number, ?) : R} f The function to call for\n *     every element. This function\n *     takes 4 arguments (the function's previous result or the initial value,\n *     the value of the current array element, the current array index, and the\n *     array itself)\n *     function(previousValue, currentValue, index, array).\n * @param {?} val The initial value to pass into the function on the first call.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {R} Object returned as a result of evaluating f repeatedly across the\n *     values of the array.\n * @template T,S,R\n */\ngoog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ?\n    function(arr, f, val, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n      goog.asserts.assert(f != null);\n      if (opt_obj) {\n        f = goog.bind(f, opt_obj);\n      }\n      return Array.prototype.reduceRight.call(arr, f, val);\n    } :\n    function(arr, f, val, opt_obj) {\n      var rval = val;\n      goog.array.forEachRight(arr, function(val, index) {\n        rval = f.call(/** @type {?} */ (opt_obj), rval, val, index, arr);\n      });\n      return rval;\n    };\n\n\n/**\n * Calls f for each element of an array. If any call returns true, some()\n * returns true (without checking the remaining elements). If all calls\n * return false, some() returns false.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-some}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj  The object to be used as the value of 'this'\n *     within f.\n * @return {boolean} true if any element passes the test.\n * @template T,S\n */\ngoog.array.some = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.some.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var arr2 = goog.isString(arr) ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n\n/**\n * Call f for each element of an array. If all calls return true, every()\n * returns true. If any call returns false, every() returns false and\n * does not continue to check the remaining elements.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-every}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {boolean} false if any element fails the test.\n * @template T,S\n */\ngoog.array.every = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.every.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var arr2 = goog.isString(arr) ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2 && !f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n\n/**\n * Counts the array elements that fulfill the predicate, i.e. for which the\n * callback function returns true. Skips holes in the array.\n *\n * @param {!IArrayLike<T>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this: S, T, number, ?): boolean} f The function to call for\n *     every element. Takes 3 arguments (the element, the index and the array).\n * @param {S=} opt_obj The object to be used as the value of 'this' within f.\n * @return {number} The number of the matching elements.\n * @template T,S\n */\ngoog.array.count = function(arr, f, opt_obj) {\n  var count = 0;\n  goog.array.forEach(arr, function(element, index, arr) {\n    if (f.call(/** @type {?} */ (opt_obj), element, index, arr)) {\n      ++count;\n    }\n  }, opt_obj);\n  return count;\n};\n\n\n/**\n * Search an array for the first element that satisfies a given condition and\n * return that element.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {T|null} The first array element that passes the test, or null if no\n *     element is found.\n * @template T,S\n */\ngoog.array.find = function(arr, f, opt_obj) {\n  var i = goog.array.findIndex(arr, f, opt_obj);\n  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];\n};\n\n\n/**\n * Search an array for the first element that satisfies a given condition and\n * return its index.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The index of the first array element that passes the test,\n *     or -1 if no element is found.\n * @template T,S\n */\ngoog.array.findIndex = function(arr, f, opt_obj) {\n  var l = arr.length;  // must be fixed during loop... see docs\n  var arr2 = goog.isString(arr) ? arr.split('') : arr;\n  for (var i = 0; i < l; i++) {\n    if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n/**\n * Search an array (in reverse order) for the last element that satisfies a\n * given condition and return that element.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {T|null} The last array element that passes the test, or null if no\n *     element is found.\n * @template T,S\n */\ngoog.array.findRight = function(arr, f, opt_obj) {\n  var i = goog.array.findIndexRight(arr, f, opt_obj);\n  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];\n};\n\n\n/**\n * Search an array (in reverse order) for the last element that satisfies a\n * given condition and return its index.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The index of the last array element that passes the test,\n *     or -1 if no element is found.\n * @template T,S\n */\ngoog.array.findIndexRight = function(arr, f, opt_obj) {\n  var l = arr.length;  // must be fixed during loop... see docs\n  var arr2 = goog.isString(arr) ? arr.split('') : arr;\n  for (var i = l - 1; i >= 0; i--) {\n    if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n/**\n * Whether the array contains the given object.\n * @param {IArrayLike<?>|string} arr The array to test for the presence of the\n *     element.\n * @param {*} obj The object for which to test.\n * @return {boolean} true if obj is present.\n */\ngoog.array.contains = function(arr, obj) {\n  return goog.array.indexOf(arr, obj) >= 0;\n};\n\n\n/**\n * Whether the array is empty.\n * @param {IArrayLike<?>|string} arr The array to test.\n * @return {boolean} true if empty.\n */\ngoog.array.isEmpty = function(arr) {\n  return arr.length == 0;\n};\n\n\n/**\n * Clears the array.\n * @param {IArrayLike<?>} arr Array or array like object to clear.\n */\ngoog.array.clear = function(arr) {\n  // For non real arrays we don't have the magic length so we delete the\n  // indices.\n  if (!goog.isArray(arr)) {\n    for (var i = arr.length - 1; i >= 0; i--) {\n      delete arr[i];\n    }\n  }\n  arr.length = 0;\n};\n\n\n/**\n * Pushes an item into an array, if it's not already in the array.\n * @param {Array<T>} arr Array into which to insert the item.\n * @param {T} obj Value to add.\n * @template T\n */\ngoog.array.insert = function(arr, obj) {\n  if (!goog.array.contains(arr, obj)) {\n    arr.push(obj);\n  }\n};\n\n\n/**\n * Inserts an object at the given index of the array.\n * @param {IArrayLike<?>} arr The array to modify.\n * @param {*} obj The object to insert.\n * @param {number=} opt_i The index at which to insert the object. If omitted,\n *      treated as 0. A negative index is counted from the end of the array.\n */\ngoog.array.insertAt = function(arr, obj, opt_i) {\n  goog.array.splice(arr, opt_i, 0, obj);\n};\n\n\n/**\n * Inserts at the given index of the array, all elements of another array.\n * @param {IArrayLike<?>} arr The array to modify.\n * @param {IArrayLike<?>} elementsToAdd The array of elements to add.\n * @param {number=} opt_i The index at which to insert the object. If omitted,\n *      treated as 0. A negative index is counted from the end of the array.\n */\ngoog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {\n  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);\n};\n\n\n/**\n * Inserts an object into an array before a specified object.\n * @param {Array<T>} arr The array to modify.\n * @param {T} obj The object to insert.\n * @param {T=} opt_obj2 The object before which obj should be inserted. If obj2\n *     is omitted or not found, obj is inserted at the end of the array.\n * @template T\n */\ngoog.array.insertBefore = function(arr, obj, opt_obj2) {\n  var i;\n  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {\n    arr.push(obj);\n  } else {\n    goog.array.insertAt(arr, obj, i);\n  }\n};\n\n\n/**\n * Removes the first occurrence of a particular value from an array.\n * @param {IArrayLike<T>} arr Array from which to remove\n *     value.\n * @param {T} obj Object to remove.\n * @return {boolean} True if an element was removed.\n * @template T\n */\ngoog.array.remove = function(arr, obj) {\n  var i = goog.array.indexOf(arr, obj);\n  var rv;\n  if ((rv = i >= 0)) {\n    goog.array.removeAt(arr, i);\n  }\n  return rv;\n};\n\n\n/**\n * Removes the last occurrence of a particular value from an array.\n * @param {!IArrayLike<T>} arr Array from which to remove value.\n * @param {T} obj Object to remove.\n * @return {boolean} True if an element was removed.\n * @template T\n */\ngoog.array.removeLast = function(arr, obj) {\n  var i = goog.array.lastIndexOf(arr, obj);\n  if (i >= 0) {\n    goog.array.removeAt(arr, i);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes from an array the element at index i\n * @param {IArrayLike<?>} arr Array or array like object from which to\n *     remove value.\n * @param {number} i The index to remove.\n * @return {boolean} True if an element was removed.\n */\ngoog.array.removeAt = function(arr, i) {\n  goog.asserts.assert(arr.length != null);\n\n  // use generic form of splice\n  // splice returns the removed items and if successful the length of that\n  // will be 1\n  return Array.prototype.splice.call(arr, i, 1).length == 1;\n};\n\n\n/**\n * Removes the first value that satisfies the given condition.\n * @param {IArrayLike<T>} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {boolean} True if an element was removed.\n * @template T,S\n */\ngoog.array.removeIf = function(arr, f, opt_obj) {\n  var i = goog.array.findIndex(arr, f, opt_obj);\n  if (i >= 0) {\n    goog.array.removeAt(arr, i);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes all values that satisfy the given condition.\n * @param {IArrayLike<T>} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The number of items removed\n * @template T,S\n */\ngoog.array.removeAllIf = function(arr, f, opt_obj) {\n  var removedCount = 0;\n  goog.array.forEachRight(arr, function(val, index) {\n    if (f.call(/** @type {?} */ (opt_obj), val, index, arr)) {\n      if (goog.array.removeAt(arr, index)) {\n        removedCount++;\n      }\n    }\n  });\n  return removedCount;\n};\n\n\n/**\n * Returns a new array that is the result of joining the arguments.  If arrays\n * are passed then their items are added, however, if non-arrays are passed they\n * will be added to the return array as is.\n *\n * Note that ArrayLike objects will be added as is, rather than having their\n * items added.\n *\n * goog.array.concat([1, 2], [3, 4]) -> [1, 2, 3, 4]\n * goog.array.concat(0, [1, 2]) -> [0, 1, 2]\n * goog.array.concat([1, 2], null) -> [1, 2, null]\n *\n * There is bug in all current versions of IE (6, 7 and 8) where arrays created\n * in an iframe become corrupted soon (not immediately) after the iframe is\n * destroyed. This is common if loading data via goog.net.IframeIo, for example.\n * This corruption only affects the concat method which will start throwing\n * Catastrophic Errors (#-2147418113).\n *\n * See http://endoflow.com/scratch/corrupted-arrays.html for a test case.\n *\n * Internally goog.array should use this, so that all methods will continue to\n * work on these broken array objects.\n *\n * @param {...*} var_args Items to concatenate.  Arrays will have each item\n *     added, while primitives and objects will be added as is.\n * @return {!Array<?>} The new resultant array.\n */\ngoog.array.concat = function(var_args) {\n  return Array.prototype.concat.apply([], arguments);\n};\n\n\n/**\n * Returns a new array that contains the contents of all the arrays passed.\n * @param {...!Array<T>} var_args\n * @return {!Array<T>}\n * @template T\n */\ngoog.array.join = function(var_args) {\n  return Array.prototype.concat.apply([], arguments);\n};\n\n\n/**\n * Converts an object to an array.\n * @param {IArrayLike<T>|string} object  The object to convert to an\n *     array.\n * @return {!Array<T>} The object converted into an array. If object has a\n *     length property, every property indexed with a non-negative number\n *     less than length will be included in the result. If object does not\n *     have a length property, an empty array will be returned.\n * @template T\n */\ngoog.array.toArray = function(object) {\n  var length = object.length;\n\n  // If length is not a number the following it false. This case is kept for\n  // backwards compatibility since there are callers that pass objects that are\n  // not array like.\n  if (length > 0) {\n    var rv = new Array(length);\n    for (var i = 0; i < length; i++) {\n      rv[i] = object[i];\n    }\n    return rv;\n  }\n  return [];\n};\n\n\n/**\n * Does a shallow copy of an array.\n * @param {IArrayLike<T>|string} arr  Array or array-like object to\n *     clone.\n * @return {!Array<T>} Clone of the input array.\n * @template T\n */\ngoog.array.clone = goog.array.toArray;\n\n\n/**\n * Extends an array with another array, element, or \"array like\" object.\n * This function operates 'in-place', it does not create a new Array.\n *\n * Example:\n * var a = [];\n * goog.array.extend(a, [0, 1]);\n * a; // [0, 1]\n * goog.array.extend(a, 2);\n * a; // [0, 1, 2]\n *\n * @param {Array<VALUE>} arr1  The array to modify.\n * @param {...(IArrayLike<VALUE>|VALUE)} var_args The elements or arrays of\n *     elements to add to arr1.\n * @template VALUE\n */\ngoog.array.extend = function(arr1, var_args) {\n  for (var i = 1; i < arguments.length; i++) {\n    var arr2 = arguments[i];\n    if (goog.isArrayLike(arr2)) {\n      var len1 = arr1.length || 0;\n      var len2 = arr2.length || 0;\n      arr1.length = len1 + len2;\n      for (var j = 0; j < len2; j++) {\n        arr1[len1 + j] = arr2[j];\n      }\n    } else {\n      arr1.push(arr2);\n    }\n  }\n};\n\n\n/**\n * Adds or removes elements from an array. This is a generic version of Array\n * splice. This means that it might work on other objects similar to arrays,\n * such as the arguments object.\n *\n * @param {IArrayLike<T>} arr The array to modify.\n * @param {number|undefined} index The index at which to start changing the\n *     array. If not defined, treated as 0.\n * @param {number} howMany How many elements to remove (0 means no removal. A\n *     value below 0 is treated as zero and so is any other non number. Numbers\n *     are floored).\n * @param {...T} var_args Optional, additional elements to insert into the\n *     array.\n * @return {!Array<T>} the removed elements.\n * @template T\n */\ngoog.array.splice = function(arr, index, howMany, var_args) {\n  goog.asserts.assert(arr.length != null);\n\n  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));\n};\n\n\n/**\n * Returns a new array from a segment of an array. This is a generic version of\n * Array slice. This means that it might work on other objects similar to\n * arrays, such as the arguments object.\n *\n * @param {IArrayLike<T>|string} arr The array from\n * which to copy a segment.\n * @param {number} start The index of the first element to copy.\n * @param {number=} opt_end The index after the last element to copy.\n * @return {!Array<T>} A new array containing the specified segment of the\n *     original array.\n * @template T\n */\ngoog.array.slice = function(arr, start, opt_end) {\n  goog.asserts.assert(arr.length != null);\n\n  // passing 1 arg to slice is not the same as passing 2 where the second is\n  // null or undefined (in that case the second argument is treated as 0).\n  // we could use slice on the arguments object and then use apply instead of\n  // testing the length\n  if (arguments.length <= 2) {\n    return Array.prototype.slice.call(arr, start);\n  } else {\n    return Array.prototype.slice.call(arr, start, opt_end);\n  }\n};\n\n\n/**\n * Removes all duplicates from an array (retaining only the first\n * occurrence of each array element).  This function modifies the\n * array in place and doesn't change the order of the non-duplicate items.\n *\n * For objects, duplicates are identified as having the same unique ID as\n * defined by {@link goog.getUid}.\n *\n * Alternatively you can specify a custom hash function that returns a unique\n * value for each item in the array it should consider unique.\n *\n * Runtime: N,\n * Worstcase space: 2N (no dupes)\n *\n * @param {IArrayLike<T>} arr The array from which to remove\n *     duplicates.\n * @param {Array=} opt_rv An optional array in which to return the results,\n *     instead of performing the removal inplace.  If specified, the original\n *     array will remain unchanged.\n * @param {function(T):string=} opt_hashFn An optional function to use to\n *     apply to every item in the array. This function should return a unique\n *     value for each item in the array it should consider unique.\n * @template T\n */\ngoog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {\n  var returnArray = opt_rv || arr;\n  var defaultHashFn = function(item) {\n    // Prefix each type with a single character representing the type to\n    // prevent conflicting keys (e.g. true and 'true').\n    return goog.isObject(item) ? 'o' + goog.getUid(item) :\n                                 (typeof item).charAt(0) + item;\n  };\n  var hashFn = opt_hashFn || defaultHashFn;\n\n  var seen = {}, cursorInsert = 0, cursorRead = 0;\n  while (cursorRead < arr.length) {\n    var current = arr[cursorRead++];\n    var key = hashFn(current);\n    if (!Object.prototype.hasOwnProperty.call(seen, key)) {\n      seen[key] = true;\n      returnArray[cursorInsert++] = current;\n    }\n  }\n  returnArray.length = cursorInsert;\n};\n\n\n/**\n * Searches the specified array for the specified target using the binary\n * search algorithm.  If no opt_compareFn is specified, elements are compared\n * using <code>goog.array.defaultCompare</code>, which compares the elements\n * using the built in < and > operators.  This will produce the expected\n * behavior for homogeneous arrays of String(s) and Number(s). The array\n * specified <b>must</b> be sorted in ascending order (as defined by the\n * comparison function).  If the array is not sorted, results are undefined.\n * If the array contains multiple instances of the specified target value, any\n * of these instances may be found.\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<VALUE>} arr The array to be searched.\n * @param {TARGET} target The sought value.\n * @param {function(TARGET, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {number} Lowest index of the target value if found, otherwise\n *     (-(insertion point) - 1). The insertion point is where the value should\n *     be inserted into arr to preserve the sorted property.  Return value >= 0\n *     iff target is found.\n * @template TARGET, VALUE\n */\ngoog.array.binarySearch = function(arr, target, opt_compareFn) {\n  return goog.array.binarySearch_(\n      arr, opt_compareFn || goog.array.defaultCompare, false /* isEvaluator */,\n      target);\n};\n\n\n/**\n * Selects an index in the specified array using the binary search algorithm.\n * The evaluator receives an element and determines whether the desired index\n * is before, at, or after it.  The evaluator must be consistent (formally,\n * goog.array.map(goog.array.map(arr, evaluator, opt_obj), goog.math.sign)\n * must be monotonically non-increasing).\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<VALUE>} arr The array to be searched.\n * @param {function(this:THIS, VALUE, number, ?): number} evaluator\n *     Evaluator function that receives 3 arguments (the element, the index and\n *     the array). Should return a negative number, zero, or a positive number\n *     depending on whether the desired index is before, at, or after the\n *     element passed to it.\n * @param {THIS=} opt_obj The object to be used as the value of 'this'\n *     within evaluator.\n * @return {number} Index of the leftmost element matched by the evaluator, if\n *     such exists; otherwise (-(insertion point) - 1). The insertion point is\n *     the index of the first element for which the evaluator returns negative,\n *     or arr.length if no such element exists. The return value is non-negative\n *     iff a match is found.\n * @template THIS, VALUE\n */\ngoog.array.binarySelect = function(arr, evaluator, opt_obj) {\n  return goog.array.binarySearch_(\n      arr, evaluator, true /* isEvaluator */, undefined /* opt_target */,\n      opt_obj);\n};\n\n\n/**\n * Implementation of a binary search algorithm which knows how to use both\n * comparison functions and evaluators. If an evaluator is provided, will call\n * the evaluator with the given optional data object, conforming to the\n * interface defined in binarySelect. Otherwise, if a comparison function is\n * provided, will call the comparison function against the given data object.\n *\n * This implementation purposefully does not use goog.bind or goog.partial for\n * performance reasons.\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<?>} arr The array to be searched.\n * @param {function(?, ?, ?): number | function(?, ?): number} compareFn\n *     Either an evaluator or a comparison function, as defined by binarySearch\n *     and binarySelect above.\n * @param {boolean} isEvaluator Whether the function is an evaluator or a\n *     comparison function.\n * @param {?=} opt_target If the function is a comparison function, then\n *     this is the target to binary search for.\n * @param {Object=} opt_selfObj If the function is an evaluator, this is an\n *     optional this object for the evaluator.\n * @return {number} Lowest index of the target value if found, otherwise\n *     (-(insertion point) - 1). The insertion point is where the value should\n *     be inserted into arr to preserve the sorted property.  Return value >= 0\n *     iff target is found.\n * @private\n */\ngoog.array.binarySearch_ = function(\n    arr, compareFn, isEvaluator, opt_target, opt_selfObj) {\n  var left = 0;            // inclusive\n  var right = arr.length;  // exclusive\n  var found;\n  while (left < right) {\n    var middle = (left + right) >> 1;\n    var compareResult;\n    if (isEvaluator) {\n      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);\n    } else {\n      // NOTE(dimvar): To avoid this cast, we'd have to use function overloading\n      // for the type of binarySearch_, which the type system can't express yet.\n      compareResult = /** @type {function(?, ?): number} */ (compareFn)(\n          opt_target, arr[middle]);\n    }\n    if (compareResult > 0) {\n      left = middle + 1;\n    } else {\n      right = middle;\n      // We are looking for the lowest index so we can't return immediately.\n      found = !compareResult;\n    }\n  }\n  // left is the index if found, or the insertion point otherwise.\n  // ~left is a shorthand for -left - 1.\n  return found ? left : ~left;\n};\n\n\n/**\n * Sorts the specified array into ascending order.  If no opt_compareFn is\n * specified, elements are compared using\n * <code>goog.array.defaultCompare</code>, which compares the elements using\n * the built in < and > operators.  This will produce the expected behavior\n * for homogeneous arrays of String(s) and Number(s), unlike the native sort,\n * but will give unpredictable results for heterogeneous lists of strings and\n * numbers with different numbers of digits.\n *\n * This sort is not guaranteed to be stable.\n *\n * Runtime: Same as <code>Array.prototype.sort</code>\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {?function(T,T):number=} opt_compareFn Optional comparison\n *     function by which the\n *     array is to be ordered. Should take 2 arguments to compare, and return a\n *     negative number, zero, or a positive number depending on whether the\n *     first argument is less than, equal to, or greater than the second.\n * @template T\n */\ngoog.array.sort = function(arr, opt_compareFn) {\n  // TODO(arv): Update type annotation since null is not accepted.\n  arr.sort(opt_compareFn || goog.array.defaultCompare);\n};\n\n\n/**\n * Sorts the specified array into ascending order in a stable way.  If no\n * opt_compareFn is specified, elements are compared using\n * <code>goog.array.defaultCompare</code>, which compares the elements using\n * the built in < and > operators.  This will produce the expected behavior\n * for homogeneous arrays of String(s) and Number(s).\n *\n * Runtime: Same as <code>Array.prototype.sort</code>, plus an additional\n * O(n) overhead of copying the array twice.\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {?function(T, T): number=} opt_compareFn Optional comparison function\n *     by which the array is to be ordered. Should take 2 arguments to compare,\n *     and return a negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template T\n */\ngoog.array.stableSort = function(arr, opt_compareFn) {\n  var compArr = new Array(arr.length);\n  for (var i = 0; i < arr.length; i++) {\n    compArr[i] = {index: i, value: arr[i]};\n  }\n  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;\n  function stableCompareFn(obj1, obj2) {\n    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;\n  }\n  goog.array.sort(compArr, stableCompareFn);\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = compArr[i].value;\n  }\n};\n\n\n/**\n * Sort the specified array into ascending order based on item keys\n * returned by the specified key function.\n * If no opt_compareFn is specified, the keys are compared in ascending order\n * using <code>goog.array.defaultCompare</code>.\n *\n * Runtime: O(S(f(n)), where S is runtime of <code>goog.array.sort</code>\n * and f(n) is runtime of the key function.\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {function(T): K} keyFn Function taking array element and returning\n *     a key used for sorting this element.\n * @param {?function(K, K): number=} opt_compareFn Optional comparison function\n *     by which the keys are to be ordered. Should take 2 arguments to compare,\n *     and return a negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template T,K\n */\ngoog.array.sortByKey = function(arr, keyFn, opt_compareFn) {\n  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;\n  goog.array.sort(\n      arr, function(a, b) { return keyCompareFn(keyFn(a), keyFn(b)); });\n};\n\n\n/**\n * Sorts an array of objects by the specified object key and compare\n * function. If no compare function is provided, the key values are\n * compared in ascending order using <code>goog.array.defaultCompare</code>.\n * This won't work for keys that get renamed by the compiler. So use\n * {'foo': 1, 'bar': 2} rather than {foo: 1, bar: 2}.\n * @param {Array<Object>} arr An array of objects to sort.\n * @param {string} key The object key to sort by.\n * @param {Function=} opt_compareFn The function to use to compare key\n *     values.\n */\ngoog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {\n  goog.array.sortByKey(arr, function(obj) { return obj[key]; }, opt_compareFn);\n};\n\n\n/**\n * Tells if the array is sorted.\n * @param {!IArrayLike<T>} arr The array.\n * @param {?function(T,T):number=} opt_compareFn Function to compare the\n *     array elements.\n *     Should take 2 arguments to compare, and return a negative number, zero,\n *     or a positive number depending on whether the first argument is less\n *     than, equal to, or greater than the second.\n * @param {boolean=} opt_strict If true no equal elements are allowed.\n * @return {boolean} Whether the array is sorted.\n * @template T\n */\ngoog.array.isSorted = function(arr, opt_compareFn, opt_strict) {\n  var compare = opt_compareFn || goog.array.defaultCompare;\n  for (var i = 1; i < arr.length; i++) {\n    var compareResult = compare(arr[i - 1], arr[i]);\n    if (compareResult > 0 || compareResult == 0 && opt_strict) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * Compares two arrays for equality. Two arrays are considered equal if they\n * have the same length and their corresponding elements are equal according to\n * the comparison function.\n *\n * @param {IArrayLike<?>} arr1 The first array to compare.\n * @param {IArrayLike<?>} arr2 The second array to compare.\n * @param {Function=} opt_equalsFn Optional comparison function.\n *     Should take 2 arguments to compare, and return true if the arguments\n *     are equal. Defaults to {@link goog.array.defaultCompareEquality} which\n *     compares the elements using the built-in '===' operator.\n * @return {boolean} Whether the two arrays are equal.\n */\ngoog.array.equals = function(arr1, arr2, opt_equalsFn) {\n  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) ||\n      arr1.length != arr2.length) {\n    return false;\n  }\n  var l = arr1.length;\n  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;\n  for (var i = 0; i < l; i++) {\n    if (!equalsFn(arr1[i], arr2[i])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * 3-way array compare function.\n * @param {!IArrayLike<VALUE>} arr1 The first array to\n *     compare.\n * @param {!IArrayLike<VALUE>} arr2 The second array to\n *     compare.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is to be ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {number} Negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template VALUE\n */\ngoog.array.compare3 = function(arr1, arr2, opt_compareFn) {\n  var compare = opt_compareFn || goog.array.defaultCompare;\n  var l = Math.min(arr1.length, arr2.length);\n  for (var i = 0; i < l; i++) {\n    var result = compare(arr1[i], arr2[i]);\n    if (result != 0) {\n      return result;\n    }\n  }\n  return goog.array.defaultCompare(arr1.length, arr2.length);\n};\n\n\n/**\n * Compares its two arguments for order, using the built in < and >\n * operators.\n * @param {VALUE} a The first object to be compared.\n * @param {VALUE} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second,\n *     respectively.\n * @template VALUE\n */\ngoog.array.defaultCompare = function(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n};\n\n\n/**\n * Compares its two arguments for inverse order, using the built in < and >\n * operators.\n * @param {VALUE} a The first object to be compared.\n * @param {VALUE} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second,\n *     respectively.\n * @template VALUE\n */\ngoog.array.inverseDefaultCompare = function(a, b) {\n  return -goog.array.defaultCompare(a, b);\n};\n\n\n/**\n * Compares its two arguments for equality, using the built in === operator.\n * @param {*} a The first object to compare.\n * @param {*} b The second object to compare.\n * @return {boolean} True if the two arguments are equal, false otherwise.\n */\ngoog.array.defaultCompareEquality = function(a, b) {\n  return a === b;\n};\n\n\n/**\n * Inserts a value into a sorted array. The array is not modified if the\n * value is already present.\n * @param {IArrayLike<VALUE>} array The array to modify.\n * @param {VALUE} value The object to insert.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {boolean} True if an element was inserted.\n * @template VALUE\n */\ngoog.array.binaryInsert = function(array, value, opt_compareFn) {\n  var index = goog.array.binarySearch(array, value, opt_compareFn);\n  if (index < 0) {\n    goog.array.insertAt(array, value, -(index + 1));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes a value from a sorted array.\n * @param {!IArrayLike<VALUE>} array The array to modify.\n * @param {VALUE} value The object to remove.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {boolean} True if an element was removed.\n * @template VALUE\n */\ngoog.array.binaryRemove = function(array, value, opt_compareFn) {\n  var index = goog.array.binarySearch(array, value, opt_compareFn);\n  return (index >= 0) ? goog.array.removeAt(array, index) : false;\n};\n\n\n/**\n * Splits an array into disjoint buckets according to a splitting function.\n * @param {IArrayLike<T>} array The array.\n * @param {function(this:S, T, number, !IArrayLike<T>):?} sorter Function to\n *     call for every element.  This takes 3 arguments (the element, the index\n *     and the array) and must return a valid object key (a string, number,\n *     etc), or undefined, if that object should not be placed in a bucket.\n * @param {S=} opt_obj The object to be used as the value of 'this' within\n *     sorter.\n * @return {!Object<!Array<T>>} An object, with keys being all of the unique\n *     return values of sorter, and values being arrays containing the items for\n *     which the splitter returned that key.\n * @template T,S\n */\ngoog.array.bucket = function(array, sorter, opt_obj) {\n  var buckets = {};\n\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i];\n    var key = sorter.call(/** @type {?} */ (opt_obj), value, i, array);\n    if (goog.isDef(key)) {\n      // Push the value to the right bucket, creating it if necessary.\n      var bucket = buckets[key] || (buckets[key] = []);\n      bucket.push(value);\n    }\n  }\n\n  return buckets;\n};\n\n\n/**\n * Creates a new object built from the provided array and the key-generation\n * function.\n * @param {IArrayLike<T>} arr Array or array like object over\n *     which to iterate whose elements will be the values in the new object.\n * @param {?function(this:S, T, number, ?) : string} keyFunc The function to\n *     call for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a string that will be used as the\n *     key for the element in the new object. If the function returns the same\n *     key for more than one element, the value for that key is\n *     implementation-defined.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within keyFunc.\n * @return {!Object<T>} The new object.\n * @template T,S\n */\ngoog.array.toObject = function(arr, keyFunc, opt_obj) {\n  var ret = {};\n  goog.array.forEach(arr, function(element, index) {\n    ret[keyFunc.call(/** @type {?} */ (opt_obj), element, index, arr)] =\n        element;\n  });\n  return ret;\n};\n\n\n/**\n * Creates a range of numbers in an arithmetic progression.\n *\n * Range takes 1, 2, or 3 arguments:\n * <pre>\n * range(5) is the same as range(0, 5, 1) and produces [0, 1, 2, 3, 4]\n * range(2, 5) is the same as range(2, 5, 1) and produces [2, 3, 4]\n * range(-2, -5, -1) produces [-2, -3, -4]\n * range(-2, -5, 1) produces [], since stepping by 1 wouldn't ever reach -5.\n * </pre>\n *\n * @param {number} startOrEnd The starting value of the range if an end argument\n *     is provided. Otherwise, the start value is 0, and this is the end value.\n * @param {number=} opt_end The optional end value of the range.\n * @param {number=} opt_step The step size between range values. Defaults to 1\n *     if opt_step is undefined or 0.\n * @return {!Array<number>} An array of numbers for the requested range. May be\n *     an empty array if adding the step would not converge toward the end\n *     value.\n */\ngoog.array.range = function(startOrEnd, opt_end, opt_step) {\n  var array = [];\n  var start = 0;\n  var end = startOrEnd;\n  var step = opt_step || 1;\n  if (opt_end !== undefined) {\n    start = startOrEnd;\n    end = opt_end;\n  }\n\n  if (step * (end - start) < 0) {\n    // Sign mismatch: start + step will never reach the end value.\n    return [];\n  }\n\n  if (step > 0) {\n    for (var i = start; i < end; i += step) {\n      array.push(i);\n    }\n  } else {\n    for (var i = start; i > end; i += step) {\n      array.push(i);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Returns an array consisting of the given value repeated N times.\n *\n * @param {VALUE} value The value to repeat.\n * @param {number} n The repeat count.\n * @return {!Array<VALUE>} An array with the repeated value.\n * @template VALUE\n */\ngoog.array.repeat = function(value, n) {\n  var array = [];\n  for (var i = 0; i < n; i++) {\n    array[i] = value;\n  }\n  return array;\n};\n\n\n/**\n * Returns an array consisting of every argument with all arrays\n * expanded in-place recursively.\n *\n * @param {...*} var_args The values to flatten.\n * @return {!Array<?>} An array containing the flattened values.\n */\ngoog.array.flatten = function(var_args) {\n  var CHUNK_SIZE = 8192;\n\n  var result = [];\n  for (var i = 0; i < arguments.length; i++) {\n    var element = arguments[i];\n    if (goog.isArray(element)) {\n      for (var c = 0; c < element.length; c += CHUNK_SIZE) {\n        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);\n        var recurseResult = goog.array.flatten.apply(null, chunk);\n        for (var r = 0; r < recurseResult.length; r++) {\n          result.push(recurseResult[r]);\n        }\n      }\n    } else {\n      result.push(element);\n    }\n  }\n  return result;\n};\n\n\n/**\n * Rotates an array in-place. After calling this method, the element at\n * index i will be the element previously at index (i - n) %\n * array.length, for all values of i between 0 and array.length - 1,\n * inclusive.\n *\n * For example, suppose list comprises [t, a, n, k, s]. After invoking\n * rotate(array, 1) (or rotate(array, -4)), array will comprise [s, t, a, n, k].\n *\n * @param {!Array<T>} array The array to rotate.\n * @param {number} n The amount to rotate.\n * @return {!Array<T>} The array.\n * @template T\n */\ngoog.array.rotate = function(array, n) {\n  goog.asserts.assert(array.length != null);\n\n  if (array.length) {\n    n %= array.length;\n    if (n > 0) {\n      Array.prototype.unshift.apply(array, array.splice(-n, n));\n    } else if (n < 0) {\n      Array.prototype.push.apply(array, array.splice(0, -n));\n    }\n  }\n  return array;\n};\n\n\n/**\n * Moves one item of an array to a new position keeping the order of the rest\n * of the items. Example use case: keeping a list of JavaScript objects\n * synchronized with the corresponding list of DOM elements after one of the\n * elements has been dragged to a new position.\n * @param {!IArrayLike<?>} arr The array to modify.\n * @param {number} fromIndex Index of the item to move between 0 and\n *     {@code arr.length - 1}.\n * @param {number} toIndex Target index between 0 and {@code arr.length - 1}.\n */\ngoog.array.moveItem = function(arr, fromIndex, toIndex) {\n  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);\n  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);\n  // Remove 1 item at fromIndex.\n  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);\n  // Insert the removed item at toIndex.\n  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);\n  // We don't use goog.array.insertAt and goog.array.removeAt, because they're\n  // significantly slower than splice.\n};\n\n\n/**\n * Creates a new array for which the element at position i is an array of the\n * ith element of the provided arrays.  The returned array will only be as long\n * as the shortest array provided; additional values are ignored.  For example,\n * the result of zipping [1, 2] and [3, 4, 5] is [[1,3], [2, 4]].\n *\n * This is similar to the zip() function in Python.  See {@link\n * http://docs.python.org/library/functions.html#zip}\n *\n * @param {...!IArrayLike<?>} var_args Arrays to be combined.\n * @return {!Array<!Array<?>>} A new array of arrays created from\n *     provided arrays.\n */\ngoog.array.zip = function(var_args) {\n  if (!arguments.length) {\n    return [];\n  }\n  var result = [];\n  var minLen = arguments[0].length;\n  for (var i = 1; i < arguments.length; i++) {\n    if (arguments[i].length < minLen) {\n      minLen = arguments[i].length;\n    }\n  }\n  for (var i = 0; i < minLen; i++) {\n    var value = [];\n    for (var j = 0; j < arguments.length; j++) {\n      value.push(arguments[j][i]);\n    }\n    result.push(value);\n  }\n  return result;\n};\n\n\n/**\n * Shuffles the values in the specified array using the Fisher-Yates in-place\n * shuffle (also known as the Knuth Shuffle). By default, calls Math.random()\n * and so resets the state of that random number generator. Similarly, may reset\n * the state of the any other specified random number generator.\n *\n * Runtime: O(n)\n *\n * @param {!Array<?>} arr The array to be shuffled.\n * @param {function():number=} opt_randFn Optional random function to use for\n *     shuffling.\n *     Takes no arguments, and returns a random number on the interval [0, 1).\n *     Defaults to Math.random() using JavaScript's built-in Math library.\n */\ngoog.array.shuffle = function(arr, opt_randFn) {\n  var randFn = opt_randFn || Math.random;\n\n  for (var i = arr.length - 1; i > 0; i--) {\n    // Choose a random array index in [0, i] (inclusive with i).\n    var j = Math.floor(randFn() * (i + 1));\n\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n  }\n};\n\n\n/**\n * Returns a new array of elements from arr, based on the indexes of elements\n * provided by index_arr. For example, the result of index copying\n * ['a', 'b', 'c'] with index_arr [1,0,0,2] is ['b', 'a', 'a', 'c'].\n *\n * @param {!IArrayLike<T>} arr The array to get a indexed copy from.\n * @param {!IArrayLike<number>} index_arr An array of indexes to get from arr.\n * @return {!Array<T>} A new array of elements from arr in index_arr order.\n * @template T\n */\ngoog.array.copyByIndex = function(arr, index_arr) {\n  var result = [];\n  goog.array.forEach(index_arr, function(index) { result.push(arr[index]); });\n  return result;\n};\n\n\n/**\n * Maps each element of the input array into zero or more elements of the output\n * array.\n *\n * @param {!IArrayLike<VALUE>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this:THIS, VALUE, number, ?): !Array<RESULT>} f The function\n *     to call for every element. This function takes 3 arguments (the element,\n *     the index and the array) and should return an array. The result will be\n *     used to extend a new array.\n * @param {THIS=} opt_obj The object to be used as the value of 'this' within f.\n * @return {!Array<RESULT>} a new array with the concatenation of all arrays\n *     returned from f.\n * @template THIS, VALUE, RESULT\n */\ngoog.array.concatMap = function(arr, f, opt_obj) {\n  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Wrapper class for handling XmlHttpRequests.\n *\n * One off requests can be sent through goog.net.XhrIo.send() or an\n * instance can be created to send multiple requests.  Each request uses its\n * own XmlHttpRequest object and handles clearing of the event callback to\n * ensure no leaks.\n *\n * XhrIo is event based, it dispatches events on success, failure, finishing,\n * ready-state change, or progress (download and upload).\n *\n * The ready-state or timeout event fires first, followed by\n * a generic completed event. Then the abort, error, or success event\n * is fired as appropriate. Progress events are fired as they are\n * received. Lastly, the ready event will fire to indicate that the\n * object may be used to make another request.\n *\n * The error event may also be called before completed and\n * ready-state-change if the XmlHttpRequest.open() or .send() methods throw.\n *\n * This class does not support multiple requests, queuing, or prioritization.\n *\n * When progress events are supported by the browser, and progress is\n * enabled via .setProgressEventsEnabled(true), the\n * goog.net.EventType.PROGRESS event will be the re-dispatched browser\n * progress event. Additionally, a DOWNLOAD_PROGRESS or UPLOAD_PROGRESS event\n * will be fired for download and upload progress respectively.\n *\n */\n\n\ngoog.provide('goog.net.XhrIo');\ngoog.provide('goog.net.XhrIo.ResponseType');\n\ngoog.require('goog.Timer');\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.debug.entryPointRegistry');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.json.hybrid');\ngoog.require('goog.log');\ngoog.require('goog.net.ErrorCode');\ngoog.require('goog.net.EventType');\ngoog.require('goog.net.HttpStatus');\ngoog.require('goog.net.XmlHttp');\ngoog.require('goog.string');\ngoog.require('goog.structs');\ngoog.require('goog.structs.Map');\ngoog.require('goog.uri.utils');\ngoog.require('goog.userAgent');\n\ngoog.forwardDeclare('goog.Uri');\n\n\n\n/**\n * Basic class for handling XMLHttpRequests.\n * @param {goog.net.XmlHttpFactory=} opt_xmlHttpFactory Factory to use when\n *     creating XMLHttpRequest objects.\n * @constructor\n * @extends {goog.events.EventTarget}\n */\ngoog.net.XhrIo = function(opt_xmlHttpFactory) {\n  goog.net.XhrIo.base(this, 'constructor');\n\n  /**\n   * Map of default headers to add to every request, use:\n   * XhrIo.headers.set(name, value)\n   * @type {!goog.structs.Map}\n   */\n  this.headers = new goog.structs.Map();\n\n  /**\n   * Optional XmlHttpFactory\n   * @private {goog.net.XmlHttpFactory}\n   */\n  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;\n\n  /**\n   * Whether XMLHttpRequest is active.  A request is active from the time send()\n   * is called until onReadyStateChange() is complete, or error() or abort()\n   * is called.\n   * @private {boolean}\n   */\n  this.active_ = false;\n\n  /**\n   * The XMLHttpRequest object that is being used for the transfer.\n   * @private {?goog.net.XhrLike.OrNative}\n   */\n  this.xhr_ = null;\n\n  /**\n   * The options to use with the current XMLHttpRequest object.\n   * @private {Object}\n   */\n  this.xhrOptions_ = null;\n\n  /**\n   * Last URL that was requested.\n   * @private {string|goog.Uri}\n   */\n  this.lastUri_ = '';\n\n  /**\n   * Method for the last request.\n   * @private {string}\n   */\n  this.lastMethod_ = '';\n\n  /**\n   * Last error code.\n   * @private {!goog.net.ErrorCode}\n   */\n  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;\n\n  /**\n   * Last error message.\n   * @private {Error|string}\n   */\n  this.lastError_ = '';\n\n  /**\n   * Used to ensure that we don't dispatch an multiple ERROR events. This can\n   * happen in IE when it does a synchronous load and one error is handled in\n   * the ready statte change and one is handled due to send() throwing an\n   * exception.\n   * @private {boolean}\n   */\n  this.errorDispatched_ = false;\n\n  /**\n   * Used to make sure we don't fire the complete event from inside a send call.\n   * @private {boolean}\n   */\n  this.inSend_ = false;\n\n  /**\n   * Used in determining if a call to {@link #onReadyStateChange_} is from\n   * within a call to this.xhr_.open.\n   * @private {boolean}\n   */\n  this.inOpen_ = false;\n\n  /**\n   * Used in determining if a call to {@link #onReadyStateChange_} is from\n   * within a call to this.xhr_.abort.\n   * @private {boolean}\n   */\n  this.inAbort_ = false;\n\n  /**\n   * Number of milliseconds after which an incomplete request will be aborted\n   * and a {@link goog.net.EventType.TIMEOUT} event raised; 0 means no timeout\n   * is set.\n   * @private {number}\n   */\n  this.timeoutInterval_ = 0;\n\n  /**\n   * Timer to track request timeout.\n   * @private {?number}\n   */\n  this.timeoutId_ = null;\n\n  /**\n   * The requested type for the response. The empty string means use the default\n   * XHR behavior.\n   * @private {goog.net.XhrIo.ResponseType}\n   */\n  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;\n\n  /**\n   * Whether a \"credentialed\" request is to be sent (one that is aware of\n   * cookies and authentication). This is applicable only for cross-domain\n   * requests and more recent browsers that support this part of the HTTP Access\n   * Control standard.\n   *\n   * @see http://www.w3.org/TR/XMLHttpRequest/#the-withcredentials-attribute\n   *\n   * @private {boolean}\n   */\n  this.withCredentials_ = false;\n\n  /**\n   * Whether progress events are enabled for this request. This is\n   * disabled by default because setting a progress event handler\n   * causes pre-flight OPTIONS requests to be sent for CORS requests,\n   * even in cases where a pre-flight request would not otherwise be\n   * sent.\n   *\n   * @see http://xhr.spec.whatwg.org/#security-considerations\n   *\n   * Note that this can cause problems for Firefox 22 and below, as an\n   * older \"LSProgressEvent\" will be dispatched by the browser. That\n   * progress event is no longer supported, and can lead to failures,\n   * including throwing exceptions.\n   *\n   * @see http://bugzilla.mozilla.org/show_bug.cgi?id=845631\n   * @see b/23469793\n   *\n   * @private {boolean}\n   */\n  this.progressEventsEnabled_ = false;\n\n  /**\n   * True if we can use XMLHttpRequest's timeout directly.\n   * @private {boolean}\n   */\n  this.useXhr2Timeout_ = false;\n};\ngoog.inherits(goog.net.XhrIo, goog.events.EventTarget);\n\n\n/**\n * Response types that may be requested for XMLHttpRequests.\n * @enum {string}\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-responsetype-attribute\n */\ngoog.net.XhrIo.ResponseType = {\n  DEFAULT: '',\n  TEXT: 'text',\n  DOCUMENT: 'document',\n  // Not supported as of Chrome 10.0.612.1 dev\n  BLOB: 'blob',\n  ARRAY_BUFFER: 'arraybuffer'\n};\n\n\n/**\n * A reference to the XhrIo logger\n * @private {?goog.log.Logger}\n * @const\n */\ngoog.net.XhrIo.prototype.logger_ = goog.log.getLogger('goog.net.XhrIo');\n\n\n/**\n * The Content-Type HTTP header name\n * @type {string}\n */\ngoog.net.XhrIo.CONTENT_TYPE_HEADER = 'Content-Type';\n\n\n/**\n * The Content-Transfer-Encoding HTTP header name\n * @type {string}\n */\ngoog.net.XhrIo.CONTENT_TRANSFER_ENCODING = 'Content-Transfer-Encoding';\n\n\n/**\n * The pattern matching the 'http' and 'https' URI schemes\n * @type {!RegExp}\n */\ngoog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;\n\n\n/**\n * The methods that typically come along with form data.  We set different\n * headers depending on whether the HTTP action is one of these.\n * @type {!Array<string>}\n */\ngoog.net.XhrIo.METHODS_WITH_FORM_DATA = ['POST', 'PUT'];\n\n\n/**\n * The Content-Type HTTP header value for a url-encoded form\n * @type {string}\n */\ngoog.net.XhrIo.FORM_CONTENT_TYPE =\n    'application/x-www-form-urlencoded;charset=utf-8';\n\n\n/**\n * The XMLHttpRequest Level two timeout delay ms property name.\n *\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute\n *\n * @private {string}\n * @const\n */\ngoog.net.XhrIo.XHR2_TIMEOUT_ = 'timeout';\n\n\n/**\n * The XMLHttpRequest Level two ontimeout handler property name.\n *\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute\n *\n * @private {string}\n * @const\n */\ngoog.net.XhrIo.XHR2_ON_TIMEOUT_ = 'ontimeout';\n\n\n/**\n * All non-disposed instances of goog.net.XhrIo created\n * by {@link goog.net.XhrIo.send} are in this Array.\n * @see goog.net.XhrIo.cleanup\n * @private {!Array<!goog.net.XhrIo>}\n */\ngoog.net.XhrIo.sendInstances_ = [];\n\n\n/**\n * Static send that creates a short lived instance of XhrIo to send the\n * request.\n * @see goog.net.XhrIo.cleanup\n * @param {string|goog.Uri} url Uri to make request to.\n * @param {?function(this:goog.net.XhrIo, ?)=} opt_callback Callback function\n *     for when request is complete.\n * @param {string=} opt_method Send method, default: GET.\n * @param {ArrayBuffer|ArrayBufferView|Blob|Document|FormData|string=}\n *     opt_content Body data.\n * @param {Object|goog.structs.Map=} opt_headers Map of headers to add to the\n *     request.\n * @param {number=} opt_timeoutInterval Number of milliseconds after which an\n *     incomplete request will be aborted; 0 means no timeout is set.\n * @param {boolean=} opt_withCredentials Whether to send credentials with the\n *     request. Default to false. See {@link goog.net.XhrIo#setWithCredentials}.\n * @return {!goog.net.XhrIo} The sent XhrIo.\n */\ngoog.net.XhrIo.send = function(\n    url, opt_callback, opt_method, opt_content, opt_headers,\n    opt_timeoutInterval, opt_withCredentials) {\n  var x = new goog.net.XhrIo();\n  goog.net.XhrIo.sendInstances_.push(x);\n  if (opt_callback) {\n    x.listen(goog.net.EventType.COMPLETE, opt_callback);\n  }\n  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);\n  if (opt_timeoutInterval) {\n    x.setTimeoutInterval(opt_timeoutInterval);\n  }\n  if (opt_withCredentials) {\n    x.setWithCredentials(opt_withCredentials);\n  }\n  x.send(url, opt_method, opt_content, opt_headers);\n  return x;\n};\n\n\n/**\n * Disposes all non-disposed instances of goog.net.XhrIo created by\n * {@link goog.net.XhrIo.send}.\n * {@link goog.net.XhrIo.send} cleans up the goog.net.XhrIo instance\n * it creates when the request completes or fails.  However, if\n * the request never completes, then the goog.net.XhrIo is not disposed.\n * This can occur if the window is unloaded before the request completes.\n * We could have {@link goog.net.XhrIo.send} return the goog.net.XhrIo\n * it creates and make the client of {@link goog.net.XhrIo.send} be\n * responsible for disposing it in this case.  However, this makes things\n * significantly more complicated for the client, and the whole point\n * of {@link goog.net.XhrIo.send} is that it's simple and easy to use.\n * Clients of {@link goog.net.XhrIo.send} should call\n * {@link goog.net.XhrIo.cleanup} when doing final\n * cleanup on window unload.\n */\ngoog.net.XhrIo.cleanup = function() {\n  var instances = goog.net.XhrIo.sendInstances_;\n  while (instances.length) {\n    instances.pop().dispose();\n  }\n};\n\n\n/**\n * Installs exception protection for all entry point introduced by\n * goog.net.XhrIo instances which are not protected by\n * {@link goog.debug.ErrorHandler#protectWindowSetTimeout},\n * {@link goog.debug.ErrorHandler#protectWindowSetInterval}, or\n * {@link goog.events.protectBrowserEventEntryPoint}.\n *\n * @param {goog.debug.ErrorHandler} errorHandler Error handler with which to\n *     protect the entry point(s).\n */\ngoog.net.XhrIo.protectEntryPoints = function(errorHandler) {\n  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ =\n      errorHandler.protectEntryPoint(\n          goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);\n};\n\n\n/**\n * Disposes of the specified goog.net.XhrIo created by\n * {@link goog.net.XhrIo.send} and removes it from\n * {@link goog.net.XhrIo.pendingStaticSendInstances_}.\n * @private\n */\ngoog.net.XhrIo.prototype.cleanupSend_ = function() {\n  this.dispose();\n  goog.array.remove(goog.net.XhrIo.sendInstances_, this);\n};\n\n\n/**\n * Returns the number of milliseconds after which an incomplete request will be\n * aborted, or 0 if no timeout is set.\n * @return {number} Timeout interval in milliseconds.\n */\ngoog.net.XhrIo.prototype.getTimeoutInterval = function() {\n  return this.timeoutInterval_;\n};\n\n\n/**\n * Sets the number of milliseconds after which an incomplete request will be\n * aborted and a {@link goog.net.EventType.TIMEOUT} event raised; 0 means no\n * timeout is set.\n * @param {number} ms Timeout interval in milliseconds; 0 means none.\n */\ngoog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {\n  this.timeoutInterval_ = Math.max(0, ms);\n};\n\n\n/**\n * Sets the desired type for the response. At time of writing, this is only\n * supported in very recent versions of WebKit (10.0.612.1 dev and later).\n *\n * If this is used, the response may only be accessed via {@link #getResponse}.\n *\n * @param {goog.net.XhrIo.ResponseType} type The desired type for the response.\n */\ngoog.net.XhrIo.prototype.setResponseType = function(type) {\n  this.responseType_ = type;\n};\n\n\n/**\n * Gets the desired type for the response.\n * @return {goog.net.XhrIo.ResponseType} The desired type for the response.\n */\ngoog.net.XhrIo.prototype.getResponseType = function() {\n  return this.responseType_;\n};\n\n\n/**\n * Sets whether a \"credentialed\" request that is aware of cookie and\n * authentication information should be made. This option is only supported by\n * browsers that support HTTP Access Control. As of this writing, this option\n * is not supported in IE.\n *\n * @param {boolean} withCredentials Whether this should be a \"credentialed\"\n *     request.\n */\ngoog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {\n  this.withCredentials_ = withCredentials;\n};\n\n\n/**\n * Gets whether a \"credentialed\" request is to be sent.\n * @return {boolean} The desired type for the response.\n */\ngoog.net.XhrIo.prototype.getWithCredentials = function() {\n  return this.withCredentials_;\n};\n\n\n/**\n * Sets whether progress events are enabled for this request. Note\n * that progress events require pre-flight OPTIONS request handling\n * for CORS requests, and may cause trouble with older browsers. See\n * progressEventsEnabled_ for details.\n * @param {boolean} enabled Whether progress events should be enabled.\n */\ngoog.net.XhrIo.prototype.setProgressEventsEnabled = function(enabled) {\n  this.progressEventsEnabled_ = enabled;\n};\n\n\n/**\n * Gets whether progress events are enabled.\n * @return {boolean} Whether progress events are enabled for this request.\n */\ngoog.net.XhrIo.prototype.getProgressEventsEnabled = function() {\n  return this.progressEventsEnabled_;\n};\n\n\n/**\n * Instance send that actually uses XMLHttpRequest to make a server call.\n * @param {string|goog.Uri} url Uri to make request to.\n * @param {string=} opt_method Send method, default: GET.\n * @param {ArrayBuffer|ArrayBufferView|Blob|Document|FormData|string=}\n *     opt_content Body data.\n * @param {Object|goog.structs.Map=} opt_headers Map of headers to add to the\n *     request.\n * @suppress {deprecated} Use deprecated goog.structs.forEach to allow different\n * types of parameters for opt_headers.\n */\ngoog.net.XhrIo.prototype.send = function(\n    url, opt_method, opt_content, opt_headers) {\n  if (this.xhr_) {\n    throw new Error(\n        '[goog.net.XhrIo] Object is active with another request=' +\n        this.lastUri_ + '; newUri=' + url);\n  }\n\n  var method = opt_method ? opt_method.toUpperCase() : 'GET';\n\n  this.lastUri_ = url;\n  this.lastError_ = '';\n  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;\n  this.lastMethod_ = method;\n  this.errorDispatched_ = false;\n  this.active_ = true;\n\n  // Use the factory to create the XHR object and options\n  this.xhr_ = this.createXhr();\n  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() :\n                                            goog.net.XmlHttp.getOptions();\n\n  // Set up the onreadystatechange callback\n  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);\n\n  // Set up upload/download progress events, if progress events are supported.\n  if (this.getProgressEventsEnabled() && 'onprogress' in this.xhr_) {\n    this.xhr_.onprogress =\n        goog.bind(function(e) { this.onProgressHandler_(e, true); }, this);\n    if (this.xhr_.upload) {\n      this.xhr_.upload.onprogress = goog.bind(this.onProgressHandler_, this);\n    }\n  }\n\n  /**\n   * Try to open the XMLHttpRequest (always async), if an error occurs here it\n   * is generally permission denied\n   */\n  try {\n    goog.log.fine(this.logger_, this.formatMsg_('Opening Xhr'));\n    this.inOpen_ = true;\n    this.xhr_.open(method, String(url), true);  // Always async!\n    this.inOpen_ = false;\n  } catch (err) {\n    goog.log.fine(\n        this.logger_, this.formatMsg_('Error opening Xhr: ' + err.message));\n    this.error_(goog.net.ErrorCode.EXCEPTION, err);\n    return;\n  }\n\n  // We can't use null since this won't allow requests with form data to have a\n  // content length specified which will cause some proxies to return a 411\n  // error.\n  var content = opt_content || '';\n\n  var headers = this.headers.clone();\n\n  // Add headers specific to this request\n  if (opt_headers) {\n    goog.structs.forEach(\n        opt_headers, function(value, key) { headers.set(key, value); });\n  }\n\n  // Find whether a content type header is set, ignoring case.\n  // HTTP header names are case-insensitive.  See:\n  // http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2\n  var contentTypeKey =\n      goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);\n\n  var contentIsFormData =\n      (goog.global['FormData'] && (content instanceof goog.global['FormData']));\n  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) &&\n      !contentTypeKey && !contentIsFormData) {\n    // For requests typically with form data, default to the url-encoded form\n    // content type unless this is a FormData request.  For FormData,\n    // the browser will automatically add a multipart/form-data content type\n    // with an appropriate multipart boundary.\n    headers.set(\n        goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);\n  }\n\n  // Add the headers to the Xhr object\n  headers.forEach(function(value, key) {\n    this.xhr_.setRequestHeader(key, value);\n  }, this);\n\n  if (this.responseType_) {\n    this.xhr_.responseType = this.responseType_;\n  }\n  // Set xhr_.withCredentials only when the value is different, or else in\n  // synchronous XMLHtppRequest.open Firefox will throw an exception.\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=736340\n  if ('withCredentials' in this.xhr_ &&\n      this.xhr_.withCredentials !== this.withCredentials_) {\n    this.xhr_.withCredentials = this.withCredentials_;\n  }\n\n  /**\n   * Try to send the request, or other wise report an error (404 not found).\n   */\n  try {\n    this.cleanUpTimeoutTimer_();  // Paranoid, should never be running.\n    if (this.timeoutInterval_ > 0) {\n      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);\n      goog.log.fine(\n          this.logger_, this.formatMsg_(\n                            'Will abort after ' + this.timeoutInterval_ +\n                            'ms if incomplete, xhr2 ' + this.useXhr2Timeout_));\n      if (this.useXhr2Timeout_) {\n        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;\n        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] =\n            goog.bind(this.timeout_, this);\n      } else {\n        this.timeoutId_ =\n            goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);\n      }\n    }\n    goog.log.fine(this.logger_, this.formatMsg_('Sending request'));\n    this.inSend_ = true;\n    this.xhr_.send(content);\n    this.inSend_ = false;\n\n  } catch (err) {\n    goog.log.fine(this.logger_, this.formatMsg_('Send error: ' + err.message));\n    this.error_(goog.net.ErrorCode.EXCEPTION, err);\n  }\n};\n\n\n/**\n * Determines if the argument is an XMLHttpRequest that supports the level 2\n * timeout value and event.\n *\n * Currently, FF 21.0 OS X has the fields but won't actually call the timeout\n * handler.  Perhaps the confusion in the bug referenced below hasn't\n * entirely been resolved.\n *\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=525816\n *\n * @param {!goog.net.XhrLike.OrNative} xhr The request.\n * @return {boolean} True if the request supports level 2 timeout.\n * @private\n */\ngoog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {\n  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) &&\n      goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) &&\n      goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);\n};\n\n\n/**\n * @param {string} header An HTTP header key.\n * @return {boolean} Whether the key is a content type header (ignoring\n *     case.\n * @private\n */\ngoog.net.XhrIo.isContentTypeHeader_ = function(header) {\n  return goog.string.caseInsensitiveEquals(\n      goog.net.XhrIo.CONTENT_TYPE_HEADER, header);\n};\n\n\n/**\n * Creates a new XHR object.\n * @return {!goog.net.XhrLike.OrNative} The newly created XHR object.\n * @protected\n */\ngoog.net.XhrIo.prototype.createXhr = function() {\n  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() :\n                                goog.net.XmlHttp();\n};\n\n\n/**\n * The request didn't complete after {@link goog.net.XhrIo#timeoutInterval_}\n * milliseconds; raises a {@link goog.net.EventType.TIMEOUT} event and aborts\n * the request.\n * @private\n */\ngoog.net.XhrIo.prototype.timeout_ = function() {\n  if (typeof goog == 'undefined') {\n    // If goog is undefined then the callback has occurred as the application\n    // is unloading and will error.  Thus we let it silently fail.\n  } else if (this.xhr_) {\n    this.lastError_ =\n        'Timed out after ' + this.timeoutInterval_ + 'ms, aborting';\n    this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;\n    goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));\n    this.dispatchEvent(goog.net.EventType.TIMEOUT);\n    this.abort(goog.net.ErrorCode.TIMEOUT);\n  }\n};\n\n\n/**\n * Something errorred, so inactivate, fire error callback and clean up\n * @param {goog.net.ErrorCode} errorCode The error code.\n * @param {Error} err The error object.\n * @private\n */\ngoog.net.XhrIo.prototype.error_ = function(errorCode, err) {\n  this.active_ = false;\n  if (this.xhr_) {\n    this.inAbort_ = true;\n    this.xhr_.abort();  // Ensures XHR isn't hung (FF)\n    this.inAbort_ = false;\n  }\n  this.lastError_ = err;\n  this.lastErrorCode_ = errorCode;\n  this.dispatchErrors_();\n  this.cleanUpXhr_();\n};\n\n\n/**\n * Dispatches COMPLETE and ERROR in case of an error. This ensures that we do\n * not dispatch multiple error events.\n * @private\n */\ngoog.net.XhrIo.prototype.dispatchErrors_ = function() {\n  if (!this.errorDispatched_) {\n    this.errorDispatched_ = true;\n    this.dispatchEvent(goog.net.EventType.COMPLETE);\n    this.dispatchEvent(goog.net.EventType.ERROR);\n  }\n};\n\n\n/**\n * Abort the current XMLHttpRequest\n * @param {goog.net.ErrorCode=} opt_failureCode Optional error code to use -\n *     defaults to ABORT.\n */\ngoog.net.XhrIo.prototype.abort = function(opt_failureCode) {\n  if (this.xhr_ && this.active_) {\n    goog.log.fine(this.logger_, this.formatMsg_('Aborting'));\n    this.active_ = false;\n    this.inAbort_ = true;\n    this.xhr_.abort();\n    this.inAbort_ = false;\n    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;\n    this.dispatchEvent(goog.net.EventType.COMPLETE);\n    this.dispatchEvent(goog.net.EventType.ABORT);\n    this.cleanUpXhr_();\n  }\n};\n\n\n/**\n * Nullifies all callbacks to reduce risks of leaks.\n * @override\n * @protected\n */\ngoog.net.XhrIo.prototype.disposeInternal = function() {\n  if (this.xhr_) {\n    // We explicitly do not call xhr_.abort() unless active_ is still true.\n    // This is to avoid unnecessarily aborting a successful request when\n    // dispose() is called in a callback triggered by a complete response, but\n    // in which browser cleanup has not yet finished.\n    // (See http://b/issue?id=1684217.)\n    if (this.active_) {\n      this.active_ = false;\n      this.inAbort_ = true;\n      this.xhr_.abort();\n      this.inAbort_ = false;\n    }\n    this.cleanUpXhr_(true);\n  }\n\n  goog.net.XhrIo.base(this, 'disposeInternal');\n};\n\n\n/**\n * Internal handler for the XHR object's readystatechange event.  This method\n * checks the status and the readystate and fires the correct callbacks.\n * If the request has ended, the handlers are cleaned up and the XHR object is\n * nullified.\n * @private\n */\ngoog.net.XhrIo.prototype.onReadyStateChange_ = function() {\n  if (this.isDisposed()) {\n    // This method is the target of an untracked goog.Timer.callOnce().\n    return;\n  }\n  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {\n    // Were not being called from within a call to this.xhr_.send\n    // this.xhr_.abort, or this.xhr_.open, so this is an entry point\n    this.onReadyStateChangeEntryPoint_();\n  } else {\n    this.onReadyStateChangeHelper_();\n  }\n};\n\n\n/**\n * Used to protect the onreadystatechange handler entry point.  Necessary\n * as {#onReadyStateChange_} maybe called from within send or abort, this\n * method is only called when {#onReadyStateChange_} is called as an\n * entry point.\n * {@see #protectEntryPoints}\n * @private\n */\ngoog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {\n  this.onReadyStateChangeHelper_();\n};\n\n\n/**\n * Helper for {@link #onReadyStateChange_}.  This is used so that\n * entry point calls to {@link #onReadyStateChange_} can be routed through\n * {@link #onReadyStateChangeEntryPoint_}.\n * @private\n */\ngoog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {\n  if (!this.active_) {\n    // can get called inside abort call\n    return;\n  }\n\n  if (typeof goog == 'undefined') {\n    // NOTE(user): If goog is undefined then the callback has occurred as the\n    // application is unloading and will error.  Thus we let it silently fail.\n\n  } else if (\n      this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] &&\n      this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE &&\n      this.getStatus() == 2) {\n    // NOTE(user): In IE if send() errors on a *local* request the readystate\n    // is still changed to COMPLETE.  We need to ignore it and allow the\n    // try/catch around send() to pick up the error.\n    goog.log.fine(\n        this.logger_,\n        this.formatMsg_('Local request error detected and ignored'));\n\n  } else {\n    // In IE when the response has been cached we sometimes get the callback\n    // from inside the send call and this usually breaks code that assumes that\n    // XhrIo is asynchronous.  If that is the case we delay the callback\n    // using a timer.\n    if (this.inSend_ &&\n        this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {\n      goog.Timer.callOnce(this.onReadyStateChange_, 0, this);\n      return;\n    }\n\n    this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);\n\n    // readyState indicates the transfer has finished\n    if (this.isComplete()) {\n      goog.log.fine(this.logger_, this.formatMsg_('Request complete'));\n\n      this.active_ = false;\n\n      try {\n        // Call the specific callbacks for success or failure. Only call the\n        // success if the status is 200 (HTTP_OK) or 304 (HTTP_CACHED)\n        if (this.isSuccess()) {\n          this.dispatchEvent(goog.net.EventType.COMPLETE);\n          this.dispatchEvent(goog.net.EventType.SUCCESS);\n        } else {\n          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;\n          this.lastError_ =\n              this.getStatusText() + ' [' + this.getStatus() + ']';\n          this.dispatchErrors_();\n        }\n      } finally {\n        this.cleanUpXhr_();\n      }\n    }\n  }\n};\n\n\n/**\n * Internal handler for the XHR object's onprogress event. Fires both a generic\n * PROGRESS event and either a DOWNLOAD_PROGRESS or UPLOAD_PROGRESS event to\n * allow specific binding for each XHR progress event.\n * @param {!ProgressEvent} e XHR progress event.\n * @param {boolean=} opt_isDownload Whether the current progress event is from a\n *     download. Used to determine whether DOWNLOAD_PROGRESS or UPLOAD_PROGRESS\n *     event should be dispatched.\n * @private\n */\ngoog.net.XhrIo.prototype.onProgressHandler_ = function(e, opt_isDownload) {\n  goog.asserts.assert(\n      e.type === goog.net.EventType.PROGRESS,\n      'goog.net.EventType.PROGRESS is of the same type as raw XHR progress.');\n  this.dispatchEvent(\n      goog.net.XhrIo.buildProgressEvent_(e, goog.net.EventType.PROGRESS));\n  this.dispatchEvent(\n      goog.net.XhrIo.buildProgressEvent_(\n          e, opt_isDownload ? goog.net.EventType.DOWNLOAD_PROGRESS :\n                              goog.net.EventType.UPLOAD_PROGRESS));\n};\n\n\n/**\n * Creates a representation of the native ProgressEvent. IE doesn't support\n * constructing ProgressEvent via \"new\", and the alternatives (e.g.,\n * ProgressEvent.initProgressEvent) are non-standard or deprecated.\n * @param {!ProgressEvent} e XHR progress event.\n * @param {!goog.net.EventType} eventType The type of the event.\n * @return {!ProgressEvent} The progress event.\n * @private\n */\ngoog.net.XhrIo.buildProgressEvent_ = function(e, eventType) {\n  return /** @type {!ProgressEvent} */ ({\n    type: eventType,\n    lengthComputable: e.lengthComputable,\n    loaded: e.loaded,\n    total: e.total\n  });\n};\n\n\n/**\n * Remove the listener to protect against leaks, and nullify the XMLHttpRequest\n * object.\n * @param {boolean=} opt_fromDispose If this is from the dispose (don't want to\n *     fire any events).\n * @private\n */\ngoog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {\n  if (this.xhr_) {\n    // Cancel any pending timeout event handler.\n    this.cleanUpTimeoutTimer_();\n\n    // Save reference so we can mark it as closed after the READY event.  The\n    // READY event may trigger another request, thus we must nullify this.xhr_\n    var xhr = this.xhr_;\n    var clearedOnReadyStateChange =\n        this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ?\n        goog.nullFunction :\n        null;\n    this.xhr_ = null;\n    this.xhrOptions_ = null;\n\n    if (!opt_fromDispose) {\n      this.dispatchEvent(goog.net.EventType.READY);\n    }\n\n    try {\n      // NOTE(user): Not nullifying in FireFox can still leak if the callbacks\n      // are defined in the same scope as the instance of XhrIo. But, IE doesn't\n      // allow you to set the onreadystatechange to NULL so nullFunction is\n      // used.\n      xhr.onreadystatechange = clearedOnReadyStateChange;\n    } catch (e) {\n      // This seems to occur with a Gears HTTP request. Delayed the setting of\n      // this onreadystatechange until after READY is sent out and catching the\n      // error to see if we can track down the problem.\n      goog.log.error(\n          this.logger_,\n          'Problem encountered resetting onreadystatechange: ' + e.message);\n    }\n  }\n};\n\n\n/**\n * Make sure the timeout timer isn't running.\n * @private\n */\ngoog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {\n  if (this.xhr_ && this.useXhr2Timeout_) {\n    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;\n  }\n  if (this.timeoutId_) {\n    goog.Timer.clear(this.timeoutId_);\n    this.timeoutId_ = null;\n  }\n};\n\n\n/**\n * @return {boolean} Whether there is an active request.\n */\ngoog.net.XhrIo.prototype.isActive = function() {\n  return !!this.xhr_;\n};\n\n\n/**\n * @return {boolean} Whether the request has completed.\n */\ngoog.net.XhrIo.prototype.isComplete = function() {\n  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;\n};\n\n\n/**\n * @return {boolean} Whether the request completed with a success.\n */\ngoog.net.XhrIo.prototype.isSuccess = function() {\n  var status = this.getStatus();\n  // A zero status code is considered successful for local files.\n  return goog.net.HttpStatus.isSuccess(status) ||\n      status === 0 && !this.isLastUriEffectiveSchemeHttp_();\n};\n\n\n/**\n * @return {boolean} whether the effective scheme of the last URI that was\n *     fetched was 'http' or 'https'.\n * @private\n */\ngoog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {\n  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));\n  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);\n};\n\n\n/**\n * Get the readystate from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @return {goog.net.XmlHttp.ReadyState} goog.net.XmlHttp.ReadyState.*.\n */\ngoog.net.XhrIo.prototype.getReadyState = function() {\n  return this.xhr_ ?\n      /** @type {goog.net.XmlHttp.ReadyState} */ (this.xhr_.readyState) :\n                                                 goog.net.XmlHttp.ReadyState\n                                                     .UNINITIALIZED;\n};\n\n\n/**\n * Get the status from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @return {number} Http status.\n */\ngoog.net.XhrIo.prototype.getStatus = function() {\n  /**\n   * IE doesn't like you checking status until the readystate is greater than 2\n   * (i.e. it is receiving or complete).  The try/catch is used for when the\n   * page is unloading and an ERROR_NOT_AVAILABLE may occur when accessing xhr_.\n   */\n  try {\n    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ?\n        this.xhr_.status :\n        -1;\n  } catch (e) {\n    return -1;\n  }\n};\n\n\n/**\n * Get the status text from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @return {string} Status text.\n */\ngoog.net.XhrIo.prototype.getStatusText = function() {\n  /**\n   * IE doesn't like you checking status until the readystate is greater than 2\n   * (i.e. it is receiving or complete).  The try/catch is used for when the\n   * page is unloading and an ERROR_NOT_AVAILABLE may occur when accessing xhr_.\n   */\n  try {\n    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ?\n        this.xhr_.statusText :\n        '';\n  } catch (e) {\n    goog.log.fine(this.logger_, 'Can not get status: ' + e.message);\n    return '';\n  }\n};\n\n\n/**\n * Get the last Uri that was requested\n * @return {string} Last Uri.\n */\ngoog.net.XhrIo.prototype.getLastUri = function() {\n  return String(this.lastUri_);\n};\n\n\n/**\n * Get the response text from the Xhr object\n * Will only return correct result when called from the context of a callback.\n * @return {string} Result from the server, or '' if no result available.\n */\ngoog.net.XhrIo.prototype.getResponseText = function() {\n  try {\n    return this.xhr_ ? this.xhr_.responseText : '';\n  } catch (e) {\n    // http://www.w3.org/TR/XMLHttpRequest/#the-responsetext-attribute\n    // states that responseText should return '' (and responseXML null)\n    // when the state is not LOADING or DONE. Instead, IE can\n    // throw unexpected exceptions, for example when a request is aborted\n    // or no data is available yet.\n    goog.log.fine(this.logger_, 'Can not get responseText: ' + e.message);\n    return '';\n  }\n};\n\n\n/**\n * Get the response body from the Xhr object. This property is only available\n * in IE since version 7 according to MSDN:\n * http://msdn.microsoft.com/en-us/library/ie/ms534368(v=vs.85).aspx\n * Will only return correct result when called from the context of a callback.\n *\n * One option is to construct a VBArray from the returned object and convert\n * it to a JavaScript array using the toArray method:\n * {@code (new window['VBArray'](xhrIo.getResponseBody())).toArray()}\n * This will result in an array of numbers in the range of [0..255]\n *\n * Another option is to use the VBScript CStr method to convert it into a\n * string as outlined in http://stackoverflow.com/questions/1919972\n *\n * @return {Object} Binary result from the server or null if not available.\n */\ngoog.net.XhrIo.prototype.getResponseBody = function() {\n\n  try {\n    if (this.xhr_ && 'responseBody' in this.xhr_) {\n      return this.xhr_['responseBody'];\n    }\n  } catch (e) {\n    // IE can throw unexpected exceptions, for example when a request is aborted\n    // or no data is yet available.\n    goog.log.fine(this.logger_, 'Can not get responseBody: ' + e.message);\n  }\n  return null;\n};\n\n\n/**\n * Get the response XML from the Xhr object\n * Will only return correct result when called from the context of a callback.\n * @return {Document} The DOM Document representing the XML file, or null\n * if no result available.\n */\ngoog.net.XhrIo.prototype.getResponseXml = function() {\n\n  try {\n    return this.xhr_ ? this.xhr_.responseXML : null;\n  } catch (e) {\n    goog.log.fine(this.logger_, 'Can not get responseXML: ' + e.message);\n    return null;\n  }\n};\n\n\n/**\n * Get the response and evaluates it as JSON from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @param {string=} opt_xssiPrefix Optional XSSI prefix string to use for\n *     stripping of the response before parsing. This needs to be set only if\n *     your backend server prepends the same prefix string to the JSON response.\n * @throws Error if the response text is invalid JSON.\n * @return {Object|undefined} JavaScript object.\n */\ngoog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {\n  if (!this.xhr_) {\n    return undefined;\n  }\n\n  var responseText = this.xhr_.responseText;\n  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {\n    responseText = responseText.substring(opt_xssiPrefix.length);\n  }\n\n  return goog.json.hybrid.parse(responseText);\n};\n\n\n/**\n * Get the response as the type specificed by {@link #setResponseType}. At time\n * of writing, this is only directly supported in very recent versions of WebKit\n * (10.0.612.1 dev and later). If the field is not supported directly, we will\n * try to emulate it.\n *\n * Emulating the response means following the rules laid out at\n * http://www.w3.org/TR/XMLHttpRequest/#the-response-attribute\n *\n * On browsers with no support for this (Chrome < 10, Firefox < 4, etc), only\n * response types of DEFAULT or TEXT may be used, and the response returned will\n * be the text response.\n *\n * On browsers with Mozilla's draft support for array buffers (Firefox 4, 5),\n * only response types of DEFAULT, TEXT, and ARRAY_BUFFER may be used, and the\n * response returned will be either the text response or the Mozilla\n * implementation of the array buffer response.\n *\n * On browsers will full support, any valid response type supported by the\n * browser may be used, and the response provided by the browser will be\n * returned.\n *\n * @return {*} The response.\n */\ngoog.net.XhrIo.prototype.getResponse = function() {\n\n  try {\n    if (!this.xhr_) {\n      return null;\n    }\n    if ('response' in this.xhr_) {\n      return this.xhr_.response;\n    }\n    switch (this.responseType_) {\n      case goog.net.XhrIo.ResponseType.DEFAULT:\n      case goog.net.XhrIo.ResponseType.TEXT:\n        return this.xhr_.responseText;\n      // DOCUMENT and BLOB don't need to be handled here because they are\n      // introduced in the same spec that adds the .response field, and would\n      // have been caught above.\n      // ARRAY_BUFFER needs an implementation for Firefox 4, where it was\n      // implemented using a draft spec rather than the final spec.\n      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:\n        if ('mozResponseArrayBuffer' in this.xhr_) {\n          return this.xhr_.mozResponseArrayBuffer;\n        }\n    }\n    // Fell through to a response type that is not supported on this browser.\n    goog.log.error(\n        this.logger_, 'Response type ' + this.responseType_ + ' is not ' +\n            'supported on this browser');\n    return null;\n  } catch (e) {\n    goog.log.fine(this.logger_, 'Can not get response: ' + e.message);\n    return null;\n  }\n};\n\n\n/**\n * Get the value of the response-header with the given name from the Xhr object\n * Will only return correct result when called from the context of a callback\n * and the request has completed\n * @param {string} key The name of the response-header to retrieve.\n * @return {string|undefined} The value of the response-header named key.\n */\ngoog.net.XhrIo.prototype.getResponseHeader = function(key) {\n  if (!this.xhr_ || !this.isComplete()) {\n    return undefined;\n  }\n\n  var value = this.xhr_.getResponseHeader(key);\n  return goog.isNull(value) ? undefined : value;\n};\n\n\n/**\n * Gets the text of all the headers in the response.\n * Will only return correct result when called from the context of a callback\n * and the request has completed.\n * @return {string} The value of the response headers or empty string.\n */\ngoog.net.XhrIo.prototype.getAllResponseHeaders = function() {\n  // getAllResponseHeaders can return null if no response has been received,\n  // ensure we always return an empty string.\n  return this.xhr_ && this.isComplete() ?\n      (this.xhr_.getAllResponseHeaders() || '') :\n      '';\n};\n\n\n/**\n * Returns all response headers as a key-value map.\n * Multiple values for the same header key can be combined into one,\n * separated by a comma and a space.\n * Note that the native getResponseHeader method for retrieving a single header\n * does a case insensitive match on the header name. This method does not\n * include any case normalization logic, it will just return a key-value\n * representation of the headers.\n * See: http://www.w3.org/TR/XMLHttpRequest/#the-getresponseheader()-method\n * @return {!Object<string, string>} An object with the header keys as keys\n *     and header values as values.\n */\ngoog.net.XhrIo.prototype.getResponseHeaders = function() {\n  var headersObject = {};\n  var headersArray = this.getAllResponseHeaders().split('\\r\\n');\n  for (var i = 0; i < headersArray.length; i++) {\n    if (goog.string.isEmptyOrWhitespace(headersArray[i])) {\n      continue;\n    }\n    var keyValue = goog.string.splitLimit(headersArray[i], ': ', 2);\n    if (headersObject[keyValue[0]]) {\n      headersObject[keyValue[0]] += ', ' + keyValue[1];\n    } else {\n      headersObject[keyValue[0]] = keyValue[1];\n    }\n  }\n  return headersObject;\n};\n\n\n/**\n * Get the value of the response-header with the given name from the Xhr object.\n * As opposed to {@link #getResponseHeader}, this method does not require that\n * the request has completed.\n * @param {string} key The name of the response-header to retrieve.\n * @return {?string} The value of the response-header, or null if it is\n *     unavailable.\n */\ngoog.net.XhrIo.prototype.getStreamingResponseHeader = function(key) {\n  return this.xhr_ ? this.xhr_.getResponseHeader(key) : null;\n};\n\n\n/**\n * Gets the text of all the headers in the response. As opposed to\n * {@link #getAllResponseHeaders}, this method does not require that the request\n * has completed.\n * @return {string} The value of the response headers or empty string.\n */\ngoog.net.XhrIo.prototype.getAllStreamingResponseHeaders = function() {\n  return this.xhr_ ? this.xhr_.getAllResponseHeaders() : '';\n};\n\n\n/**\n * Get the last error message\n * @return {!goog.net.ErrorCode} Last error code.\n */\ngoog.net.XhrIo.prototype.getLastErrorCode = function() {\n  return this.lastErrorCode_;\n};\n\n\n/**\n * Get the last error message\n * @return {string} Last error message.\n */\ngoog.net.XhrIo.prototype.getLastError = function() {\n  return goog.isString(this.lastError_) ? this.lastError_ :\n                                          String(this.lastError_);\n};\n\n\n/**\n * Adds the last method, status and URI to the message.  This is used to add\n * this information to the logging calls.\n * @param {string} msg The message text that we want to add the extra text to.\n * @return {string} The message with the extra text appended.\n * @private\n */\ngoog.net.XhrIo.prototype.formatMsg_ = function(msg) {\n  return msg + ' [' + this.lastMethod_ + ' ' + this.lastUri_ + ' ' +\n      this.getStatus() + ']';\n};\n\n\n// Register the xhr handler as an entry point, so that\n// it can be monitored for exception handling, etc.\ngoog.debug.entryPointRegistry.register(\n    /**\n     * @param {function(!Function): !Function} transformer The transforming\n     *     function.\n     */\n    function(transformer) {\n      goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ =\n          transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);\n    });\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for string manipulation.\n * @author arv@google.com (Erik Arvidsson)\n */\n\n\n/**\n * Namespace for string utilities\n */\ngoog.provide('goog.string');\ngoog.provide('goog.string.Unicode');\n\n\n/**\n * @define {boolean} Enables HTML escaping of lowercase letter \"e\" which helps\n * with detection of double-escaping as this letter is frequently used.\n */\ngoog.define('goog.string.DETECT_DOUBLE_ESCAPING', false);\n\n\n/**\n * @define {boolean} Whether to force non-dom html unescaping.\n */\ngoog.define('goog.string.FORCE_NON_DOM_HTML_UNESCAPING', false);\n\n\n/**\n * Common Unicode string characters.\n * @enum {string}\n */\ngoog.string.Unicode = {\n  NBSP: '\\xa0'\n};\n\n\n/**\n * Fast prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix A string to look for at the start of `str`.\n * @return {boolean} True if `str` begins with `prefix`.\n */\ngoog.string.startsWith = function(str, prefix) {\n  return str.lastIndexOf(prefix, 0) == 0;\n};\n\n\n/**\n * Fast suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix`.\n */\ngoog.string.endsWith = function(str, suffix) {\n  var l = str.length - suffix.length;\n  return l >= 0 && str.indexOf(suffix, l) == l;\n};\n\n\n/**\n * Case-insensitive prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix  A string to look for at the end of `str`.\n * @return {boolean} True if `str` begins with `prefix` (ignoring\n *     case).\n */\ngoog.string.caseInsensitiveStartsWith = function(str, prefix) {\n  return goog.string.caseInsensitiveCompare(\n             prefix, str.substr(0, prefix.length)) == 0;\n};\n\n\n/**\n * Case-insensitive suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix` (ignoring\n *     case).\n */\ngoog.string.caseInsensitiveEndsWith = function(str, suffix) {\n  return (\n      goog.string.caseInsensitiveCompare(\n          suffix, str.substr(str.length - suffix.length, suffix.length)) == 0);\n};\n\n\n/**\n * Case-insensitive equality checker.\n * @param {string} str1 First string to check.\n * @param {string} str2 Second string to check.\n * @return {boolean} True if `str1` and `str2` are the same string,\n *     ignoring case.\n */\ngoog.string.caseInsensitiveEquals = function(str1, str2) {\n  return str1.toLowerCase() == str2.toLowerCase();\n};\n\n\n/**\n * Does simple python-style string substitution.\n * subs(\"foo%s hot%s\", \"bar\", \"dog\") becomes \"foobar hotdog\".\n * @param {string} str The string containing the pattern.\n * @param {...*} var_args The items to substitute into the pattern.\n * @return {string} A copy of `str` in which each occurrence of\n *     {@code %s} has been replaced an argument from `var_args`.\n */\ngoog.string.subs = function(str, var_args) {\n  var splitParts = str.split('%s');\n  var returnString = '';\n\n  var subsArguments = Array.prototype.slice.call(arguments, 1);\n  while (subsArguments.length &&\n         // Replace up to the last split part. We are inserting in the\n         // positions between split parts.\n         splitParts.length > 1) {\n    returnString += splitParts.shift() + subsArguments.shift();\n  }\n\n  return returnString + splitParts.join('%s');  // Join unused '%s'\n};\n\n\n/**\n * Converts multiple whitespace chars (spaces, non-breaking-spaces, new lines\n * and tabs) to a single space, and strips leading and trailing whitespace.\n * @param {string} str Input string.\n * @return {string} A copy of `str` with collapsed whitespace.\n */\ngoog.string.collapseWhitespace = function(str) {\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/[\\s\\xa0]+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n */\ngoog.string.isEmptyOrWhitespace = function(str) {\n  // testing length == 0 first is actually slower in all browsers (about the\n  // same in Opera).\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return /^[\\s\\xa0]*$/.test(str);\n};\n\n\n/**\n * Checks if a string is empty.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty.\n */\ngoog.string.isEmptyString = function(str) {\n  return str.length == 0;\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n *\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace instead.\n */\ngoog.string.isEmpty = goog.string.isEmptyOrWhitespace;\n\n\n/**\n * Checks if a string is null, undefined, empty or contains only whitespaces.\n * @param {*} str The string to check.\n * @return {boolean} Whether `str` is null, undefined, empty, or\n *     whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str))\n *     instead.\n */\ngoog.string.isEmptyOrWhitespaceSafe = function(str) {\n  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));\n};\n\n\n/**\n * Checks if a string is null, undefined, empty or contains only whitespaces.\n *\n * @param {*} str The string to check.\n * @return {boolean} Whether `str` is null, undefined, empty, or\n *     whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace instead.\n */\ngoog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;\n\n\n/**\n * Checks if a string is all breaking whitespace.\n * @param {string} str The string to check.\n * @return {boolean} Whether the string is all breaking whitespace.\n */\ngoog.string.isBreakingWhitespace = function(str) {\n  return !/[^\\t\\n\\r ]/.test(str);\n};\n\n\n/**\n * Checks if a string contains all letters.\n * @param {string} str string to check.\n * @return {boolean} True if `str` consists entirely of letters.\n */\ngoog.string.isAlpha = function(str) {\n  return !/[^a-zA-Z]/.test(str);\n};\n\n\n/**\n * Checks if a string contains only numbers.\n * @param {*} str string to check. If not a string, it will be\n *     casted to one.\n * @return {boolean} True if `str` is numeric.\n */\ngoog.string.isNumeric = function(str) {\n  return !/[^0-9]/.test(str);\n};\n\n\n/**\n * Checks if a string contains only numbers or letters.\n * @param {string} str string to check.\n * @return {boolean} True if `str` is alphanumeric.\n */\ngoog.string.isAlphaNumeric = function(str) {\n  return !/[^a-zA-Z0-9]/.test(str);\n};\n\n\n/**\n * Checks if a character is a space character.\n * @param {string} ch Character to check.\n * @return {boolean} True if `ch` is a space.\n */\ngoog.string.isSpace = function(ch) {\n  return ch == ' ';\n};\n\n\n/**\n * Checks if a character is a valid unicode character.\n * @param {string} ch Character to check.\n * @return {boolean} True if `ch` is a valid unicode character.\n */\ngoog.string.isUnicodeChar = function(ch) {\n  return ch.length == 1 && ch >= ' ' && ch <= '~' ||\n      ch >= '\\u0080' && ch <= '\\uFFFD';\n};\n\n\n/**\n * Takes a string and replaces newlines with a space. Multiple lines are\n * replaced with a single space.\n * @param {string} str The string from which to strip newlines.\n * @return {string} A copy of `str` stripped of newlines.\n */\ngoog.string.stripNewlines = function(str) {\n  return str.replace(/(\\r\\n|\\r|\\n)+/g, ' ');\n};\n\n\n/**\n * Replaces Windows and Mac new lines with unix style: \\r or \\r\\n with \\n.\n * @param {string} str The string to in which to canonicalize newlines.\n * @return {string} `str` A copy of {@code} with canonicalized newlines.\n */\ngoog.string.canonicalizeNewlines = function(str) {\n  return str.replace(/(\\r\\n|\\r|\\n)/g, '\\n');\n};\n\n\n/**\n * Normalizes whitespace in a string, replacing all whitespace chars with\n * a space.\n * @param {string} str The string in which to normalize whitespace.\n * @return {string} A copy of `str` with all whitespace normalized.\n */\ngoog.string.normalizeWhitespace = function(str) {\n  return str.replace(/\\xa0|\\s/g, ' ');\n};\n\n\n/**\n * Normalizes spaces in a string, replacing all consecutive spaces and tabs\n * with a single space. Replaces non-breaking space with a space.\n * @param {string} str The string in which to normalize spaces.\n * @return {string} A copy of `str` with all consecutive spaces and tabs\n *    replaced with a single space.\n */\ngoog.string.normalizeSpaces = function(str) {\n  return str.replace(/\\xa0|[ \\t]+/g, ' ');\n};\n\n\n/**\n * Removes the breaking spaces from the left and right of the string and\n * collapses the sequences of breaking spaces in the middle into single spaces.\n * The original and the result strings render the same way in HTML.\n * @param {string} str A string in which to collapse spaces.\n * @return {string} Copy of the string with normalized breaking spaces.\n */\ngoog.string.collapseBreakingSpaces = function(str) {\n  return str.replace(/[\\t\\r\\n ]+/g, ' ')\n      .replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n};\n\n\n/**\n * Trims white spaces to the left and right of a string.\n * @param {string} str The string to trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trim =\n    (goog.TRUSTED_SITE && String.prototype.trim) ? function(str) {\n      return str.trim();\n    } : function(str) {\n      // Since IE doesn't include non-breaking-space (0xa0) in their \\s\n      // character class (as required by section 7.2 of the ECMAScript spec),\n      // we explicitly include it in the regexp to enforce consistent\n      // cross-browser behavior.\n      // NOTE: We don't use String#replace because it might have side effects\n      // causing this function to not compile to 0 bytes.\n      return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(str)[1];\n    };\n\n\n/**\n * Trims whitespaces at the left end of a string.\n * @param {string} str The string to left trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trimLeft = function(str) {\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/^[\\s\\xa0]+/, '');\n};\n\n\n/**\n * Trims whitespaces at the right end of a string.\n * @param {string} str The string to right trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trimRight = function(str) {\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/[\\s\\xa0]+$/, '');\n};\n\n\n/**\n * A string comparator that ignores case.\n * -1 = str1 less than str2\n *  0 = str1 equals str2\n *  1 = str1 greater than str2\n *\n * @param {string} str1 The string to compare.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} The comparator result, as described above.\n */\ngoog.string.caseInsensitiveCompare = function(str1, str2) {\n  var test1 = String(str1).toLowerCase();\n  var test2 = String(str2).toLowerCase();\n\n  if (test1 < test2) {\n    return -1;\n  } else if (test1 == test2) {\n    return 0;\n  } else {\n    return 1;\n  }\n};\n\n\n/**\n * Compares two strings interpreting their numeric substrings as numbers.\n *\n * @param {string} str1 First string.\n * @param {string} str2 Second string.\n * @param {!RegExp} tokenizerRegExp Splits a string into substrings of\n *     non-negative integers, non-numeric characters and optionally fractional\n *     numbers starting with a decimal point.\n * @return {number} Negative if str1 < str2, 0 is str1 == str2, positive if\n *     str1 > str2.\n * @private\n */\ngoog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {\n  if (str1 == str2) {\n    return 0;\n  }\n  if (!str1) {\n    return -1;\n  }\n  if (!str2) {\n    return 1;\n  }\n\n  // Using match to split the entire string ahead of time turns out to be faster\n  // for most inputs than using RegExp.exec or iterating over each character.\n  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);\n  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);\n\n  var count = Math.min(tokens1.length, tokens2.length);\n\n  for (var i = 0; i < count; i++) {\n    var a = tokens1[i];\n    var b = tokens2[i];\n\n    // Compare pairs of tokens, returning if one token sorts before the other.\n    if (a != b) {\n      // Only if both tokens are integers is a special comparison required.\n      // Decimal numbers are sorted as strings (e.g., '.09' < '.1').\n      var num1 = parseInt(a, 10);\n      if (!isNaN(num1)) {\n        var num2 = parseInt(b, 10);\n        if (!isNaN(num2) && num1 - num2) {\n          return num1 - num2;\n        }\n      }\n      return a < b ? -1 : 1;\n    }\n  }\n\n  // If one string is a substring of the other, the shorter string sorts first.\n  if (tokens1.length != tokens2.length) {\n    return tokens1.length - tokens2.length;\n  }\n\n  // The two strings must be equivalent except for case (perfect equality is\n  // tested at the head of the function.) Revert to default ASCII string\n  // comparison to stabilize the sort.\n  return str1 < str2 ? -1 : 1;\n};\n\n\n/**\n * String comparison function that handles non-negative integer numbers in a\n * way humans might expect. Using this function, the string 'File 2.jpg' sorts\n * before 'File 10.jpg', and 'Version 1.9' before 'Version 1.10'. The comparison\n * is mostly case-insensitive, though strings that are identical except for case\n * are sorted with the upper-case strings before lower-case.\n *\n * This comparison function is up to 50x slower than either the default or the\n * case-insensitive compare. It should not be used in time-critical code, but\n * should be fast enough to sort several hundred short strings (like filenames)\n * with a reasonable delay.\n *\n * @param {string} str1 The string to compare in a numerically sensitive way.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} less than 0 if str1 < str2, 0 if str1 == str2, greater than\n *     0 if str1 > str2.\n */\ngoog.string.intAwareCompare = function(str1, str2) {\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\D+/g);\n};\n\n\n/**\n * String comparison function that handles non-negative integer and fractional\n * numbers in a way humans might expect. Using this function, the string\n * 'File 2.jpg' sorts before 'File 10.jpg', and '3.14' before '3.2'. Equivalent\n * to {@link goog.string.intAwareCompare} apart from the way how it interprets\n * dots.\n *\n * @param {string} str1 The string to compare in a numerically sensitive way.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} less than 0 if str1 < str2, 0 if str1 == str2, greater than\n *     0 if str1 > str2.\n */\ngoog.string.floatAwareCompare = function(str1, str2) {\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\.\\d+|\\D+/g);\n};\n\n\n/**\n * Alias for {@link goog.string.floatAwareCompare}.\n *\n * @param {string} str1\n * @param {string} str2\n * @return {number}\n */\ngoog.string.numerateCompare = goog.string.floatAwareCompare;\n\n\n/**\n * URL-encodes a string\n * @param {*} str The string to url-encode.\n * @return {string} An encoded copy of `str` that is safe for urls.\n *     Note that '#', ':', and other characters used to delimit portions\n *     of URLs *will* be encoded.\n */\ngoog.string.urlEncode = function(str) {\n  return encodeURIComponent(String(str));\n};\n\n\n/**\n * URL-decodes the string. We need to specially handle '+'s because\n * the javascript library doesn't convert them to spaces.\n * @param {string} str The string to url decode.\n * @return {string} The decoded `str`.\n */\ngoog.string.urlDecode = function(str) {\n  return decodeURIComponent(str.replace(/\\+/g, ' '));\n};\n\n\n/**\n * Converts \\n to <br>s or <br />s.\n * @param {string} str The string in which to convert newlines.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} A copy of `str` with converted newlines.\n */\ngoog.string.newLineToBr = function(str, opt_xml) {\n  return str.replace(/(\\r\\n|\\r|\\n)/g, opt_xml ? '<br />' : '<br>');\n};\n\n\n/**\n * Escapes double quote '\"' and single quote '\\'' characters in addition to\n * '&', '<', and '>' so that a string can be included in an HTML tag attribute\n * value within double or single quotes.\n *\n * It should be noted that > doesn't need to be escaped for the HTML or XML to\n * be valid, but it has been decided to escape it for consistency with other\n * implementations.\n *\n * With goog.string.DETECT_DOUBLE_ESCAPING, this function escapes also the\n * lowercase letter \"e\".\n *\n * NOTE(user):\n * HtmlEscape is often called during the generation of large blocks of HTML.\n * Using statics for the regular expressions and strings is an optimization\n * that can more than half the amount of time IE spends in this function for\n * large apps, since strings and regexes both contribute to GC allocations.\n *\n * Testing for the presence of a character before escaping increases the number\n * of function calls, but actually provides a speed increase for the average\n * case -- since the average case often doesn't require the escaping of all 4\n * characters and indexOf() is much cheaper than replace().\n * The worst case does suffer slightly from the additional calls, therefore the\n * opt_isLikelyToContainHtmlChars option has been included for situations\n * where all 4 HTML entities are very likely to be present and need escaping.\n *\n * Some benchmarks (times tended to fluctuate +-0.05ms):\n *                                     FireFox                     IE6\n * (no chars / average (mix of cases) / all 4 chars)\n * no checks                     0.13 / 0.22 / 0.22         0.23 / 0.53 / 0.80\n * indexOf                       0.08 / 0.17 / 0.26         0.22 / 0.54 / 0.84\n * indexOf + re test             0.07 / 0.17 / 0.28         0.19 / 0.50 / 0.85\n *\n * An additional advantage of checking if replace actually needs to be called\n * is a reduction in the number of object allocations, so as the size of the\n * application grows the difference between the various methods would increase.\n *\n * @param {string} str string to be escaped.\n * @param {boolean=} opt_isLikelyToContainHtmlChars Don't perform a check to see\n *     if the character needs replacing - use this option if you expect each of\n *     the characters to appear often. Leave false if you expect few html\n *     characters to occur in your strings, such as if you are escaping HTML.\n * @return {string} An escaped copy of `str`.\n */\ngoog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {\n\n  if (opt_isLikelyToContainHtmlChars) {\n    str = str.replace(goog.string.AMP_RE_, '&amp;')\n              .replace(goog.string.LT_RE_, '&lt;')\n              .replace(goog.string.GT_RE_, '&gt;')\n              .replace(goog.string.QUOT_RE_, '&quot;')\n              .replace(goog.string.SINGLE_QUOTE_RE_, '&#39;')\n              .replace(goog.string.NULL_RE_, '&#0;');\n    if (goog.string.DETECT_DOUBLE_ESCAPING) {\n      str = str.replace(goog.string.E_RE_, '&#101;');\n    }\n    return str;\n\n  } else {\n    // quick test helps in the case when there are no chars to replace, in\n    // worst case this makes barely a difference to the time taken\n    if (!goog.string.ALL_RE_.test(str)) return str;\n\n    // str.indexOf is faster than regex.test in this case\n    if (str.indexOf('&') != -1) {\n      str = str.replace(goog.string.AMP_RE_, '&amp;');\n    }\n    if (str.indexOf('<') != -1) {\n      str = str.replace(goog.string.LT_RE_, '&lt;');\n    }\n    if (str.indexOf('>') != -1) {\n      str = str.replace(goog.string.GT_RE_, '&gt;');\n    }\n    if (str.indexOf('\"') != -1) {\n      str = str.replace(goog.string.QUOT_RE_, '&quot;');\n    }\n    if (str.indexOf('\\'') != -1) {\n      str = str.replace(goog.string.SINGLE_QUOTE_RE_, '&#39;');\n    }\n    if (str.indexOf('\\x00') != -1) {\n      str = str.replace(goog.string.NULL_RE_, '&#0;');\n    }\n    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf('e') != -1) {\n      str = str.replace(goog.string.E_RE_, '&#101;');\n    }\n    return str;\n  }\n};\n\n\n/**\n * Regular expression that matches an ampersand, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.AMP_RE_ = /&/g;\n\n\n/**\n * Regular expression that matches a less than sign, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.LT_RE_ = /</g;\n\n\n/**\n * Regular expression that matches a greater than sign, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.GT_RE_ = />/g;\n\n\n/**\n * Regular expression that matches a double quote, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.QUOT_RE_ = /\"/g;\n\n\n/**\n * Regular expression that matches a single quote, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.SINGLE_QUOTE_RE_ = /'/g;\n\n\n/**\n * Regular expression that matches null character, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.NULL_RE_ = /\\x00/g;\n\n\n/**\n * Regular expression that matches a lowercase letter \"e\", for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.E_RE_ = /e/g;\n\n\n/**\n * Regular expression that matches any character that needs to be escaped.\n * @const {!RegExp}\n * @private\n */\ngoog.string.ALL_RE_ =\n    (goog.string.DETECT_DOUBLE_ESCAPING ? /[\\x00&<>\"'e]/ : /[\\x00&<>\"']/);\n\n\n/**\n * Unescapes an HTML string.\n *\n * @param {string} str The string to unescape.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapeEntities = function(str) {\n  if (goog.string.contains(str, '&')) {\n    // We are careful not to use a DOM if we do not have one or we explicitly\n    // requested non-DOM html unescaping.\n    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING &&\n        'document' in goog.global) {\n      return goog.string.unescapeEntitiesUsingDom_(str);\n    } else {\n      // Fall back on pure XML entities\n      return goog.string.unescapePureXmlEntities_(str);\n    }\n  }\n  return str;\n};\n\n\n/**\n * Unescapes a HTML string using the provided document.\n *\n * @param {string} str The string to unescape.\n * @param {!Document} document A document to use in escaping the string.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapeEntitiesWithDocument = function(str, document) {\n  if (goog.string.contains(str, '&')) {\n    return goog.string.unescapeEntitiesUsingDom_(str, document);\n  }\n  return str;\n};\n\n\n/**\n * Unescapes an HTML string using a DOM to resolve non-XML, non-numeric\n * entities. This function is XSS-safe and whitespace-preserving.\n * @private\n * @param {string} str The string to unescape.\n * @param {Document=} opt_document An optional document to use for creating\n *     elements. If this is not specified then the default window.document\n *     will be used.\n * @return {string} The unescaped `str` string.\n */\ngoog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {\n  /** @type {!Object<string, string>} */\n  var seen = {'&amp;': '&', '&lt;': '<', '&gt;': '>', '&quot;': '\"'};\n  var div;\n  if (opt_document) {\n    div = opt_document.createElement('div');\n  } else {\n    div = goog.global.document.createElement('div');\n  }\n  // Match as many valid entity characters as possible. If the actual entity\n  // happens to be shorter, it will still work as innerHTML will return the\n  // trailing characters unchanged. Since the entity characters do not include\n  // open angle bracket, there is no chance of XSS from the innerHTML use.\n  // Since no whitespace is passed to innerHTML, whitespace is preserved.\n  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {\n    // Check for cached entity.\n    var value = seen[s];\n    if (value) {\n      return value;\n    }\n    // Check for numeric entity.\n    if (entity.charAt(0) == '#') {\n      // Prefix with 0 so that hex entities (e.g. &#x10) parse as hex numbers.\n      var n = Number('0' + entity.substr(1));\n      if (!isNaN(n)) {\n        value = String.fromCharCode(n);\n      }\n    }\n    // Fall back to innerHTML otherwise.\n    if (!value) {\n      // Append a non-entity character to avoid a bug in Webkit that parses\n      // an invalid entity at the end of innerHTML text as the empty string.\n      div.innerHTML = s + ' ';\n      // Then remove the trailing character from the result.\n      value = div.firstChild.nodeValue.slice(0, -1);\n    }\n    // Cache and return.\n    return seen[s] = value;\n  });\n};\n\n\n/**\n * Unescapes XML entities.\n * @private\n * @param {string} str The string to unescape.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapePureXmlEntities_ = function(str) {\n  return str.replace(/&([^;]+);/g, function(s, entity) {\n    switch (entity) {\n      case 'amp':\n        return '&';\n      case 'lt':\n        return '<';\n      case 'gt':\n        return '>';\n      case 'quot':\n        return '\"';\n      default:\n        if (entity.charAt(0) == '#') {\n          // Prefix with 0 so that hex entities (e.g. &#x10) parse as hex.\n          var n = Number('0' + entity.substr(1));\n          if (!isNaN(n)) {\n            return String.fromCharCode(n);\n          }\n        }\n        // For invalid entities we just return the entity\n        return s;\n    }\n  });\n};\n\n\n/**\n * Regular expression that matches an HTML entity.\n * See also HTML5: Tokenization / Tokenizing character references.\n * @private\n * @type {!RegExp}\n */\ngoog.string.HTML_ENTITY_PATTERN_ = /&([^;\\s<&]+);?/g;\n\n\n/**\n * Do escaping of whitespace to preserve spatial formatting. We use character\n * entity #160 to make it safer for xml.\n * @param {string} str The string in which to escape whitespace.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} An escaped copy of `str`.\n */\ngoog.string.whitespaceEscape = function(str, opt_xml) {\n  // This doesn't use goog.string.preserveSpaces for backwards compatibility.\n  return goog.string.newLineToBr(str.replace(/  /g, ' &#160;'), opt_xml);\n};\n\n\n/**\n * Preserve spaces that would be otherwise collapsed in HTML by replacing them\n * with non-breaking space Unicode characters.\n * @param {string} str The string in which to preserve whitespace.\n * @return {string} A copy of `str` with preserved whitespace.\n */\ngoog.string.preserveSpaces = function(str) {\n  return str.replace(/(^|[\\n ]) /g, '$1' + goog.string.Unicode.NBSP);\n};\n\n\n/**\n * Strip quote characters around a string.  The second argument is a string of\n * characters to treat as quotes.  This can be a single character or a string of\n * multiple character and in that case each of those are treated as possible\n * quote characters. For example:\n *\n * <pre>\n * goog.string.stripQuotes('\"abc\"', '\"`') --> 'abc'\n * goog.string.stripQuotes('`abc`', '\"`') --> 'abc'\n * </pre>\n *\n * @param {string} str The string to strip.\n * @param {string} quoteChars The quote characters to strip.\n * @return {string} A copy of `str` without the quotes.\n */\ngoog.string.stripQuotes = function(str, quoteChars) {\n  var length = quoteChars.length;\n  for (var i = 0; i < length; i++) {\n    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);\n    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {\n      return str.substring(1, str.length - 1);\n    }\n  }\n  return str;\n};\n\n\n/**\n * Truncates a string to a certain length and adds '...' if necessary.  The\n * length also accounts for the ellipsis, so a maximum length of 10 and a string\n * 'Hello World!' produces 'Hello W...'.\n * @param {string} str The string to truncate.\n * @param {number} chars Max number of characters.\n * @param {boolean=} opt_protectEscapedCharacters Whether to protect escaped\n *     characters from being cut off in the middle.\n * @return {string} The truncated `str` string.\n */\ngoog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.unescapeEntities(str);\n  }\n\n  if (str.length > chars) {\n    str = str.substring(0, chars - 3) + '...';\n  }\n\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.htmlEscape(str);\n  }\n\n  return str;\n};\n\n\n/**\n * Truncate a string in the middle, adding \"...\" if necessary,\n * and favoring the beginning of the string.\n * @param {string} str The string to truncate the middle of.\n * @param {number} chars Max number of characters.\n * @param {boolean=} opt_protectEscapedCharacters Whether to protect escaped\n *     characters from being cutoff in the middle.\n * @param {number=} opt_trailingChars Optional number of trailing characters to\n *     leave at the end of the string, instead of truncating as close to the\n *     middle as possible.\n * @return {string} A truncated copy of `str`.\n */\ngoog.string.truncateMiddle = function(\n    str, chars, opt_protectEscapedCharacters, opt_trailingChars) {\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.unescapeEntities(str);\n  }\n\n  if (opt_trailingChars && str.length > chars) {\n    if (opt_trailingChars > chars) {\n      opt_trailingChars = chars;\n    }\n    var endPoint = str.length - opt_trailingChars;\n    var startPoint = chars - opt_trailingChars;\n    str = str.substring(0, startPoint) + '...' + str.substring(endPoint);\n  } else if (str.length > chars) {\n    // Favor the beginning of the string:\n    var half = Math.floor(chars / 2);\n    var endPos = str.length - half;\n    half += chars % 2;\n    str = str.substring(0, half) + '...' + str.substring(endPos);\n  }\n\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.htmlEscape(str);\n  }\n\n  return str;\n};\n\n\n/**\n * Special chars that need to be escaped for goog.string.quote.\n * @private {!Object<string, string>}\n */\ngoog.string.specialEscapeChars_ = {\n  '\\0': '\\\\0',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  '\\x0B': '\\\\x0B',  // '\\v' is not supported in JScript\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  // To support the use case of embedding quoted strings inside of script\n  // tags, we have to make sure HTML comments and opening/closing script tags do\n  // not appear in the resulting string. The specific strings that must be\n  // escaped are documented at:\n  // http://www.w3.org/TR/html51/semantics.html#restrictions-for-contents-of-script-elements\n  '<': '\\x3c'\n};\n\n\n/**\n * Character mappings used internally for goog.string.escapeChar.\n * @private {!Object<string, string>}\n */\ngoog.string.jsEscapeCache_ = {\n  '\\'': '\\\\\\''\n};\n\n\n/**\n * Encloses a string in double quotes and escapes characters so that the\n * string is a valid JS string. The resulting string is safe to embed in\n * `<script>` tags as \"<\" is escaped.\n * @param {string} s The string to quote.\n * @return {string} A copy of `s` surrounded by double quotes.\n */\ngoog.string.quote = function(s) {\n  s = String(s);\n  var sb = ['\"'];\n  for (var i = 0; i < s.length; i++) {\n    var ch = s.charAt(i);\n    var cc = ch.charCodeAt(0);\n    sb[i + 1] = goog.string.specialEscapeChars_[ch] ||\n        ((cc > 31 && cc < 127) ? ch : goog.string.escapeChar(ch));\n  }\n  sb.push('\"');\n  return sb.join('');\n};\n\n\n/**\n * Takes a string and returns the escaped string for that input string.\n * @param {string} str The string to escape.\n * @return {string} An escaped string representing `str`.\n */\ngoog.string.escapeString = function(str) {\n  var sb = [];\n  for (var i = 0; i < str.length; i++) {\n    sb[i] = goog.string.escapeChar(str.charAt(i));\n  }\n  return sb.join('');\n};\n\n\n/**\n * Takes a character and returns the escaped string for that character. For\n * example escapeChar(String.fromCharCode(15)) -> \"\\\\x0E\".\n * @param {string} c The character to escape.\n * @return {string} An escaped string representing `c`.\n */\ngoog.string.escapeChar = function(c) {\n  if (c in goog.string.jsEscapeCache_) {\n    return goog.string.jsEscapeCache_[c];\n  }\n\n  if (c in goog.string.specialEscapeChars_) {\n    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];\n  }\n\n  var rv = c;\n  var cc = c.charCodeAt(0);\n  if (cc > 31 && cc < 127) {\n    rv = c;\n  } else {\n    // tab is 9 but handled above\n    if (cc < 256) {\n      rv = '\\\\x';\n      if (cc < 16 || cc > 256) {\n        rv += '0';\n      }\n    } else {\n      rv = '\\\\u';\n      if (cc < 4096) {  // \\u1000\n        rv += '0';\n      }\n    }\n    rv += cc.toString(16).toUpperCase();\n  }\n\n  return goog.string.jsEscapeCache_[c] = rv;\n};\n\n\n/**\n * Determines whether a string contains a substring.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n */\ngoog.string.contains = function(str, subString) {\n  return str.indexOf(subString) != -1;\n};\n\n\n/**\n * Determines whether a string contains a substring, ignoring case.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n */\ngoog.string.caseInsensitiveContains = function(str, subString) {\n  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());\n};\n\n\n/**\n * Returns the non-overlapping occurrences of ss in s.\n * If either s or ss evalutes to false, then returns zero.\n * @param {string} s The string to look in.\n * @param {string} ss The string to look for.\n * @return {number} Number of occurrences of ss in s.\n */\ngoog.string.countOf = function(s, ss) {\n  return s && ss ? s.split(ss).length - 1 : 0;\n};\n\n\n/**\n * Removes a substring of a specified length at a specific\n * index in a string.\n * @param {string} s The base string from which to remove.\n * @param {number} index The index at which to remove the substring.\n * @param {number} stringLength The length of the substring to remove.\n * @return {string} A copy of `s` with the substring removed or the full\n *     string if nothing is removed or the input is invalid.\n */\ngoog.string.removeAt = function(s, index, stringLength) {\n  var resultStr = s;\n  // If the index is greater or equal to 0 then remove substring\n  if (index >= 0 && index < s.length && stringLength > 0) {\n    resultStr = s.substr(0, index) +\n        s.substr(index + stringLength, s.length - index - stringLength);\n  }\n  return resultStr;\n};\n\n\n/**\n * Removes the first occurrence of a substring from a string.\n * @param {string} str The base string from which to remove.\n * @param {string} substr The string to remove.\n * @return {string} A copy of `str` with `substr` removed or the\n *     full string if nothing is removed.\n */\ngoog.string.remove = function(str, substr) {\n  return str.replace(substr, '');\n};\n\n\n/**\n *  Removes all occurrences of a substring from a string.\n *  @param {string} s The base string from which to remove.\n *  @param {string} ss The string to remove.\n *  @return {string} A copy of `s` with `ss` removed or the full\n *      string if nothing is removed.\n */\ngoog.string.removeAll = function(s, ss) {\n  var re = new RegExp(goog.string.regExpEscape(ss), 'g');\n  return s.replace(re, '');\n};\n\n\n/**\n *  Replaces all occurrences of a substring of a string with a new substring.\n *  @param {string} s The base string from which to remove.\n *  @param {string} ss The string to replace.\n *  @param {string} replacement The replacement string.\n *  @return {string} A copy of `s` with `ss` replaced by\n *      `replacement` or the original string if nothing is replaced.\n */\ngoog.string.replaceAll = function(s, ss, replacement) {\n  var re = new RegExp(goog.string.regExpEscape(ss), 'g');\n  return s.replace(re, replacement.replace(/\\$/g, '$$$$'));\n};\n\n\n/**\n * Escapes characters in the string that are not safe to use in a RegExp.\n * @param {*} s The string to escape. If not a string, it will be casted\n *     to one.\n * @return {string} A RegExp safe, escaped copy of `s`.\n */\ngoog.string.regExpEscape = function(s) {\n  return String(s)\n      .replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1')\n      .replace(/\\x08/g, '\\\\x08');\n};\n\n\n/**\n * Repeats a string n times.\n * @param {string} string The string to repeat.\n * @param {number} length The number of times to repeat.\n * @return {string} A string containing `length` repetitions of\n *     `string`.\n */\ngoog.string.repeat = (String.prototype.repeat) ? function(string, length) {\n  // The native method is over 100 times faster than the alternative.\n  return string.repeat(length);\n} : function(string, length) {\n  return new Array(length + 1).join(string);\n};\n\n\n/**\n * Pads number to given length and optionally rounds it to a given precision.\n * For example:\n * <pre>padNumber(1.25, 2, 3) -> '01.250'\n * padNumber(1.25, 2) -> '01.25'\n * padNumber(1.25, 2, 1) -> '01.3'\n * padNumber(1.25, 0) -> '1.25'</pre>\n *\n * @param {number} num The number to pad.\n * @param {number} length The desired length.\n * @param {number=} opt_precision The desired precision.\n * @return {string} `num` as a string with the given options.\n */\ngoog.string.padNumber = function(num, length, opt_precision) {\n  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);\n  var index = s.indexOf('.');\n  if (index == -1) {\n    index = s.length;\n  }\n  return goog.string.repeat('0', Math.max(0, length - index)) + s;\n};\n\n\n/**\n * Returns a string representation of the given object, with\n * null and undefined being returned as the empty string.\n *\n * @param {*} obj The object to convert.\n * @return {string} A string representation of the `obj`.\n */\ngoog.string.makeSafe = function(obj) {\n  return obj == null ? '' : String(obj);\n};\n\n\n/**\n * Concatenates string expressions. This is useful\n * since some browsers are very inefficient when it comes to using plus to\n * concat strings. Be careful when using null and undefined here since\n * these will not be included in the result. If you need to represent these\n * be sure to cast the argument to a String first.\n * For example:\n * <pre>buildString('a', 'b', 'c', 'd') -> 'abcd'\n * buildString(null, undefined) -> ''\n * </pre>\n * @param {...*} var_args A list of strings to concatenate. If not a string,\n *     it will be casted to one.\n * @return {string} The concatenation of `var_args`.\n */\ngoog.string.buildString = function(var_args) {\n  return Array.prototype.join.call(arguments, '');\n};\n\n\n/**\n * Returns a string with at least 64-bits of randomness.\n *\n * Doesn't trust Javascript's random function entirely. Uses a combination of\n * random and current timestamp, and then encodes the string in base-36 to\n * make it shorter.\n *\n * @return {string} A random string, e.g. sn1s7vb4gcic.\n */\ngoog.string.getRandomString = function() {\n  var x = 2147483648;\n  return Math.floor(Math.random() * x).toString(36) +\n      Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);\n};\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string|number} version1 Version of first item.\n * @param {string|number} version2 Version of second item.\n *\n * @return {number}  1 if `version1` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `version2` is higher.\n */\ngoog.string.compareVersions = function(version1, version2) {\n  var order = 0;\n  // Trim leading and trailing whitespace and split the versions into\n  // subversions.\n  var v1Subs = goog.string.trim(String(version1)).split('.');\n  var v2Subs = goog.string.trim(String(version2)).split('.');\n  var subCount = Math.max(v1Subs.length, v2Subs.length);\n\n  // Iterate over the subversions, as long as they appear to be equivalent.\n  for (var subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {\n    var v1Sub = v1Subs[subIdx] || '';\n    var v2Sub = v2Subs[subIdx] || '';\n\n    do {\n      // Split the subversions into pairs of numbers and qualifiers (like 'b').\n      // Two different RegExp objects are use to make it clear the code\n      // is side-effect free\n      var v1Comp = /(\\d*)(\\D*)(.*)/.exec(v1Sub) || ['', '', '', ''];\n      var v2Comp = /(\\d*)(\\D*)(.*)/.exec(v2Sub) || ['', '', '', ''];\n      // Break if there are no more matches.\n      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {\n        break;\n      }\n\n      // Parse the numeric part of the subversion. A missing number is\n      // equivalent to 0.\n      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);\n      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);\n\n      // Compare the subversion components. The number has the highest\n      // precedence. Next, if the numbers are equal, a subversion without any\n      // qualifier is always higher than a subversion with any qualifier. Next,\n      // the qualifiers are compared as strings.\n      order = goog.string.compareElements_(v1CompNum, v2CompNum) ||\n          goog.string.compareElements_(\n              v1Comp[2].length == 0, v2Comp[2].length == 0) ||\n          goog.string.compareElements_(v1Comp[2], v2Comp[2]);\n      // Stop as soon as an inequality is discovered.\n\n      v1Sub = v1Comp[3];\n      v2Sub = v2Comp[3];\n    } while (order == 0);\n  }\n\n  return order;\n};\n\n\n/**\n * Compares elements of a version number.\n *\n * @param {string|number|boolean} left An element from a version number.\n * @param {string|number|boolean} right An element from a version number.\n *\n * @return {number}  1 if `left` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `right` is higher.\n * @private\n */\ngoog.string.compareElements_ = function(left, right) {\n  if (left < right) {\n    return -1;\n  } else if (left > right) {\n    return 1;\n  }\n  return 0;\n};\n\n\n/**\n * String hash function similar to java.lang.String.hashCode().\n * The hash code for a string is computed as\n * s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n * where s[i] is the ith character of the string and n is the length of\n * the string. We mod the result to make it between 0 (inclusive) and 2^32\n * (exclusive).\n * @param {string} str A string.\n * @return {number} Hash value for `str`, between 0 (inclusive) and 2^32\n *  (exclusive). The empty string returns 0.\n */\ngoog.string.hashCode = function(str) {\n  var result = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Normalize to 4 byte range, 0 ... 2^32.\n    result = (31 * result + str.charCodeAt(i)) >>> 0;\n  }\n  return result;\n};\n\n\n/**\n * The most recent unique ID. |0 is equivalent to Math.floor in this case.\n * @type {number}\n * @private\n */\ngoog.string.uniqueStringCounter_ = Math.random() * 0x80000000 | 0;\n\n\n/**\n * Generates and returns a string which is unique in the current document.\n * This is useful, for example, to create unique IDs for DOM elements.\n * @return {string} A unique id.\n */\ngoog.string.createUniqueString = function() {\n  return 'goog_' + goog.string.uniqueStringCounter_++;\n};\n\n\n/**\n * Converts the supplied string to a number, which may be Infinity or NaN.\n * This function strips whitespace: (toNumber(' 123') === 123)\n * This function accepts scientific notation: (toNumber('1e1') === 10)\n *\n * This is better than Javascript's built-in conversions because, sadly:\n *     (Number(' ') === 0) and (parseFloat('123a') === 123)\n *\n * @param {string} str The string to convert.\n * @return {number} The number the supplied string represents, or NaN.\n */\ngoog.string.toNumber = function(str) {\n  var num = Number(str);\n  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {\n    return NaN;\n  }\n  return num;\n};\n\n\n/**\n * Returns whether the given string is lower camel case (e.g. \"isFooBar\").\n *\n * Note that this assumes the string is entirely letters.\n * @see http://en.wikipedia.org/wiki/CamelCase#Variations_and_synonyms\n *\n * @param {string} str String to test.\n * @return {boolean} Whether the string is lower camel case.\n */\ngoog.string.isLowerCamelCase = function(str) {\n  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);\n};\n\n\n/**\n * Returns whether the given string is upper camel case (e.g. \"FooBarBaz\").\n *\n * Note that this assumes the string is entirely letters.\n * @see http://en.wikipedia.org/wiki/CamelCase#Variations_and_synonyms\n *\n * @param {string} str String to test.\n * @return {boolean} Whether the string is upper camel case.\n */\ngoog.string.isUpperCamelCase = function(str) {\n  return /^([A-Z][a-z]*)+$/.test(str);\n};\n\n\n/**\n * Converts a string from selector-case to camelCase (e.g. from\n * \"multi-part-string\" to \"multiPartString\"), useful for converting\n * CSS selectors and HTML dataset keys to their equivalent JS properties.\n * @param {string} str The string in selector-case form.\n * @return {string} The string in camelCase form.\n */\ngoog.string.toCamelCase = function(str) {\n  return String(str).replace(\n      /\\-([a-z])/g, function(all, match) { return match.toUpperCase(); });\n};\n\n\n/**\n * Converts a string from camelCase to selector-case (e.g. from\n * \"multiPartString\" to \"multi-part-string\"), useful for converting JS\n * style and dataset properties to equivalent CSS selectors and HTML keys.\n * @param {string} str The string in camelCase form.\n * @return {string} The string in selector-case form.\n */\ngoog.string.toSelectorCase = function(str) {\n  return String(str).replace(/([A-Z])/g, '-$1').toLowerCase();\n};\n\n\n/**\n * Converts a string into TitleCase. First character of the string is always\n * capitalized in addition to the first letter of every subsequent word.\n * Words are delimited by one or more whitespaces by default. Custom delimiters\n * can optionally be specified to replace the default, which doesn't preserve\n * whitespace delimiters and instead must be explicitly included if needed.\n *\n * Default delimiter => \" \":\n *    goog.string.toTitleCase('oneTwoThree')    => 'OneTwoThree'\n *    goog.string.toTitleCase('one two three')  => 'One Two Three'\n *    goog.string.toTitleCase('  one   two   ') => '  One   Two   '\n *    goog.string.toTitleCase('one_two_three')  => 'One_two_three'\n *    goog.string.toTitleCase('one-two-three')  => 'One-two-three'\n *\n * Custom delimiter => \"_-.\":\n *    goog.string.toTitleCase('oneTwoThree', '_-.')       => 'OneTwoThree'\n *    goog.string.toTitleCase('one two three', '_-.')     => 'One two three'\n *    goog.string.toTitleCase('  one   two   ', '_-.')    => '  one   two   '\n *    goog.string.toTitleCase('one_two_three', '_-.')     => 'One_Two_Three'\n *    goog.string.toTitleCase('one-two-three', '_-.')     => 'One-Two-Three'\n *    goog.string.toTitleCase('one...two...three', '_-.') => 'One...Two...Three'\n *    goog.string.toTitleCase('one. two. three', '_-.')   => 'One. two. three'\n *    goog.string.toTitleCase('one-two.three', '_-.')     => 'One-Two.Three'\n *\n * @param {string} str String value in camelCase form.\n * @param {string=} opt_delimiters Custom delimiter character set used to\n *      distinguish words in the string value. Each character represents a\n *      single delimiter. When provided, default whitespace delimiter is\n *      overridden and must be explicitly included if needed.\n * @return {string} String value in TitleCase form.\n */\ngoog.string.toTitleCase = function(str, opt_delimiters) {\n  var delimiters = goog.isString(opt_delimiters) ?\n      goog.string.regExpEscape(opt_delimiters) :\n      '\\\\s';\n\n  // For IE8, we need to prevent using an empty character set. Otherwise,\n  // incorrect matching will occur.\n  delimiters = delimiters ? '|[' + delimiters + ']+' : '';\n\n  var regexp = new RegExp('(^' + delimiters + ')([a-z])', 'g');\n  return str.replace(\n      regexp, function(all, p1, p2) { return p1 + p2.toUpperCase(); });\n};\n\n\n/**\n * Capitalizes a string, i.e. converts the first letter to uppercase\n * and all other letters to lowercase, e.g.:\n *\n * goog.string.capitalize('one')     => 'One'\n * goog.string.capitalize('ONE')     => 'One'\n * goog.string.capitalize('one two') => 'One two'\n *\n * Note that this function does not trim initial whitespace.\n *\n * @param {string} str String value to capitalize.\n * @return {string} String value with first letter in uppercase.\n */\ngoog.string.capitalize = function(str) {\n  return String(str.charAt(0)).toUpperCase() +\n      String(str.substr(1)).toLowerCase();\n};\n\n\n/**\n * Parse a string in decimal or hexidecimal ('0xFFFF') form.\n *\n * To parse a particular radix, please use parseInt(string, radix) directly. See\n * https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\n *\n * This is a wrapper for the built-in parseInt function that will only parse\n * numbers as base 10 or base 16.  Some JS implementations assume strings\n * starting with \"0\" are intended to be octal. ES3 allowed but discouraged\n * this behavior. ES5 forbids it.  This function emulates the ES5 behavior.\n *\n * For more information, see Mozilla JS Reference: http://goo.gl/8RiFj\n *\n * @param {string|number|null|undefined} value The value to be parsed.\n * @return {number} The number, parsed. If the string failed to parse, this\n *     will be NaN.\n */\ngoog.string.parseInt = function(value) {\n  // Force finite numbers to strings.\n  if (isFinite(value)) {\n    value = String(value);\n  }\n\n  if (goog.isString(value)) {\n    // If the string starts with '0x' or '-0x', parse as hex.\n    return /^\\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);\n  }\n\n  return NaN;\n};\n\n\n/**\n * Splits a string on a separator a limited number of times.\n *\n * This implementation is more similar to Python or Java, where the limit\n * parameter specifies the maximum number of splits rather than truncating\n * the number of results.\n *\n * See http://docs.python.org/2/library/stdtypes.html#str.split\n * See JavaDoc: http://goo.gl/F2AsY\n * See Mozilla reference: http://goo.gl/dZdZs\n *\n * @param {string} str String to split.\n * @param {string} separator The separator.\n * @param {number} limit The limit to the number of splits. The resulting array\n *     will have a maximum length of limit+1.  Negative numbers are the same\n *     as zero.\n * @return {!Array<string>} The string, split.\n */\ngoog.string.splitLimit = function(str, separator, limit) {\n  var parts = str.split(separator);\n  var returnVal = [];\n\n  // Only continue doing this while we haven't hit the limit and we have\n  // parts left.\n  while (limit > 0 && parts.length) {\n    returnVal.push(parts.shift());\n    limit--;\n  }\n\n  // If there are remaining parts, append them to the end.\n  if (parts.length) {\n    returnVal.push(parts.join(separator));\n  }\n\n  return returnVal;\n};\n\n\n/**\n * Finds the characters to the right of the last instance of any separator\n *\n * This function is similar to goog.string.path.baseName, except it can take a\n * list of characters to split the string on. It will return the rightmost\n * grouping of characters to the right of any separator as a left-to-right\n * oriented string.\n *\n * @see goog.string.path.baseName\n * @param {string} str The string\n * @param {string|!Array<string>} separators A list of separator characters\n * @return {string} The last part of the string with respect to the separators\n */\ngoog.string.lastComponent = function(str, separators) {\n  if (!separators) {\n    return str;\n  } else if (typeof separators == 'string') {\n    separators = [separators];\n  }\n\n  var lastSeparatorIndex = -1;\n  for (var i = 0; i < separators.length; i++) {\n    if (separators[i] == '') {\n      continue;\n    }\n    var currentSeparatorIndex = str.lastIndexOf(separators[i]);\n    if (currentSeparatorIndex > lastSeparatorIndex) {\n      lastSeparatorIndex = currentSeparatorIndex;\n    }\n  }\n  if (lastSeparatorIndex == -1) {\n    return str;\n  }\n  return str.slice(lastSeparatorIndex + 1);\n};\n\n\n/**\n * Computes the Levenshtein edit distance between two strings.\n * @param {string} a\n * @param {string} b\n * @return {number} The edit distance between the two strings.\n */\ngoog.string.editDistance = function(a, b) {\n  var v0 = [];\n  var v1 = [];\n\n  if (a == b) {\n    return 0;\n  }\n\n  if (!a.length || !b.length) {\n    return Math.max(a.length, b.length);\n  }\n\n  for (var i = 0; i < b.length + 1; i++) {\n    v0[i] = i;\n  }\n\n  for (var i = 0; i < a.length; i++) {\n    v1[0] = i + 1;\n\n    for (var j = 0; j < b.length; j++) {\n      var cost = Number(a[i] != b[j]);\n      // Cost for the substring is the minimum of adding one character, removing\n      // one character, or a swap.\n      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);\n    }\n\n    for (var j = 0; j < v0.length; j++) {\n      v0[j] = v1[j];\n    }\n  }\n\n  return v1[b.length];\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities used by goog.labs.userAgent tools. These functions\n * should not be used outside of goog.labs.userAgent.*.\n *\n * @author nnaze@google.com (Nathan Naze)\n */\n\ngoog.provide('goog.labs.userAgent.util');\n\ngoog.require('goog.string');\n\n\n/**\n * Gets the native userAgent string from navigator if it exists.\n * If navigator or navigator.userAgent string is missing, returns an empty\n * string.\n * @return {string}\n * @private\n */\ngoog.labs.userAgent.util.getNativeUserAgentString_ = function() {\n  var navigator = goog.labs.userAgent.util.getNavigator_();\n  if (navigator) {\n    var userAgent = navigator.userAgent;\n    if (userAgent) {\n      return userAgent;\n    }\n  }\n  return '';\n};\n\n\n/**\n * Getter for the native navigator.\n * This is a separate function so it can be stubbed out in testing.\n * @return {Navigator}\n * @private\n */\ngoog.labs.userAgent.util.getNavigator_ = function() {\n  return goog.global.navigator;\n};\n\n\n/**\n * A possible override for applications which wish to not check\n * navigator.userAgent but use a specified value for detection instead.\n * @private {string}\n */\ngoog.labs.userAgent.util.userAgent_ =\n    goog.labs.userAgent.util.getNativeUserAgentString_();\n\n\n/**\n * Applications may override browser detection on the built in\n * navigator.userAgent object by setting this string. Set to null to use the\n * browser object instead.\n * @param {?string=} opt_userAgent The User-Agent override.\n */\ngoog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {\n  goog.labs.userAgent.util.userAgent_ =\n      opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();\n};\n\n\n/**\n * @return {string} The user agent string.\n */\ngoog.labs.userAgent.util.getUserAgent = function() {\n  return goog.labs.userAgent.util.userAgent_;\n};\n\n\n/**\n * @param {string} str\n * @return {boolean} Whether the user agent contains the given string.\n */\ngoog.labs.userAgent.util.matchUserAgent = function(str) {\n  var userAgent = goog.labs.userAgent.util.getUserAgent();\n  return goog.string.contains(userAgent, str);\n};\n\n\n/**\n * @param {string} str\n * @return {boolean} Whether the user agent contains the given string, ignoring\n *     case.\n */\ngoog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {\n  var userAgent = goog.labs.userAgent.util.getUserAgent();\n  return goog.string.caseInsensitiveContains(userAgent, str);\n};\n\n\n/**\n * Parses the user agent into tuples for each section.\n * @param {string} userAgent\n * @return {!Array<!Array<string>>} Tuples of key, version, and the contents\n *     of the parenthetical.\n */\ngoog.labs.userAgent.util.extractVersionTuples = function(userAgent) {\n  // Matches each section of a user agent string.\n  // Example UA:\n  // Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us)\n  // AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405\n  // This has three version tuples: Mozilla, AppleWebKit, and Mobile.\n\n  var versionRegExp = new RegExp(\n      // Key. Note that a key may have a space.\n      // (i.e. 'Mobile Safari' in 'Mobile Safari/5.0')\n      '(\\\\w[\\\\w ]+)' +\n\n          '/' +                // slash\n          '([^\\\\s]+)' +        // version (i.e. '5.0b')\n          '\\\\s*' +             // whitespace\n          '(?:\\\\((.*?)\\\\))?',  // parenthetical info. parentheses not matched.\n      'g');\n\n  var data = [];\n  var match;\n\n  // Iterate and collect the version tuples.  Each iteration will be the\n  // next regex match.\n  while (match = versionRegExp.exec(userAgent)) {\n    data.push([\n      match[1],  // key\n      match[2],  // value\n      // || undefined as this is not undefined in IE7 and IE8\n      match[3] || undefined  // info\n    ]);\n  }\n\n  return data;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for manipulating objects/maps/hashes.\n * @author arv@google.com (Erik Arvidsson)\n */\n\ngoog.provide('goog.object');\n\n\n/**\n * Whether two values are not observably distinguishable. This\n * correctly detects that 0 is not the same as -0 and two NaNs are\n * practically equivalent.\n *\n * The implementation is as suggested by harmony:egal proposal.\n *\n * @param {*} v The first value to compare.\n * @param {*} v2 The second value to compare.\n * @return {boolean} Whether two values are not observably distinguishable.\n * @see http://wiki.ecmascript.org/doku.php?id=harmony:egal\n */\ngoog.object.is = function(v, v2) {\n  if (v === v2) {\n    // 0 === -0, but they are not identical.\n    // We need the cast because the compiler requires that v2 is a\n    // number (although 1/v2 works with non-number). We cast to ? to\n    // stop the compiler from type-checking this statement.\n    return v !== 0 || 1 / v === 1 / /** @type {?} */ (v2);\n  }\n\n  // NaN is non-reflexive: NaN !== NaN, although they are identical.\n  return v !== v && v2 !== v2;\n};\n\n\n/**\n * Calls a function for each element in an object/map/hash.\n *\n * @param {Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,Object<K,V>):?} f The function to call\n *     for every element. This function takes 3 arguments (the value, the\n *     key and the object) and the return value is ignored.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @template T,K,V\n */\ngoog.object.forEach = function(obj, f, opt_obj) {\n  for (var key in obj) {\n    f.call(/** @type {?} */ (opt_obj), obj[key], key, obj);\n  }\n};\n\n\n/**\n * Calls a function for each element in an object/map/hash. If that call returns\n * true, adds the element to a new object.\n *\n * @param {Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,Object<K,V>):boolean} f The function to call\n *     for every element. This\n *     function takes 3 arguments (the value, the key and the object)\n *     and should return a boolean. If the return value is true the\n *     element is added to the result object. If it is false the\n *     element is not included.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {!Object<K,V>} a new object in which only elements that passed the\n *     test are present.\n * @template T,K,V\n */\ngoog.object.filter = function(obj, f, opt_obj) {\n  var res = {};\n  for (var key in obj) {\n    if (f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      res[key] = obj[key];\n    }\n  }\n  return res;\n};\n\n\n/**\n * For every element in an object/map/hash calls a function and inserts the\n * result into a new object.\n *\n * @param {Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,Object<K,V>):R} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the value, the key and the object)\n *     and should return something. The result will be inserted\n *     into a new object.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {!Object<K,R>} a new object with the results from f.\n * @template T,K,V,R\n */\ngoog.object.map = function(obj, f, opt_obj) {\n  var res = {};\n  for (var key in obj) {\n    res[key] = f.call(/** @type {?} */ (opt_obj), obj[key], key, obj);\n  }\n  return res;\n};\n\n\n/**\n * Calls a function for each element in an object/map/hash. If any\n * call returns true, returns true (without checking the rest). If\n * all calls return false, returns false.\n *\n * @param {Object<K,V>} obj The object to check.\n * @param {function(this:T,V,?,Object<K,V>):boolean} f The function to\n *     call for every element. This function\n *     takes 3 arguments (the value, the key and the object) and should\n *     return a boolean.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {boolean} true if any element passes the test.\n * @template T,K,V\n */\ngoog.object.some = function(obj, f, opt_obj) {\n  for (var key in obj) {\n    if (f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Calls a function for each element in an object/map/hash. If\n * all calls return true, returns true. If any call returns false, returns\n * false at this point and does not continue to check the remaining elements.\n *\n * @param {Object<K,V>} obj The object to check.\n * @param {?function(this:T,V,?,Object<K,V>):boolean} f The function to\n *     call for every element. This function\n *     takes 3 arguments (the value, the key and the object) and should\n *     return a boolean.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {boolean} false if any element fails the test.\n * @template T,K,V\n */\ngoog.object.every = function(obj, f, opt_obj) {\n  for (var key in obj) {\n    if (!f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * Returns the number of key-value pairs in the object map.\n *\n * @param {Object} obj The object for which to get the number of key-value\n *     pairs.\n * @return {number} The number of key-value pairs in the object map.\n */\ngoog.object.getCount = function(obj) {\n  var rv = 0;\n  for (var key in obj) {\n    rv++;\n  }\n  return rv;\n};\n\n\n/**\n * Returns one key from the object map, if any exists.\n * For map literals the returned key will be the first one in most of the\n * browsers (a know exception is Konqueror).\n *\n * @param {Object} obj The object to pick a key from.\n * @return {string|undefined} The key or undefined if the object is empty.\n */\ngoog.object.getAnyKey = function(obj) {\n  for (var key in obj) {\n    return key;\n  }\n};\n\n\n/**\n * Returns one value from the object map, if any exists.\n * For map literals the returned value will be the first one in most of the\n * browsers (a know exception is Konqueror).\n *\n * @param {Object<K,V>} obj The object to pick a value from.\n * @return {V|undefined} The value or undefined if the object is empty.\n * @template K,V\n */\ngoog.object.getAnyValue = function(obj) {\n  for (var key in obj) {\n    return obj[key];\n  }\n};\n\n\n/**\n * Whether the object/hash/map contains the given object as a value.\n * An alias for goog.object.containsValue(obj, val).\n *\n * @param {Object<K,V>} obj The object in which to look for val.\n * @param {V} val The object for which to check.\n * @return {boolean} true if val is present.\n * @template K,V\n */\ngoog.object.contains = function(obj, val) {\n  return goog.object.containsValue(obj, val);\n};\n\n\n/**\n * Returns the values of the object/map/hash.\n *\n * @param {Object<K,V>} obj The object from which to get the values.\n * @return {!Array<V>} The values in the object/map/hash.\n * @template K,V\n */\ngoog.object.getValues = function(obj) {\n  var res = [];\n  var i = 0;\n  for (var key in obj) {\n    res[i++] = obj[key];\n  }\n  return res;\n};\n\n\n/**\n * Returns the keys of the object/map/hash.\n *\n * @param {Object} obj The object from which to get the keys.\n * @return {!Array<string>} Array of property keys.\n */\ngoog.object.getKeys = function(obj) {\n  var res = [];\n  var i = 0;\n  for (var key in obj) {\n    res[i++] = key;\n  }\n  return res;\n};\n\n\n/**\n * Get a value from an object multiple levels deep.  This is useful for\n * pulling values from deeply nested objects, such as JSON responses.\n * Example usage: getValueByKeys(jsonObj, 'foo', 'entries', 3)\n *\n * @param {!Object} obj An object to get the value from.  Can be array-like.\n * @param {...(string|number|!IArrayLike<number|string>)}\n *     var_args A number of keys\n *     (as strings, or numbers, for array-like objects).  Can also be\n *     specified as a single array of keys.\n * @return {*} The resulting value.  If, at any point, the value for a key\n *     in the current object is null or undefined, returns undefined.\n */\ngoog.object.getValueByKeys = function(obj, var_args) {\n  var isArrayLike = goog.isArrayLike(var_args);\n  var keys = isArrayLike ?\n      /** @type {!IArrayLike<number|string>} */ (var_args) :\n      arguments;\n\n  // Start with the 2nd parameter for the variable parameters syntax.\n  for (var i = isArrayLike ? 0 : 1; i < keys.length; i++) {\n    if (obj == null) return undefined;\n    obj = obj[keys[i]];\n  }\n\n  return obj;\n};\n\n\n/**\n * Whether the object/map/hash contains the given key.\n *\n * @param {Object} obj The object in which to look for key.\n * @param {?} key The key for which to check.\n * @return {boolean} true If the map contains the key.\n */\ngoog.object.containsKey = function(obj, key) {\n  return obj !== null && key in obj;\n};\n\n\n/**\n * Whether the object/map/hash contains the given value. This is O(n).\n *\n * @param {Object<K,V>} obj The object in which to look for val.\n * @param {V} val The value for which to check.\n * @return {boolean} true If the map contains the value.\n * @template K,V\n */\ngoog.object.containsValue = function(obj, val) {\n  for (var key in obj) {\n    if (obj[key] == val) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Searches an object for an element that satisfies the given condition and\n * returns its key.\n * @param {Object<K,V>} obj The object to search in.\n * @param {function(this:T,V,string,Object<K,V>):boolean} f The\n *      function to call for every element. Takes 3 arguments (the value,\n *     the key and the object) and should return a boolean.\n * @param {T=} opt_this An optional \"this\" context for the function.\n * @return {string|undefined} The key of an element for which the function\n *     returns true or undefined if no such element is found.\n * @template T,K,V\n */\ngoog.object.findKey = function(obj, f, opt_this) {\n  for (var key in obj) {\n    if (f.call(/** @type {?} */ (opt_this), obj[key], key, obj)) {\n      return key;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Searches an object for an element that satisfies the given condition and\n * returns its value.\n * @param {Object<K,V>} obj The object to search in.\n * @param {function(this:T,V,string,Object<K,V>):boolean} f The function\n *     to call for every element. Takes 3 arguments (the value, the key\n *     and the object) and should return a boolean.\n * @param {T=} opt_this An optional \"this\" context for the function.\n * @return {V} The value of an element for which the function returns true or\n *     undefined if no such element is found.\n * @template T,K,V\n */\ngoog.object.findValue = function(obj, f, opt_this) {\n  var key = goog.object.findKey(obj, f, opt_this);\n  return key && obj[key];\n};\n\n\n/**\n * Whether the object/map/hash is empty.\n *\n * @param {Object} obj The object to test.\n * @return {boolean} true if obj is empty.\n */\ngoog.object.isEmpty = function(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n};\n\n\n/**\n * Removes all key value pairs from the object/map/hash.\n *\n * @param {Object} obj The object to clear.\n */\ngoog.object.clear = function(obj) {\n  for (var i in obj) {\n    delete obj[i];\n  }\n};\n\n\n/**\n * Removes a key-value pair based on the key.\n *\n * @param {Object} obj The object from which to remove the key.\n * @param {?} key The key to remove.\n * @return {boolean} Whether an element was removed.\n */\ngoog.object.remove = function(obj, key) {\n  var rv;\n  if (rv = key in /** @type {!Object} */ (obj)) {\n    delete obj[key];\n  }\n  return rv;\n};\n\n\n/**\n * Adds a key-value pair to the object. Throws an exception if the key is\n * already in use. Use set if you want to change an existing pair.\n *\n * @param {Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} val The value to add.\n * @template K,V\n */\ngoog.object.add = function(obj, key, val) {\n  if (obj !== null && key in obj) {\n    throw new Error('The object already contains the key \"' + key + '\"');\n  }\n  goog.object.set(obj, key, val);\n};\n\n\n/**\n * Returns the value for the given key.\n *\n * @param {Object<K,V>} obj The object from which to get the value.\n * @param {string} key The key for which to get the value.\n * @param {R=} opt_val The value to return if no item is found for the given\n *     key (default is undefined).\n * @return {V|R|undefined} The value for the given key.\n * @template K,V,R\n */\ngoog.object.get = function(obj, key, opt_val) {\n  if (obj !== null && key in obj) {\n    return obj[key];\n  }\n  return opt_val;\n};\n\n\n/**\n * Adds a key-value pair to the object/map/hash.\n *\n * @param {Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} value The value to add.\n * @template K,V\n */\ngoog.object.set = function(obj, key, value) {\n  obj[key] = value;\n};\n\n\n/**\n * Adds a key-value pair to the object/map/hash if it doesn't exist yet.\n *\n * @param {Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} value The value to add if the key wasn't present.\n * @return {V} The value of the entry at the end of the function.\n * @template K,V\n */\ngoog.object.setIfUndefined = function(obj, key, value) {\n  return key in /** @type {!Object} */ (obj) ? obj[key] : (obj[key] = value);\n};\n\n\n/**\n * Sets a key and value to an object if the key is not set. The value will be\n * the return value of the given function. If the key already exists, the\n * object will not be changed and the function will not be called (the function\n * will be lazily evaluated -- only called if necessary).\n *\n * This function is particularly useful for use with a map used a as a cache.\n *\n * @param {!Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {function():V} f The value to add if the key wasn't present.\n * @return {V} The value of the entry at the end of the function.\n * @template K,V\n */\ngoog.object.setWithReturnValueIfNotSet = function(obj, key, f) {\n  if (key in obj) {\n    return obj[key];\n  }\n\n  var val = f();\n  obj[key] = val;\n  return val;\n};\n\n\n/**\n * Compares two objects for equality using === on the values.\n *\n * @param {!Object<K,V>} a\n * @param {!Object<K,V>} b\n * @return {boolean}\n * @template K,V\n */\ngoog.object.equals = function(a, b) {\n  for (var k in a) {\n    if (!(k in b) || a[k] !== b[k]) {\n      return false;\n    }\n  }\n  for (var k in b) {\n    if (!(k in a)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * Returns a shallow clone of the object.\n *\n * @param {Object<K,V>} obj Object to clone.\n * @return {!Object<K,V>} Clone of the input object.\n * @template K,V\n */\ngoog.object.clone = function(obj) {\n  // We cannot use the prototype trick because a lot of methods depend on where\n  // the actual key is set.\n\n  var res = {};\n  for (var key in obj) {\n    res[key] = obj[key];\n  }\n  return res;\n  // We could also use goog.mixin but I wanted this to be independent from that.\n};\n\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n *\n * WARNINGS:\n * <code>goog.object.unsafeClone</code> does not detect reference loops. Objects\n * that refer to themselves will cause infinite recursion.\n *\n * <code>goog.object.unsafeClone</code> is unaware of unique identifiers, and\n * copies UIDs created by <code>getUid</code> into cloned results.\n *\n * @param {T} obj The value to clone.\n * @return {T} A clone of the input value.\n * @template T\n */\ngoog.object.unsafeClone = function(obj) {\n  var type = goog.typeOf(obj);\n  if (type == 'object' || type == 'array') {\n    if (goog.isFunction(obj.clone)) {\n      return obj.clone();\n    }\n    var clone = type == 'array' ? [] : {};\n    for (var key in obj) {\n      clone[key] = goog.object.unsafeClone(obj[key]);\n    }\n    return clone;\n  }\n\n  return obj;\n};\n\n\n/**\n * Returns a new object in which all the keys and values are interchanged\n * (keys become values and values become keys). If multiple keys map to the\n * same value, the chosen transposed value is implementation-dependent.\n *\n * @param {Object} obj The object to transpose.\n * @return {!Object} The transposed object.\n */\ngoog.object.transpose = function(obj) {\n  var transposed = {};\n  for (var key in obj) {\n    transposed[obj[key]] = key;\n  }\n  return transposed;\n};\n\n\n/**\n * The names of the fields that are defined on Object.prototype.\n * @type {Array<string>}\n * @private\n */\ngoog.object.PROTOTYPE_FIELDS_ = [\n  'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n  'toLocaleString', 'toString', 'valueOf'\n];\n\n\n/**\n * Extends an object with another object.\n * This operates 'in-place'; it does not create a new Object.\n *\n * Example:\n * var o = {};\n * goog.object.extend(o, {a: 0, b: 1});\n * o; // {a: 0, b: 1}\n * goog.object.extend(o, {b: 2, c: 3});\n * o; // {a: 0, b: 2, c: 3}\n *\n * @param {Object} target The object to modify. Existing properties will be\n *     overwritten if they are also present in one of the objects in\n *     `var_args`.\n * @param {...Object} var_args The objects from which values will be copied.\n */\ngoog.object.extend = function(target, var_args) {\n  var key, source;\n  for (var i = 1; i < arguments.length; i++) {\n    source = arguments[i];\n    for (key in source) {\n      target[key] = source[key];\n    }\n\n    // For IE the for-in-loop does not contain any properties that are not\n    // enumerable on the prototype object (for example isPrototypeOf from\n    // Object.prototype) and it will also not include 'replace' on objects that\n    // extend String and change 'replace' (not that it is common for anyone to\n    // extend anything except Object).\n\n    for (var j = 0; j < goog.object.PROTOTYPE_FIELDS_.length; j++) {\n      key = goog.object.PROTOTYPE_FIELDS_[j];\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n};\n\n\n/**\n * Creates a new object built from the key-value pairs provided as arguments.\n * @param {...*} var_args If only one argument is provided and it is an array\n *     then this is used as the arguments, otherwise even arguments are used as\n *     the property names and odd arguments are used as the property values.\n * @return {!Object} The new object.\n * @throws {Error} If there are uneven number of arguments or there is only one\n *     non array argument.\n */\ngoog.object.create = function(var_args) {\n  var argLength = arguments.length;\n  if (argLength == 1 && goog.isArray(arguments[0])) {\n    return goog.object.create.apply(null, arguments[0]);\n  }\n\n  if (argLength % 2) {\n    throw new Error('Uneven number of arguments');\n  }\n\n  var rv = {};\n  for (var i = 0; i < argLength; i += 2) {\n    rv[arguments[i]] = arguments[i + 1];\n  }\n  return rv;\n};\n\n\n/**\n * Creates a new object where the property names come from the arguments but\n * the value is always set to true\n * @param {...*} var_args If only one argument is provided and it is an array\n *     then this is used as the arguments, otherwise the arguments are used\n *     as the property names.\n * @return {!Object} The new object.\n */\ngoog.object.createSet = function(var_args) {\n  var argLength = arguments.length;\n  if (argLength == 1 && goog.isArray(arguments[0])) {\n    return goog.object.createSet.apply(null, arguments[0]);\n  }\n\n  var rv = {};\n  for (var i = 0; i < argLength; i++) {\n    rv[arguments[i]] = true;\n  }\n  return rv;\n};\n\n\n/**\n * Creates an immutable view of the underlying object, if the browser\n * supports immutable objects.\n *\n * In default mode, writes to this view will fail silently. In strict mode,\n * they will throw an error.\n *\n * @param {!Object<K,V>} obj An object.\n * @return {!Object<K,V>} An immutable view of that object, or the\n *     original object if this browser does not support immutables.\n * @template K,V\n */\ngoog.object.createImmutableView = function(obj) {\n  var result = obj;\n  if (Object.isFrozen && !Object.isFrozen(obj)) {\n    result = Object.create(obj);\n    Object.freeze(result);\n  }\n  return result;\n};\n\n\n/**\n * @param {!Object} obj An object.\n * @return {boolean} Whether this is an immutable view of the object.\n */\ngoog.object.isImmutableView = function(obj) {\n  return !!Object.isFrozen && Object.isFrozen(obj);\n};\n\n\n/**\n * Get all properties names on a given Object regardless of enumerability.\n *\n * <p> If the browser does not support `Object.getOwnPropertyNames` nor\n * `Object.getPrototypeOf` then this is equivalent to using\n * `goog.object.getKeys`\n *\n * @param {?Object} obj The object to get the properties of.\n * @param {boolean=} opt_includeObjectPrototype Whether properties defined on\n *     `Object.prototype` should be included in the result.\n * @param {boolean=} opt_includeFunctionPrototype Whether properties defined on\n *     `Function.prototype` should be included in the result.\n * @return {!Array<string>}\n * @public\n */\ngoog.object.getAllPropertyNames = function(\n    obj, opt_includeObjectPrototype, opt_includeFunctionPrototype) {\n  if (!obj) {\n    return [];\n  }\n\n  // Naively use a for..in loop to get the property names if the browser doesn't\n  // support any other APIs for getting it.\n  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {\n    return goog.object.getKeys(obj);\n  }\n\n  var visitedSet = {};\n\n  // Traverse the prototype chain and add all properties to the visited set.\n  var proto = obj;\n  while (proto &&\n         (proto !== Object.prototype || !!opt_includeObjectPrototype) &&\n         (proto !== Function.prototype || !!opt_includeFunctionPrototype)) {\n    var names = Object.getOwnPropertyNames(proto);\n    for (var i = 0; i < names.length; i++) {\n      visitedSet[names[i]] = true;\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return goog.object.getKeys(visitedSet);\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Provides a function to schedule running a function as soon\n * as possible after the current JS execution stops and yields to the event\n * loop.\n *\n */\n\ngoog.provide('goog.async.nextTick');\ngoog.provide('goog.async.throwException');\n\ngoog.require('goog.debug.entryPointRegistry');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.functions');\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.labs.userAgent.engine');\n\n\n/**\n * Throw an item without interrupting the current execution context.  For\n * example, if processing a group of items in a loop, sometimes it is useful\n * to report an error while still allowing the rest of the batch to be\n * processed.\n * @param {*} exception\n */\ngoog.async.throwException = function(exception) {\n  // Each throw needs to be in its own context.\n  goog.global.setTimeout(function() { throw exception; }, 0);\n};\n\n\n/**\n * Fires the provided callbacks as soon as possible after the current JS\n * execution context. setTimeout(…, 0) takes at least 4ms when called from\n * within another setTimeout(…, 0) for legacy reasons.\n *\n * This will not schedule the callback as a microtask (i.e. a task that can\n * preempt user input or networking callbacks). It is meant to emulate what\n * setTimeout(_, 0) would do if it were not throttled. If you desire microtask\n * behavior, use {@see goog.Promise} instead.\n *\n * @param {function(this:SCOPE)} callback Callback function to fire as soon as\n *     possible.\n * @param {SCOPE=} opt_context Object in whose scope to call the listener.\n * @param {boolean=} opt_useSetImmediate Avoid the IE workaround that\n *     ensures correctness at the cost of speed. See comments for details.\n * @template SCOPE\n */\ngoog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {\n  var cb = callback;\n  if (opt_context) {\n    cb = goog.bind(callback, opt_context);\n  }\n  cb = goog.async.nextTick.wrapCallback_(cb);\n  // Note we do allow callers to also request setImmediate if they are willing\n  // to accept the possible tradeoffs of incorrectness in exchange for speed.\n  // The IE fallback of readystate change is much slower. See useSetImmediate_\n  // for details.\n  if (goog.isFunction(goog.global.setImmediate) &&\n      (opt_useSetImmediate || goog.async.nextTick.useSetImmediate_())) {\n    goog.global.setImmediate(cb);\n    return;\n  }\n\n  // Look for and cache the custom fallback version of setImmediate.\n  if (!goog.async.nextTick.setImmediate_) {\n    goog.async.nextTick.setImmediate_ =\n        goog.async.nextTick.getSetImmediateEmulator_();\n  }\n  goog.async.nextTick.setImmediate_(cb);\n};\n\n\n/**\n * Returns whether should use setImmediate implementation currently on window.\n *\n * window.setImmediate was introduced and currently only supported by IE10+,\n * but due to a bug in the implementation it is not guaranteed that\n * setImmediate is faster than setTimeout nor that setImmediate N is before\n * setImmediate N+1. That is why we do not use the native version if\n * available. We do, however, call setImmediate if it is a non-native function\n * because that indicates that it has been replaced by goog.testing.MockClock\n * which we do want to support.\n * See\n * http://connect.microsoft.com/IE/feedback/details/801823/setimmediate-and-messagechannel-are-broken-in-ie10\n *\n * @return {boolean} Whether to use the implementation of setImmediate defined\n *     on Window.\n * @private\n * @suppress {missingProperties} For \"Window.prototype.setImmediate\"\n */\ngoog.async.nextTick.useSetImmediate_ = function() {\n  // Not a browser environment.\n  if (!goog.global.Window || !goog.global.Window.prototype) {\n    return true;\n  }\n\n  // MS Edge has window.setImmediate natively, but it's not on Window.prototype.\n  // Also, there's no clean way to detect if the goog.global.setImmediate has\n  // been replaced by mockClock as its replacement also shows up as \"[native\n  // code]\" when using toString. Therefore, just always use\n  // goog.global.setImmediate for Edge. It's unclear if it suffers the same\n  // issues as IE10/11, but based on\n  // https://dev.modern.ie/testdrive/demos/setimmediatesorting/\n  // it seems they've been working to ensure it's WAI.\n  if (goog.labs.userAgent.browser.isEdge() ||\n      goog.global.Window.prototype.setImmediate != goog.global.setImmediate) {\n    // Something redefined setImmediate in which case we decide to use it (This\n    // is so that we use the mockClock setImmediate).\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * Cache for the setImmediate implementation.\n * @type {function(function())}\n * @private\n */\ngoog.async.nextTick.setImmediate_;\n\n\n/**\n * Determines the best possible implementation to run a function as soon as\n * the JS event loop is idle.\n * @return {function(function())} The \"setImmediate\" implementation.\n * @private\n */\ngoog.async.nextTick.getSetImmediateEmulator_ = function() {\n  // Create a private message channel and use it to postMessage empty messages\n  // to ourselves.\n  /** @type {!Function|undefined} */\n  var Channel = goog.global['MessageChannel'];\n  // If MessageChannel is not available and we are in a browser, implement\n  // an iframe based polyfill in browsers that have postMessage and\n  // document.addEventListener. The latter excludes IE8 because it has a\n  // synchronous postMessage implementation.\n  if (typeof Channel === 'undefined' && typeof window !== 'undefined' &&\n      window.postMessage && window.addEventListener &&\n      // Presto (The old pre-blink Opera engine) has problems with iframes\n      // and contentWindow.\n      !goog.labs.userAgent.engine.isPresto()) {\n    /** @constructor */\n    Channel = function() {\n      // Make an empty, invisible iframe.\n      var iframe = /** @type {!HTMLIFrameElement} */ (\n          document.createElement(String(goog.dom.TagName.IFRAME)));\n      iframe.style.display = 'none';\n      iframe.src = '';\n      document.documentElement.appendChild(iframe);\n      var win = iframe.contentWindow;\n      var doc = win.document;\n      doc.open();\n      doc.write('');\n      doc.close();\n      // Do not post anything sensitive over this channel, as the workaround for\n      // pages with file: origin could allow that information to be modified or\n      // intercepted.\n      var message = 'callImmediate' + Math.random();\n      // The same origin policy rejects attempts to postMessage from file: urls\n      // unless the origin is '*'.\n      var origin = win.location.protocol == 'file:' ?\n          '*' :\n          win.location.protocol + '//' + win.location.host;\n      var onmessage = goog.bind(function(e) {\n        // Validate origin and message to make sure that this message was\n        // intended for us. If the origin is set to '*' (see above) only the\n        // message needs to match since, for example, '*' != 'file://'. Allowing\n        // the wildcard is ok, as we are not concerned with security here.\n        if ((origin != '*' && e.origin != origin) || e.data != message) {\n          return;\n        }\n        this['port1'].onmessage();\n      }, this);\n      win.addEventListener('message', onmessage, false);\n      this['port1'] = {};\n      this['port2'] = {\n        postMessage: function() { win.postMessage(message, origin); }\n      };\n    };\n  }\n  if (typeof Channel !== 'undefined' && !goog.labs.userAgent.browser.isIE()) {\n    // Exclude all of IE due to\n    // http://codeforhire.com/2013/09/21/setimmediate-and-messagechannel-broken-on-internet-explorer-10/\n    // which allows starving postMessage with a busy setTimeout loop.\n    // This currently affects IE10 and IE11 which would otherwise be able\n    // to use the postMessage based fallbacks.\n    var channel = new Channel();\n    // Use a fifo linked list to call callbacks in the right order.\n    var head = {};\n    var tail = head;\n    channel['port1'].onmessage = function() {\n      if (goog.isDef(head.next)) {\n        head = head.next;\n        var cb = head.cb;\n        head.cb = null;\n        cb();\n      }\n    };\n    return function(cb) {\n      tail.next = {cb: cb};\n      tail = tail.next;\n      channel['port2'].postMessage(0);\n    };\n  }\n  // Implementation for IE6 to IE10: Script elements fire an asynchronous\n  // onreadystatechange event when inserted into the DOM.\n  if (typeof document !== 'undefined' &&\n      'onreadystatechange' in\n          document.createElement(String(goog.dom.TagName.SCRIPT))) {\n    return function(cb) {\n      var script = document.createElement(String(goog.dom.TagName.SCRIPT));\n      script.onreadystatechange = function() {\n        // Clean up and call the callback.\n        script.onreadystatechange = null;\n        script.parentNode.removeChild(script);\n        script = null;\n        cb();\n        cb = null;\n      };\n      document.documentElement.appendChild(script);\n    };\n  }\n  // Fall back to setTimeout with 0. In browsers this creates a delay of 5ms\n  // or more.\n  // NOTE(user): This fallback is used for IE11.\n  return function(cb) {\n    goog.global.setTimeout(/** @type {function()} */ (cb), 0);\n  };\n};\n\n\n/**\n * Helper function that is overrided to protect callbacks with entry point\n * monitor if the application monitors entry points.\n * @param {function()} callback Callback function to fire as soon as possible.\n * @return {function()} The wrapped callback.\n * @private\n */\ngoog.async.nextTick.wrapCallback_ = goog.functions.identity;\n\n\n// Register the callback function as an entry point, so that it can be\n// monitored for exception handling, etc. This has to be done in this file\n// since it requires special code to handle all browsers.\ngoog.debug.entryPointRegistry.register(\n    /**\n     * @param {function(!Function): !Function} transformer The transforming\n     *     function.\n     */\n    function(transformer) { goog.async.nextTick.wrapCallback_ = transformer; });\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Closure user agent detection.\n * @see http://en.wikipedia.org/wiki/User_agent\n * For more information on browser brand, platform, or device see the other\n * sub-namespaces in goog.labs.userAgent (browser, platform, and device).\n *\n */\n\ngoog.provide('goog.labs.userAgent.engine');\n\ngoog.require('goog.array');\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.string');\n\n\n/**\n * @return {boolean} Whether the rendering engine is Presto.\n */\ngoog.labs.userAgent.engine.isPresto = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Presto');\n};\n\n\n/**\n * @return {boolean} Whether the rendering engine is Trident.\n */\ngoog.labs.userAgent.engine.isTrident = function() {\n  // IE only started including the Trident token in IE8.\n  return goog.labs.userAgent.util.matchUserAgent('Trident') ||\n      goog.labs.userAgent.util.matchUserAgent('MSIE');\n};\n\n\n/**\n * @return {boolean} Whether the rendering engine is Edge.\n */\ngoog.labs.userAgent.engine.isEdge = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Edge');\n};\n\n\n/**\n * @return {boolean} Whether the rendering engine is WebKit.\n */\ngoog.labs.userAgent.engine.isWebKit = function() {\n  return goog.labs.userAgent.util.matchUserAgentIgnoreCase('WebKit') &&\n      !goog.labs.userAgent.engine.isEdge();\n};\n\n\n/**\n * @return {boolean} Whether the rendering engine is Gecko.\n */\ngoog.labs.userAgent.engine.isGecko = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Gecko') &&\n      !goog.labs.userAgent.engine.isWebKit() &&\n      !goog.labs.userAgent.engine.isTrident() &&\n      !goog.labs.userAgent.engine.isEdge();\n};\n\n\n/**\n * @return {string} The rendering engine's version or empty string if version\n *     can't be determined.\n */\ngoog.labs.userAgent.engine.getVersion = function() {\n  var userAgentString = goog.labs.userAgent.util.getUserAgent();\n  if (userAgentString) {\n    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);\n\n    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);\n    if (engineTuple) {\n      // In Gecko, the version string is either in the browser info or the\n      // Firefox version.  See Gecko user agent string reference:\n      // http://goo.gl/mULqa\n      if (engineTuple[0] == 'Gecko') {\n        return goog.labs.userAgent.engine.getVersionForKey_(tuples, 'Firefox');\n      }\n\n      return engineTuple[1];\n    }\n\n    // MSIE has only one version identifier, and the Trident version is\n    // specified in the parenthetical. IE Edge is covered in the engine tuple\n    // detection.\n    var browserTuple = tuples[0];\n    var info;\n    if (browserTuple && (info = browserTuple[2])) {\n      var match = /Trident\\/([^\\s;]+)/.exec(info);\n      if (match) {\n        return match[1];\n      }\n    }\n  }\n  return '';\n};\n\n\n/**\n * @param {!Array<!Array<string>>} tuples Extracted version tuples.\n * @return {!Array<string>|undefined} The engine tuple or undefined if not\n *     found.\n * @private\n */\ngoog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {\n  if (!goog.labs.userAgent.engine.isEdge()) {\n    return tuples[1];\n  }\n  for (var i = 0; i < tuples.length; i++) {\n    var tuple = tuples[i];\n    if (tuple[0] == 'Edge') {\n      return tuple;\n    }\n  }\n};\n\n\n/**\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the rendering engine version is higher or the same\n *     as the given version.\n */\ngoog.labs.userAgent.engine.isVersionOrHigher = function(version) {\n  return goog.string.compareVersions(\n             goog.labs.userAgent.engine.getVersion(), version) >= 0;\n};\n\n\n/**\n * @param {!Array<!Array<string>>} tuples Version tuples.\n * @param {string} key The key to look for.\n * @return {string} The version string of the given key, if present.\n *     Otherwise, the empty string.\n * @private\n */\ngoog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {\n  // TODO(nnaze): Move to util if useful elsewhere.\n\n  var pair = goog.array.find(tuples, function(pair) { return key == pair[0]; });\n\n  return pair && pair[1] || '';\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Closure user agent detection (Browser).\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For more information on rendering engine, platform, or device see the other\n * sub-namespaces in goog.labs.userAgent, goog.labs.userAgent.platform,\n * goog.labs.userAgent.device respectively.)\n *\n * @author martone@google.com (Andy Martone)\n */\n\ngoog.provide('goog.labs.userAgent.browser');\n\ngoog.require('goog.array');\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.object');\ngoog.require('goog.string');\n\n\n// TODO(nnaze): Refactor to remove excessive exclusion logic in matching\n// functions.\n\n\n/**\n * @return {boolean} Whether the user's browser is Opera.  Note: Chromium\n *     based Opera (Opera 15+) is detected as Chrome to avoid unnecessary\n *     special casing.\n * @private\n */\ngoog.labs.userAgent.browser.matchOpera_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Opera');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is IE.\n * @private\n */\ngoog.labs.userAgent.browser.matchIE_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Trident') ||\n      goog.labs.userAgent.util.matchUserAgent('MSIE');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Edge.\n * @private\n */\ngoog.labs.userAgent.browser.matchEdge_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Edge');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Firefox.\n * @private\n */\ngoog.labs.userAgent.browser.matchFirefox_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Firefox');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Safari.\n * @private\n */\ngoog.labs.userAgent.browser.matchSafari_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Safari') &&\n      !(goog.labs.userAgent.browser.matchChrome_() ||\n        goog.labs.userAgent.browser.matchCoast_() ||\n        goog.labs.userAgent.browser.matchOpera_() ||\n        goog.labs.userAgent.browser.matchEdge_() ||\n        goog.labs.userAgent.browser.isSilk() ||\n        goog.labs.userAgent.util.matchUserAgent('Android'));\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Coast (Opera's Webkit-based\n *     iOS browser).\n * @private\n */\ngoog.labs.userAgent.browser.matchCoast_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Coast');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is iOS Webview.\n * @private\n */\ngoog.labs.userAgent.browser.matchIosWebview_ = function() {\n  // iOS Webview does not show up as Chrome or Safari. Also check for Opera's\n  // WebKit-based iOS browser, Coast.\n  return (goog.labs.userAgent.util.matchUserAgent('iPad') ||\n          goog.labs.userAgent.util.matchUserAgent('iPhone')) &&\n      !goog.labs.userAgent.browser.matchSafari_() &&\n      !goog.labs.userAgent.browser.matchChrome_() &&\n      !goog.labs.userAgent.browser.matchCoast_() &&\n      goog.labs.userAgent.util.matchUserAgent('AppleWebKit');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Chrome.\n * @private\n */\ngoog.labs.userAgent.browser.matchChrome_ = function() {\n  return (goog.labs.userAgent.util.matchUserAgent('Chrome') ||\n          goog.labs.userAgent.util.matchUserAgent('CriOS')) &&\n      !goog.labs.userAgent.browser.matchEdge_();\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is the Android browser.\n * @private\n */\ngoog.labs.userAgent.browser.matchAndroidBrowser_ = function() {\n  // Android can appear in the user agent string for Chrome on Android.\n  // This is not the Android standalone browser if it does.\n  return goog.labs.userAgent.util.matchUserAgent('Android') &&\n      !(goog.labs.userAgent.browser.isChrome() ||\n        goog.labs.userAgent.browser.isFirefox() ||\n        goog.labs.userAgent.browser.isOpera() ||\n        goog.labs.userAgent.browser.isSilk());\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Opera.\n */\ngoog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;\n\n\n/**\n * @return {boolean} Whether the user's browser is IE.\n */\ngoog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;\n\n\n/**\n * @return {boolean} Whether the user's browser is Edge.\n */\ngoog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;\n\n\n/**\n * @return {boolean} Whether the user's browser is Firefox.\n */\ngoog.labs.userAgent.browser.isFirefox =\n    goog.labs.userAgent.browser.matchFirefox_;\n\n\n/**\n * @return {boolean} Whether the user's browser is Safari.\n */\ngoog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;\n\n\n/**\n * @return {boolean} Whether the user's browser is Coast (Opera's Webkit-based\n *     iOS browser).\n */\ngoog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;\n\n\n/**\n * @return {boolean} Whether the user's browser is iOS Webview.\n */\ngoog.labs.userAgent.browser.isIosWebview =\n    goog.labs.userAgent.browser.matchIosWebview_;\n\n\n/**\n * @return {boolean} Whether the user's browser is Chrome.\n */\ngoog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;\n\n\n/**\n * @return {boolean} Whether the user's browser is the Android browser.\n */\ngoog.labs.userAgent.browser.isAndroidBrowser =\n    goog.labs.userAgent.browser.matchAndroidBrowser_;\n\n\n/**\n * For more information, see:\n * http://docs.aws.amazon.com/silk/latest/developerguide/user-agent.html\n * @return {boolean} Whether the user's browser is Silk.\n */\ngoog.labs.userAgent.browser.isSilk = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Silk');\n};\n\n\n/**\n * @return {string} The browser version or empty string if version cannot be\n *     determined. Note that for Internet Explorer, this returns the version of\n *     the browser, not the version of the rendering engine. (IE 8 in\n *     compatibility mode will return 8.0 rather than 7.0. To determine the\n *     rendering engine version, look at document.documentMode instead. See\n *     http://msdn.microsoft.com/en-us/library/cc196988(v=vs.85).aspx for more\n *     details.)\n */\ngoog.labs.userAgent.browser.getVersion = function() {\n  var userAgentString = goog.labs.userAgent.util.getUserAgent();\n  // Special case IE since IE's version is inside the parenthesis and\n  // without the '/'.\n  if (goog.labs.userAgent.browser.isIE()) {\n    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);\n  }\n\n  var versionTuples =\n      goog.labs.userAgent.util.extractVersionTuples(userAgentString);\n\n  // Construct a map for easy lookup.\n  var versionMap = {};\n  goog.array.forEach(versionTuples, function(tuple) {\n    // Note that the tuple is of length three, but we only care about the\n    // first two.\n    var key = tuple[0];\n    var value = tuple[1];\n    versionMap[key] = value;\n  });\n\n  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);\n\n  // Gives the value with the first key it finds, otherwise empty string.\n  function lookUpValueWithKeys(keys) {\n    var key = goog.array.find(keys, versionMapHasKey);\n    return versionMap[key] || '';\n  }\n\n  // Check Opera before Chrome since Opera 15+ has \"Chrome\" in the string.\n  // See\n  // http://my.opera.com/ODIN/blog/2013/07/15/opera-user-agent-strings-opera-15-and-beyond\n  if (goog.labs.userAgent.browser.isOpera()) {\n    // Opera 10 has Version/10.0 but Opera/9.8, so look for \"Version\" first.\n    // Opera uses 'OPR' for more recent UAs.\n    return lookUpValueWithKeys(['Version', 'Opera']);\n  }\n\n  // Check Edge before Chrome since it has Chrome in the string.\n  if (goog.labs.userAgent.browser.isEdge()) {\n    return lookUpValueWithKeys(['Edge']);\n  }\n\n  if (goog.labs.userAgent.browser.isChrome()) {\n    return lookUpValueWithKeys(['Chrome', 'CriOS']);\n  }\n\n  // Usually products browser versions are in the third tuple after \"Mozilla\"\n  // and the engine.\n  var tuple = versionTuples[2];\n  return tuple && tuple[1] || '';\n};\n\n\n/**\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the browser version is higher or the same as the\n *     given version.\n */\ngoog.labs.userAgent.browser.isVersionOrHigher = function(version) {\n  return goog.string.compareVersions(\n             goog.labs.userAgent.browser.getVersion(), version) >= 0;\n};\n\n\n/**\n * Determines IE version. More information:\n * http://msdn.microsoft.com/en-us/library/ie/bg182625(v=vs.85).aspx#uaString\n * http://msdn.microsoft.com/en-us/library/hh869301(v=vs.85).aspx\n * http://blogs.msdn.com/b/ie/archive/2010/03/23/introducing-ie9-s-user-agent-string.aspx\n * http://blogs.msdn.com/b/ie/archive/2009/01/09/the-internet-explorer-8-user-agent-string-updated-edition.aspx\n *\n * @param {string} userAgent the User-Agent.\n * @return {string}\n * @private\n */\ngoog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {\n  // IE11 may identify itself as MSIE 9.0 or MSIE 10.0 due to an IE 11 upgrade\n  // bug. Example UA:\n  // Mozilla/5.0 (MSIE 9.0; Windows NT 6.1; WOW64; Trident/7.0; rv:11.0)\n  // like Gecko.\n  // See http://www.whatismybrowser.com/developers/unknown-user-agent-fragments.\n  var rv = /rv: *([\\d\\.]*)/.exec(userAgent);\n  if (rv && rv[1]) {\n    return rv[1];\n  }\n\n  var version = '';\n  var msie = /MSIE +([\\d\\.]+)/.exec(userAgent);\n  if (msie && msie[1]) {\n    // IE in compatibility mode usually identifies itself as MSIE 7.0; in this\n    // case, use the Trident version to determine the version of IE. For more\n    // details, see the links above.\n    var tridentVersion = /Trident\\/(\\d.\\d)/.exec(userAgent);\n    if (msie[1] == '7.0') {\n      if (tridentVersion && tridentVersion[1]) {\n        switch (tridentVersion[1]) {\n          case '4.0':\n            version = '8.0';\n            break;\n          case '5.0':\n            version = '9.0';\n            break;\n          case '6.0':\n            version = '10.0';\n            break;\n          case '7.0':\n            version = '11.0';\n            break;\n        }\n      } else {\n        version = '7.0';\n      }\n    } else {\n      version = msie[1];\n    }\n  }\n  return version;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('goog.Promise');\n\ngoog.require('goog.Thenable');\ngoog.require('goog.asserts');\ngoog.require('goog.async.FreeList');\ngoog.require('goog.async.run');\ngoog.require('goog.async.throwException');\ngoog.require('goog.debug.Error');\ngoog.require('goog.promise.Resolver');\n\n\n\n/**\n * NOTE: This class was created in anticipation of the built-in Promise type\n * being standardized and implemented across browsers. Now that Promise is\n * available in modern browsers, and is automatically polyfilled by the Closure\n * Compiler, by default, most new code should use native `Promise`\n * instead of `goog.Promise`. However, `goog.Promise` has the\n * concept of cancellation which native Promises do not yet have. So code\n * needing cancellation may still want to use `goog.Promise`.\n *\n * Promises provide a result that may be resolved asynchronously. A Promise may\n * be resolved by being fulfilled with a fulfillment value, rejected with a\n * rejection reason, or blocked by another Promise. A Promise is said to be\n * settled if it is either fulfilled or rejected. Once settled, the Promise\n * result is immutable.\n *\n * Promises may represent results of any type, including undefined. Rejection\n * reasons are typically Errors, but may also be of any type. Closure Promises\n * allow for optional type annotations that enforce that fulfillment values are\n * of the appropriate types at compile time.\n *\n * The result of a Promise is accessible by calling `then` and registering\n * `onFulfilled` and `onRejected` callbacks. Once the Promise\n * is settled, the relevant callbacks are invoked with the fulfillment value or\n * rejection reason as argument. Callbacks are always invoked in the order they\n * were registered, even when additional `then` calls are made from inside\n * another callback. A callback is always run asynchronously sometime after the\n * scope containing the registering `then` invocation has returned.\n *\n * If a Promise is resolved with another Promise, the first Promise will block\n * until the second is settled, and then assumes the same result as the second\n * Promise. This allows Promises to depend on the results of other Promises,\n * linking together multiple asynchronous operations.\n *\n * This implementation is compatible with the Promises/A+ specification and\n * passes that specification's conformance test suite. A Closure Promise may be\n * resolved with a Promise instance (or sufficiently compatible Promise-like\n * object) created by other Promise implementations. From the specification,\n * Promise-like objects are known as \"Thenables\".\n *\n * @see http://promisesaplus.com/\n *\n * @param {function(\n *             this:RESOLVER_CONTEXT,\n *             function((TYPE|IThenable<TYPE>|Thenable)=),\n *             function(*=)): void} resolver\n *     Initialization function that is invoked immediately with `resolve`\n *     and `reject` functions as arguments. The Promise is resolved or\n *     rejected with the first argument passed to either function.\n * @param {RESOLVER_CONTEXT=} opt_context An optional context for executing the\n *     resolver function. If unspecified, the resolver function will be executed\n *     in the default scope.\n * @constructor\n * @struct\n * @final\n * @implements {goog.Thenable<TYPE>}\n * @template TYPE,RESOLVER_CONTEXT\n */\ngoog.Promise = function(resolver, opt_context) {\n  /**\n   * The internal state of this Promise. Either PENDING, FULFILLED, REJECTED, or\n   * BLOCKED.\n   * @private {goog.Promise.State_}\n   */\n  this.state_ = goog.Promise.State_.PENDING;\n\n  /**\n   * The settled result of the Promise. Immutable once set with either a\n   * fulfillment value or rejection reason.\n   * @private {*}\n   */\n  this.result_ = undefined;\n\n  /**\n   * For Promises created by calling `then()`, the originating parent.\n   * @private {goog.Promise}\n   */\n  this.parent_ = null;\n\n  /**\n   * The linked list of `onFulfilled` and `onRejected` callbacks\n   * added to this Promise by calls to `then()`.\n   * @private {?goog.Promise.CallbackEntry_}\n   */\n  this.callbackEntries_ = null;\n\n  /**\n   * The tail of the linked list of `onFulfilled` and `onRejected`\n   * callbacks added to this Promise by calls to `then()`.\n   * @private {?goog.Promise.CallbackEntry_}\n   */\n  this.callbackEntriesTail_ = null;\n\n  /**\n   * Whether the Promise is in the queue of Promises to execute.\n   * @private {boolean}\n   */\n  this.executing_ = false;\n\n  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {\n    /**\n     * A timeout ID used when the `UNHANDLED_REJECTION_DELAY` is greater\n     * than 0 milliseconds. The ID is set when the Promise is rejected, and\n     * cleared only if an `onRejected` callback is invoked for the\n     * Promise (or one of its descendants) before the delay is exceeded.\n     *\n     * If the rejection is not handled before the timeout completes, the\n     * rejection reason is passed to the unhandled rejection handler.\n     * @private {number}\n     */\n    this.unhandledRejectionId_ = 0;\n  } else if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {\n    /**\n     * When the `UNHANDLED_REJECTION_DELAY` is set to 0 milliseconds, a\n     * boolean that is set if the Promise is rejected, and reset to false if an\n     * `onRejected` callback is invoked for the Promise (or one of its\n     * descendants). If the rejection is not handled before the next timestep,\n     * the rejection reason is passed to the unhandled rejection handler.\n     * @private {boolean}\n     */\n    this.hadUnhandledRejection_ = false;\n  }\n\n  if (goog.Promise.LONG_STACK_TRACES) {\n    /**\n     * A list of stack trace frames pointing to the locations where this Promise\n     * was created or had callbacks added to it. Saved to add additional context\n     * to stack traces when an exception is thrown.\n     * @private {!Array<string>}\n     */\n    this.stack_ = [];\n    this.addStackTrace_(new Error('created'));\n\n    /**\n     * Index of the most recently executed stack frame entry.\n     * @private {number}\n     */\n    this.currentStep_ = 0;\n  }\n\n  // As an optimization, we can skip this if resolver is goog.nullFunction.\n  // This value is passed internally when creating a promise which will be\n  // resolved through a more optimized path.\n  if (resolver != goog.nullFunction) {\n    try {\n      var self = this;\n      resolver.call(\n          opt_context,\n          function(value) {\n            self.resolve_(goog.Promise.State_.FULFILLED, value);\n          },\n          function(reason) {\n            if (goog.DEBUG &&\n                !(reason instanceof goog.Promise.CancellationError)) {\n              try {\n                // Promise was rejected. Step up one call frame to see why.\n                if (reason instanceof Error) {\n                  throw reason;\n                } else {\n                  throw new Error('Promise rejected.');\n                }\n              } catch (e) {\n                // Only thrown so browser dev tools can catch rejections of\n                // promises when the option to break on caught exceptions is\n                // activated.\n              }\n            }\n            self.resolve_(goog.Promise.State_.REJECTED, reason);\n          });\n    } catch (e) {\n      this.resolve_(goog.Promise.State_.REJECTED, e);\n    }\n  }\n};\n\n\n/**\n * @define {boolean} Whether traces of `then` calls should be included in\n * exceptions thrown\n */\ngoog.define('goog.Promise.LONG_STACK_TRACES', false);\n\n\n/**\n * @define {number} The delay in milliseconds before a rejected Promise's reason\n * is passed to the rejection handler. By default, the rejection handler\n * rethrows the rejection reason so that it appears in the developer console or\n * `window.onerror` handler.\n *\n * Rejections are rethrown as quickly as possible by default. A negative value\n * disables rejection handling entirely.\n */\ngoog.define('goog.Promise.UNHANDLED_REJECTION_DELAY', 0);\n\n\n/**\n * The possible internal states for a Promise. These states are not directly\n * observable to external callers.\n * @enum {number}\n * @private\n */\ngoog.Promise.State_ = {\n  /** The Promise is waiting for resolution. */\n  PENDING: 0,\n\n  /** The Promise is blocked waiting for the result of another Thenable. */\n  BLOCKED: 1,\n\n  /** The Promise has been resolved with a fulfillment value. */\n  FULFILLED: 2,\n\n  /** The Promise has been resolved with a rejection reason. */\n  REJECTED: 3\n};\n\n\n\n/**\n * Entries in the callback chain. Each call to `then`,\n * `thenCatch`, or `thenAlways` creates an entry containing the\n * functions that may be invoked once the Promise is settled.\n *\n * @private @final @struct @constructor\n */\ngoog.Promise.CallbackEntry_ = function() {\n  /** @type {?goog.Promise} */\n  this.child = null;\n  /** @type {Function} */\n  this.onFulfilled = null;\n  /** @type {Function} */\n  this.onRejected = null;\n  /** @type {?} */\n  this.context = null;\n  /** @type {?goog.Promise.CallbackEntry_} */\n  this.next = null;\n\n  /**\n   * A boolean value to indicate this is a \"thenAlways\" callback entry.\n   * Unlike a normal \"then/thenVoid\" a \"thenAlways doesn't participate\n   * in \"cancel\" considerations but is simply an observer and requires\n   * special handling.\n   * @type {boolean}\n   */\n  this.always = false;\n};\n\n\n/** clear the object prior to reuse */\ngoog.Promise.CallbackEntry_.prototype.reset = function() {\n  this.child = null;\n  this.onFulfilled = null;\n  this.onRejected = null;\n  this.context = null;\n  this.always = false;\n};\n\n\n/**\n * @define {number} The number of currently unused objects to keep around for\n *    reuse.\n */\ngoog.define('goog.Promise.DEFAULT_MAX_UNUSED', 100);\n\n\n/** @const @private {goog.async.FreeList<!goog.Promise.CallbackEntry_>} */\ngoog.Promise.freelist_ = new goog.async.FreeList(\n    function() { return new goog.Promise.CallbackEntry_(); },\n    function(item) { item.reset(); }, goog.Promise.DEFAULT_MAX_UNUSED);\n\n\n/**\n * @param {Function} onFulfilled\n * @param {Function} onRejected\n * @param {?} context\n * @return {!goog.Promise.CallbackEntry_}\n * @private\n */\ngoog.Promise.getCallbackEntry_ = function(onFulfilled, onRejected, context) {\n  var entry = goog.Promise.freelist_.get();\n  entry.onFulfilled = onFulfilled;\n  entry.onRejected = onRejected;\n  entry.context = context;\n  return entry;\n};\n\n\n/**\n * @param {!goog.Promise.CallbackEntry_} entry\n * @private\n */\ngoog.Promise.returnEntry_ = function(entry) {\n  goog.Promise.freelist_.put(entry);\n};\n\n\n// NOTE: this is the same template expression as is used for\n// goog.IThenable.prototype.then\n\n\n/**\n * @param {VALUE=} opt_value\n * @return {RESULT} A new Promise that is immediately resolved\n *     with the given value. If the input value is already a goog.Promise, it\n *     will be returned immediately without creating a new instance.\n * @template VALUE\n * @template RESULT := type('goog.Promise',\n *     cond(isUnknown(VALUE), unknown(),\n *       mapunion(VALUE, (V) =>\n *         cond(isTemplatized(V) && sub(rawTypeOf(V), 'IThenable'),\n *           templateTypeOf(V, 0),\n *           cond(sub(V, 'Thenable'),\n *              unknown(),\n *              V)))))\n * =:\n */\ngoog.Promise.resolve = function(opt_value) {\n  if (opt_value instanceof goog.Promise) {\n    // Avoid creating a new object if we already have a promise object\n    // of the correct type.\n    return opt_value;\n  }\n\n  // Passing goog.nullFunction will cause the constructor to take an optimized\n  // path that skips calling the resolver function.\n  var promise = new goog.Promise(goog.nullFunction);\n  promise.resolve_(goog.Promise.State_.FULFILLED, opt_value);\n  return promise;\n};\n\n\n/**\n * @param {*=} opt_reason\n * @return {!goog.Promise} A new Promise that is immediately rejected with the\n *     given reason.\n */\ngoog.Promise.reject = function(opt_reason) {\n  return new goog.Promise(function(resolve, reject) { reject(opt_reason); });\n};\n\n\n/**\n * This is identical to\n * {@code goog.Promise.resolve(value).then(onFulfilled, onRejected)}, but it\n * avoids creating an unnecessary wrapper Promise when `value` is already\n * thenable.\n *\n * @param {?(goog.Thenable<TYPE>|Thenable|TYPE)} value\n * @param {function(TYPE): ?} onFulfilled\n * @param {function(*): *} onRejected\n * @template TYPE\n * @private\n */\ngoog.Promise.resolveThen_ = function(value, onFulfilled, onRejected) {\n  var isThenable =\n      goog.Promise.maybeThen_(value, onFulfilled, onRejected, null);\n  if (!isThenable) {\n    goog.async.run(goog.partial(onFulfilled, value));\n  }\n};\n\n\n/**\n * @param {!Array<?(goog.Promise<TYPE>|goog.Thenable<TYPE>|Thenable|*)>}\n *     promises\n * @return {!goog.Promise<TYPE>} A Promise that receives the result of the\n *     first Promise (or Promise-like) input to settle immediately after it\n *     settles.\n * @template TYPE\n */\ngoog.Promise.race = function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    if (!promises.length) {\n      resolve(undefined);\n    }\n    for (var i = 0, promise; i < promises.length; i++) {\n      promise = promises[i];\n      goog.Promise.resolveThen_(promise, resolve, reject);\n    }\n  });\n};\n\n\n/**\n * @param {!Array<?(goog.Promise<TYPE>|goog.Thenable<TYPE>|Thenable|*)>}\n *     promises\n * @return {!goog.Promise<!Array<TYPE>>} A Promise that receives a list of\n *     every fulfilled value once every input Promise (or Promise-like) is\n *     successfully fulfilled, or is rejected with the first rejection reason\n *     immediately after it is rejected.\n * @template TYPE\n */\ngoog.Promise.all = function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    var toFulfill = promises.length;\n    var values = [];\n\n    if (!toFulfill) {\n      resolve(values);\n      return;\n    }\n\n    var onFulfill = function(index, value) {\n      toFulfill--;\n      values[index] = value;\n      if (toFulfill == 0) {\n        resolve(values);\n      }\n    };\n\n    var onReject = function(reason) { reject(reason); };\n\n    for (var i = 0, promise; i < promises.length; i++) {\n      promise = promises[i];\n      goog.Promise.resolveThen_(promise, goog.partial(onFulfill, i), onReject);\n    }\n  });\n};\n\n\n/**\n * @param {!Array<?(goog.Promise<TYPE>|goog.Thenable<TYPE>|Thenable|*)>}\n *     promises\n * @return {!goog.Promise<!Array<{\n *     fulfilled: boolean,\n *     value: (TYPE|undefined),\n *     reason: (*|undefined)}>>} A Promise that resolves with a list of\n *         result objects once all input Promises (or Promise-like) have\n *         settled. Each result object contains a 'fulfilled' boolean indicating\n *         whether an input Promise was fulfilled or rejected. For fulfilled\n *         Promises, the resulting value is stored in the 'value' field. For\n *         rejected Promises, the rejection reason is stored in the 'reason'\n *         field.\n * @template TYPE\n */\ngoog.Promise.allSettled = function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    var toSettle = promises.length;\n    var results = [];\n\n    if (!toSettle) {\n      resolve(results);\n      return;\n    }\n\n    var onSettled = function(index, fulfilled, result) {\n      toSettle--;\n      results[index] = fulfilled ? {fulfilled: true, value: result} :\n                                   {fulfilled: false, reason: result};\n      if (toSettle == 0) {\n        resolve(results);\n      }\n    };\n\n    for (var i = 0, promise; i < promises.length; i++) {\n      promise = promises[i];\n      goog.Promise.resolveThen_(\n          promise, goog.partial(onSettled, i, true /* fulfilled */),\n          goog.partial(onSettled, i, false /* fulfilled */));\n    }\n  });\n};\n\n\n/**\n * @param {!Array<?(goog.Promise<TYPE>|goog.Thenable<TYPE>|Thenable|*)>}\n *     promises\n * @return {!goog.Promise<TYPE>} A Promise that receives the value of the first\n *     input to be fulfilled, or is rejected with a list of every rejection\n *     reason if all inputs are rejected.\n * @template TYPE\n */\ngoog.Promise.firstFulfilled = function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    var toReject = promises.length;\n    var reasons = [];\n\n    if (!toReject) {\n      resolve(undefined);\n      return;\n    }\n\n    var onFulfill = function(value) { resolve(value); };\n\n    var onReject = function(index, reason) {\n      toReject--;\n      reasons[index] = reason;\n      if (toReject == 0) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0, promise; i < promises.length; i++) {\n      promise = promises[i];\n      goog.Promise.resolveThen_(promise, onFulfill, goog.partial(onReject, i));\n    }\n  });\n};\n\n\n/**\n * @return {!goog.promise.Resolver<TYPE>} Resolver wrapping the promise and its\n *     resolve / reject functions. Resolving or rejecting the resolver\n *     resolves or rejects the promise.\n * @template TYPE\n */\ngoog.Promise.withResolver = function() {\n  var resolve, reject;\n  var promise = new goog.Promise(function(rs, rj) {\n    resolve = rs;\n    reject = rj;\n  });\n  return new goog.Promise.Resolver_(promise, resolve, reject);\n};\n\n\n/**\n * Adds callbacks that will operate on the result of the Promise, returning a\n * new child Promise.\n *\n * If the Promise is fulfilled, the `onFulfilled` callback will be invoked\n * with the fulfillment value as argument, and the child Promise will be\n * fulfilled with the return value of the callback. If the callback throws an\n * exception, the child Promise will be rejected with the thrown value instead.\n *\n * If the Promise is rejected, the `onRejected` callback will be invoked\n * with the rejection reason as argument, and the child Promise will be resolved\n * with the return value or rejected with the thrown value of the callback.\n *\n * @override\n */\ngoog.Promise.prototype.then = function(\n    opt_onFulfilled, opt_onRejected, opt_context) {\n\n  if (opt_onFulfilled != null) {\n    goog.asserts.assertFunction(\n        opt_onFulfilled, 'opt_onFulfilled should be a function.');\n  }\n  if (opt_onRejected != null) {\n    goog.asserts.assertFunction(\n        opt_onRejected,\n        'opt_onRejected should be a function. Did you pass opt_context ' +\n            'as the second argument instead of the third?');\n  }\n\n  if (goog.Promise.LONG_STACK_TRACES) {\n    this.addStackTrace_(new Error('then'));\n  }\n\n  return this.addChildPromise_(\n      goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null,\n      goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);\n};\ngoog.Thenable.addImplementation(goog.Promise);\n\n\n/**\n * Adds callbacks that will operate on the result of the Promise without\n * returning a child Promise (unlike \"then\").\n *\n * If the Promise is fulfilled, the `onFulfilled` callback will be invoked\n * with the fulfillment value as argument.\n *\n * If the Promise is rejected, the `onRejected` callback will be invoked\n * with the rejection reason as argument.\n *\n * @param {?(function(this:THIS, TYPE):?)=} opt_onFulfilled A\n *     function that will be invoked with the fulfillment value if the Promise\n *     is fulfilled.\n * @param {?(function(this:THIS, *): *)=} opt_onRejected A function that will\n *     be invoked with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     with the default this.\n * @package\n * @template THIS\n */\ngoog.Promise.prototype.thenVoid = function(\n    opt_onFulfilled, opt_onRejected, opt_context) {\n\n  if (opt_onFulfilled != null) {\n    goog.asserts.assertFunction(\n        opt_onFulfilled, 'opt_onFulfilled should be a function.');\n  }\n  if (opt_onRejected != null) {\n    goog.asserts.assertFunction(\n        opt_onRejected,\n        'opt_onRejected should be a function. Did you pass opt_context ' +\n            'as the second argument instead of the third?');\n  }\n\n  if (goog.Promise.LONG_STACK_TRACES) {\n    this.addStackTrace_(new Error('then'));\n  }\n\n  // Note: no default rejection handler is provided here as we need to\n  // distinguish unhandled rejections.\n  this.addCallbackEntry_(\n      goog.Promise.getCallbackEntry_(\n          opt_onFulfilled || goog.nullFunction, opt_onRejected || null,\n          opt_context));\n};\n\n\n/**\n * Adds a callback that will be invoked when the Promise is settled (fulfilled\n * or rejected). The callback receives no argument, and no new child Promise is\n * created. This is useful for ensuring that cleanup takes place after certain\n * asynchronous operations. Callbacks added with `thenAlways` will be\n * executed in the same order with other calls to `then`,\n * `thenAlways`, or `thenCatch`.\n *\n * Since it does not produce a new child Promise, cancellation propagation is\n * not prevented by adding callbacks with `thenAlways`. A Promise that has\n * a cleanup handler added with `thenAlways` will be canceled if all of\n * its children created by `then` (or `thenCatch`) are canceled.\n * Additionally, since any rejections are not passed to the callback, it does\n * not stop the unhandled rejection handler from running.\n *\n * @param {function(this:THIS): void} onSettled A function that will be invoked\n *     when the Promise is settled (fulfilled or rejected).\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!goog.Promise<TYPE>} This Promise, for chaining additional calls.\n * @template THIS\n */\ngoog.Promise.prototype.thenAlways = function(onSettled, opt_context) {\n  if (goog.Promise.LONG_STACK_TRACES) {\n    this.addStackTrace_(new Error('thenAlways'));\n  }\n\n  var entry = goog.Promise.getCallbackEntry_(onSettled, onSettled, opt_context);\n  entry.always = true;\n  this.addCallbackEntry_(entry);\n  return this;\n};\n\n\n/**\n * Adds a callback that will be invoked only if the Promise is rejected. This\n * is equivalent to {@code then(null, onRejected)}.\n *\n * @param {function(this:THIS, *): *} onRejected A function that will be\n *     invoked with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!goog.Promise} A new Promise that will receive the result of the\n *     callback.\n * @template THIS\n */\ngoog.Promise.prototype.thenCatch = function(onRejected, opt_context) {\n  if (goog.Promise.LONG_STACK_TRACES) {\n    this.addStackTrace_(new Error('thenCatch'));\n  }\n  return this.addChildPromise_(null, onRejected, opt_context);\n};\n\n\n/**\n * Cancels the Promise if it is still pending by rejecting it with a cancel\n * Error. No action is performed if the Promise is already resolved.\n *\n * All child Promises of the canceled Promise will be rejected with the same\n * cancel error, as with normal Promise rejection. If the Promise to be canceled\n * is the only child of a pending Promise, the parent Promise will also be\n * canceled. Cancellation may propagate upward through multiple generations.\n *\n * @param {string=} opt_message An optional debugging message for describing the\n *     cancellation reason.\n */\ngoog.Promise.prototype.cancel = function(opt_message) {\n  if (this.state_ == goog.Promise.State_.PENDING) {\n    goog.async.run(function() {\n      var err = new goog.Promise.CancellationError(opt_message);\n      this.cancelInternal_(err);\n    }, this);\n  }\n};\n\n\n/**\n * Cancels this Promise with the given error.\n *\n * @param {!Error} err The cancellation error.\n * @private\n */\ngoog.Promise.prototype.cancelInternal_ = function(err) {\n  if (this.state_ == goog.Promise.State_.PENDING) {\n    if (this.parent_) {\n      // Cancel the Promise and remove it from the parent's child list.\n      this.parent_.cancelChild_(this, err);\n      this.parent_ = null;\n    } else {\n      this.resolve_(goog.Promise.State_.REJECTED, err);\n    }\n  }\n};\n\n\n/**\n * Cancels a child Promise from the list of callback entries. If the Promise has\n * not already been resolved, reject it with a cancel error. If there are no\n * other children in the list of callback entries, propagate the cancellation\n * by canceling this Promise as well.\n *\n * @param {!goog.Promise} childPromise The Promise to cancel.\n * @param {!Error} err The cancel error to use for rejecting the Promise.\n * @private\n */\ngoog.Promise.prototype.cancelChild_ = function(childPromise, err) {\n  if (!this.callbackEntries_) {\n    return;\n  }\n  var childCount = 0;\n  var childEntry = null;\n  var beforeChildEntry = null;\n\n  // Find the callback entry for the childPromise, and count whether there are\n  // additional child Promises.\n  for (var entry = this.callbackEntries_; entry; entry = entry.next) {\n    if (!entry.always) {\n      childCount++;\n      if (entry.child == childPromise) {\n        childEntry = entry;\n      }\n      if (childEntry && childCount > 1) {\n        break;\n      }\n    }\n    if (!childEntry) {\n      beforeChildEntry = entry;\n    }\n  }\n\n  // Can a child entry be missing?\n\n  // If the child Promise was the only child, cancel this Promise as well.\n  // Otherwise, reject only the child Promise with the cancel error.\n  if (childEntry) {\n    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {\n      this.cancelInternal_(err);\n    } else {\n      if (beforeChildEntry) {\n        this.removeEntryAfter_(beforeChildEntry);\n      } else {\n        this.popEntry_();\n      }\n\n      this.executeCallback_(childEntry, goog.Promise.State_.REJECTED, err);\n    }\n  }\n};\n\n\n/**\n * Adds a callback entry to the current Promise, and schedules callback\n * execution if the Promise has already been settled.\n *\n * @param {goog.Promise.CallbackEntry_} callbackEntry Record containing\n *     `onFulfilled` and `onRejected` callbacks to execute after\n *     the Promise is settled.\n * @private\n */\ngoog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {\n  if (!this.hasEntry_() && (this.state_ == goog.Promise.State_.FULFILLED ||\n                            this.state_ == goog.Promise.State_.REJECTED)) {\n    this.scheduleCallbacks_();\n  }\n  this.queueEntry_(callbackEntry);\n};\n\n\n/**\n * Creates a child Promise and adds it to the callback entry list. The result of\n * the child Promise is determined by the state of the parent Promise and the\n * result of the `onFulfilled` or `onRejected` callbacks as\n * specified in the Promise resolution procedure.\n *\n * @see http://promisesaplus.com/#the__method\n *\n * @param {?function(this:THIS, TYPE):\n *          (RESULT|goog.Promise<RESULT>|Thenable)} onFulfilled A callback that\n *     will be invoked if the Promise is fulfilled, or null.\n * @param {?function(this:THIS, *): *} onRejected A callback that will be\n *     invoked if the Promise is rejected, or null.\n * @param {THIS=} opt_context An optional execution context for the callbacks.\n *     in the default calling context.\n * @return {!goog.Promise} The child Promise.\n * @template RESULT,THIS\n * @private\n */\ngoog.Promise.prototype.addChildPromise_ = function(\n    onFulfilled, onRejected, opt_context) {\n\n  /** @type {goog.Promise.CallbackEntry_} */\n  var callbackEntry = goog.Promise.getCallbackEntry_(null, null, null);\n\n  callbackEntry.child = new goog.Promise(function(resolve, reject) {\n    // Invoke onFulfilled, or resolve with the parent's value if absent.\n    callbackEntry.onFulfilled = onFulfilled ? function(value) {\n      try {\n        var result = onFulfilled.call(opt_context, value);\n        resolve(result);\n      } catch (err) {\n        reject(err);\n      }\n    } : resolve;\n\n    // Invoke onRejected, or reject with the parent's reason if absent.\n    callbackEntry.onRejected = onRejected ? function(reason) {\n      try {\n        var result = onRejected.call(opt_context, reason);\n        if (!goog.isDef(result) &&\n            reason instanceof goog.Promise.CancellationError) {\n          // Propagate cancellation to children if no other result is returned.\n          reject(reason);\n        } else {\n          resolve(result);\n        }\n      } catch (err) {\n        reject(err);\n      }\n    } : reject;\n  });\n\n  callbackEntry.child.parent_ = this;\n  this.addCallbackEntry_(callbackEntry);\n  return callbackEntry.child;\n};\n\n\n/**\n * Unblocks the Promise and fulfills it with the given value.\n *\n * @param {TYPE} value\n * @private\n */\ngoog.Promise.prototype.unblockAndFulfill_ = function(value) {\n  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);\n  this.state_ = goog.Promise.State_.PENDING;\n  this.resolve_(goog.Promise.State_.FULFILLED, value);\n};\n\n\n/**\n * Unblocks the Promise and rejects it with the given rejection reason.\n *\n * @param {*} reason\n * @private\n */\ngoog.Promise.prototype.unblockAndReject_ = function(reason) {\n  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);\n  this.state_ = goog.Promise.State_.PENDING;\n  this.resolve_(goog.Promise.State_.REJECTED, reason);\n};\n\n\n/**\n * Attempts to resolve a Promise with a given resolution state and value. This\n * is a no-op if the given Promise has already been resolved.\n *\n * If the given result is a Thenable (such as another Promise), the Promise will\n * be settled with the same state and result as the Thenable once it is itself\n * settled.\n *\n * If the given result is not a Thenable, the Promise will be settled (fulfilled\n * or rejected) with that result based on the given state.\n *\n * @see http://promisesaplus.com/#the_promise_resolution_procedure\n *\n * @param {goog.Promise.State_} state\n * @param {*} x The result to apply to the Promise.\n * @private\n */\ngoog.Promise.prototype.resolve_ = function(state, x) {\n  if (this.state_ != goog.Promise.State_.PENDING) {\n    return;\n  }\n\n  if (this === x) {\n    state = goog.Promise.State_.REJECTED;\n    x = new TypeError('Promise cannot resolve to itself');\n  }\n\n  this.state_ = goog.Promise.State_.BLOCKED;\n  var isThenable = goog.Promise.maybeThen_(\n      x, this.unblockAndFulfill_, this.unblockAndReject_, this);\n  if (isThenable) {\n    return;\n  }\n\n  this.result_ = x;\n  this.state_ = state;\n  // Since we can no longer be canceled, remove link to parent, so that the\n  // child promise does not keep the parent promise alive.\n  this.parent_ = null;\n  this.scheduleCallbacks_();\n\n  if (state == goog.Promise.State_.REJECTED &&\n      !(x instanceof goog.Promise.CancellationError)) {\n    goog.Promise.addUnhandledRejection_(this, x);\n  }\n};\n\n\n/**\n * Invokes the \"then\" method of an input value if that value is a Thenable. This\n * is a no-op if the value is not thenable.\n *\n * @param {?} value A potentially thenable value.\n * @param {!Function} onFulfilled\n * @param {!Function} onRejected\n * @param {?} context\n * @return {boolean} Whether the input value was thenable.\n * @private\n */\ngoog.Promise.maybeThen_ = function(value, onFulfilled, onRejected, context) {\n  if (value instanceof goog.Promise) {\n    value.thenVoid(onFulfilled, onRejected, context);\n    return true;\n  } else if (goog.Thenable.isImplementedBy(value)) {\n    value = /** @type {!goog.Thenable} */ (value);\n    value.then(onFulfilled, onRejected, context);\n    return true;\n  } else if (goog.isObject(value)) {\n    try {\n      var then = value['then'];\n      if (goog.isFunction(then)) {\n        goog.Promise.tryThen_(value, then, onFulfilled, onRejected, context);\n        return true;\n      }\n    } catch (e) {\n      onRejected.call(context, e);\n      return true;\n    }\n  }\n\n  return false;\n};\n\n\n/**\n * Attempts to call the `then` method on an object in the hopes that it is\n * a Promise-compatible instance. This allows interoperation between different\n * Promise implementations, however a non-compliant object may cause a Promise\n * to hang indefinitely. If the `then` method throws an exception, the\n * dependent Promise will be rejected with the thrown value.\n *\n * @see http://promisesaplus.com/#point-70\n *\n * @param {Thenable} thenable An object with a `then` method that may be\n *     compatible with the Promise/A+ specification.\n * @param {!Function} then The `then` method of the Thenable object.\n * @param {!Function} onFulfilled\n * @param {!Function} onRejected\n * @param {*} context\n * @private\n */\ngoog.Promise.tryThen_ = function(\n    thenable, then, onFulfilled, onRejected, context) {\n\n  var called = false;\n  var resolve = function(value) {\n    if (!called) {\n      called = true;\n      onFulfilled.call(context, value);\n    }\n  };\n\n  var reject = function(reason) {\n    if (!called) {\n      called = true;\n      onRejected.call(context, reason);\n    }\n  };\n\n  try {\n    then.call(thenable, resolve, reject);\n  } catch (e) {\n    reject(e);\n  }\n};\n\n\n/**\n * Executes the pending callbacks of a settled Promise after a timeout.\n *\n * Section 2.2.4 of the Promises/A+ specification requires that Promise\n * callbacks must only be invoked from a call stack that only contains Promise\n * implementation code, which we accomplish by invoking callback execution after\n * a timeout. If `startExecution_` is called multiple times for the same\n * Promise, the callback chain will be evaluated only once. Additional callbacks\n * may be added during the evaluation phase, and will be executed in the same\n * event loop.\n *\n * All Promises added to the waiting list during the same browser event loop\n * will be executed in one batch to avoid using a separate timeout per Promise.\n *\n * @private\n */\ngoog.Promise.prototype.scheduleCallbacks_ = function() {\n  if (!this.executing_) {\n    this.executing_ = true;\n    goog.async.run(this.executeCallbacks_, this);\n  }\n};\n\n\n/**\n * @return {boolean} Whether there are any pending callbacks queued.\n * @private\n */\ngoog.Promise.prototype.hasEntry_ = function() {\n  return !!this.callbackEntries_;\n};\n\n\n/**\n * @param {goog.Promise.CallbackEntry_} entry\n * @private\n */\ngoog.Promise.prototype.queueEntry_ = function(entry) {\n  goog.asserts.assert(entry.onFulfilled != null);\n\n  if (this.callbackEntriesTail_) {\n    this.callbackEntriesTail_.next = entry;\n    this.callbackEntriesTail_ = entry;\n  } else {\n    // It the work queue was empty set the head too.\n    this.callbackEntries_ = entry;\n    this.callbackEntriesTail_ = entry;\n  }\n};\n\n\n/**\n * @return {goog.Promise.CallbackEntry_} entry\n * @private\n */\ngoog.Promise.prototype.popEntry_ = function() {\n  var entry = null;\n  if (this.callbackEntries_) {\n    entry = this.callbackEntries_;\n    this.callbackEntries_ = entry.next;\n    entry.next = null;\n  }\n  // It the work queue is empty clear the tail too.\n  if (!this.callbackEntries_) {\n    this.callbackEntriesTail_ = null;\n  }\n\n  if (entry != null) {\n    goog.asserts.assert(entry.onFulfilled != null);\n  }\n  return entry;\n};\n\n\n/**\n * @param {goog.Promise.CallbackEntry_} previous\n * @private\n */\ngoog.Promise.prototype.removeEntryAfter_ = function(previous) {\n  goog.asserts.assert(this.callbackEntries_);\n  goog.asserts.assert(previous != null);\n  // If the last entry is being removed, update the tail\n  if (previous.next == this.callbackEntriesTail_) {\n    this.callbackEntriesTail_ = previous;\n  }\n\n  previous.next = previous.next.next;\n};\n\n\n/**\n * Executes all pending callbacks for this Promise.\n *\n * @private\n */\ngoog.Promise.prototype.executeCallbacks_ = function() {\n  var entry = null;\n  while (entry = this.popEntry_()) {\n    if (goog.Promise.LONG_STACK_TRACES) {\n      this.currentStep_++;\n    }\n    this.executeCallback_(entry, this.state_, this.result_);\n  }\n  this.executing_ = false;\n};\n\n\n/**\n * Executes a pending callback for this Promise. Invokes an `onFulfilled`\n * or `onRejected` callback based on the settled state of the Promise.\n *\n * @param {!goog.Promise.CallbackEntry_} callbackEntry An entry containing the\n *     onFulfilled and/or onRejected callbacks for this step.\n * @param {goog.Promise.State_} state The resolution status of the Promise,\n *     either FULFILLED or REJECTED.\n * @param {*} result The settled result of the Promise.\n * @private\n */\ngoog.Promise.prototype.executeCallback_ = function(\n    callbackEntry, state, result) {\n  // Cancel an unhandled rejection if the then/thenVoid call had an onRejected.\n  if (state == goog.Promise.State_.REJECTED && callbackEntry.onRejected &&\n      !callbackEntry.always) {\n    this.removeUnhandledRejection_();\n  }\n\n  if (callbackEntry.child) {\n    // When the parent is settled, the child no longer needs to hold on to it,\n    // as the parent can no longer be canceled.\n    callbackEntry.child.parent_ = null;\n    goog.Promise.invokeCallback_(callbackEntry, state, result);\n  } else {\n    // Callbacks created with thenAlways or thenVoid do not have the rejection\n    // handling code normally set up in the child Promise.\n    try {\n      callbackEntry.always ?\n          callbackEntry.onFulfilled.call(callbackEntry.context) :\n          goog.Promise.invokeCallback_(callbackEntry, state, result);\n    } catch (err) {\n      goog.Promise.handleRejection_.call(null, err);\n    }\n  }\n  goog.Promise.returnEntry_(callbackEntry);\n};\n\n\n/**\n * Executes the onFulfilled or onRejected callback for a callbackEntry.\n *\n * @param {!goog.Promise.CallbackEntry_} callbackEntry\n * @param {goog.Promise.State_} state\n * @param {*} result\n * @private\n */\ngoog.Promise.invokeCallback_ = function(callbackEntry, state, result) {\n  if (state == goog.Promise.State_.FULFILLED) {\n    callbackEntry.onFulfilled.call(callbackEntry.context, result);\n  } else if (callbackEntry.onRejected) {\n    callbackEntry.onRejected.call(callbackEntry.context, result);\n  }\n};\n\n\n/**\n * Records a stack trace entry for functions that call `then` or the\n * Promise constructor. May be disabled by unsetting `LONG_STACK_TRACES`.\n *\n * @param {!Error} err An Error object created by the calling function for\n *     providing a stack trace.\n * @private\n */\ngoog.Promise.prototype.addStackTrace_ = function(err) {\n  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {\n    // Extract the third line of the stack trace, which is the entry for the\n    // user function that called into Promise code.\n    var trace = err.stack.split('\\n', 4)[3];\n    var message = err.message;\n\n    // Pad the message to align the traces.\n    message += Array(11 - message.length).join(' ');\n    this.stack_.push(message + trace);\n  }\n};\n\n\n/**\n * Adds extra stack trace information to an exception for the list of\n * asynchronous `then` calls that have been run for this Promise. Stack\n * trace information is recorded in {@see #addStackTrace_}, and appended to\n * rethrown errors when `LONG_STACK_TRACES` is enabled.\n *\n * @param {*} err An unhandled exception captured during callback execution.\n * @private\n */\ngoog.Promise.prototype.appendLongStack_ = function(err) {\n  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) &&\n      this.stack_.length) {\n    var longTrace = ['Promise trace:'];\n\n    for (var promise = this; promise; promise = promise.parent_) {\n      for (var i = this.currentStep_; i >= 0; i--) {\n        longTrace.push(promise.stack_[i]);\n      }\n      longTrace.push(\n          'Value: ' +\n          '[' + (promise.state_ == goog.Promise.State_.REJECTED ? 'REJECTED' :\n                                                                  'FULFILLED') +\n          '] ' +\n          '<' + String(promise.result_) + '>');\n    }\n    err.stack += '\\n\\n' + longTrace.join('\\n');\n  }\n};\n\n\n/**\n * Marks this rejected Promise as having being handled. Also marks any parent\n * Promises in the rejected state as handled. The rejection handler will no\n * longer be invoked for this Promise (if it has not been called already).\n *\n * @private\n */\ngoog.Promise.prototype.removeUnhandledRejection_ = function() {\n  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {\n    for (var p = this; p && p.unhandledRejectionId_; p = p.parent_) {\n      goog.global.clearTimeout(p.unhandledRejectionId_);\n      p.unhandledRejectionId_ = 0;\n    }\n  } else if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {\n    for (var p = this; p && p.hadUnhandledRejection_; p = p.parent_) {\n      p.hadUnhandledRejection_ = false;\n    }\n  }\n};\n\n\n/**\n * Marks this rejected Promise as unhandled. If no `onRejected` callback\n * is called for this Promise before the `UNHANDLED_REJECTION_DELAY`\n * expires, the reason will be passed to the unhandled rejection handler. The\n * handler typically rethrows the rejection reason so that it becomes visible in\n * the developer console.\n *\n * @param {!goog.Promise} promise The rejected Promise.\n * @param {*} reason The Promise rejection reason.\n * @private\n */\ngoog.Promise.addUnhandledRejection_ = function(promise, reason) {\n  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {\n    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {\n      promise.appendLongStack_(reason);\n      goog.Promise.handleRejection_.call(null, reason);\n    }, goog.Promise.UNHANDLED_REJECTION_DELAY);\n\n  } else if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {\n    promise.hadUnhandledRejection_ = true;\n    goog.async.run(function() {\n      if (promise.hadUnhandledRejection_) {\n        promise.appendLongStack_(reason);\n        goog.Promise.handleRejection_.call(null, reason);\n      }\n    });\n  }\n};\n\n\n/**\n * A method that is invoked with the rejection reasons for Promises that are\n * rejected but have no `onRejected` callbacks registered yet.\n * @type {function(*)}\n * @private\n */\ngoog.Promise.handleRejection_ = goog.async.throwException;\n\n\n/**\n * Sets a handler that will be called with reasons from unhandled rejected\n * Promises. If the rejected Promise (or one of its descendants) has an\n * `onRejected` callback registered, the rejection will be considered\n * handled, and the rejection handler will not be called.\n *\n * By default, unhandled rejections are rethrown so that the error may be\n * captured by the developer console or a `window.onerror` handler.\n *\n * @param {function(*)} handler A function that will be called with reasons from\n *     rejected Promises. Defaults to `goog.async.throwException`.\n */\ngoog.Promise.setUnhandledRejectionHandler = function(handler) {\n  goog.Promise.handleRejection_ = handler;\n};\n\n\n\n/**\n * Error used as a rejection reason for canceled Promises.\n *\n * @param {string=} opt_message\n * @constructor\n * @extends {goog.debug.Error}\n * @final\n */\ngoog.Promise.CancellationError = function(opt_message) {\n  goog.Promise.CancellationError.base(this, 'constructor', opt_message);\n};\ngoog.inherits(goog.Promise.CancellationError, goog.debug.Error);\n\n\n/** @override */\ngoog.Promise.CancellationError.prototype.name = 'cancel';\n\n\n\n/**\n * Internal implementation of the resolver interface.\n *\n * @param {!goog.Promise<TYPE>} promise\n * @param {function((TYPE|goog.Promise<TYPE>|Thenable)=)} resolve\n * @param {function(*=): void} reject\n * @implements {goog.promise.Resolver<TYPE>}\n * @final @struct\n * @constructor\n * @private\n * @template TYPE\n */\ngoog.Promise.Resolver_ = function(promise, resolve, reject) {\n  /** @const */\n  this.promise = promise;\n\n  /** @const */\n  this.resolve = resolve;\n\n  /** @const */\n  this.reject = reject;\n};\n","// Copyright 2005 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Implements the disposable interface. The dispose method is used\n * to clean up references and resources.\n * @author arv@google.com (Erik Arvidsson)\n */\n\n\ngoog.provide('goog.Disposable');\ngoog.provide('goog.dispose');\ngoog.provide('goog.disposeAll');\n\ngoog.require('goog.disposable.IDisposable');\n\n\n\n/**\n * Class that provides the basic implementation for disposable objects. If your\n * class holds one or more references to COM objects, DOM nodes, or other\n * disposable objects, it should extend this class or implement the disposable\n * interface (defined in goog.disposable.IDisposable).\n * @constructor\n * @implements {goog.disposable.IDisposable}\n */\ngoog.Disposable = function() {\n  /**\n   * If monitoring the goog.Disposable instances is enabled, stores the creation\n   * stack trace of the Disposable instance.\n   * @type {string|undefined}\n   */\n  this.creationStack;\n\n  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {\n    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {\n      this.creationStack = new Error().stack;\n    }\n    goog.Disposable.instances_[goog.getUid(this)] = this;\n  }\n  // Support sealing\n  this.disposed_ = this.disposed_;\n  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;\n};\n\n\n/**\n * @enum {number} Different monitoring modes for Disposable.\n */\ngoog.Disposable.MonitoringMode = {\n  /**\n   * No monitoring.\n   */\n  OFF: 0,\n  /**\n   * Creating and disposing the goog.Disposable instances is monitored. All\n   * disposable objects need to call the `goog.Disposable` base\n   * constructor. The PERMANENT mode must be switched on before creating any\n   * goog.Disposable instances.\n   */\n  PERMANENT: 1,\n  /**\n   * INTERACTIVE mode can be switched on and off on the fly without producing\n   * errors. It also doesn't warn if the disposable objects don't call the\n   * `goog.Disposable` base constructor.\n   */\n  INTERACTIVE: 2\n};\n\n\n/**\n * @define {number} The monitoring mode of the goog.Disposable\n *     instances. Default is OFF. Switching on the monitoring is only\n *     recommended for debugging because it has a significant impact on\n *     performance and memory usage. If switched off, the monitoring code\n *     compiles down to 0 bytes.\n */\ngoog.define('goog.Disposable.MONITORING_MODE', 0);\n\n\n/**\n * @define {boolean} Whether to attach creation stack to each created disposable\n *     instance; This is only relevant for when MonitoringMode != OFF.\n */\ngoog.define('goog.Disposable.INCLUDE_STACK_ON_CREATION', true);\n\n\n/**\n * Maps the unique ID of every undisposed `goog.Disposable` object to\n * the object itself.\n * @type {!Object<number, !goog.Disposable>}\n * @private\n */\ngoog.Disposable.instances_ = {};\n\n\n/**\n * @return {!Array<!goog.Disposable>} All `goog.Disposable` objects that\n *     haven't been disposed of.\n */\ngoog.Disposable.getUndisposedObjects = function() {\n  var ret = [];\n  for (var id in goog.Disposable.instances_) {\n    if (goog.Disposable.instances_.hasOwnProperty(id)) {\n      ret.push(goog.Disposable.instances_[Number(id)]);\n    }\n  }\n  return ret;\n};\n\n\n/**\n * Clears the registry of undisposed objects but doesn't dispose of them.\n */\ngoog.Disposable.clearUndisposedObjects = function() {\n  goog.Disposable.instances_ = {};\n};\n\n\n/**\n * Whether the object has been disposed of.\n * @type {boolean}\n * @private\n */\ngoog.Disposable.prototype.disposed_ = false;\n\n\n/**\n * Callbacks to invoke when this object is disposed.\n * @type {Array<!Function>}\n * @private\n */\ngoog.Disposable.prototype.onDisposeCallbacks_;\n\n\n/**\n * @return {boolean} Whether the object has been disposed of.\n * @override\n */\ngoog.Disposable.prototype.isDisposed = function() {\n  return this.disposed_;\n};\n\n\n/**\n * @return {boolean} Whether the object has been disposed of.\n * @deprecated Use {@link #isDisposed} instead.\n */\ngoog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;\n\n\n/**\n * Disposes of the object. If the object hasn't already been disposed of, calls\n * {@link #disposeInternal}. Classes that extend `goog.Disposable` should\n * override {@link #disposeInternal} in order to delete references to COM\n * objects, DOM nodes, and other disposable objects. Reentrant.\n *\n * @return {void} Nothing.\n * @override\n */\ngoog.Disposable.prototype.dispose = function() {\n  if (!this.disposed_) {\n    // Set disposed_ to true first, in case during the chain of disposal this\n    // gets disposed recursively.\n    this.disposed_ = true;\n    this.disposeInternal();\n    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {\n      var uid = goog.getUid(this);\n      if (goog.Disposable.MONITORING_MODE ==\n              goog.Disposable.MonitoringMode.PERMANENT &&\n          !goog.Disposable.instances_.hasOwnProperty(uid)) {\n        throw new Error(\n            this + ' did not call the goog.Disposable base ' +\n            'constructor or was disposed of after a clearUndisposedObjects ' +\n            'call');\n      }\n      if (goog.Disposable.MONITORING_MODE !=\n              goog.Disposable.MonitoringMode.OFF &&\n          this.onDisposeCallbacks_ && this.onDisposeCallbacks_.length > 0) {\n        throw new Error(\n            this + ' did not empty its onDisposeCallbacks queue. This ' +\n            'probably means it overrode dispose() or disposeInternal() ' +\n            'without calling the superclass\\' method.');\n      }\n      delete goog.Disposable.instances_[uid];\n    }\n  }\n};\n\n\n/**\n * Associates a disposable object with this object so that they will be disposed\n * together.\n * @param {goog.disposable.IDisposable} disposable that will be disposed when\n *     this object is disposed.\n */\ngoog.Disposable.prototype.registerDisposable = function(disposable) {\n  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));\n};\n\n\n/**\n * Invokes a callback function when this object is disposed. Callbacks are\n * invoked in the order in which they were added. If a callback is added to\n * an already disposed Disposable, it will be called immediately.\n * @param {function(this:T):?} callback The callback function.\n * @param {T=} opt_scope An optional scope to call the callback in.\n * @template T\n */\ngoog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {\n  if (this.disposed_) {\n    goog.isDef(opt_scope) ? callback.call(opt_scope) : callback();\n    return;\n  }\n  if (!this.onDisposeCallbacks_) {\n    this.onDisposeCallbacks_ = [];\n  }\n\n  this.onDisposeCallbacks_.push(\n      goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);\n};\n\n\n/**\n * Deletes or nulls out any references to COM objects, DOM nodes, or other\n * disposable objects. Classes that extend `goog.Disposable` should\n * override this method.\n * Not reentrant. To avoid calling it twice, it must only be called from the\n * subclass' `disposeInternal` method. Everywhere else the public\n * `dispose` method must be used.\n * For example:\n * <pre>\n *   mypackage.MyClass = function() {\n *     mypackage.MyClass.base(this, 'constructor');\n *     // Constructor logic specific to MyClass.\n *     ...\n *   };\n *   goog.inherits(mypackage.MyClass, goog.Disposable);\n *\n *   mypackage.MyClass.prototype.disposeInternal = function() {\n *     // Dispose logic specific to MyClass.\n *     ...\n *     // Call superclass's disposeInternal at the end of the subclass's, like\n *     // in C++, to avoid hard-to-catch issues.\n *     mypackage.MyClass.base(this, 'disposeInternal');\n *   };\n * </pre>\n * @protected\n */\ngoog.Disposable.prototype.disposeInternal = function() {\n  if (this.onDisposeCallbacks_) {\n    while (this.onDisposeCallbacks_.length) {\n      this.onDisposeCallbacks_.shift()();\n    }\n  }\n};\n\n\n/**\n * Returns True if we can verify the object is disposed.\n * Calls `isDisposed` on the argument if it supports it.  If obj\n * is not an object with an isDisposed() method, return false.\n * @param {*} obj The object to investigate.\n * @return {boolean} True if we can verify the object is disposed.\n */\ngoog.Disposable.isDisposed = function(obj) {\n  if (obj && typeof obj.isDisposed == 'function') {\n    return obj.isDisposed();\n  }\n  return false;\n};\n\n\n/**\n * Calls `dispose` on the argument if it supports it. If obj is not an\n *     object with a dispose() method, this is a no-op.\n * @param {*} obj The object to dispose of.\n */\ngoog.dispose = function(obj) {\n  if (obj && typeof obj.dispose == 'function') {\n    obj.dispose();\n  }\n};\n\n\n/**\n * Calls `dispose` on each member of the list that supports it. (If the\n * member is an ArrayLike, then `goog.disposeAll()` will be called\n * recursively on each of its members.) If the member is not an object with a\n * `dispose()` method, then it is ignored.\n * @param {...*} var_args The list.\n */\ngoog.disposeAll = function(var_args) {\n  for (var i = 0, len = arguments.length; i < len; ++i) {\n    var disposable = arguments[i];\n    if (goog.isArrayLike(disposable)) {\n      goog.disposeAll.apply(null, disposable);\n    } else {\n      goog.dispose(disposable);\n    }\n  }\n};\n","// Copyright 2009 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Useful compiler idioms.\n *\n * @author johnlenz@google.com (John Lenz)\n */\n\ngoog.provide('goog.reflect');\n\n\n/**\n * Syntax for object literal casts.\n * @see http://go/jscompiler-renaming\n * @see https://goo.gl/CRs09P\n *\n * Use this if you have an object literal whose keys need to have the same names\n * as the properties of some class even after they are renamed by the compiler.\n *\n * @param {!Function} type Type to cast to.\n * @param {Object} object Object literal to cast.\n * @return {Object} The object literal.\n */\ngoog.reflect.object = function(type, object) {\n  return object;\n};\n\n/**\n * Syntax for renaming property strings.\n * @see http://go/jscompiler-renaming\n * @see https://goo.gl/CRs09P\n *\n * Use this if you have an need to access a property as a string, but want\n * to also have the property renamed by the compiler. In contrast to\n * goog.reflect.object, this method takes an instance of an object.\n *\n * Properties must be simple names (not qualified names).\n *\n * @param {string} prop Name of the property\n * @param {!Object} object Instance of the object whose type will be used\n *     for renaming\n * @return {string} The renamed property.\n */\ngoog.reflect.objectProperty = function(prop, object) {\n  return prop;\n};\n\n/**\n * To assert to the compiler that an operation is needed when it would\n * otherwise be stripped. For example:\n * <code>\n *     // Force a layout\n *     goog.reflect.sinkValue(dialog.offsetHeight);\n * </code>\n * @param {T} x\n * @return {T}\n * @template T\n */\ngoog.reflect.sinkValue = function(x) {\n  goog.reflect.sinkValue[' '](x);\n  return x;\n};\n\n\n/**\n * The compiler should optimize this function away iff no one ever uses\n * goog.reflect.sinkValue.\n */\ngoog.reflect.sinkValue[' '] = goog.nullFunction;\n\n\n/**\n * Check if a property can be accessed without throwing an exception.\n * @param {Object} obj The owner of the property.\n * @param {string} prop The property name.\n * @return {boolean} Whether the property is accessible. Will also return true\n *     if obj is null.\n */\ngoog.reflect.canAccessProperty = function(obj, prop) {\n\n  try {\n    goog.reflect.sinkValue(obj[prop]);\n    return true;\n  } catch (e) {\n  }\n  return false;\n};\n\n\n/**\n * Retrieves a value from a cache given a key. The compiler provides special\n * consideration for this call such that it is generally considered side-effect\n * free. However, if the `opt_keyFn` or `valueFn` have side-effects\n * then the entire call is considered to have side-effects.\n *\n * Conventionally storing the value on the cache would be considered a\n * side-effect and preclude unused calls from being pruned, ie. even if\n * the value was never used, it would still always be stored in the cache.\n *\n * Providing a side-effect free `valueFn` and `opt_keyFn`\n * allows unused calls to `goog.reflect.cache` to be pruned.\n *\n * @param {!Object<K, V>} cacheObj The object that contains the cached values.\n * @param {?} key The key to lookup in the cache. If it is not string or number\n *     then a `opt_keyFn` should be provided. The key is also used as the\n *     parameter to the `valueFn`.\n * @param {function(?):V} valueFn The value provider to use to calculate the\n *     value to store in the cache. This function should be side-effect free\n *     to take advantage of the optimization.\n * @param {function(?):K=} opt_keyFn The key provider to determine the cache\n *     map key. This should be used if the given key is not a string or number.\n *     If not provided then the given key is used. This function should be\n *     side-effect free to take advantage of the optimization.\n * @return {V} The cached or calculated value.\n * @template K\n * @template V\n */\ngoog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {\n  var storedKey = opt_keyFn ? opt_keyFn(key) : key;\n\n  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {\n    return cacheObj[storedKey];\n  }\n\n  return (cacheObj[storedKey] = valueFn(key));\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Rendering engine detection.\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For information on the browser brand (such as Safari versus Chrome), see\n * goog.userAgent.product.\n * @author arv@google.com (Erik Arvidsson)\n * @see ../demos/useragent.html\n */\n\ngoog.provide('goog.userAgent');\n\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.labs.userAgent.engine');\ngoog.require('goog.labs.userAgent.platform');\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.reflect');\ngoog.require('goog.string');\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is IE.\n */\ngoog.define('goog.userAgent.ASSUME_IE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is EDGE.\n */\ngoog.define('goog.userAgent.ASSUME_EDGE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is GECKO.\n */\ngoog.define('goog.userAgent.ASSUME_GECKO', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is WEBKIT.\n */\ngoog.define('goog.userAgent.ASSUME_WEBKIT', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is a\n *     mobile device running WebKit e.g. iPhone or Android.\n */\ngoog.define('goog.userAgent.ASSUME_MOBILE_WEBKIT', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is OPERA.\n */\ngoog.define('goog.userAgent.ASSUME_OPERA', false);\n\n\n/**\n * @define {boolean} Whether the\n *     `goog.userAgent.isVersionOrHigher`\n *     function will return true for any version.\n */\ngoog.define('goog.userAgent.ASSUME_ANY_VERSION', false);\n\n\n/**\n * Whether we know the browser engine at compile-time.\n * @type {boolean}\n * @private\n */\ngoog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE ||\n    goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO ||\n    goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT ||\n    goog.userAgent.ASSUME_OPERA;\n\n\n/**\n * Returns the userAgent string for the current browser.\n *\n * @return {string} The userAgent string.\n */\ngoog.userAgent.getUserAgentString = function() {\n  return goog.labs.userAgent.util.getUserAgent();\n};\n\n\n/**\n * @return {?Navigator} The native navigator object.\n */\ngoog.userAgent.getNavigatorTyped = function() {\n  // Need a local navigator reference instead of using the global one,\n  // to avoid the rare case where they reference different objects.\n  // (in a WorkerPool, for example).\n  return goog.global['navigator'] || null;\n};\n\n\n/**\n * TODO(nnaze): Change type to \"Navigator\" and update compilation targets.\n * @return {?Object} The native navigator object.\n */\ngoog.userAgent.getNavigator = function() {\n  return goog.userAgent.getNavigatorTyped();\n};\n\n\n/**\n * Whether the user agent is Opera.\n * @type {boolean}\n */\ngoog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_OPERA :\n    goog.labs.userAgent.browser.isOpera();\n\n\n/**\n * Whether the user agent is Internet Explorer.\n * @type {boolean}\n */\ngoog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_IE :\n    goog.labs.userAgent.browser.isIE();\n\n\n/**\n * Whether the user agent is Microsoft Edge.\n * @type {boolean}\n */\ngoog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_EDGE :\n    goog.labs.userAgent.engine.isEdge();\n\n\n/**\n * Whether the user agent is MS Internet Explorer or MS Edge.\n * @type {boolean}\n */\ngoog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;\n\n\n/**\n * Whether the user agent is Gecko. Gecko is the rendering engine used by\n * Mozilla, Firefox, and others.\n * @type {boolean}\n */\ngoog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_GECKO :\n    goog.labs.userAgent.engine.isGecko();\n\n\n/**\n * Whether the user agent is WebKit. WebKit is the rendering engine that\n * Safari, Android and others use.\n * @type {boolean}\n */\ngoog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT :\n    goog.labs.userAgent.engine.isWebKit();\n\n\n/**\n * Whether the user agent is running on a mobile device.\n *\n * This is a separate function so that the logic can be tested.\n *\n * TODO(nnaze): Investigate swapping in goog.labs.userAgent.device.isMobile().\n *\n * @return {boolean} Whether the user agent is running on a mobile device.\n * @private\n */\ngoog.userAgent.isMobile_ = function() {\n  return goog.userAgent.WEBKIT &&\n      goog.labs.userAgent.util.matchUserAgent('Mobile');\n};\n\n\n/**\n * Whether the user agent is running on a mobile device.\n *\n * TODO(nnaze): Consider deprecating MOBILE when labs.userAgent\n *   is promoted as the gecko/webkit logic is likely inaccurate.\n *\n * @type {boolean}\n */\ngoog.userAgent.MOBILE =\n    goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();\n\n\n/**\n * Used while transitioning code to use WEBKIT instead.\n * @type {boolean}\n * @deprecated Use {@link goog.userAgent.product.SAFARI} instead.\n * TODO(nicksantos): Delete this from goog.userAgent.\n */\ngoog.userAgent.SAFARI = goog.userAgent.WEBKIT;\n\n\n/**\n * @return {string} the platform (operating system) the user agent is running\n *     on. Default to empty string because navigator.platform may not be defined\n *     (on Rhino, for example).\n * @private\n */\ngoog.userAgent.determinePlatform_ = function() {\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return navigator && navigator.platform || '';\n};\n\n\n/**\n * The platform (operating system) the user agent is running on. Default to\n * empty string because navigator.platform may not be defined (on Rhino, for\n * example).\n * @type {string}\n */\ngoog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Macintosh operating\n *     system.\n */\ngoog.define('goog.userAgent.ASSUME_MAC', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Windows operating\n *     system.\n */\ngoog.define('goog.userAgent.ASSUME_WINDOWS', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Linux operating\n *     system.\n */\ngoog.define('goog.userAgent.ASSUME_LINUX', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a X11 windowing\n *     system.\n */\ngoog.define('goog.userAgent.ASSUME_X11', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on Android.\n */\ngoog.define('goog.userAgent.ASSUME_ANDROID', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPhone.\n */\ngoog.define('goog.userAgent.ASSUME_IPHONE', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPad.\n */\ngoog.define('goog.userAgent.ASSUME_IPAD', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPod.\n */\ngoog.define('goog.userAgent.ASSUME_IPOD', false);\n\n\n/**\n * @type {boolean}\n * @private\n */\ngoog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC ||\n    goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX ||\n    goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID ||\n    goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD ||\n    goog.userAgent.ASSUME_IPOD;\n\n\n/**\n * Whether the user agent is running on a Macintosh operating system.\n * @type {boolean}\n */\ngoog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_MAC :\n    goog.labs.userAgent.platform.isMacintosh();\n\n\n/**\n * Whether the user agent is running on a Windows operating system.\n * @type {boolean}\n */\ngoog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_WINDOWS :\n    goog.labs.userAgent.platform.isWindows();\n\n\n/**\n * Whether the user agent is Linux per the legacy behavior of\n * goog.userAgent.LINUX, which considered ChromeOS to also be\n * Linux.\n * @return {boolean}\n * @private\n */\ngoog.userAgent.isLegacyLinux_ = function() {\n  return goog.labs.userAgent.platform.isLinux() ||\n      goog.labs.userAgent.platform.isChromeOS();\n};\n\n\n/**\n * Whether the user agent is running on a Linux operating system.\n *\n * Note that goog.userAgent.LINUX considers ChromeOS to be Linux,\n * while goog.labs.userAgent.platform considers ChromeOS and\n * Linux to be different OSes.\n *\n * @type {boolean}\n */\ngoog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_LINUX :\n    goog.userAgent.isLegacyLinux_();\n\n\n/**\n * @return {boolean} Whether the user agent is an X11 windowing system.\n * @private\n */\ngoog.userAgent.isX11_ = function() {\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return !!navigator &&\n      goog.string.contains(navigator['appVersion'] || '', 'X11');\n};\n\n\n/**\n * Whether the user agent is running on a X11 windowing system.\n * @type {boolean}\n */\ngoog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_X11 :\n    goog.userAgent.isX11_();\n\n\n/**\n * Whether the user agent is running on Android.\n * @type {boolean}\n */\ngoog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_ANDROID :\n    goog.labs.userAgent.platform.isAndroid();\n\n\n/**\n * Whether the user agent is running on an iPhone.\n * @type {boolean}\n */\ngoog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPHONE :\n    goog.labs.userAgent.platform.isIphone();\n\n\n/**\n * Whether the user agent is running on an iPad.\n * @type {boolean}\n */\ngoog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPAD :\n    goog.labs.userAgent.platform.isIpad();\n\n\n/**\n * Whether the user agent is running on an iPod.\n * @type {boolean}\n */\ngoog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPOD :\n    goog.labs.userAgent.platform.isIpod();\n\n\n/**\n * Whether the user agent is running on iOS.\n * @type {boolean}\n */\ngoog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ?\n    (goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD ||\n     goog.userAgent.ASSUME_IPOD) :\n    goog.labs.userAgent.platform.isIos();\n\n/**\n * @return {string} The string that describes the version number of the user\n *     agent.\n * @private\n */\ngoog.userAgent.determineVersion_ = function() {\n  // All browsers have different ways to detect the version and they all have\n  // different naming schemes.\n  // version is a string rather than a number because it may contain 'b', 'a',\n  // and so on.\n  var version = '';\n  var arr = goog.userAgent.getVersionRegexResult_();\n  if (arr) {\n    version = arr ? arr[1] : '';\n  }\n\n  if (goog.userAgent.IE) {\n    // IE9 can be in document mode 9 but be reporting an inconsistent user agent\n    // version.  If it is identifying as a version lower than 9 we take the\n    // documentMode as the version instead.  IE8 has similar behavior.\n    // It is recommended to set the X-UA-Compatible header to ensure that IE9\n    // uses documentMode 9.\n    var docMode = goog.userAgent.getDocumentMode_();\n    if (docMode != null && docMode > parseFloat(version)) {\n      return String(docMode);\n    }\n  }\n\n  return version;\n};\n\n\n/**\n * @return {?Array|undefined} The version regex matches from parsing the user\n *     agent string. These regex statements must be executed inline so they can\n *     be compiled out by the closure compiler with the rest of the useragent\n *     detection logic when ASSUME_* is specified.\n * @private\n */\ngoog.userAgent.getVersionRegexResult_ = function() {\n  var userAgent = goog.userAgent.getUserAgentString();\n  if (goog.userAgent.GECKO) {\n    return /rv\\:([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.EDGE) {\n    return /Edge\\/([\\d\\.]+)/.exec(userAgent);\n  }\n  if (goog.userAgent.IE) {\n    return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.WEBKIT) {\n    // WebKit/125.4\n    return /WebKit\\/(\\S+)/.exec(userAgent);\n  }\n  if (goog.userAgent.OPERA) {\n    // If none of the above browsers were detected but the browser is Opera, the\n    // only string that is of interest is 'Version/<number>'.\n    return /(?:Version)[ \\/]?(\\S+)/.exec(userAgent);\n  }\n  return undefined;\n};\n\n\n/**\n * @return {number|undefined} Returns the document mode (for testing).\n * @private\n */\ngoog.userAgent.getDocumentMode_ = function() {\n  // NOTE(user): goog.userAgent may be used in context where there is no DOM.\n  var doc = goog.global['document'];\n  return doc ? doc['documentMode'] : undefined;\n};\n\n\n/**\n * The version of the user agent. This is a string because it might contain\n * 'b' (as in beta) as well as multiple dots.\n * @type {string}\n */\ngoog.userAgent.VERSION = goog.userAgent.determineVersion_();\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string} v1 Version of first item.\n * @param {string} v2 Version of second item.\n *\n * @return {number}  1 if first argument is higher\n *                   0 if arguments are equal\n *                  -1 if second argument is higher.\n * @deprecated Use goog.string.compareVersions.\n */\ngoog.userAgent.compare = function(v1, v2) {\n  return goog.string.compareVersions(v1, v2);\n};\n\n\n/**\n * Cache for {@link goog.userAgent.isVersionOrHigher}.\n * Calls to compareVersions are surprisingly expensive and, as a browser's\n * version number is unlikely to change during a session, we cache the results.\n * @const\n * @private\n */\ngoog.userAgent.isVersionOrHigherCache_ = {};\n\n\n/**\n * Whether the user agent version is higher or the same as the given version.\n * NOTE: When checking the version numbers for Firefox and Safari, be sure to\n * use the engine's version, not the browser's version number.  For example,\n * Firefox 3.0 corresponds to Gecko 1.9 and Safari 3.0 to Webkit 522.11.\n * Opera and Internet Explorer versions match the product release number.<br>\n * @see <a href=\"http://en.wikipedia.org/wiki/Safari_version_history\">\n *     Webkit</a>\n * @see <a href=\"http://en.wikipedia.org/wiki/Gecko_engine\">Gecko</a>\n *\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the user agent version is higher or the same as\n *     the given version.\n */\ngoog.userAgent.isVersionOrHigher = function(version) {\n  return goog.userAgent.ASSUME_ANY_VERSION ||\n      goog.reflect.cache(\n          goog.userAgent.isVersionOrHigherCache_, version, function() {\n            return goog.string.compareVersions(\n                       goog.userAgent.VERSION, version) >= 0;\n          });\n};\n\n\n/**\n * Deprecated alias to `goog.userAgent.isVersionOrHigher`.\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the user agent version is higher or the same as\n *     the given version.\n * @deprecated Use goog.userAgent.isVersionOrHigher().\n */\ngoog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;\n\n\n/**\n * Whether the IE effective document mode is higher or the same as the given\n * document mode version.\n * NOTE: Only for IE, return false for another browser.\n *\n * @param {number} documentMode The document mode version to check.\n * @return {boolean} Whether the IE effective document mode is higher or the\n *     same as the given version.\n */\ngoog.userAgent.isDocumentModeOrHigher = function(documentMode) {\n  return Number(goog.userAgent.DOCUMENT_MODE) >= documentMode;\n};\n\n\n/**\n * Deprecated alias to `goog.userAgent.isDocumentModeOrHigher`.\n * @param {number} version The version to check.\n * @return {boolean} Whether the IE effective document mode is higher or the\n *      same as the given version.\n * @deprecated Use goog.userAgent.isDocumentModeOrHigher().\n */\ngoog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;\n\n\n/**\n * For IE version < 7, documentMode is undefined, so attempt to use the\n * CSS1Compat property to see if we are in standards mode. If we are in\n * standards mode, treat the browser version as the document mode. Otherwise,\n * IE is emulating version 5.\n * @type {number|undefined}\n * @const\n */\ngoog.userAgent.DOCUMENT_MODE = (function() {\n  var doc = goog.global['document'];\n  var mode = goog.userAgent.getDocumentMode_();\n  if (!doc || !goog.userAgent.IE) {\n    return undefined;\n  }\n  return mode || (doc['compatMode'] == 'CSS1Compat' ?\n                      parseInt(goog.userAgent.VERSION, 10) :\n                      5);\n})();\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Logging and debugging utilities.\n *\n * @see ../demos/debug.html\n */\n\ngoog.provide('goog.debug');\n\ngoog.require('goog.array');\ngoog.require('goog.debug.errorcontext');\ngoog.require('goog.userAgent');\n\n\n/** @define {boolean} Whether logging should be enabled. */\ngoog.define('goog.debug.LOGGING_ENABLED', goog.DEBUG);\n\n\n/** @define {boolean} Whether to force \"sloppy\" stack building. */\ngoog.define('goog.debug.FORCE_SLOPPY_STACKS', false);\n\n\n/**\n * Catches onerror events fired by windows and similar objects.\n * @param {function(Object)} logFunc The function to call with the error\n *    information.\n * @param {boolean=} opt_cancel Whether to stop the error from reaching the\n *    browser.\n * @param {Object=} opt_target Object that fires onerror events.\n * @suppress {strictMissingProperties} onerror is not defined as a property\n *    on Object.\n */\ngoog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {\n  var target = opt_target || goog.global;\n  var oldErrorHandler = target.onerror;\n  var retVal = !!opt_cancel;\n\n  // Chrome interprets onerror return value backwards (http://crbug.com/92062)\n  // until it was fixed in webkit revision r94061 (Webkit 535.3). This\n  // workaround still needs to be skipped in Safari after the webkit change\n  // gets pushed out in Safari.\n  // See https://bugs.webkit.org/show_bug.cgi?id=67119\n  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher('535.3')) {\n    retVal = !retVal;\n  }\n\n  /**\n   * New onerror handler for this target. This onerror handler follows the spec\n   * according to\n   * http://www.whatwg.org/specs/web-apps/current-work/#runtime-script-errors\n   * The spec was changed in August 2013 to support receiving column information\n   * and an error object for all scripts on the same origin or cross origin\n   * scripts with the proper headers. See\n   * https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror\n   *\n   * @param {string} message The error message. For cross-origin errors, this\n   *     will be scrubbed to just \"Script error.\". For new browsers that have\n   *     updated to follow the latest spec, errors that come from origins that\n   *     have proper cross origin headers will not be scrubbed.\n   * @param {string} url The URL of the script that caused the error. The URL\n   *     will be scrubbed to \"\" for cross origin scripts unless the script has\n   *     proper cross origin headers and the browser has updated to the latest\n   *     spec.\n   * @param {number} line The line number in the script that the error\n   *     occurred on.\n   * @param {number=} opt_col The optional column number that the error\n   *     occurred on. Only browsers that have updated to the latest spec will\n   *     include this.\n   * @param {Error=} opt_error The optional actual error object for this\n   *     error that should include the stack. Only browsers that have updated\n   *     to the latest spec will inlude this parameter.\n   * @return {boolean} Whether to prevent the error from reaching the browser.\n   */\n  target.onerror = function(message, url, line, opt_col, opt_error) {\n    if (oldErrorHandler) {\n      oldErrorHandler(message, url, line, opt_col, opt_error);\n    }\n    logFunc({\n      message: message,\n      fileName: url,\n      line: line,\n      lineNumber: line,\n      col: opt_col,\n      error: opt_error\n    });\n    return retVal;\n  };\n};\n\n\n/**\n * Creates a string representing an object and all its properties.\n * @param {Object|null|undefined} obj Object to expose.\n * @param {boolean=} opt_showFn Show the functions as well as the properties,\n *     default is false.\n * @return {string} The string representation of `obj`.\n */\ngoog.debug.expose = function(obj, opt_showFn) {\n  if (typeof obj == 'undefined') {\n    return 'undefined';\n  }\n  if (obj == null) {\n    return 'NULL';\n  }\n  var str = [];\n\n  for (var x in obj) {\n    if (!opt_showFn && goog.isFunction(obj[x])) {\n      continue;\n    }\n    var s = x + ' = ';\n\n    try {\n      s += obj[x];\n    } catch (e) {\n      s += '*** ' + e + ' ***';\n    }\n    str.push(s);\n  }\n  return str.join('\\n');\n};\n\n\n/**\n * Creates a string representing a given primitive or object, and for an\n * object, all its properties and nested objects. NOTE: The output will include\n * Uids on all objects that were exposed. Any added Uids will be removed before\n * returning.\n * @param {*} obj Object to expose.\n * @param {boolean=} opt_showFn Also show properties that are functions (by\n *     default, functions are omitted).\n * @return {string} A string representation of `obj`.\n */\ngoog.debug.deepExpose = function(obj, opt_showFn) {\n  var str = [];\n\n  // Track any objects where deepExpose added a Uid, so they can be cleaned up\n  // before return. We do this globally, rather than only on ancestors so that\n  // if the same object appears in the output, you can see it.\n  var uidsToCleanup = [];\n  var ancestorUids = {};\n\n  var helper = function(obj, space) {\n    var nestspace = space + '  ';\n\n    var indentMultiline = function(str) {\n      return str.replace(/\\n/g, '\\n' + space);\n    };\n\n\n    try {\n      if (!goog.isDef(obj)) {\n        str.push('undefined');\n      } else if (goog.isNull(obj)) {\n        str.push('NULL');\n      } else if (goog.isString(obj)) {\n        str.push('\"' + indentMultiline(obj) + '\"');\n      } else if (goog.isFunction(obj)) {\n        str.push(indentMultiline(String(obj)));\n      } else if (goog.isObject(obj)) {\n        // Add a Uid if needed. The struct calls implicitly adds them.\n        if (!goog.hasUid(obj)) {\n          uidsToCleanup.push(obj);\n        }\n        var uid = goog.getUid(obj);\n        if (ancestorUids[uid]) {\n          str.push('*** reference loop detected (id=' + uid + ') ***');\n        } else {\n          ancestorUids[uid] = true;\n          str.push('{');\n          for (var x in obj) {\n            if (!opt_showFn && goog.isFunction(obj[x])) {\n              continue;\n            }\n            str.push('\\n');\n            str.push(nestspace);\n            str.push(x + ' = ');\n            helper(obj[x], nestspace);\n          }\n          str.push('\\n' + space + '}');\n          delete ancestorUids[uid];\n        }\n      } else {\n        str.push(obj);\n      }\n    } catch (e) {\n      str.push('*** ' + e + ' ***');\n    }\n  };\n\n  helper(obj, '');\n\n  // Cleanup any Uids that were added by the deepExpose.\n  for (var i = 0; i < uidsToCleanup.length; i++) {\n    goog.removeUid(uidsToCleanup[i]);\n  }\n\n  return str.join('');\n};\n\n\n/**\n * Recursively outputs a nested array as a string.\n * @param {Array<?>} arr The array.\n * @return {string} String representing nested array.\n */\ngoog.debug.exposeArray = function(arr) {\n  var str = [];\n  for (var i = 0; i < arr.length; i++) {\n    if (goog.isArray(arr[i])) {\n      str.push(goog.debug.exposeArray(arr[i]));\n    } else {\n      str.push(arr[i]);\n    }\n  }\n  return '[ ' + str.join(', ') + ' ]';\n};\n\n\n/**\n * Normalizes the error/exception object between browsers.\n * @param {*} err Raw error object.\n * @return {{\n *    message: (?|undefined),\n *    name: (?|undefined),\n *    lineNumber: (?|undefined),\n *    fileName: (?|undefined),\n *    stack: (?|undefined)\n * }} Normalized error object.\n * @suppress {strictMissingProperties} properties not defined on err\n */\ngoog.debug.normalizeErrorObject = function(err) {\n  var href = goog.getObjectByName('window.location.href');\n  if (goog.isString(err)) {\n    return {\n      'message': err,\n      'name': 'Unknown error',\n      'lineNumber': 'Not available',\n      'fileName': href,\n      'stack': 'Not available'\n    };\n  }\n\n  var lineNumber, fileName;\n  var threwError = false;\n\n  try {\n    lineNumber = err.lineNumber || err.line || 'Not available';\n  } catch (e) {\n    // Firefox 2 sometimes throws an error when accessing 'lineNumber':\n    // Message: Permission denied to get property UnnamedClass.lineNumber\n    lineNumber = 'Not available';\n    threwError = true;\n  }\n\n  try {\n    fileName = err.fileName || err.filename || err.sourceURL ||\n        // $googDebugFname may be set before a call to eval to set the filename\n        // that the eval is supposed to present.\n        goog.global['$googDebugFname'] || href;\n  } catch (e) {\n    // Firefox 2 may also throw an error when accessing 'filename'.\n    fileName = 'Not available';\n    threwError = true;\n  }\n\n  // The IE Error object contains only the name and the message.\n  // The Safari Error object uses the line and sourceURL fields.\n  if (threwError || !err.lineNumber || !err.fileName || !err.stack ||\n      !err.message || !err.name) {\n    return {\n      'message': err.message || 'Not available',\n      'name': err.name || 'UnknownError',\n      'lineNumber': lineNumber,\n      'fileName': fileName,\n      'stack': err.stack || 'Not available'\n    };\n  }\n\n  // Standards error object\n  // Typed !Object. Should be a subtype of the return type, but it's not.\n  return /** @type {?} */ (err);\n};\n\n\n/**\n * Converts an object to an Error using the object's toString if it's not\n * already an Error, adds a stacktrace if there isn't one, and optionally adds\n * an extra message.\n * @param {*} err The original thrown error, object, or string.\n * @param {string=} opt_message  optional additional message to add to the\n *     error.\n * @return {!Error} If err is an Error, it is enhanced and returned. Otherwise,\n *     it is converted to an Error which is enhanced and returned.\n */\ngoog.debug.enhanceError = function(err, opt_message) {\n  var error;\n  if (!(err instanceof Error)) {\n    error = Error(err);\n    if (Error.captureStackTrace) {\n      // Trim this function off the call stack, if we can.\n      Error.captureStackTrace(error, goog.debug.enhanceError);\n    }\n  } else {\n    error = err;\n  }\n\n  if (!error.stack) {\n    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);\n  }\n  if (opt_message) {\n    // find the first unoccupied 'messageX' property\n    var x = 0;\n    while (error['message' + x]) {\n      ++x;\n    }\n    error['message' + x] = String(opt_message);\n  }\n  return error;\n};\n\n\n/**\n * Converts an object to an Error using the object's toString if it's not\n * already an Error, adds a stacktrace if there isn't one, and optionally adds\n * context to the Error, which is reported by the closure error reporter.\n * @param {*} err The original thrown error, object, or string.\n * @param {!Object<string, string>=} opt_context Key-value context to add to the\n *     Error.\n * @return {!Error} If err is an Error, it is enhanced and returned. Otherwise,\n *     it is converted to an Error which is enhanced and returned.\n */\ngoog.debug.enhanceErrorWithContext = function(err, opt_context) {\n  var error = goog.debug.enhanceError(err);\n  if (opt_context) {\n    for (var key in opt_context) {\n      goog.debug.errorcontext.addErrorContext(error, key, opt_context[key]);\n    }\n  }\n  return error;\n};\n\n\n/**\n * Gets the current stack trace. Simple and iterative - doesn't worry about\n * catching circular references or getting the args.\n * @param {number=} opt_depth Optional maximum depth to trace back to.\n * @return {string} A string with the function names of all functions in the\n *     stack, separated by \\n.\n * @suppress {es5Strict}\n */\ngoog.debug.getStacktraceSimple = function(opt_depth) {\n  if (!goog.debug.FORCE_SLOPPY_STACKS) {\n    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);\n    if (stack) {\n      return stack;\n    }\n    // NOTE: browsers that have strict mode support also have native \"stack\"\n    // properties.  Fall-through for legacy browser support.\n  }\n\n  var sb = [];\n  var fn = arguments.callee.caller;\n  var depth = 0;\n\n  while (fn && (!opt_depth || depth < opt_depth)) {\n    sb.push(goog.debug.getFunctionName(fn));\n    sb.push('()\\n');\n\n    try {\n      fn = fn.caller;\n    } catch (e) {\n      sb.push('[exception trying to get caller]\\n');\n      break;\n    }\n    depth++;\n    if (depth >= goog.debug.MAX_STACK_DEPTH) {\n      sb.push('[...long stack...]');\n      break;\n    }\n  }\n  if (opt_depth && depth >= opt_depth) {\n    sb.push('[...reached max depth limit...]');\n  } else {\n    sb.push('[end]');\n  }\n\n  return sb.join('');\n};\n\n\n/**\n * Max length of stack to try and output\n * @type {number}\n */\ngoog.debug.MAX_STACK_DEPTH = 50;\n\n\n/**\n * @param {Function} fn The function to start getting the trace from.\n * @return {?string}\n * @private\n */\ngoog.debug.getNativeStackTrace_ = function(fn) {\n  var tempErr = new Error();\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(tempErr, fn);\n    return String(tempErr.stack);\n  } else {\n    // IE10, only adds stack traces when an exception is thrown.\n    try {\n      throw tempErr;\n    } catch (e) {\n      tempErr = e;\n    }\n    var stack = tempErr.stack;\n    if (stack) {\n      return String(stack);\n    }\n  }\n  return null;\n};\n\n\n/**\n * Gets the current stack trace, either starting from the caller or starting\n * from a specified function that's currently on the call stack.\n * @param {?Function=} fn If provided, when collecting the stack trace all\n *     frames above the topmost call to this function, including that call,\n *     will be left out of the stack trace.\n * @return {string} Stack trace.\n * @suppress {es5Strict}\n */\ngoog.debug.getStacktrace = function(fn) {\n  var stack;\n  if (!goog.debug.FORCE_SLOPPY_STACKS) {\n    // Try to get the stack trace from the environment if it is available.\n    var contextFn = fn || goog.debug.getStacktrace;\n    stack = goog.debug.getNativeStackTrace_(contextFn);\n  }\n  if (!stack) {\n    // NOTE: browsers that have strict mode support also have native \"stack\"\n    // properties. This function will throw in strict mode.\n    stack = goog.debug.getStacktraceHelper_(fn || arguments.callee.caller, []);\n  }\n  return stack;\n};\n\n\n/**\n * Private helper for getStacktrace().\n * @param {?Function} fn If provided, when collecting the stack trace all\n *     frames above the topmost call to this function, including that call,\n *     will be left out of the stack trace.\n * @param {Array<!Function>} visited List of functions visited so far.\n * @return {string} Stack trace starting from function fn.\n * @suppress {es5Strict}\n * @private\n */\ngoog.debug.getStacktraceHelper_ = function(fn, visited) {\n  var sb = [];\n\n  // Circular reference, certain functions like bind seem to cause a recursive\n  // loop so we need to catch circular references\n  if (goog.array.contains(visited, fn)) {\n    sb.push('[...circular reference...]');\n\n    // Traverse the call stack until function not found or max depth is reached\n  } else if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {\n    sb.push(goog.debug.getFunctionName(fn) + '(');\n    var args = fn.arguments;\n    // Args may be null for some special functions such as host objects or eval.\n    for (var i = 0; args && i < args.length; i++) {\n      if (i > 0) {\n        sb.push(', ');\n      }\n      var argDesc;\n      var arg = args[i];\n      switch (typeof arg) {\n        case 'object':\n          argDesc = arg ? 'object' : 'null';\n          break;\n\n        case 'string':\n          argDesc = arg;\n          break;\n\n        case 'number':\n          argDesc = String(arg);\n          break;\n\n        case 'boolean':\n          argDesc = arg ? 'true' : 'false';\n          break;\n\n        case 'function':\n          argDesc = goog.debug.getFunctionName(arg);\n          argDesc = argDesc ? argDesc : '[fn]';\n          break;\n\n        case 'undefined':\n        default:\n          argDesc = typeof arg;\n          break;\n      }\n\n      if (argDesc.length > 40) {\n        argDesc = argDesc.substr(0, 40) + '...';\n      }\n      sb.push(argDesc);\n    }\n    visited.push(fn);\n    sb.push(')\\n');\n\n    try {\n      sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));\n    } catch (e) {\n      sb.push('[exception trying to get caller]\\n');\n    }\n\n  } else if (fn) {\n    sb.push('[...long stack...]');\n  } else {\n    sb.push('[end]');\n  }\n  return sb.join('');\n};\n\n\n/**\n * Set a custom function name resolver.\n * @param {function(Function): string} resolver Resolves functions to their\n *     names.\n */\ngoog.debug.setFunctionResolver = function(resolver) {\n  goog.debug.fnNameResolver_ = resolver;\n};\n\n\n/**\n * Gets a function name\n * @param {Function} fn Function to get name of.\n * @return {string} Function's name.\n */\ngoog.debug.getFunctionName = function(fn) {\n  if (goog.debug.fnNameCache_[fn]) {\n    return goog.debug.fnNameCache_[fn];\n  }\n  if (goog.debug.fnNameResolver_) {\n    var name = goog.debug.fnNameResolver_(fn);\n    if (name) {\n      goog.debug.fnNameCache_[fn] = name;\n      return name;\n    }\n  }\n\n  // Heuristically determine function name based on code.\n  var functionSource = String(fn);\n  if (!goog.debug.fnNameCache_[functionSource]) {\n    var matches = /function ([^\\(]+)/.exec(functionSource);\n    if (matches) {\n      var method = matches[1];\n      goog.debug.fnNameCache_[functionSource] = method;\n    } else {\n      goog.debug.fnNameCache_[functionSource] = '[Anonymous]';\n    }\n  }\n\n  return goog.debug.fnNameCache_[functionSource];\n};\n\n\n/**\n * Makes whitespace visible by replacing it with printable characters.\n * This is useful in finding diffrences between the expected and the actual\n * output strings of a testcase.\n * @param {string} string whose whitespace needs to be made visible.\n * @return {string} string whose whitespace is made visible.\n */\ngoog.debug.makeWhitespaceVisible = function(string) {\n  return string.replace(/ /g, '[_]')\n      .replace(/\\f/g, '[f]')\n      .replace(/\\n/g, '[n]\\n')\n      .replace(/\\r/g, '[r]')\n      .replace(/\\t/g, '[t]');\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n *\n * <p>Forked rather than moved from {@link goog.asserts.getType_}\n * to avoid adding a dependency to goog.asserts.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n */\ngoog.debug.runtimeType = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return /** @type {string} */ (value.constructor.displayName) ||\n        value.constructor.name || Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\n/**\n * Hash map for storing function names that have already been looked up.\n * @type {Object}\n * @private\n */\ngoog.debug.fnNameCache_ = {};\n\n\n/**\n * Resolves functions to their names.  Resolved function names will be cached.\n * @type {function(Function):string}\n * @private\n */\ngoog.debug.fnNameResolver_;\n\n\n/**\n * Private internal function to support goog.debug.freeze.\n * @param {T} arg\n * @return {T}\n * @template T\n * @private\n */\ngoog.debug.freezeInternal_ = goog.DEBUG && Object.freeze || function(arg) {\n  return arg;\n};\n\n\n/**\n * Freezes the given object, but only in debug mode (and in browsers that\n * support it).  Note that this is a shallow freeze, so for deeply nested\n * objects it must be called at every level to ensure deep immutability.\n * @param {T} arg\n * @return {T}\n * @template T\n */\ngoog.debug.freeze = function(arg) {\n  // NOTE: this compiles to nothing, but hides the possible side effect of\n  // freezeInternal_ from the compiler so that the entire call can be\n  // removed if the result is not used.\n  return {\n    valueOf: function() {\n      return goog.debug.freezeInternal_(arg);\n    }\n  }.valueOf();\n};\n","// Copyright 2010 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Browser capability checks for the events package.\n *\n */\n\n\ngoog.provide('goog.events.BrowserFeature');\n\ngoog.require('goog.userAgent');\ngoog.scope(function() {\n\n\n\n/**\n * Enum of browser capabilities.\n * @enum {boolean}\n */\ngoog.events.BrowserFeature = {\n  /**\n   * Whether the button attribute of the event is W3C compliant.  False in\n   * Internet Explorer prior to version 9; document-version dependent.\n   */\n  HAS_W3C_BUTTON:\n      !goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9),\n\n  /**\n   * Whether the browser supports full W3C event model.\n   */\n  HAS_W3C_EVENT_SUPPORT:\n      !goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9),\n\n  /**\n   * To prevent default in IE7-8 for certain keydown events we need set the\n   * keyCode to -1.\n   */\n  SET_KEY_CODE_TO_PREVENT_DEFAULT:\n      goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('9'),\n\n  /**\n   * Whether the `navigator.onLine` property is supported.\n   */\n  HAS_NAVIGATOR_ONLINE_PROPERTY:\n      !goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher('528'),\n\n  /**\n   * Whether HTML5 network online/offline events are supported.\n   */\n  HAS_HTML5_NETWORK_EVENT_SUPPORT:\n      goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher('1.9b') ||\n      goog.userAgent.IE && goog.userAgent.isVersionOrHigher('8') ||\n      goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher('9.5') ||\n      goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher('528'),\n\n  /**\n   * Whether HTML5 network events fire on document.body, or otherwise the\n   * window.\n   */\n  HTML5_NETWORK_EVENTS_FIRE_ON_BODY:\n      goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher('8') ||\n      goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('9'),\n\n  /**\n   * Whether touch is enabled in the browser.\n   */\n  TOUCH_ENABLED:\n      ('ontouchstart' in goog.global ||\n       !!(goog.global['document'] && document.documentElement &&\n          'ontouchstart' in document.documentElement) ||\n       // IE10 uses non-standard touch events, so it has a different check.\n       !!(goog.global['navigator'] &&\n          (goog.global['navigator']['maxTouchPoints'] ||\n           goog.global['navigator']['msMaxTouchPoints']))),\n\n  /**\n   * Whether addEventListener supports W3C standard pointer events.\n   * http://www.w3.org/TR/pointerevents/\n   */\n  POINTER_EVENTS: ('PointerEvent' in goog.global),\n\n  /**\n   * Whether addEventListener supports MSPointer events (only used in IE10).\n   * http://msdn.microsoft.com/en-us/library/ie/hh772103(v=vs.85).aspx\n   * http://msdn.microsoft.com/library/hh673557(v=vs.85).aspx\n   */\n  MSPOINTER_EVENTS:\n      ('MSPointerEvent' in goog.global &&\n       !!(goog.global['navigator'] &&\n          goog.global['navigator']['msPointerEnabled'])),\n\n  /**\n   * Whether addEventListener supports {passive: true}.\n   * https://developers.google.com/web/updates/2016/06/passive-event-listeners\n   */\n  PASSIVE_EVENTS: purify(function() {\n    // If we're in a web worker or other custom environment, we can't tell.\n    if (!goog.global.addEventListener || !Object.defineProperty) {  // IE 8\n      return false;\n    }\n\n    var passive = false;\n    var options = Object.defineProperty({}, 'passive', {\n      get: function() {\n        passive = true;\n      }\n    });\n    goog.global.addEventListener('test', goog.nullFunction, options);\n    goog.global.removeEventListener('test', goog.nullFunction, options);\n\n    return passive;\n  })\n};\n\n\n/**\n * Tricks Closure Compiler into believing that a function is pure.  The compiler\n * assumes that any `valueOf` function is pure, without analyzing its contents.\n *\n * @param {function(): T} fn\n * @return {T}\n * @template T\n */\nfunction purify(fn) {\n  return ({valueOf: fn}).valueOf();\n}\n});  // goog.scope\n","// Copyright 2005 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A base class for event objects.\n *\n */\n\n\ngoog.provide('goog.events.Event');\ngoog.provide('goog.events.EventLike');\n\n/**\n * goog.events.Event no longer depends on goog.Disposable. Keep requiring\n * goog.Disposable here to not break projects which assume this dependency.\n * @suppress {extraRequire}\n */\ngoog.require('goog.Disposable');\ngoog.require('goog.events.EventId');\n\n\n/**\n * A typedef for event like objects that are dispatchable via the\n * goog.events.dispatchEvent function. strings are treated as the type for a\n * goog.events.Event. Objects are treated as an extension of a new\n * goog.events.Event with the type property of the object being used as the type\n * of the Event.\n * @typedef {string|Object|goog.events.Event|goog.events.EventId}\n */\ngoog.events.EventLike;\n\n\n\n/**\n * A base class for event objects, so that they can support preventDefault and\n * stopPropagation.\n *\n * @suppress {underscore} Several properties on this class are technically\n *     public, but referencing these properties outside this package is strongly\n *     discouraged.\n *\n * @param {string|!goog.events.EventId} type Event Type.\n * @param {Object=} opt_target Reference to the object that is the target of\n *     this event. It has to implement the `EventTarget` interface\n *     declared at {@link http://developer.mozilla.org/en/DOM/EventTarget}.\n * @constructor\n */\ngoog.events.Event = function(type, opt_target) {\n  /**\n   * Event type.\n   * @type {string}\n   */\n  this.type = type instanceof goog.events.EventId ? String(type) : type;\n\n  /**\n   * TODO(tbreisacher): The type should probably be\n   * EventTarget|goog.events.EventTarget.\n   *\n   * Target of the event.\n   * @type {Object|undefined}\n   */\n  this.target = opt_target;\n\n  /**\n   * Object that had the listener attached.\n   * @type {Object|undefined}\n   */\n  this.currentTarget = this.target;\n\n  /**\n   * Whether to cancel the event in internal capture/bubble processing for IE.\n   * @type {boolean}\n   * @public\n   */\n  this.propagationStopped_ = false;\n\n  /**\n   * Whether the default action has been prevented.\n   * This is a property to match the W3C specification at\n   * {@link http://www.w3.org/TR/DOM-Level-3-Events/\n   * #events-event-type-defaultPrevented}.\n   * Must be treated as read-only outside the class.\n   * @type {boolean}\n   */\n  this.defaultPrevented = false;\n\n  /**\n   * Return value for in internal capture/bubble processing for IE.\n   * @type {boolean}\n   * @public\n   */\n  this.returnValue_ = true;\n};\n\n\n/**\n * Stops event propagation.\n */\ngoog.events.Event.prototype.stopPropagation = function() {\n  this.propagationStopped_ = true;\n};\n\n\n/**\n * Prevents the default action, for example a link redirecting to a url.\n */\ngoog.events.Event.prototype.preventDefault = function() {\n  this.defaultPrevented = true;\n  this.returnValue_ = false;\n};\n\n\n/**\n * Stops the propagation of the event. It is equivalent to\n * `e.stopPropagation()`, but can be used as the callback argument of\n * {@link goog.events.listen} without declaring another function.\n * @param {!goog.events.Event} e An event.\n */\ngoog.events.Event.stopPropagation = function(e) {\n  e.stopPropagation();\n};\n\n\n/**\n * Prevents the default action. It is equivalent to\n * `e.preventDefault()`, but can be used as the callback argument of\n * {@link goog.events.listen} without declaring another function.\n * @param {!goog.events.Event} e An event.\n */\ngoog.events.Event.preventDefault = function(e) {\n  e.preventDefault();\n};\n","// Copyright 2005 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A patched, standardized event object for browser events.\n *\n * <pre>\n * The patched event object contains the following members:\n * - type           {string}    Event type, e.g. 'click'\n * - target         {Object}    The element that actually triggered the event\n * - currentTarget  {Object}    The element the listener is attached to\n * - relatedTarget  {Object}    For mouseover and mouseout, the previous object\n * - offsetX        {number}    X-coordinate relative to target\n * - offsetY        {number}    Y-coordinate relative to target\n * - clientX        {number}    X-coordinate relative to viewport\n * - clientY        {number}    Y-coordinate relative to viewport\n * - screenX        {number}    X-coordinate relative to the edge of the screen\n * - screenY        {number}    Y-coordinate relative to the edge of the screen\n * - button         {number}    Mouse button. Use isButton() to test.\n * - keyCode        {number}    Key-code\n * - ctrlKey        {boolean}   Was ctrl key depressed\n * - altKey         {boolean}   Was alt key depressed\n * - shiftKey       {boolean}   Was shift key depressed\n * - metaKey        {boolean}   Was meta key depressed\n * - pointerId      {number}    Pointer ID\n * - pointerType    {string}    Pointer type, e.g. 'mouse', 'pen', or 'touch'\n * - defaultPrevented {boolean} Whether the default action has been prevented\n * - state          {Object}    History state object\n *\n * NOTE: The keyCode member contains the raw browser keyCode. For normalized\n * key and character code use {@link goog.events.KeyHandler}.\n * </pre>\n *\n * @author arv@google.com (Erik Arvidsson)\n */\n\ngoog.provide('goog.events.BrowserEvent');\ngoog.provide('goog.events.BrowserEvent.MouseButton');\ngoog.provide('goog.events.BrowserEvent.PointerType');\n\ngoog.require('goog.debug');\ngoog.require('goog.events.BrowserFeature');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.EventType');\ngoog.require('goog.reflect');\ngoog.require('goog.userAgent');\n\n\n\n/**\n * Accepts a browser event object and creates a patched, cross browser event\n * object.\n * The content of this object will not be initialized if no event object is\n * provided. If this is the case, init() needs to be invoked separately.\n * @param {Event=} opt_e Browser event object.\n * @param {EventTarget=} opt_currentTarget Current target for event.\n * @constructor\n * @extends {goog.events.Event}\n */\ngoog.events.BrowserEvent = function(opt_e, opt_currentTarget) {\n  goog.events.BrowserEvent.base(this, 'constructor', opt_e ? opt_e.type : '');\n\n  /**\n   * Target that fired the event.\n   * @override\n   * @type {Node}\n   */\n  this.target = null;\n\n  /**\n   * Node that had the listener attached.\n   * @override\n   * @type {Node|undefined}\n   */\n  this.currentTarget = null;\n\n  /**\n   * For mouseover and mouseout events, the related object for the event.\n   * @type {Node}\n   */\n  this.relatedTarget = null;\n\n  /**\n   * X-coordinate relative to target.\n   * @type {number}\n   */\n  this.offsetX = 0;\n\n  /**\n   * Y-coordinate relative to target.\n   * @type {number}\n   */\n  this.offsetY = 0;\n\n  /**\n   * X-coordinate relative to the window.\n   * @type {number}\n   */\n  this.clientX = 0;\n\n  /**\n   * Y-coordinate relative to the window.\n   * @type {number}\n   */\n  this.clientY = 0;\n\n  /**\n   * X-coordinate relative to the monitor.\n   * @type {number}\n   */\n  this.screenX = 0;\n\n  /**\n   * Y-coordinate relative to the monitor.\n   * @type {number}\n   */\n  this.screenY = 0;\n\n  /**\n   * Which mouse button was pressed.\n   * @type {number}\n   */\n  this.button = 0;\n\n  /**\n   * Key of key press.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * Keycode of key press.\n   * @type {number}\n   */\n  this.keyCode = 0;\n\n  /**\n   * Keycode of key press.\n   * @type {number}\n   */\n  this.charCode = 0;\n\n  /**\n   * Whether control was pressed at time of event.\n   * @type {boolean}\n   */\n  this.ctrlKey = false;\n\n  /**\n   * Whether alt was pressed at time of event.\n   * @type {boolean}\n   */\n  this.altKey = false;\n\n  /**\n   * Whether shift was pressed at time of event.\n   * @type {boolean}\n   */\n  this.shiftKey = false;\n\n  /**\n   * Whether the meta key was pressed at time of event.\n   * @type {boolean}\n   */\n  this.metaKey = false;\n\n  /**\n   * History state object, only set for PopState events where it's a copy of the\n   * state object provided to pushState or replaceState.\n   * @type {Object}\n   */\n  this.state = null;\n\n  /**\n   * Whether the default platform modifier key was pressed at time of event.\n   * (This is control for all platforms except Mac, where it's Meta.)\n   * @type {boolean}\n   */\n  this.platformModifierKey = false;\n\n  /**\n   * @type {number}\n   */\n  this.pointerId = 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = '';\n\n  /**\n   * The browser event object.\n   * @private {Event}\n   */\n  this.event_ = null;\n\n  if (opt_e) {\n    this.init(opt_e, opt_currentTarget);\n  }\n};\ngoog.inherits(goog.events.BrowserEvent, goog.events.Event);\n\n\n/**\n * Normalized button constants for the mouse.\n * @enum {number}\n */\ngoog.events.BrowserEvent.MouseButton = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2\n};\n\n\n/**\n * Normalized pointer type constants for pointer events.\n * @enum {string}\n */\ngoog.events.BrowserEvent.PointerType = {\n  MOUSE: 'mouse',\n  PEN: 'pen',\n  TOUCH: 'touch'\n};\n\n\n/**\n * Static data for mapping mouse buttons.\n * @type {!Array<number>}\n * @deprecated Use `goog.events.BrowserEvent.IE_BUTTON_MAP` instead.\n */\ngoog.events.BrowserEvent.IEButtonMap = goog.debug.freeze([\n  1,  // LEFT\n  4,  // MIDDLE\n  2   // RIGHT\n]);\n\n\n/**\n * Static data for mapping mouse buttons.\n * @const {!Array<number>}\n */\ngoog.events.BrowserEvent.IE_BUTTON_MAP = goog.events.BrowserEvent.IEButtonMap;\n\n\n/**\n * Static data for mapping MSPointerEvent types to PointerEvent types.\n * @const {!Object<number, goog.events.BrowserEvent.PointerType>}\n */\ngoog.events.BrowserEvent.IE_POINTER_TYPE_MAP = goog.debug.freeze({\n  2: goog.events.BrowserEvent.PointerType.TOUCH,\n  3: goog.events.BrowserEvent.PointerType.PEN,\n  4: goog.events.BrowserEvent.PointerType.MOUSE\n});\n\n\n/**\n * Accepts a browser event object and creates a patched, cross browser event\n * object.\n * @param {Event} e Browser event object.\n * @param {EventTarget=} opt_currentTarget Current target for event.\n */\ngoog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {\n  var type = this.type = e.type;\n\n  /**\n   * On touch devices use the first \"changed touch\" as the relevant touch.\n   * @type {Touch}\n   */\n  var relevantTouch = e.changedTouches ? e.changedTouches[0] : null;\n\n  // TODO(nicksantos): Change this.target to type EventTarget.\n  this.target = /** @type {Node} */ (e.target) || e.srcElement;\n\n  // TODO(nicksantos): Change this.currentTarget to type EventTarget.\n  this.currentTarget = /** @type {Node} */ (opt_currentTarget);\n\n  var relatedTarget = /** @type {Node} */ (e.relatedTarget);\n  if (relatedTarget) {\n    // There's a bug in FireFox where sometimes, relatedTarget will be a\n    // chrome element, and accessing any property of it will get a permission\n    // denied exception. See:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=497780\n    if (goog.userAgent.GECKO) {\n      if (!goog.reflect.canAccessProperty(relatedTarget, 'nodeName')) {\n        relatedTarget = null;\n      }\n    }\n  } else if (type == goog.events.EventType.MOUSEOVER) {\n    relatedTarget = e.fromElement;\n  } else if (type == goog.events.EventType.MOUSEOUT) {\n    relatedTarget = e.toElement;\n  }\n\n  this.relatedTarget = relatedTarget;\n\n  if (!goog.isNull(relevantTouch)) {\n    this.clientX = relevantTouch.clientX !== undefined ? relevantTouch.clientX :\n                                                         relevantTouch.pageX;\n    this.clientY = relevantTouch.clientY !== undefined ? relevantTouch.clientY :\n                                                         relevantTouch.pageY;\n    this.screenX = relevantTouch.screenX || 0;\n    this.screenY = relevantTouch.screenY || 0;\n  } else {\n    // Webkit emits a lame warning whenever layerX/layerY is accessed.\n    // http://code.google.com/p/chromium/issues/detail?id=101733\n    this.offsetX = (goog.userAgent.WEBKIT || e.offsetX !== undefined) ?\n        e.offsetX :\n        e.layerX;\n    this.offsetY = (goog.userAgent.WEBKIT || e.offsetY !== undefined) ?\n        e.offsetY :\n        e.layerY;\n    this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;\n    this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;\n    this.screenX = e.screenX || 0;\n    this.screenY = e.screenY || 0;\n  }\n\n  this.button = e.button;\n\n  this.keyCode = e.keyCode || 0;\n  this.key = e.key || '';\n  this.charCode = e.charCode || (type == 'keypress' ? e.keyCode : 0);\n  this.ctrlKey = e.ctrlKey;\n  this.altKey = e.altKey;\n  this.shiftKey = e.shiftKey;\n  this.metaKey = e.metaKey;\n  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;\n  this.pointerId = e.pointerId || 0;\n  this.pointerType = goog.events.BrowserEvent.getPointerType_(e);\n  this.state = e.state;\n  this.event_ = e;\n  if (e.defaultPrevented) {\n    this.preventDefault();\n  }\n};\n\n\n/**\n * Tests to see which button was pressed during the event. This is really only\n * useful in IE and Gecko browsers. And in IE, it's only useful for\n * mousedown/mouseup events, because click only fires for the left mouse button.\n *\n * Safari 2 only reports the left button being clicked, and uses the value '1'\n * instead of 0. Opera only reports a mousedown event for the middle button, and\n * no mouse events for the right button. Opera has default behavior for left and\n * middle click that can only be overridden via a configuration setting.\n *\n * There's a nice table of this mess at http://www.unixpapa.com/js/mouse.html.\n *\n * @param {goog.events.BrowserEvent.MouseButton} button The button\n *     to test for.\n * @return {boolean} True if button was pressed.\n */\ngoog.events.BrowserEvent.prototype.isButton = function(button) {\n  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {\n    if (this.type == 'click') {\n      return button == goog.events.BrowserEvent.MouseButton.LEFT;\n    } else {\n      return !!(\n          this.event_.button & goog.events.BrowserEvent.IE_BUTTON_MAP[button]);\n    }\n  } else {\n    return this.event_.button == button;\n  }\n};\n\n\n/**\n * Whether this has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @return {boolean} The result.\n */\ngoog.events.BrowserEvent.prototype.isMouseActionButton = function() {\n  // Webkit does not ctrl+click to be a right-click, so we\n  // normalize it to behave like Gecko and Opera.\n  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) &&\n      !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);\n};\n\n\n/**\n * @override\n */\ngoog.events.BrowserEvent.prototype.stopPropagation = function() {\n  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);\n  if (this.event_.stopPropagation) {\n    this.event_.stopPropagation();\n  } else {\n    this.event_.cancelBubble = true;\n  }\n};\n\n\n/**\n * @override\n */\ngoog.events.BrowserEvent.prototype.preventDefault = function() {\n  goog.events.BrowserEvent.superClass_.preventDefault.call(this);\n  var be = this.event_;\n  if (!be.preventDefault) {\n    be.returnValue = false;\n    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {\n\n      try {\n        // Most keys can be prevented using returnValue. Some special keys\n        // require setting the keyCode to -1 as well:\n        //\n        // In IE7:\n        // F3, F5, F10, F11, Ctrl+P, Crtl+O, Ctrl+F (these are taken from IE6)\n        //\n        // In IE8:\n        // Ctrl+P, Crtl+O, Ctrl+F (F1-F12 cannot be stopped through the event)\n        //\n        // We therefore do this for all function keys as well as when Ctrl key\n        // is pressed.\n        var VK_F1 = 112;\n        var VK_F12 = 123;\n        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {\n          be.keyCode = -1;\n        }\n      } catch (ex) {\n        // IE throws an 'access denied' exception when trying to change\n        // keyCode in some situations (e.g. srcElement is input[type=file],\n        // or srcElement is an anchor tag rewritten by parent's innerHTML).\n        // Do nothing in this case.\n      }\n    }\n  } else {\n    be.preventDefault();\n  }\n};\n\n\n/**\n * @return {Event} The underlying browser event object.\n */\ngoog.events.BrowserEvent.prototype.getBrowserEvent = function() {\n  return this.event_;\n};\n\n\n/**\n * Extracts the pointer type from the given event.\n * @param {!Event} e\n * @return {string} The pointer type, e.g. 'mouse', 'pen', or 'touch'.\n * @private\n */\ngoog.events.BrowserEvent.getPointerType_ = function(e) {\n  if (goog.isString(e.pointerType)) {\n    return e.pointerType;\n  }\n  // IE10 uses integer codes for pointer type.\n  // https://msdn.microsoft.com/en-us/library/hh772359(v=vs.85).aspx\n  return goog.events.BrowserEvent.IE_POINTER_TYPE_MAP[e.pointerType] || '';\n};\n","// Copyright 2010 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Event Types.\n *\n * @author arv@google.com (Erik Arvidsson)\n */\n\n\ngoog.provide('goog.events.EventType');\ngoog.provide('goog.events.PointerFallbackEventType');\n\ngoog.require('goog.events.BrowserFeature');\ngoog.require('goog.userAgent');\n\n\n/**\n * Returns a prefixed event name for the current browser.\n * @param {string} eventName The name of the event.\n * @return {string} The prefixed event name.\n * @suppress {missingRequire|missingProvide}\n * @private\n */\ngoog.events.getVendorPrefixedName_ = function(eventName) {\n  return goog.userAgent.WEBKIT ?\n      'webkit' + eventName :\n      (goog.userAgent.OPERA ? 'o' + eventName.toLowerCase() :\n                              eventName.toLowerCase());\n};\n\n\n/**\n * Constants for event names.\n * @enum {string}\n */\ngoog.events.EventType = {\n  // Mouse events\n  CLICK: 'click',\n  RIGHTCLICK: 'rightclick',\n  DBLCLICK: 'dblclick',\n  MOUSEDOWN: 'mousedown',\n  MOUSEUP: 'mouseup',\n  MOUSEOVER: 'mouseover',\n  MOUSEOUT: 'mouseout',\n  MOUSEMOVE: 'mousemove',\n  MOUSEENTER: 'mouseenter',\n  MOUSELEAVE: 'mouseleave',\n\n  // Selection events.\n  // https://www.w3.org/TR/selection-api/\n  SELECTIONCHANGE: 'selectionchange',\n  SELECTSTART: 'selectstart',  // IE, Safari, Chrome\n\n  // Wheel events\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n  WHEEL: 'wheel',\n\n  // Key events\n  KEYPRESS: 'keypress',\n  KEYDOWN: 'keydown',\n  KEYUP: 'keyup',\n\n  // Focus\n  BLUR: 'blur',\n  FOCUS: 'focus',\n  DEACTIVATE: 'deactivate',  // IE only\n  FOCUSIN: 'focusin',\n  FOCUSOUT: 'focusout',\n\n  // Forms\n  CHANGE: 'change',\n  RESET: 'reset',\n  SELECT: 'select',\n  SUBMIT: 'submit',\n  INPUT: 'input',\n  PROPERTYCHANGE: 'propertychange',  // IE only\n\n  // Drag and drop\n  DRAGSTART: 'dragstart',\n  DRAG: 'drag',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DRAGLEAVE: 'dragleave',\n  DROP: 'drop',\n  DRAGEND: 'dragend',\n\n  // Touch events\n  // Note that other touch events exist, but we should follow the W3C list here.\n  // http://www.w3.org/TR/touch-events/#list-of-touchevent-types\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  TOUCHCANCEL: 'touchcancel',\n\n  // Misc\n  BEFOREUNLOAD: 'beforeunload',\n  CONSOLEMESSAGE: 'consolemessage',\n  CONTEXTMENU: 'contextmenu',\n  DEVICECHANGE: 'devicechange',\n  DEVICEMOTION: 'devicemotion',\n  DEVICEORIENTATION: 'deviceorientation',\n  DOMCONTENTLOADED: 'DOMContentLoaded',\n  ERROR: 'error',\n  HELP: 'help',\n  LOAD: 'load',\n  LOSECAPTURE: 'losecapture',\n  ORIENTATIONCHANGE: 'orientationchange',\n  READYSTATECHANGE: 'readystatechange',\n  RESIZE: 'resize',\n  SCROLL: 'scroll',\n  UNLOAD: 'unload',\n\n  // Media events\n  CANPLAY: 'canplay',\n  CANPLAYTHROUGH: 'canplaythrough',\n  DURATIONCHANGE: 'durationchange',\n  EMPTIED: 'emptied',\n  ENDED: 'ended',\n  LOADEDDATA: 'loadeddata',\n  LOADEDMETADATA: 'loadedmetadata',\n  PAUSE: 'pause',\n  PLAY: 'play',\n  PLAYING: 'playing',\n  RATECHANGE: 'ratechange',\n  SEEKED: 'seeked',\n  SEEKING: 'seeking',\n  STALLED: 'stalled',\n  SUSPEND: 'suspend',\n  TIMEUPDATE: 'timeupdate',\n  VOLUMECHANGE: 'volumechange',\n  WAITING: 'waiting',\n\n  // Media Source Extensions events\n  // https://www.w3.org/TR/media-source/#mediasource-events\n  SOURCEOPEN: 'sourceopen',\n  SOURCEENDED: 'sourceended',\n  SOURCECLOSED: 'sourceclosed',\n  // https://www.w3.org/TR/media-source/#sourcebuffer-events\n  ABORT: 'abort',\n  UPDATE: 'update',\n  UPDATESTART: 'updatestart',\n  UPDATEEND: 'updateend',\n\n  // HTML 5 History events\n  // See http://www.w3.org/TR/html5/browsers.html#event-definitions-0\n  HASHCHANGE: 'hashchange',\n  PAGEHIDE: 'pagehide',\n  PAGESHOW: 'pageshow',\n  POPSTATE: 'popstate',\n\n  // Copy and Paste\n  // Support is limited. Make sure it works on your favorite browser\n  // before using.\n  // http://www.quirksmode.org/dom/events/cutcopypaste.html\n  COPY: 'copy',\n  PASTE: 'paste',\n  CUT: 'cut',\n  BEFORECOPY: 'beforecopy',\n  BEFORECUT: 'beforecut',\n  BEFOREPASTE: 'beforepaste',\n\n  // HTML5 online/offline events.\n  // http://www.w3.org/TR/offline-webapps/#related\n  ONLINE: 'online',\n  OFFLINE: 'offline',\n\n  // HTML 5 worker events\n  MESSAGE: 'message',\n  CONNECT: 'connect',\n\n  // Service Worker Events - ServiceWorkerGlobalScope context\n  // See https://w3c.github.io/ServiceWorker/#execution-context-events\n  // Note: message event defined in worker events section\n  INSTALL: 'install',\n  ACTIVATE: 'activate',\n  FETCH: 'fetch',\n  FOREIGNFETCH: 'foreignfetch',\n  MESSAGEERROR: 'messageerror',\n\n  // Service Worker Events - Document context\n  // See https://w3c.github.io/ServiceWorker/#document-context-events\n  STATECHANGE: 'statechange',\n  UPDATEFOUND: 'updatefound',\n  CONTROLLERCHANGE: 'controllerchange',\n\n  // CSS animation events.\n  /** @suppress {missingRequire} */\n  ANIMATIONSTART: goog.events.getVendorPrefixedName_('AnimationStart'),\n  /** @suppress {missingRequire} */\n  ANIMATIONEND: goog.events.getVendorPrefixedName_('AnimationEnd'),\n  /** @suppress {missingRequire} */\n  ANIMATIONITERATION: goog.events.getVendorPrefixedName_('AnimationIteration'),\n\n  // CSS transition events. Based on the browser support described at:\n  // https://developer.mozilla.org/en/css/css_transitions#Browser_compatibility\n  /** @suppress {missingRequire} */\n  TRANSITIONEND: goog.events.getVendorPrefixedName_('TransitionEnd'),\n\n  // W3C Pointer Events\n  // http://www.w3.org/TR/pointerevents/\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTERCANCEL: 'pointercancel',\n  POINTERMOVE: 'pointermove',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  GOTPOINTERCAPTURE: 'gotpointercapture',\n  LOSTPOINTERCAPTURE: 'lostpointercapture',\n\n  // IE specific events.\n  // See http://msdn.microsoft.com/en-us/library/ie/hh772103(v=vs.85).aspx\n  // Note: these events will be supplanted in IE11.\n  MSGESTURECHANGE: 'MSGestureChange',\n  MSGESTUREEND: 'MSGestureEnd',\n  MSGESTUREHOLD: 'MSGestureHold',\n  MSGESTURESTART: 'MSGestureStart',\n  MSGESTURETAP: 'MSGestureTap',\n  MSGOTPOINTERCAPTURE: 'MSGotPointerCapture',\n  MSINERTIASTART: 'MSInertiaStart',\n  MSLOSTPOINTERCAPTURE: 'MSLostPointerCapture',\n  MSPOINTERCANCEL: 'MSPointerCancel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  MSPOINTERENTER: 'MSPointerEnter',\n  MSPOINTERHOVER: 'MSPointerHover',\n  MSPOINTERLEAVE: 'MSPointerLeave',\n  MSPOINTERMOVE: 'MSPointerMove',\n  MSPOINTEROUT: 'MSPointerOut',\n  MSPOINTEROVER: 'MSPointerOver',\n  MSPOINTERUP: 'MSPointerUp',\n\n  // Native IMEs/input tools events.\n  TEXT: 'text',\n  // The textInput event is supported in IE9+, but only in lower case. All other\n  // browsers use the camel-case event name.\n  TEXTINPUT: goog.userAgent.IE ? 'textinput' : 'textInput',\n  COMPOSITIONSTART: 'compositionstart',\n  COMPOSITIONUPDATE: 'compositionupdate',\n  COMPOSITIONEND: 'compositionend',\n\n  // The beforeinput event is initially only supported in Safari. See\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=342670 for Chrome\n  // implementation tracking.\n  BEFOREINPUT: 'beforeinput',\n\n  // Webview tag events\n  // See https://developer.chrome.com/apps/tags/webview\n  EXIT: 'exit',\n  LOADABORT: 'loadabort',\n  LOADCOMMIT: 'loadcommit',\n  LOADREDIRECT: 'loadredirect',\n  LOADSTART: 'loadstart',\n  LOADSTOP: 'loadstop',\n  RESPONSIVE: 'responsive',\n  SIZECHANGED: 'sizechanged',\n  UNRESPONSIVE: 'unresponsive',\n\n  // HTML5 Page Visibility API.  See details at\n  // `goog.labs.dom.PageVisibilityMonitor`.\n  VISIBILITYCHANGE: 'visibilitychange',\n\n  // LocalStorage event.\n  STORAGE: 'storage',\n\n  // DOM Level 2 mutation events (deprecated).\n  DOMSUBTREEMODIFIED: 'DOMSubtreeModified',\n  DOMNODEINSERTED: 'DOMNodeInserted',\n  DOMNODEREMOVED: 'DOMNodeRemoved',\n  DOMNODEREMOVEDFROMDOCUMENT: 'DOMNodeRemovedFromDocument',\n  DOMNODEINSERTEDINTODOCUMENT: 'DOMNodeInsertedIntoDocument',\n  DOMATTRMODIFIED: 'DOMAttrModified',\n  DOMCHARACTERDATAMODIFIED: 'DOMCharacterDataModified',\n\n  // Print events.\n  BEFOREPRINT: 'beforeprint',\n  AFTERPRINT: 'afterprint',\n\n  // Web app manifest events.\n  BEFOREINSTALLPROMPT: 'beforeinstallprompt',\n  APPINSTALLED: 'appinstalled'\n};\n\n\n/**\n * Returns one of the given pointer fallback event names in order of preference:\n *   1. pointerEventName\n *   2. msPointerEventName\n *   3. mouseEventName\n * @param {string} pointerEventName\n * @param {string} msPointerEventName\n * @param {string} mouseEventName\n * @return {string} The supported pointer or mouse event name.\n * @private\n */\ngoog.events.getPointerFallbackEventName_ = function(\n    pointerEventName, msPointerEventName, mouseEventName) {\n  if (goog.events.BrowserFeature.POINTER_EVENTS) {\n    return pointerEventName;\n  }\n  if (goog.events.BrowserFeature.MSPOINTER_EVENTS) {\n    return msPointerEventName;\n  }\n  return mouseEventName;\n};\n\n\n/**\n * Constants for pointer event names that fall back to corresponding mouse event\n * names on unsupported platforms. These are intended to be drop-in replacements\n * for corresponding values in `goog.events.EventType`.\n * @enum {string}\n */\ngoog.events.PointerFallbackEventType = {\n  POINTERDOWN: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERDOWN, goog.events.EventType.MSPOINTERDOWN,\n      goog.events.EventType.MOUSEDOWN),\n  POINTERUP: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERUP, goog.events.EventType.MSPOINTERUP,\n      goog.events.EventType.MOUSEUP),\n  POINTERCANCEL: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERCANCEL,\n      goog.events.EventType.MSPOINTERCANCEL,\n      // When falling back to mouse events, there is no MOUSECANCEL equivalent\n      // of POINTERCANCEL. In this case POINTERUP already falls back to MOUSEUP\n      // which represents both UP and CANCEL. POINTERCANCEL does not fall back\n      // to MOUSEUP to prevent listening twice on the same event.\n      'mousecancel'),  // non-existent event; will never fire\n  POINTERMOVE: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERMOVE, goog.events.EventType.MSPOINTERMOVE,\n      goog.events.EventType.MOUSEMOVE),\n  POINTEROVER: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTEROVER, goog.events.EventType.MSPOINTEROVER,\n      goog.events.EventType.MOUSEOVER),\n  POINTEROUT: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTEROUT, goog.events.EventType.MSPOINTEROUT,\n      goog.events.EventType.MOUSEOUT),\n  POINTERENTER: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERENTER, goog.events.EventType.MSPOINTERENTER,\n      goog.events.EventType.MOUSEENTER),\n  POINTERLEAVE: goog.events.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERLEAVE, goog.events.EventType.MSPOINTERLEAVE,\n      goog.events.EventType.MOUSELEAVE)\n};\n","// Copyright 2012 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview An interface for a listenable JavaScript object.\n * @author chrishenry@google.com (Chris Henry)\n */\n\ngoog.provide('goog.events.Listenable');\ngoog.provide('goog.events.ListenableKey');\n\n/** @suppress {extraRequire} */\ngoog.require('goog.events.EventId');\n\ngoog.forwardDeclare('goog.events.EventLike');\ngoog.forwardDeclare('goog.events.EventTarget');\n\n\n\n/**\n * A listenable interface. A listenable is an object with the ability\n * to dispatch/broadcast events to \"event listeners\" registered via\n * listen/listenOnce.\n *\n * The interface allows for an event propagation mechanism similar\n * to one offered by native browser event targets, such as\n * capture/bubble mechanism, stopping propagation, and preventing\n * default actions. Capture/bubble mechanism depends on the ancestor\n * tree constructed via `#getParentEventTarget`; this tree\n * must be directed acyclic graph. The meaning of default action(s)\n * in preventDefault is specific to a particular use case.\n *\n * Implementations that do not support capture/bubble or can not have\n * a parent listenable can simply not implement any ability to set the\n * parent listenable (and have `#getParentEventTarget` return\n * null).\n *\n * Implementation of this class can be used with or independently from\n * goog.events.\n *\n * Implementation must call `#addImplementation(implClass)`.\n *\n * @interface\n * @see goog.events\n * @see http://www.w3.org/TR/DOM-Level-2-Events/events.html\n */\ngoog.events.Listenable = function() {};\n\n\n/**\n * An expando property to indicate that an object implements\n * goog.events.Listenable.\n *\n * See addImplementation/isImplementedBy.\n *\n * @type {string}\n * @const\n */\ngoog.events.Listenable.IMPLEMENTED_BY_PROP =\n    'closure_listenable_' + ((Math.random() * 1e6) | 0);\n\n\n/**\n * Marks a given class (constructor) as an implementation of\n * Listenable, so that we can query that fact at runtime. The class\n * must have already implemented the interface.\n * @param {function(new:goog.events.Listenable,...)} cls The class constructor.\n *     The corresponding class must have already implemented the interface.\n */\ngoog.events.Listenable.addImplementation = function(cls) {\n  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;\n};\n\n\n/**\n * @param {Object} obj The object to check.\n * @return {boolean} Whether a given instance implements Listenable. The\n *     class/superclass of the instance must call addImplementation.\n */\ngoog.events.Listenable.isImplementedBy = function(obj) {\n  return !!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);\n};\n\n\n/**\n * Adds an event listener. A listener can only be added once to an\n * object and if it is added again the key for the listener is\n * returned. Note that if the existing listener is a one-off listener\n * (registered via listenOnce), it will no longer be a one-off\n * listener after a call to listen().\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.listen;\n\n\n/**\n * Adds an event listener that is removed automatically after the\n * listener fired once.\n *\n * If an existing listener already exists, listenOnce will do\n * nothing. In particular, if the listener was previously registered\n * via listen(), listenOnce() will not turn the listener into a\n * one-off listener. Similarly, if there is already an existing\n * one-off listener, listenOnce does not modify the listeners (it is\n * still a once listener).\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.listenOnce;\n\n\n/**\n * Removes an event listener which was added with listen() or listenOnce().\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call\n *     the listener.\n * @return {boolean} Whether any listener was removed.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.unlisten;\n\n\n/**\n * Removes an event listener which was added with listen() by the key\n * returned by listen().\n *\n * @param {!goog.events.ListenableKey} key The key returned by\n *     listen() or listenOnce().\n * @return {boolean} Whether any listener was removed.\n */\ngoog.events.Listenable.prototype.unlistenByKey;\n\n\n/**\n * Dispatches an event (or event like object) and calls all listeners\n * listening for events of this type. The type of the event is decided by the\n * type property on the event object.\n *\n * If any of the listeners returns false OR calls preventDefault then this\n * function will return false.  If one of the capture listeners calls\n * stopPropagation, then the bubble listeners won't fire.\n *\n * @param {goog.events.EventLike} e Event object.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the listeners returns false) this will also return false.\n */\ngoog.events.Listenable.prototype.dispatchEvent;\n\n\n/**\n * Removes all listeners from this listenable. If type is specified,\n * it will only remove listeners of the particular type. otherwise all\n * registered listeners will be removed.\n *\n * @param {string=} opt_type Type of event to remove, default is to\n *     remove all types.\n * @return {number} Number of listeners removed.\n */\ngoog.events.Listenable.prototype.removeAllListeners;\n\n\n/**\n * Returns the parent of this event target to use for capture/bubble\n * mechanism.\n *\n * NOTE(chrishenry): The name reflects the original implementation of\n * custom event target (`goog.events.EventTarget`). We decided\n * that changing the name is not worth it.\n *\n * @return {goog.events.Listenable} The parent EventTarget or null if\n *     there is no parent.\n */\ngoog.events.Listenable.prototype.getParentEventTarget;\n\n\n/**\n * Fires all registered listeners in this listenable for the given\n * type and capture mode, passing them the given eventObject. This\n * does not perform actual capture/bubble. Only implementors of the\n * interface should be using this.\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The type of the\n *     listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @param {EVENTOBJ} eventObject The event object to fire.\n * @return {boolean} Whether all listeners succeeded without\n *     attempting to prevent default behavior. If any listener returns\n *     false or called goog.events.Event#preventDefault, this returns\n *     false.\n * @template EVENTOBJ\n */\ngoog.events.Listenable.prototype.fireListeners;\n\n\n/**\n * Gets all listeners in this listenable for the given type and\n * capture mode.\n *\n * @param {string|!goog.events.EventId} type The type of the listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @return {!Array<!goog.events.ListenableKey>} An array of registered\n *     listeners.\n * @template EVENTOBJ\n */\ngoog.events.Listenable.prototype.getListeners;\n\n\n/**\n * Gets the goog.events.ListenableKey for the event or null if no such\n * listener is in use.\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The name of the event\n *     without the 'on' prefix.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener The\n *     listener function to get.\n * @param {boolean} capture Whether the listener is a capturing listener.\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {goog.events.ListenableKey} the found listener or null if not found.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.getListener;\n\n\n/**\n * Whether there is any active listeners matching the specified\n * signature. If either the type or capture parameters are\n * unspecified, the function will match on the remaining criteria.\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>=} opt_type Event type.\n * @param {boolean=} opt_capture Whether to check for capture or bubble\n *     listeners.\n * @return {boolean} Whether there is any active listeners matching\n *     the requested type and/or capture phase.\n * @template EVENTOBJ\n */\ngoog.events.Listenable.prototype.hasListener;\n\n\n\n/**\n * An interface that describes a single registered listener.\n * @interface\n */\ngoog.events.ListenableKey = function() {};\n\n\n/**\n * Counter used to create a unique key\n * @type {number}\n * @private\n */\ngoog.events.ListenableKey.counter_ = 0;\n\n\n/**\n * Reserves a key to be used for ListenableKey#key field.\n * @return {number} A number to be used to fill ListenableKey#key\n *     field.\n */\ngoog.events.ListenableKey.reserveKey = function() {\n  return ++goog.events.ListenableKey.counter_;\n};\n\n\n/**\n * The source event target.\n * @type {Object|goog.events.Listenable|goog.events.EventTarget}\n */\ngoog.events.ListenableKey.prototype.src;\n\n\n/**\n * The event type the listener is listening to.\n * @type {string}\n */\ngoog.events.ListenableKey.prototype.type;\n\n\n/**\n * The listener function.\n * @type {function(?):?|{handleEvent:function(?):?}|null}\n */\ngoog.events.ListenableKey.prototype.listener;\n\n\n/**\n * Whether the listener works on capture phase.\n * @type {boolean}\n */\ngoog.events.ListenableKey.prototype.capture;\n\n\n/**\n * The 'this' object for the listener function's scope.\n * @type {Object|undefined}\n */\ngoog.events.ListenableKey.prototype.handler;\n\n\n/**\n * A globally unique number to identify the key.\n * @type {number}\n */\ngoog.events.ListenableKey.prototype.key;\n","// Copyright 2005 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Listener object.\n * @see ../demos/events.html\n */\n\ngoog.provide('goog.events.Listener');\n\ngoog.require('goog.events.ListenableKey');\n\n\n\n/**\n * Simple class that stores information about a listener\n * @param {function(?):?} listener Callback function.\n * @param {Function} proxy Wrapper for the listener that patches the event.\n * @param {EventTarget|goog.events.Listenable} src Source object for\n *     the event.\n * @param {string} type Event type.\n * @param {boolean} capture Whether in capture or bubble phase.\n * @param {Object=} opt_handler Object in whose context to execute the callback.\n * @implements {goog.events.ListenableKey}\n * @constructor\n */\ngoog.events.Listener = function(\n    listener, proxy, src, type, capture, opt_handler) {\n  if (goog.events.Listener.ENABLE_MONITORING) {\n    this.creationStack = new Error().stack;\n  }\n\n  /** @override */\n  this.listener = listener;\n\n  /**\n   * A wrapper over the original listener. This is used solely to\n   * handle native browser events (it is used to simulate the capture\n   * phase and to patch the event object).\n   * @type {Function}\n   */\n  this.proxy = proxy;\n\n  /**\n   * Object or node that callback is listening to\n   * @type {EventTarget|goog.events.Listenable}\n   */\n  this.src = src;\n\n  /**\n   * The event type.\n   * @const {string}\n   */\n  this.type = type;\n\n  /**\n   * Whether the listener is being called in the capture or bubble phase\n   * @const {boolean}\n   */\n  this.capture = !!capture;\n\n  /**\n   * Optional object whose context to execute the listener in\n   * @type {Object|undefined}\n   */\n  this.handler = opt_handler;\n\n  /**\n   * The key of the listener.\n   * @const {number}\n   * @override\n   */\n  this.key = goog.events.ListenableKey.reserveKey();\n\n  /**\n   * Whether to remove the listener after it has been called.\n   * @type {boolean}\n   */\n  this.callOnce = false;\n\n  /**\n   * Whether the listener has been removed.\n   * @type {boolean}\n   */\n  this.removed = false;\n};\n\n\n/**\n * @define {boolean} Whether to enable the monitoring of the\n *     goog.events.Listener instances. Switching on the monitoring is only\n *     recommended for debugging because it has a significant impact on\n *     performance and memory usage. If switched off, the monitoring code\n *     compiles down to 0 bytes.\n */\ngoog.define('goog.events.Listener.ENABLE_MONITORING', false);\n\n\n/**\n * If monitoring the goog.events.Listener instances is enabled, stores the\n * creation stack trace of the Disposable instance.\n * @type {string}\n */\ngoog.events.Listener.prototype.creationStack;\n\n\n/**\n * Marks this listener as removed. This also remove references held by\n * this listener object (such as listener and event source).\n */\ngoog.events.Listener.prototype.markAsRemoved = function() {\n  this.removed = true;\n  this.listener = null;\n  this.proxy = null;\n  this.src = null;\n  this.handler = null;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A map of listeners that provides utility functions to\n * deal with listeners on an event target. Used by\n * `goog.events.EventTarget`.\n *\n * WARNING: Do not use this class from outside goog.events package.\n */\n\ngoog.provide('goog.events.ListenerMap');\n\ngoog.require('goog.array');\ngoog.require('goog.events.Listener');\ngoog.require('goog.object');\n\n\n\n/**\n * Creates a new listener map.\n * @param {EventTarget|goog.events.Listenable} src The src object.\n * @constructor\n * @final\n */\ngoog.events.ListenerMap = function(src) {\n  /** @type {EventTarget|goog.events.Listenable} */\n  this.src = src;\n\n  /**\n   * Maps of event type to an array of listeners.\n   * @type {!Object<string, !Array<!goog.events.Listener>>}\n   */\n  this.listeners = {};\n\n  /**\n   * The count of types in this map that have registered listeners.\n   * @private {number}\n   */\n  this.typeCount_ = 0;\n};\n\n\n/**\n * @return {number} The count of event types in this map that actually\n *     have registered listeners.\n */\ngoog.events.ListenerMap.prototype.getTypeCount = function() {\n  return this.typeCount_;\n};\n\n\n/**\n * @return {number} Total number of registered listeners.\n */\ngoog.events.ListenerMap.prototype.getListenerCount = function() {\n  var count = 0;\n  for (var type in this.listeners) {\n    count += this.listeners[type].length;\n  }\n  return count;\n};\n\n\n/**\n * Adds an event listener. A listener can only be added once to an\n * object and if it is added again the key for the listener is\n * returned.\n *\n * Note that a one-off listener will not change an existing listener,\n * if any. On the other hand a normal listener will change existing\n * one-off listener to become a normal listener.\n *\n * @param {string|!goog.events.EventId} type The listener event type.\n * @param {!Function} listener This listener callback method.\n * @param {boolean} callOnce Whether the listener is a one-off\n *     listener.\n * @param {boolean=} opt_useCapture The capture mode of the listener.\n * @param {Object=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n */\ngoog.events.ListenerMap.prototype.add = function(\n    type, listener, callOnce, opt_useCapture, opt_listenerScope) {\n  var typeStr = type.toString();\n  var listenerArray = this.listeners[typeStr];\n  if (!listenerArray) {\n    listenerArray = this.listeners[typeStr] = [];\n    this.typeCount_++;\n  }\n\n  var listenerObj;\n  var index = goog.events.ListenerMap.findListenerIndex_(\n      listenerArray, listener, opt_useCapture, opt_listenerScope);\n  if (index > -1) {\n    listenerObj = listenerArray[index];\n    if (!callOnce) {\n      // Ensure that, if there is an existing callOnce listener, it is no\n      // longer a callOnce listener.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = new goog.events.Listener(\n        listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);\n    listenerObj.callOnce = callOnce;\n    listenerArray.push(listenerObj);\n  }\n  return listenerObj;\n};\n\n\n/**\n * Removes a matching listener.\n * @param {string|!goog.events.EventId} type The listener event type.\n * @param {!Function} listener This listener callback method.\n * @param {boolean=} opt_useCapture The capture mode of the listener.\n * @param {Object=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {boolean} Whether any listener was removed.\n */\ngoog.events.ListenerMap.prototype.remove = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  var typeStr = type.toString();\n  if (!(typeStr in this.listeners)) {\n    return false;\n  }\n\n  var listenerArray = this.listeners[typeStr];\n  var index = goog.events.ListenerMap.findListenerIndex_(\n      listenerArray, listener, opt_useCapture, opt_listenerScope);\n  if (index > -1) {\n    var listenerObj = listenerArray[index];\n    listenerObj.markAsRemoved();\n    goog.array.removeAt(listenerArray, index);\n    if (listenerArray.length == 0) {\n      delete this.listeners[typeStr];\n      this.typeCount_--;\n    }\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes the given listener object.\n * @param {!goog.events.ListenableKey} listener The listener to remove.\n * @return {boolean} Whether the listener is removed.\n */\ngoog.events.ListenerMap.prototype.removeByKey = function(listener) {\n  var type = listener.type;\n  if (!(type in this.listeners)) {\n    return false;\n  }\n\n  var removed = goog.array.remove(this.listeners[type], listener);\n  if (removed) {\n    /** @type {!goog.events.Listener} */ (listener).markAsRemoved();\n    if (this.listeners[type].length == 0) {\n      delete this.listeners[type];\n      this.typeCount_--;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Removes all listeners from this map. If opt_type is provided, only\n * listeners that match the given type are removed.\n * @param {string|!goog.events.EventId=} opt_type Type of event to remove.\n * @return {number} Number of listeners removed.\n */\ngoog.events.ListenerMap.prototype.removeAll = function(opt_type) {\n  var typeStr = opt_type && opt_type.toString();\n  var count = 0;\n  for (var type in this.listeners) {\n    if (!typeStr || type == typeStr) {\n      var listenerArray = this.listeners[type];\n      for (var i = 0; i < listenerArray.length; i++) {\n        ++count;\n        listenerArray[i].markAsRemoved();\n      }\n      delete this.listeners[type];\n      this.typeCount_--;\n    }\n  }\n  return count;\n};\n\n\n/**\n * Gets all listeners that match the given type and capture mode. The\n * returned array is a copy (but the listener objects are not).\n * @param {string|!goog.events.EventId} type The type of the listeners\n *     to retrieve.\n * @param {boolean} capture The capture mode of the listeners to retrieve.\n * @return {!Array<!goog.events.ListenableKey>} An array of matching\n *     listeners.\n */\ngoog.events.ListenerMap.prototype.getListeners = function(type, capture) {\n  var listenerArray = this.listeners[type.toString()];\n  var rv = [];\n  if (listenerArray) {\n    for (var i = 0; i < listenerArray.length; ++i) {\n      var listenerObj = listenerArray[i];\n      if (listenerObj.capture == capture) {\n        rv.push(listenerObj);\n      }\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Gets the goog.events.ListenableKey for the event or null if no such\n * listener is in use.\n *\n * @param {string|!goog.events.EventId} type The type of the listener\n *     to retrieve.\n * @param {!Function} listener The listener function to get.\n * @param {boolean} capture Whether the listener is a capturing listener.\n * @param {Object=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {goog.events.ListenableKey} the found listener or null if not found.\n */\ngoog.events.ListenerMap.prototype.getListener = function(\n    type, listener, capture, opt_listenerScope) {\n  var listenerArray = this.listeners[type.toString()];\n  var i = -1;\n  if (listenerArray) {\n    i = goog.events.ListenerMap.findListenerIndex_(\n        listenerArray, listener, capture, opt_listenerScope);\n  }\n  return i > -1 ? listenerArray[i] : null;\n};\n\n\n/**\n * Whether there is a matching listener. If either the type or capture\n * parameters are unspecified, the function will match on the\n * remaining criteria.\n *\n * @param {string|!goog.events.EventId=} opt_type The type of the listener.\n * @param {boolean=} opt_capture The capture mode of the listener.\n * @return {boolean} Whether there is an active listener matching\n *     the requested type and/or capture phase.\n */\ngoog.events.ListenerMap.prototype.hasListener = function(\n    opt_type, opt_capture) {\n  var hasType = goog.isDef(opt_type);\n  var typeStr = hasType ? opt_type.toString() : '';\n  var hasCapture = goog.isDef(opt_capture);\n\n  return goog.object.some(this.listeners, function(listenerArray, type) {\n    for (var i = 0; i < listenerArray.length; ++i) {\n      if ((!hasType || listenerArray[i].type == typeStr) &&\n          (!hasCapture || listenerArray[i].capture == opt_capture)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\n\n\n/**\n * Finds the index of a matching goog.events.Listener in the given\n * listenerArray.\n * @param {!Array<!goog.events.Listener>} listenerArray Array of listener.\n * @param {!Function} listener The listener function.\n * @param {boolean=} opt_useCapture The capture flag for the listener.\n * @param {Object=} opt_listenerScope The listener scope.\n * @return {number} The index of the matching listener within the\n *     listenerArray.\n * @private\n */\ngoog.events.ListenerMap.findListenerIndex_ = function(\n    listenerArray, listener, opt_useCapture, opt_listenerScope) {\n  for (var i = 0; i < listenerArray.length; ++i) {\n    var listenerObj = listenerArray[i];\n    if (!listenerObj.removed && listenerObj.listener == listener &&\n        listenerObj.capture == !!opt_useCapture &&\n        listenerObj.handler == opt_listenerScope) {\n      return i;\n    }\n  }\n  return -1;\n};\n","// Copyright 2005 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview An event manager for both native browser event\n * targets and custom JavaScript event targets\n * (`goog.events.Listenable`). This provides an abstraction\n * over browsers' event systems.\n *\n * It also provides a simulation of W3C event model's capture phase in\n * Internet Explorer (IE 8 and below). Caveat: the simulation does not\n * interact well with listeners registered directly on the elements\n * (bypassing goog.events) or even with listeners registered via\n * goog.events in a separate JS binary. In these cases, we provide\n * no ordering guarantees.\n *\n * The listeners will receive a \"patched\" event object. Such event object\n * contains normalized values for certain event properties that differs in\n * different browsers.\n *\n * Example usage:\n * <pre>\n * goog.events.listen(myNode, 'click', function(e) { alert('woo') });\n * goog.events.listen(myNode, 'mouseover', mouseHandler, true);\n * goog.events.unlisten(myNode, 'mouseover', mouseHandler, true);\n * goog.events.removeAll(myNode);\n * </pre>\n *\n *                                            in IE and event object patching]\n * @author arv@google.com (Erik Arvidsson)\n *\n * @see ../demos/events.html\n * @see ../demos/event-propagation.html\n * @see ../demos/stopevent.html\n */\n\n// IMPLEMENTATION NOTES:\n// goog.events stores an auxiliary data structure on each EventTarget\n// source being listened on. This allows us to take advantage of GC,\n// having the data structure GC'd when the EventTarget is GC'd. This\n// GC behavior is equivalent to using W3C DOM Events directly.\n\ngoog.provide('goog.events');\ngoog.provide('goog.events.CaptureSimulationMode');\ngoog.provide('goog.events.Key');\ngoog.provide('goog.events.ListenableType');\n\ngoog.require('goog.asserts');\ngoog.require('goog.debug.entryPointRegistry');\ngoog.require('goog.events.BrowserEvent');\ngoog.require('goog.events.BrowserFeature');\ngoog.require('goog.events.Listenable');\ngoog.require('goog.events.ListenerMap');\n\ngoog.forwardDeclare('goog.debug.ErrorHandler');\ngoog.forwardDeclare('goog.events.EventWrapper');\n\n\n/**\n * @typedef {number|goog.events.ListenableKey}\n */\ngoog.events.Key;\n\n\n/**\n * @typedef {EventTarget|goog.events.Listenable}\n */\ngoog.events.ListenableType;\n\n\n/**\n * Property name on a native event target for the listener map\n * associated with the event target.\n * @private @const {string}\n */\ngoog.events.LISTENER_MAP_PROP_ = 'closure_lm_' + ((Math.random() * 1e6) | 0);\n\n\n/**\n * String used to prepend to IE event types.\n * @const\n * @private\n */\ngoog.events.onString_ = 'on';\n\n\n/**\n * Map of computed \"on<eventname>\" strings for IE event types. Caching\n * this removes an extra object allocation in goog.events.listen which\n * improves IE6 performance.\n * @const\n * @dict\n * @private\n */\ngoog.events.onStringMap_ = {};\n\n\n/**\n * @enum {number} Different capture simulation mode for IE8-.\n */\ngoog.events.CaptureSimulationMode = {\n  /**\n   * Does not perform capture simulation. Will asserts in IE8- when you\n   * add capture listeners.\n   */\n  OFF_AND_FAIL: 0,\n\n  /**\n   * Does not perform capture simulation, silently ignore capture\n   * listeners.\n   */\n  OFF_AND_SILENT: 1,\n\n  /**\n   * Performs capture simulation.\n   */\n  ON: 2\n};\n\n\n/**\n * @define {number} The capture simulation mode for IE8-. By default,\n *     this is ON.\n */\ngoog.define('goog.events.CAPTURE_SIMULATION_MODE', 2);\n\n\n/**\n * Estimated count of total native listeners.\n * @private {number}\n */\ngoog.events.listenerCountEstimate_ = 0;\n\n\n/**\n * Adds an event listener for a specific event on a native event\n * target (such as a DOM element) or an object that has implemented\n * {@link goog.events.Listenable}. A listener can only be added once\n * to an object and if it is added again the key for the listener is\n * returned. Note that if the existing listener is a one-off listener\n * (registered via listenOnce), it will no longer be a one-off\n * listener after a call to listen().\n *\n * @param {EventTarget|goog.events.Listenable} src The node to listen\n *     to events on.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types.\n * @param {function(this:T, EVENTOBJ):?|{handleEvent:function(?):?}|null}\n *     listener Callback method, or an object with a handleEvent function.\n *     WARNING: passing an Object is now softly deprecated.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {T=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.Key} Unique key for the listener.\n * @template T,EVENTOBJ\n */\ngoog.events.listen = function(src, type, listener, opt_options, opt_handler) {\n  if (opt_options && opt_options.once) {\n    return goog.events.listenOnce(\n        src, type, listener, opt_options, opt_handler);\n  }\n  if (goog.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.listen(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n\n  listener = goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    var capture =\n        goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n    return src.listen(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n  } else {\n    return goog.events.listen_(\n        /** @type {!EventTarget} */ (src), type, listener,\n        /* callOnce */ false, opt_options, opt_handler);\n  }\n};\n\n\n/**\n * Adds an event listener for a specific event on a native event\n * target. A listener can only be added once to an object and if it\n * is added again the key for the listener is returned.\n *\n * Note that a one-off listener will not change an existing listener,\n * if any. On the other hand a normal listener will change existing\n * one-off listener to become a normal listener.\n *\n * @param {EventTarget} src The node to listen to events on.\n * @param {string|?goog.events.EventId<EVENTOBJ>} type Event type.\n * @param {!Function} listener Callback function.\n * @param {boolean} callOnce Whether the listener is a one-off\n *     listener or otherwise.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.ListenableKey} Unique key for the listener.\n * @template EVENTOBJ\n * @private\n */\ngoog.events.listen_ = function(\n    src, type, listener, callOnce, opt_options, opt_handler) {\n  if (!type) {\n    throw new Error('Invalid event type');\n  }\n\n  var capture =\n      goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {\n    if (goog.events.CAPTURE_SIMULATION_MODE ==\n        goog.events.CaptureSimulationMode.OFF_AND_FAIL) {\n      goog.asserts.fail('Can not register capture listener in IE8-.');\n      return null;\n    } else if (\n        goog.events.CAPTURE_SIMULATION_MODE ==\n        goog.events.CaptureSimulationMode.OFF_AND_SILENT) {\n      return null;\n    }\n  }\n\n  var listenerMap = goog.events.getListenerMap_(src);\n  if (!listenerMap) {\n    src[goog.events.LISTENER_MAP_PROP_] = listenerMap =\n        new goog.events.ListenerMap(src);\n  }\n\n  var listenerObj = /** @type {goog.events.Listener} */ (\n      listenerMap.add(type, listener, callOnce, capture, opt_handler));\n\n  // If the listenerObj already has a proxy, it has been set up\n  // previously. We simply return.\n  if (listenerObj.proxy) {\n    return listenerObj;\n  }\n\n  var proxy = goog.events.getProxy();\n  listenerObj.proxy = proxy;\n\n  proxy.src = src;\n  proxy.listener = listenerObj;\n\n  // Attach the proxy through the browser's API\n  if (src.addEventListener) {\n    // Don't pass an object as `capture` if the browser doesn't support that.\n    if (!goog.events.BrowserFeature.PASSIVE_EVENTS) {\n      opt_options = capture;\n    }\n    // Don't break tests that expect a boolean.\n    if (opt_options === undefined) opt_options = false;\n    src.addEventListener(type.toString(), proxy, opt_options);\n  } else if (src.attachEvent) {\n    // The else if above used to be an unconditional else. It would call\n    // exception on IE11, spoiling the day of some callers. The previous\n    // incarnation of this code, from 2007, indicates that it replaced an\n    // earlier still version that caused excess allocations on IE6.\n    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);\n  } else if (src.addListener && src.removeListener) {\n    // In IE, MediaQueryList uses addListener() insteadd of addEventListener. In\n    // Safari, there is no global for the MediaQueryList constructor, so we just\n    // check whether the object \"looks like\" MediaQueryList.\n    goog.asserts.assert(\n        type === 'change', 'MediaQueryList only has a change event');\n    src.addListener(proxy);\n  } else {\n    throw new Error('addEventListener and attachEvent are unavailable.');\n  }\n\n  goog.events.listenerCountEstimate_++;\n  return listenerObj;\n};\n\n\n/**\n * Helper function for returning a proxy function.\n * @return {!Function} A new or reused function object.\n */\ngoog.events.getProxy = function() {\n  var proxyCallbackFunction = goog.events.handleBrowserEvent_;\n  // Use a local var f to prevent one allocation.\n  var f =\n      goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {\n        return proxyCallbackFunction.call(f.src, f.listener, eventObject);\n      } : function(eventObject) {\n        var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);\n        // NOTE(chrishenry): In IE, we hack in a capture phase. However, if\n        // there is inline event handler which tries to prevent default (for\n        // example <a href=\"...\" onclick=\"return false\">...</a>) in a\n        // descendant element, the prevent default will be overridden\n        // by this listener if this listener were to return true. Hence, we\n        // return undefined.\n        if (!v) return v;\n      };\n  return f;\n};\n\n\n/**\n * Adds an event listener for a specific event on a native event\n * target (such as a DOM element) or an object that has implemented\n * {@link goog.events.Listenable}. After the event has fired the event\n * listener is removed from the target.\n *\n * If an existing listener already exists, listenOnce will do\n * nothing. In particular, if the listener was previously registered\n * via listen(), listenOnce() will not turn the listener into a\n * one-off listener. Similarly, if there is already an existing\n * one-off listener, listenOnce does not modify the listeners (it is\n * still a once listener).\n *\n * @param {EventTarget|goog.events.Listenable} src The node to listen\n *     to events on.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types.\n * @param {function(this:T, EVENTOBJ):?|{handleEvent:function(?):?}|null}\n *     listener Callback method.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {T=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.Key} Unique key for the listener.\n * @template T,EVENTOBJ\n */\ngoog.events.listenOnce = function(\n    src, type, listener, opt_options, opt_handler) {\n  if (goog.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.listenOnce(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n\n  listener = goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    var capture =\n        goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n    return src.listenOnce(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n  } else {\n    return goog.events.listen_(\n        /** @type {!EventTarget} */ (src), type, listener,\n        /* callOnce */ true, opt_options, opt_handler);\n  }\n};\n\n\n/**\n * Adds an event listener with a specific event wrapper on a DOM Node or an\n * object that has implemented {@link goog.events.Listenable}. A listener can\n * only be added once to an object.\n *\n * @param {EventTarget|goog.events.Listenable} src The target to\n *     listen to events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(this:T, ?):?|{handleEvent:function(?):?}|null} listener\n *     Callback method, or an object with a handleEvent function.\n * @param {boolean=} opt_capt Whether to fire in capture phase (defaults to\n *     false).\n * @param {T=} opt_handler Element in whose scope to call the listener.\n * @template T\n */\ngoog.events.listenWithWrapper = function(\n    src, wrapper, listener, opt_capt, opt_handler) {\n  wrapper.listen(src, listener, opt_capt, opt_handler);\n};\n\n\n/**\n * Removes an event listener which was added with listen().\n *\n * @param {EventTarget|goog.events.Listenable} src The target to stop\n *     listening to events on.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types to unlisten to.\n * @param {function(?):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to remove.\n * @param {(boolean|!EventListenerOptions)=} opt_options\n *     whether the listener is fired during the capture or bubble phase of the\n *     event.\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n * @return {?boolean} indicating whether the listener was there to remove.\n * @template EVENTOBJ\n */\ngoog.events.unlisten = function(src, type, listener, opt_options, opt_handler) {\n  if (goog.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.unlisten(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n  var capture =\n      goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n\n  listener = goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.unlisten(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n  }\n\n  if (!src) {\n    // TODO(chrishenry): We should tighten the API to only accept\n    // non-null objects, or add an assertion here.\n    return false;\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (src));\n  if (listenerMap) {\n    var listenerObj = listenerMap.getListener(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n    if (listenerObj) {\n      return goog.events.unlistenByKey(listenerObj);\n    }\n  }\n\n  return false;\n};\n\n\n/**\n * Removes an event listener which was added with listen() by the key\n * returned by listen().\n *\n * @param {goog.events.Key} key The key returned by listen() for this\n *     event listener.\n * @return {boolean} indicating whether the listener was there to remove.\n */\ngoog.events.unlistenByKey = function(key) {\n  // TODO(chrishenry): Remove this check when tests that rely on this\n  // are fixed.\n  if (goog.isNumber(key)) {\n    return false;\n  }\n\n  var listener = key;\n  if (!listener || listener.removed) {\n    return false;\n  }\n\n  var src = listener.src;\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return /** @type {!goog.events.Listenable} */ (src).unlistenByKey(listener);\n  }\n\n  var type = listener.type;\n  var proxy = listener.proxy;\n  if (src.removeEventListener) {\n    src.removeEventListener(type, proxy, listener.capture);\n  } else if (src.detachEvent) {\n    src.detachEvent(goog.events.getOnString_(type), proxy);\n  } else if (src.addListener && src.removeListener) {\n    src.removeListener(proxy);\n  }\n  goog.events.listenerCountEstimate_--;\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (src));\n  // TODO(chrishenry): Try to remove this conditional and execute the\n  // first branch always. This should be safe.\n  if (listenerMap) {\n    listenerMap.removeByKey(listener);\n    if (listenerMap.getTypeCount() == 0) {\n      // Null the src, just because this is simple to do (and useful\n      // for IE <= 7).\n      listenerMap.src = null;\n      // We don't use delete here because IE does not allow delete\n      // on a window object.\n      src[goog.events.LISTENER_MAP_PROP_] = null;\n    }\n  } else {\n    /** @type {!goog.events.Listener} */ (listener).markAsRemoved();\n  }\n\n  return true;\n};\n\n\n/**\n * Removes an event listener which was added with listenWithWrapper().\n *\n * @param {EventTarget|goog.events.Listenable} src The target to stop\n *     listening to events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(?):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to remove.\n * @param {boolean=} opt_capt In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase of the\n *     event.\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n */\ngoog.events.unlistenWithWrapper = function(\n    src, wrapper, listener, opt_capt, opt_handler) {\n  wrapper.unlisten(src, listener, opt_capt, opt_handler);\n};\n\n\n/**\n * Removes all listeners from an object. You can also optionally\n * remove listeners of a particular type.\n *\n * @param {Object|undefined} obj Object to remove listeners from. Must be an\n *     EventTarget or a goog.events.Listenable.\n * @param {string|!goog.events.EventId=} opt_type Type of event to remove.\n *     Default is all types.\n * @return {number} Number of listeners removed.\n */\ngoog.events.removeAll = function(obj, opt_type) {\n  // TODO(chrishenry): Change the type of obj to\n  // (!EventTarget|!goog.events.Listenable).\n\n  if (!obj) {\n    return 0;\n  }\n\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return /** @type {?} */ (obj).removeAllListeners(opt_type);\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (obj));\n  if (!listenerMap) {\n    return 0;\n  }\n\n  var count = 0;\n  var typeStr = opt_type && opt_type.toString();\n  for (var type in listenerMap.listeners) {\n    if (!typeStr || type == typeStr) {\n      // Clone so that we don't need to worry about unlistenByKey\n      // changing the content of the ListenerMap.\n      var listeners = listenerMap.listeners[type].concat();\n      for (var i = 0; i < listeners.length; ++i) {\n        if (goog.events.unlistenByKey(listeners[i])) {\n          ++count;\n        }\n      }\n    }\n  }\n  return count;\n};\n\n\n/**\n * Gets the listeners for a given object, type and capture phase.\n *\n * @param {Object} obj Object to get listeners for.\n * @param {string|!goog.events.EventId} type Event type.\n * @param {boolean} capture Capture phase?.\n * @return {Array<!goog.events.Listener>} Array of listener objects.\n */\ngoog.events.getListeners = function(obj, type, capture) {\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return /** @type {!goog.events.Listenable} */ (obj).getListeners(\n        type, capture);\n  } else {\n    if (!obj) {\n      // TODO(chrishenry): We should tighten the API to accept\n      // !EventTarget|goog.events.Listenable, and add an assertion here.\n      return [];\n    }\n\n    var listenerMap = goog.events.getListenerMap_(\n        /** @type {!EventTarget} */ (obj));\n    return listenerMap ? listenerMap.getListeners(type, capture) : [];\n  }\n};\n\n\n/**\n * Gets the goog.events.Listener for the event or null if no such listener is\n * in use.\n *\n * @param {EventTarget|goog.events.Listenable} src The target from\n *     which to get listeners.\n * @param {?string|!goog.events.EventId<EVENTOBJ>} type The type of the event.\n * @param {function(EVENTOBJ):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to get.\n * @param {boolean=} opt_capt In DOM-compliant browsers, this determines\n *                            whether the listener is fired during the\n *                            capture or bubble phase of the event.\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.ListenableKey} the found listener or null if not found.\n * @template EVENTOBJ\n */\ngoog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {\n  // TODO(chrishenry): Change type from ?string to string, or add assertion.\n  type = /** @type {string} */ (type);\n  listener = goog.events.wrapListener(listener);\n  var capture = !!opt_capt;\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.getListener(type, listener, capture, opt_handler);\n  }\n\n  if (!src) {\n    // TODO(chrishenry): We should tighten the API to only accept\n    // non-null objects, or add an assertion here.\n    return null;\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (src));\n  if (listenerMap) {\n    return listenerMap.getListener(type, listener, capture, opt_handler);\n  }\n  return null;\n};\n\n\n/**\n * Returns whether an event target has any active listeners matching the\n * specified signature. If either the type or capture parameters are\n * unspecified, the function will match on the remaining criteria.\n *\n * @param {EventTarget|goog.events.Listenable} obj Target to get\n *     listeners for.\n * @param {string|!goog.events.EventId=} opt_type Event type.\n * @param {boolean=} opt_capture Whether to check for capture or bubble-phase\n *     listeners.\n * @return {boolean} Whether an event target has one or more listeners matching\n *     the requested type and/or capture phase.\n */\ngoog.events.hasListener = function(obj, opt_type, opt_capture) {\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return obj.hasListener(opt_type, opt_capture);\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (obj));\n  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);\n};\n\n\n/**\n * Provides a nice string showing the normalized event objects public members\n * @param {Object} e Event Object.\n * @return {string} String of the public members of the normalized event object.\n */\ngoog.events.expose = function(e) {\n  var str = [];\n  for (var key in e) {\n    if (e[key] && e[key].id) {\n      str.push(key + ' = ' + e[key] + ' (' + e[key].id + ')');\n    } else {\n      str.push(key + ' = ' + e[key]);\n    }\n  }\n  return str.join('\\n');\n};\n\n\n/**\n * Returns a string with on prepended to the specified type. This is used for IE\n * which expects \"on\" to be prepended. This function caches the string in order\n * to avoid extra allocations in steady state.\n * @param {string} type Event type.\n * @return {string} The type string with 'on' prepended.\n * @private\n */\ngoog.events.getOnString_ = function(type) {\n  if (type in goog.events.onStringMap_) {\n    return goog.events.onStringMap_[type];\n  }\n  return goog.events.onStringMap_[type] = goog.events.onString_ + type;\n};\n\n\n/**\n * Fires an object's listeners of a particular type and phase\n *\n * @param {Object} obj Object whose listeners to call.\n * @param {string|!goog.events.EventId} type Event type.\n * @param {boolean} capture Which event phase.\n * @param {Object} eventObject Event object to be passed to listener.\n * @return {boolean} True if all listeners returned true else false.\n */\ngoog.events.fireListeners = function(obj, type, capture, eventObject) {\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return /** @type {!goog.events.Listenable} */ (obj).fireListeners(\n        type, capture, eventObject);\n  }\n\n  return goog.events.fireListeners_(obj, type, capture, eventObject);\n};\n\n\n/**\n * Fires an object's listeners of a particular type and phase.\n * @param {Object} obj Object whose listeners to call.\n * @param {string|!goog.events.EventId} type Event type.\n * @param {boolean} capture Which event phase.\n * @param {Object} eventObject Event object to be passed to listener.\n * @return {boolean} True if all listeners returned true else false.\n * @private\n */\ngoog.events.fireListeners_ = function(obj, type, capture, eventObject) {\n  /** @type {boolean} */\n  var retval = true;\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {EventTarget} */ (obj));\n  if (listenerMap) {\n    // TODO(chrishenry): Original code avoids array creation when there\n    // is no listener, so we do the same. If this optimization turns\n    // out to be not required, we can replace this with\n    // listenerMap.getListeners(type, capture) instead, which is simpler.\n    var listenerArray = listenerMap.listeners[type.toString()];\n    if (listenerArray) {\n      listenerArray = listenerArray.concat();\n      for (var i = 0; i < listenerArray.length; i++) {\n        var listener = listenerArray[i];\n        // We might not have a listener if the listener was removed.\n        if (listener && listener.capture == capture && !listener.removed) {\n          var result = goog.events.fireListener(listener, eventObject);\n          retval = retval && (result !== false);\n        }\n      }\n    }\n  }\n  return retval;\n};\n\n\n/**\n * Fires a listener with a set of arguments\n *\n * @param {goog.events.Listener} listener The listener object to call.\n * @param {Object} eventObject The event object to pass to the listener.\n * @return {*} Result of listener.\n */\ngoog.events.fireListener = function(listener, eventObject) {\n  var listenerFn = listener.listener;\n  var listenerHandler = listener.handler || listener.src;\n\n  if (listener.callOnce) {\n    goog.events.unlistenByKey(listener);\n  }\n  return listenerFn.call(listenerHandler, eventObject);\n};\n\n\n/**\n * Gets the total number of listeners currently in the system.\n * @return {number} Number of listeners.\n * @deprecated This returns estimated count, now that Closure no longer\n * stores a central listener registry. We still return an estimation\n * to keep existing listener-related tests passing. In the near future,\n * this function will be removed.\n */\ngoog.events.getTotalListenerCount = function() {\n  return goog.events.listenerCountEstimate_;\n};\n\n\n/**\n * Dispatches an event (or event like object) and calls all listeners\n * listening for events of this type. The type of the event is decided by the\n * type property on the event object.\n *\n * If any of the listeners returns false OR calls preventDefault then this\n * function will return false.  If one of the capture listeners calls\n * stopPropagation, then the bubble listeners won't fire.\n *\n * @param {goog.events.Listenable} src The event target.\n * @param {goog.events.EventLike} e Event object.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the handlers returns false) this will also return false.\n *     If there are no handlers, or if all handlers return true, this returns\n *     true.\n */\ngoog.events.dispatchEvent = function(src, e) {\n  goog.asserts.assert(\n      goog.events.Listenable.isImplementedBy(src),\n      'Can not use goog.events.dispatchEvent with ' +\n          'non-goog.events.Listenable instance.');\n  return src.dispatchEvent(e);\n};\n\n\n/**\n * Installs exception protection for the browser event entry point using the\n * given error handler.\n *\n * @param {goog.debug.ErrorHandler} errorHandler Error handler with which to\n *     protect the entry point.\n */\ngoog.events.protectBrowserEventEntryPoint = function(errorHandler) {\n  goog.events.handleBrowserEvent_ =\n      errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);\n};\n\n\n/**\n * Handles an event and dispatches it to the correct listeners. This\n * function is a proxy for the real listener the user specified.\n *\n * @param {goog.events.Listener} listener The listener object.\n * @param {Event=} opt_evt Optional event object that gets passed in via the\n *     native event handlers.\n * @return {*} Result of the event handler.\n * @this {EventTarget} The object or Element that fired the event.\n * @private\n */\ngoog.events.handleBrowserEvent_ = function(listener, opt_evt) {\n  if (listener.removed) {\n    return true;\n  }\n\n  // Synthesize event propagation if the browser does not support W3C\n  // event model.\n  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {\n    var ieEvent = opt_evt ||\n        /** @type {Event} */ (goog.getObjectByName('window.event'));\n    var evt = new goog.events.BrowserEvent(ieEvent, this);\n    /** @type {*} */\n    var retval = true;\n\n    if (goog.events.CAPTURE_SIMULATION_MODE ==\n        goog.events.CaptureSimulationMode.ON) {\n      // If we have not marked this event yet, we should perform capture\n      // simulation.\n      if (!goog.events.isMarkedIeEvent_(ieEvent)) {\n        goog.events.markIeEvent_(ieEvent);\n\n        var ancestors = [];\n        for (var parent = evt.currentTarget; parent;\n             parent = parent.parentNode) {\n          ancestors.push(parent);\n        }\n\n        // Fire capture listeners.\n        var type = listener.type;\n        for (var i = ancestors.length - 1; !evt.propagationStopped_ && i >= 0;\n             i--) {\n          evt.currentTarget = ancestors[i];\n          var result =\n              goog.events.fireListeners_(ancestors[i], type, true, evt);\n          retval = retval && result;\n        }\n\n        // Fire bubble listeners.\n        //\n        // We can technically rely on IE to perform bubble event\n        // propagation. However, it turns out that IE fires events in\n        // opposite order of attachEvent registration, which broke\n        // some code and tests that rely on the order. (While W3C DOM\n        // Level 2 Events TR leaves the event ordering unspecified,\n        // modern browsers and W3C DOM Level 3 Events Working Draft\n        // actually specify the order as the registration order.)\n        for (var i = 0; !evt.propagationStopped_ && i < ancestors.length; i++) {\n          evt.currentTarget = ancestors[i];\n          var result =\n              goog.events.fireListeners_(ancestors[i], type, false, evt);\n          retval = retval && result;\n        }\n      }\n    } else {\n      retval = goog.events.fireListener(listener, evt);\n    }\n    return retval;\n  }\n\n  // Otherwise, simply fire the listener.\n  return goog.events.fireListener(\n      listener, new goog.events.BrowserEvent(opt_evt, this));\n};\n\n\n/**\n * This is used to mark the IE event object so we do not do the Closure pass\n * twice for a bubbling event.\n * @param {Event} e The IE browser event.\n * @private\n */\ngoog.events.markIeEvent_ = function(e) {\n  // Only the keyCode and the returnValue can be changed. We use keyCode for\n  // non keyboard events.\n  // event.returnValue is a bit more tricky. It is undefined by default. A\n  // boolean false prevents the default action. In a window.onbeforeunload and\n  // the returnValue is non undefined it will be alerted. However, we will only\n  // modify the returnValue for keyboard events. We can get a problem if non\n  // closure events sets the keyCode or the returnValue\n\n  var useReturnValue = false;\n\n  if (e.keyCode == 0) {\n    // We cannot change the keyCode in case that srcElement is input[type=file].\n    // We could test that that is the case but that would allocate 3 objects.\n    // If we use try/catch we will only allocate extra objects in the case of a\n    // failure.\n\n    try {\n      e.keyCode = -1;\n      return;\n    } catch (ex) {\n      useReturnValue = true;\n    }\n  }\n\n  if (useReturnValue ||\n      /** @type {boolean|undefined} */ (e.returnValue) == undefined) {\n    e.returnValue = true;\n  }\n};\n\n\n/**\n * This is used to check if an IE event has already been handled by the Closure\n * system so we do not do the Closure pass twice for a bubbling event.\n * @param {Event} e  The IE browser event.\n * @return {boolean} True if the event object has been marked.\n * @private\n */\ngoog.events.isMarkedIeEvent_ = function(e) {\n  return e.keyCode < 0 || e.returnValue != undefined;\n};\n\n\n/**\n * Counter to create unique event ids.\n * @private {number}\n */\ngoog.events.uniqueIdCounter_ = 0;\n\n\n/**\n * Creates a unique event id.\n *\n * @param {string} identifier The identifier.\n * @return {string} A unique identifier.\n * @idGenerator {unique}\n */\ngoog.events.getUniqueId = function(identifier) {\n  return identifier + '_' + goog.events.uniqueIdCounter_++;\n};\n\n\n/**\n * @param {EventTarget} src The source object.\n * @return {goog.events.ListenerMap} A listener map for the given\n *     source object, or null if none exists.\n * @private\n */\ngoog.events.getListenerMap_ = function(src) {\n  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];\n  // IE serializes the property as well (e.g. when serializing outer\n  // HTML). So we must check that the value is of the correct type.\n  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;\n};\n\n\n/**\n * Expando property for listener function wrapper for Object with\n * handleEvent.\n * @private @const {string}\n */\ngoog.events.LISTENER_WRAPPER_PROP_ =\n    '__closure_events_fn_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * @param {Object|Function} listener The listener function or an\n *     object that contains handleEvent method.\n * @return {!Function} Either the original function or a function that\n *     calls obj.handleEvent. If the same listener is passed to this\n *     function more than once, the same function is guaranteed to be\n *     returned.\n */\ngoog.events.wrapListener = function(listener) {\n  goog.asserts.assert(listener, 'Listener can not be null.');\n\n  if (goog.isFunction(listener)) {\n    return listener;\n  }\n\n  goog.asserts.assert(\n      listener.handleEvent, 'An object listener must have handleEvent method.');\n  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {\n    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {\n      return /** @type {?} */ (listener).handleEvent(e);\n    };\n  }\n  return listener[goog.events.LISTENER_WRAPPER_PROP_];\n};\n\n\n// Register the browser event handler as an entry point, so that\n// it can be monitored for exception handling, etc.\ngoog.debug.entryPointRegistry.register(\n    /**\n     * @param {function(!Function): !Function} transformer The transforming\n     *     function.\n     */\n    function(transformer) {\n      goog.events.handleBrowserEvent_ =\n          transformer(goog.events.handleBrowserEvent_);\n    });\n","// Copyright 2005 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A disposable implementation of a custom\n * listenable/event target. See also: documentation for\n * `goog.events.Listenable`.\n *\n * @author arv@google.com (Erik Arvidsson) [Original implementation]\n * @see ../demos/eventtarget.html\n * @see goog.events.Listenable\n */\n\ngoog.provide('goog.events.EventTarget');\n\ngoog.require('goog.Disposable');\ngoog.require('goog.asserts');\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.Listenable');\ngoog.require('goog.events.ListenerMap');\ngoog.require('goog.object');\n\n\n\n/**\n * An implementation of `goog.events.Listenable` with full W3C\n * EventTarget-like support (capture/bubble mechanism, stopping event\n * propagation, preventing default actions).\n *\n * You may subclass this class to turn your class into a Listenable.\n *\n * Unless propagation is stopped, an event dispatched by an\n * EventTarget will bubble to the parent returned by\n * `getParentEventTarget`. To set the parent, call\n * `setParentEventTarget`. Subclasses that don't support\n * changing the parent can override the setter to throw an error.\n *\n * Example usage:\n * <pre>\n *   var source = new goog.events.EventTarget();\n *   function handleEvent(e) {\n *     alert('Type: ' + e.type + '; Target: ' + e.target);\n *   }\n *   source.listen('foo', handleEvent);\n *   // Or: goog.events.listen(source, 'foo', handleEvent);\n *   ...\n *   source.dispatchEvent('foo');  // will call handleEvent\n *   ...\n *   source.unlisten('foo', handleEvent);\n *   // Or: goog.events.unlisten(source, 'foo', handleEvent);\n * </pre>\n *\n * @constructor\n * @extends {goog.Disposable}\n * @implements {goog.events.Listenable}\n */\ngoog.events.EventTarget = function() {\n  goog.Disposable.call(this);\n\n  /**\n   * Maps of event type to an array of listeners.\n   * @private {!goog.events.ListenerMap}\n   */\n  this.eventTargetListeners_ = new goog.events.ListenerMap(this);\n\n  /**\n   * The object to use for event.target. Useful when mixing in an\n   * EventTarget to another object.\n   * @private {!Object}\n   */\n  this.actualEventTarget_ = this;\n\n  /**\n   * Parent event target, used during event bubbling.\n   *\n   * TODO(chrishenry): Change this to goog.events.Listenable. This\n   * currently breaks people who expect getParentEventTarget to return\n   * goog.events.EventTarget.\n   *\n   * @private {goog.events.EventTarget}\n   */\n  this.parentEventTarget_ = null;\n};\ngoog.inherits(goog.events.EventTarget, goog.Disposable);\ngoog.events.Listenable.addImplementation(goog.events.EventTarget);\n\n\n/**\n * An artificial cap on the number of ancestors you can have. This is mainly\n * for loop detection.\n * @const {number}\n * @private\n */\ngoog.events.EventTarget.MAX_ANCESTORS_ = 1000;\n\n\n/**\n * Returns the parent of this event target to use for bubbling.\n *\n * @return {goog.events.EventTarget} The parent EventTarget or null if\n *     there is no parent.\n * @override\n */\ngoog.events.EventTarget.prototype.getParentEventTarget = function() {\n  return this.parentEventTarget_;\n};\n\n\n/**\n * Sets the parent of this event target to use for capture/bubble\n * mechanism.\n * @param {goog.events.EventTarget} parent Parent listenable (null if none).\n */\ngoog.events.EventTarget.prototype.setParentEventTarget = function(parent) {\n  this.parentEventTarget_ = parent;\n};\n\n\n/**\n * Adds an event listener to the event target. The same handler can only be\n * added once per the type. Even if you add the same handler multiple times\n * using the same type then it will only be called once when the event is\n * dispatched.\n *\n * @param {string|!goog.events.EventId} type The type of the event to listen for\n * @param {function(?):?|{handleEvent:function(?):?}|null} handler The function\n *     to handle the event. The handler can also be an object that implements\n *     the handleEvent method which takes the event object as argument.\n * @param {boolean=} opt_capture In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase\n *     of the event.\n * @param {Object=} opt_handlerScope Object in whose scope to call\n *     the listener.\n * @deprecated Use `#listen` instead, when possible. Otherwise, use\n *     `goog.events.listen` if you are passing Object\n *     (instead of Function) as handler.\n */\ngoog.events.EventTarget.prototype.addEventListener = function(\n    type, handler, opt_capture, opt_handlerScope) {\n  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);\n};\n\n\n/**\n * Removes an event listener from the event target. The handler must be the\n * same object as the one added. If the handler has not been added then\n * nothing is done.\n *\n * @param {string} type The type of the event to listen for.\n * @param {function(?):?|{handleEvent:function(?):?}|null} handler The function\n *     to handle the event. The handler can also be an object that implements\n *     the handleEvent method which takes the event object as argument.\n * @param {boolean=} opt_capture In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase\n *     of the event.\n * @param {Object=} opt_handlerScope Object in whose scope to call\n *     the listener.\n * @deprecated Use `#unlisten` instead, when possible. Otherwise, use\n *     `goog.events.unlisten` if you are passing Object\n *     (instead of Function) as handler.\n */\ngoog.events.EventTarget.prototype.removeEventListener = function(\n    type, handler, opt_capture, opt_handlerScope) {\n  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.dispatchEvent = function(e) {\n  this.assertInitialized_();\n\n  var ancestorsTree, ancestor = this.getParentEventTarget();\n  if (ancestor) {\n    ancestorsTree = [];\n    var ancestorCount = 1;\n    for (; ancestor; ancestor = ancestor.getParentEventTarget()) {\n      ancestorsTree.push(ancestor);\n      goog.asserts.assert(\n          (++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_),\n          'infinite loop');\n    }\n  }\n\n  return goog.events.EventTarget.dispatchEventInternal_(\n      this.actualEventTarget_, e, ancestorsTree);\n};\n\n\n/**\n * Removes listeners from this object.  Classes that extend EventTarget may\n * need to override this method in order to remove references to DOM Elements\n * and additional listeners.\n * @override\n */\ngoog.events.EventTarget.prototype.disposeInternal = function() {\n  goog.events.EventTarget.superClass_.disposeInternal.call(this);\n\n  this.removeAllListeners();\n  this.parentEventTarget_ = null;\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.listen = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  this.assertInitialized_();\n  return this.eventTargetListeners_.add(\n      String(type), listener, false /* callOnce */, opt_useCapture,\n      opt_listenerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.listenOnce = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  return this.eventTargetListeners_.add(\n      String(type), listener, true /* callOnce */, opt_useCapture,\n      opt_listenerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.unlisten = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  return this.eventTargetListeners_.remove(\n      String(type), listener, opt_useCapture, opt_listenerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.unlistenByKey = function(key) {\n  return this.eventTargetListeners_.removeByKey(key);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {\n  // TODO(chrishenry): Previously, removeAllListeners can be called on\n  // uninitialized EventTarget, so we preserve that behavior. We\n  // should remove this when usages that rely on that fact are purged.\n  if (!this.eventTargetListeners_) {\n    return 0;\n  }\n  return this.eventTargetListeners_.removeAll(opt_type);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.fireListeners = function(\n    type, capture, eventObject) {\n  // TODO(chrishenry): Original code avoids array creation when there\n  // is no listener, so we do the same. If this optimization turns\n  // out to be not required, we can replace this with\n  // getListeners(type, capture) instead, which is simpler.\n  var listenerArray = this.eventTargetListeners_.listeners[String(type)];\n  if (!listenerArray) {\n    return true;\n  }\n  listenerArray = listenerArray.concat();\n\n  var rv = true;\n  for (var i = 0; i < listenerArray.length; ++i) {\n    var listener = listenerArray[i];\n    // We might not have a listener if the listener was removed.\n    if (listener && !listener.removed && listener.capture == capture) {\n      var listenerFn = listener.listener;\n      var listenerHandler = listener.handler || listener.src;\n\n      if (listener.callOnce) {\n        this.unlistenByKey(listener);\n      }\n      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;\n    }\n  }\n\n  return rv && eventObject.returnValue_ != false;\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.getListeners = function(type, capture) {\n  return this.eventTargetListeners_.getListeners(String(type), capture);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.getListener = function(\n    type, listener, capture, opt_listenerScope) {\n  return this.eventTargetListeners_.getListener(\n      String(type), listener, capture, opt_listenerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.hasListener = function(\n    opt_type, opt_capture) {\n  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;\n  return this.eventTargetListeners_.hasListener(id, opt_capture);\n};\n\n\n/**\n * Sets the target to be used for `event.target` when firing\n * event. Mainly used for testing. For example, see\n * `goog.testing.events.mixinListenable`.\n * @param {!Object} target The target.\n */\ngoog.events.EventTarget.prototype.setTargetForTesting = function(target) {\n  this.actualEventTarget_ = target;\n};\n\n\n/**\n * Asserts that the event target instance is initialized properly.\n * @private\n */\ngoog.events.EventTarget.prototype.assertInitialized_ = function() {\n  goog.asserts.assert(\n      this.eventTargetListeners_,\n      'Event target is not initialized. Did you call the superclass ' +\n          '(goog.events.EventTarget) constructor?');\n};\n\n\n/**\n * Dispatches the given event on the ancestorsTree.\n *\n * @param {!Object} target The target to dispatch on.\n * @param {goog.events.Event|Object|string} e The event object.\n * @param {Array<goog.events.Listenable>=} opt_ancestorsTree The ancestors\n *     tree of the target, in reverse order from the closest ancestor\n *     to the root event target. May be null if the target has no ancestor.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the listeners returns false) this will also return false.\n * @private\n */\ngoog.events.EventTarget.dispatchEventInternal_ = function(\n    target, e, opt_ancestorsTree) {\n  /** @suppress {missingProperties} */\n  var type = e.type || /** @type {string} */ (e);\n\n  // If accepting a string or object, create a custom event object so that\n  // preventDefault and stopPropagation work with the event.\n  if (goog.isString(e)) {\n    e = new goog.events.Event(e, target);\n  } else if (!(e instanceof goog.events.Event)) {\n    var oldEvent = e;\n    e = new goog.events.Event(type, target);\n    goog.object.extend(e, oldEvent);\n  } else {\n    e.target = e.target || target;\n  }\n\n  var rv = true, currentTarget;\n\n  // Executes all capture listeners on the ancestors, if any.\n  if (opt_ancestorsTree) {\n    for (var i = opt_ancestorsTree.length - 1; !e.propagationStopped_ && i >= 0;\n         i--) {\n      currentTarget = e.currentTarget = opt_ancestorsTree[i];\n      rv = currentTarget.fireListeners(type, true, e) && rv;\n    }\n  }\n\n  // Executes capture and bubble listeners on the target.\n  if (!e.propagationStopped_) {\n    currentTarget = /** @type {?} */ (e.currentTarget = target);\n    rv = currentTarget.fireListeners(type, true, e) && rv;\n    if (!e.propagationStopped_) {\n      rv = currentTarget.fireListeners(type, false, e) && rv;\n    }\n  }\n\n  // Executes all bubble listeners on the ancestors, if any.\n  if (opt_ancestorsTree) {\n    for (i = 0; !e.propagationStopped_ && i < opt_ancestorsTree.length; i++) {\n      currentTarget = e.currentTarget = opt_ancestorsTree[i];\n      rv = currentTarget.fireListeners(type, false, e) && rv;\n    }\n  }\n\n  return rv;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A timer class to which other classes and objects can listen on.\n * This is only an abstraction above `setInterval`.\n *\n * @see ../demos/timers.html\n */\n\ngoog.provide('goog.Timer');\n\ngoog.require('goog.Promise');\ngoog.require('goog.events.EventTarget');\n\n\n\n/**\n * Class for handling timing events.\n *\n * @param {number=} opt_interval Number of ms between ticks (default: 1ms).\n * @param {Object=} opt_timerObject  An object that has `setTimeout`,\n *     `setInterval`, `clearTimeout` and `clearInterval`\n *     (e.g., `window`).\n * @constructor\n * @extends {goog.events.EventTarget}\n */\ngoog.Timer = function(opt_interval, opt_timerObject) {\n  goog.events.EventTarget.call(this);\n\n  /**\n   * Number of ms between ticks\n   * @private {number}\n   */\n  this.interval_ = opt_interval || 1;\n\n  /**\n   * An object that implements `setTimeout`, `setInterval`,\n   * `clearTimeout` and `clearInterval`. We default to the window\n   * object. Changing this on {@link goog.Timer.prototype} changes the object\n   * for all timer instances which can be useful if your environment has some\n   * other implementation of timers than the `window` object.\n   * @private {{setTimeout:!Function, clearTimeout:!Function}}\n   */\n  this.timerObject_ = /** @type {{setTimeout, clearTimeout}} */ (\n      opt_timerObject || goog.Timer.defaultTimerObject);\n\n  /**\n   * Cached `tick_` bound to the object for later use in the timer.\n   * @private {Function}\n   * @const\n   */\n  this.boundTick_ = goog.bind(this.tick_, this);\n\n  /**\n   * Firefox browser often fires the timer event sooner (sometimes MUCH sooner)\n   * than the requested timeout. So we compare the time to when the event was\n   * last fired, and reschedule if appropriate. See also\n   * {@link goog.Timer.intervalScale}.\n   * @private {number}\n   */\n  this.last_ = goog.now();\n};\ngoog.inherits(goog.Timer, goog.events.EventTarget);\n\n\n/**\n * Maximum timeout value.\n *\n * Timeout values too big to fit into a signed 32-bit integer may cause overflow\n * in FF, Safari, and Chrome, resulting in the timeout being scheduled\n * immediately. It makes more sense simply not to schedule these timeouts, since\n * 24.8 days is beyond a reasonable expectation for the browser to stay open.\n *\n * @private {number}\n * @const\n */\ngoog.Timer.MAX_TIMEOUT_ = 2147483647;\n\n\n/**\n * A timer ID that cannot be returned by any known implementation of\n * `window.setTimeout`. Passing this value to `window.clearTimeout`\n * should therefore be a no-op.\n *\n * @private {number}\n * @const\n */\ngoog.Timer.INVALID_TIMEOUT_ID_ = -1;\n\n\n/**\n * Whether this timer is enabled\n * @type {boolean}\n */\ngoog.Timer.prototype.enabled = false;\n\n\n/**\n * An object that implements `setTimeout`, `setInterval`,\n * `clearTimeout` and `clearInterval`. We default to the global\n * object. Changing `goog.Timer.defaultTimerObject` changes the object for\n * all timer instances which can be useful if your environment has some other\n * implementation of timers you'd like to use.\n * @type {{setTimeout, clearTimeout}}\n */\ngoog.Timer.defaultTimerObject = goog.global;\n\n\n/**\n * Variable that controls the timer error correction. If the timer is called\n * before the requested interval times `intervalScale`, which often\n * happens on Mozilla, the timer is rescheduled.\n * @see {@link #last_}\n * @type {number}\n */\ngoog.Timer.intervalScale = 0.8;\n\n\n/**\n * Variable for storing the result of `setInterval`.\n * @private {?number}\n */\ngoog.Timer.prototype.timer_ = null;\n\n\n/**\n * Gets the interval of the timer.\n * @return {number} interval Number of ms between ticks.\n */\ngoog.Timer.prototype.getInterval = function() {\n  return this.interval_;\n};\n\n\n/**\n * Sets the interval of the timer.\n * @param {number} interval Number of ms between ticks.\n */\ngoog.Timer.prototype.setInterval = function(interval) {\n  this.interval_ = interval;\n  if (this.timer_ && this.enabled) {\n    // Stop and then start the timer to reset the interval.\n    this.stop();\n    this.start();\n  } else if (this.timer_) {\n    this.stop();\n  }\n};\n\n\n/**\n * Callback for the `setTimeout` used by the timer.\n * @private\n */\ngoog.Timer.prototype.tick_ = function() {\n  if (this.enabled) {\n    var elapsed = goog.now() - this.last_;\n    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {\n      this.timer_ = this.timerObject_.setTimeout(\n          this.boundTick_, this.interval_ - elapsed);\n      return;\n    }\n\n    // Prevents setInterval from registering a duplicate timeout when called\n    // in the timer event handler.\n    if (this.timer_) {\n      this.timerObject_.clearTimeout(this.timer_);\n      this.timer_ = null;\n    }\n\n    this.dispatchTick();\n    // The timer could be stopped in the timer event handler.\n    if (this.enabled) {\n      this.timer_ =\n          this.timerObject_.setTimeout(this.boundTick_, this.interval_);\n      this.last_ = goog.now();\n    }\n  }\n};\n\n\n/**\n * Dispatches the TICK event. This is its own method so subclasses can override.\n */\ngoog.Timer.prototype.dispatchTick = function() {\n  this.dispatchEvent(goog.Timer.TICK);\n};\n\n\n/**\n * Starts the timer.\n */\ngoog.Timer.prototype.start = function() {\n  this.enabled = true;\n\n  // If there is no interval already registered, start it now\n  if (!this.timer_) {\n    // IMPORTANT!\n    // window.setInterval in FireFox has a bug - it fires based on\n    // absolute time, rather than on relative time. What this means\n    // is that if a computer is sleeping/hibernating for 24 hours\n    // and the timer interval was configured to fire every 1000ms,\n    // then after the PC wakes up the timer will fire, in rapid\n    // succession, 3600*24 times.\n    // This bug is described here and is already fixed, but it will\n    // take time to propagate, so for now I am switching this over\n    // to setTimeout logic.\n    //     https://bugzilla.mozilla.org/show_bug.cgi?id=376643\n    //\n    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);\n    this.last_ = goog.now();\n  }\n};\n\n\n/**\n * Stops the timer.\n */\ngoog.Timer.prototype.stop = function() {\n  this.enabled = false;\n  if (this.timer_) {\n    this.timerObject_.clearTimeout(this.timer_);\n    this.timer_ = null;\n  }\n};\n\n\n/** @override */\ngoog.Timer.prototype.disposeInternal = function() {\n  goog.Timer.superClass_.disposeInternal.call(this);\n  this.stop();\n  delete this.timerObject_;\n};\n\n\n/**\n * Constant for the timer's event type.\n * @const\n */\ngoog.Timer.TICK = 'tick';\n\n\n/**\n * Calls the given function once, after the optional pause.\n * <p>\n * The function is always called asynchronously, even if the delay is 0. This\n * is a common trick to schedule a function to run after a batch of browser\n * event processing.\n *\n * @param {function(this:SCOPE)|{handleEvent:function()}|null} listener Function\n *     or object that has a handleEvent method.\n * @param {number=} opt_delay Milliseconds to wait; default is 0.\n * @param {SCOPE=} opt_handler Object in whose scope to call the listener.\n * @return {number} A handle to the timer ID.\n * @template SCOPE\n */\ngoog.Timer.callOnce = function(listener, opt_delay, opt_handler) {\n  if (goog.isFunction(listener)) {\n    if (opt_handler) {\n      listener = goog.bind(listener, opt_handler);\n    }\n  } else if (listener && typeof listener.handleEvent == 'function') {\n    // using typeof to prevent strict js warning\n    listener = goog.bind(listener.handleEvent, listener);\n  } else {\n    throw new Error('Invalid listener argument');\n  }\n\n  if (Number(opt_delay) > goog.Timer.MAX_TIMEOUT_) {\n    // Timeouts greater than MAX_INT return immediately due to integer\n    // overflow in many browsers.  Since MAX_INT is 24.8 days, just don't\n    // schedule anything at all.\n    return goog.Timer.INVALID_TIMEOUT_ID_;\n  } else {\n    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);\n  }\n};\n\n\n/**\n * Clears a timeout initiated by {@link #callOnce}.\n * @param {?number} timerId A timer ID.\n */\ngoog.Timer.clear = function(timerId) {\n  goog.Timer.defaultTimerObject.clearTimeout(timerId);\n};\n\n\n/**\n * @param {number} delay Milliseconds to wait.\n * @param {(RESULT|goog.Thenable<RESULT>|Thenable)=} opt_result The value\n *     with which the promise will be resolved.\n * @return {!goog.Promise<RESULT>} A promise that will be resolved after\n *     the specified delay, unless it is canceled first.\n * @template RESULT\n */\ngoog.Timer.promise = function(delay, opt_result) {\n  var timerKey = null;\n  return new goog\n      .Promise(function(resolve, reject) {\n        timerKey =\n            goog.Timer.callOnce(function() { resolve(opt_result); }, delay);\n        if (timerKey == goog.Timer.INVALID_TIMEOUT_ID_) {\n          reject(new Error('Failed to schedule timer.'));\n        }\n      })\n      .thenCatch(function(error) {\n        // Clear the timer. The most likely reason is \"cancel\" signal.\n        goog.Timer.clear(timerKey);\n        throw error;\n      });\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Generics method for collection-like classes and objects.\n *\n * @author arv@google.com (Erik Arvidsson)\n *\n * This file contains functions to work with collections. It supports using\n * Map, Set, Array and Object and other classes that implement collection-like\n * methods.\n * @suppress {strictMissingProperties}\n */\n\n\ngoog.provide('goog.structs');\n\ngoog.require('goog.array');\ngoog.require('goog.object');\n\n\n// We treat an object as a dictionary if it has getKeys or it is an object that\n// isn't arrayLike.\n\n\n/**\n * Returns the number of values in the collection-like object.\n * @param {Object} col The collection-like object.\n * @return {number} The number of values in the collection-like object.\n */\ngoog.structs.getCount = function(col) {\n  if (col.getCount && typeof col.getCount == 'function') {\n    return col.getCount();\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return col.length;\n  }\n  return goog.object.getCount(col);\n};\n\n\n/**\n * Returns the values of the collection-like object.\n * @param {Object} col The collection-like object.\n * @return {!Array<?>} The values in the collection-like object.\n */\ngoog.structs.getValues = function(col) {\n  if (col.getValues && typeof col.getValues == 'function') {\n    return col.getValues();\n  }\n  if (goog.isString(col)) {\n    return col.split('');\n  }\n  if (goog.isArrayLike(col)) {\n    var rv = [];\n    var l = col.length;\n    for (var i = 0; i < l; i++) {\n      rv.push(col[i]);\n    }\n    return rv;\n  }\n  return goog.object.getValues(col);\n};\n\n\n/**\n * Returns the keys of the collection. Some collections have no notion of\n * keys/indexes and this function will return undefined in those cases.\n * @param {Object} col The collection-like object.\n * @return {!Array|undefined} The keys in the collection.\n */\ngoog.structs.getKeys = function(col) {\n  if (col.getKeys && typeof col.getKeys == 'function') {\n    return col.getKeys();\n  }\n  // if we have getValues but no getKeys we know this is a key-less collection\n  if (col.getValues && typeof col.getValues == 'function') {\n    return undefined;\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    var rv = [];\n    var l = col.length;\n    for (var i = 0; i < l; i++) {\n      rv.push(i);\n    }\n    return rv;\n  }\n\n  return goog.object.getKeys(col);\n};\n\n\n/**\n * Whether the collection contains the given value. This is O(n) and uses\n * equals (==) to test the existence.\n * @param {Object} col The collection-like object.\n * @param {*} val The value to check for.\n * @return {boolean} True if the map contains the value.\n */\ngoog.structs.contains = function(col, val) {\n  if (col.contains && typeof col.contains == 'function') {\n    return col.contains(val);\n  }\n  if (col.containsValue && typeof col.containsValue == 'function') {\n    return col.containsValue(val);\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return goog.array.contains(/** @type {!Array<?>} */ (col), val);\n  }\n  return goog.object.containsValue(col, val);\n};\n\n\n/**\n * Whether the collection is empty.\n * @param {Object} col The collection-like object.\n * @return {boolean} True if empty.\n */\ngoog.structs.isEmpty = function(col) {\n  if (col.isEmpty && typeof col.isEmpty == 'function') {\n    return col.isEmpty();\n  }\n\n  // We do not use goog.string.isEmptyOrWhitespace because here we treat the\n  // string as\n  // collection and as such even whitespace matters\n\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return goog.array.isEmpty(/** @type {!Array<?>} */ (col));\n  }\n  return goog.object.isEmpty(col);\n};\n\n\n/**\n * Removes all the elements from the collection.\n * @param {Object} col The collection-like object.\n */\ngoog.structs.clear = function(col) {\n  // NOTE(arv): This should not contain strings because strings are immutable\n  if (col.clear && typeof col.clear == 'function') {\n    col.clear();\n  } else if (goog.isArrayLike(col)) {\n    goog.array.clear(/** @type {IArrayLike<?>} */ (col));\n  } else {\n    goog.object.clear(col);\n  }\n};\n\n\n/**\n * Calls a function for each value in a collection. The function takes\n * three arguments; the value, the key and the collection.\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):?} f The function to call for every value.\n *     This function takes\n *     3 arguments (the value, the key or undefined if the collection has no\n *     notion of keys, and the collection) and the return value is irrelevant.\n * @param {T=} opt_obj The object to be used as the value of 'this'\n *     within `f`.\n * @template T,S\n * @deprecated Use a more specific method, e.g. goog.array.forEach,\n *     goog.object.forEach, or for-of.\n */\ngoog.structs.forEach = function(col, f, opt_obj) {\n  if (col.forEach && typeof col.forEach == 'function') {\n    col.forEach(f, opt_obj);\n  } else if (goog.isArrayLike(col) || goog.isString(col)) {\n    goog.array.forEach(/** @type {!Array<?>} */ (col), f, opt_obj);\n  } else {\n    var keys = goog.structs.getKeys(col);\n    var values = goog.structs.getValues(col);\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n      f.call(/** @type {?} */ (opt_obj), values[i], keys && keys[i], col);\n    }\n  }\n};\n\n\n/**\n * Calls a function for every value in the collection. When a call returns true,\n * adds the value to a new collection (Array is returned by default).\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):boolean} f The function to call for every\n *     value. This function takes\n *     3 arguments (the value, the key or undefined if the collection has no\n *     notion of keys, and the collection) and should return a Boolean. If the\n *     return value is true the value is added to the result collection. If it\n *     is false the value is not included.\n * @param {T=} opt_obj The object to be used as the value of 'this'\n *     within `f`.\n * @return {!Object|!Array<?>} A new collection where the passed values are\n *     present. If col is a key-less collection an array is returned.  If col\n *     has keys and values a plain old JS object is returned.\n * @template T,S\n */\ngoog.structs.filter = function(col, f, opt_obj) {\n  if (typeof col.filter == 'function') {\n    return col.filter(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return goog.array.filter(/** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n\n  var rv;\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  if (keys) {\n    rv = {};\n    for (var i = 0; i < l; i++) {\n      if (f.call(/** @type {?} */ (opt_obj), values[i], keys[i], col)) {\n        rv[keys[i]] = values[i];\n      }\n    }\n  } else {\n    // We should not use goog.array.filter here since we want to make sure that\n    // the index is undefined as well as make sure that col is passed to the\n    // function.\n    rv = [];\n    for (var i = 0; i < l; i++) {\n      if (f.call(opt_obj, values[i], undefined, col)) {\n        rv.push(values[i]);\n      }\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Calls a function for every value in the collection and adds the result into a\n * new collection (defaults to creating a new Array).\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):V} f The function to call for every value.\n *     This function takes 3 arguments (the value, the key or undefined if the\n *     collection has no notion of keys, and the collection) and should return\n *     something. The result will be used as the value in the new collection.\n * @param {T=} opt_obj  The object to be used as the value of 'this'\n *     within `f`.\n * @return {!Object<V>|!Array<V>} A new collection with the new values.  If\n *     col is a key-less collection an array is returned.  If col has keys and\n *     values a plain old JS object is returned.\n * @template T,S,V\n */\ngoog.structs.map = function(col, f, opt_obj) {\n  if (typeof col.map == 'function') {\n    return col.map(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return goog.array.map(/** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n\n  var rv;\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  if (keys) {\n    rv = {};\n    for (var i = 0; i < l; i++) {\n      rv[keys[i]] = f.call(/** @type {?} */ (opt_obj), values[i], keys[i], col);\n    }\n  } else {\n    // We should not use goog.array.map here since we want to make sure that\n    // the index is undefined as well as make sure that col is passed to the\n    // function.\n    rv = [];\n    for (var i = 0; i < l; i++) {\n      rv[i] = f.call(/** @type {?} */ (opt_obj), values[i], undefined, col);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Calls f for each value in a collection. If any call returns true this returns\n * true (without checking the rest). If all returns false this returns false.\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):boolean} f The function to call for every\n *     value. This function takes 3 arguments (the value, the key or undefined\n *     if the collection has no notion of keys, and the collection) and should\n *     return a boolean.\n * @param {T=} opt_obj  The object to be used as the value of 'this'\n *     within `f`.\n * @return {boolean} True if any value passes the test.\n * @template T,S\n */\ngoog.structs.some = function(col, f, opt_obj) {\n  if (typeof col.some == 'function') {\n    return col.some(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return goog.array.some(/** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  for (var i = 0; i < l; i++) {\n    if (f.call(/** @type {?} */ (opt_obj), values[i], keys && keys[i], col)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Calls f for each value in a collection. If all calls return true this return\n * true this returns true. If any returns false this returns false at this point\n *  and does not continue to check the remaining values.\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):boolean} f The function to call for every\n *     value. This function takes 3 arguments (the value, the key or\n *     undefined if the collection has no notion of keys, and the collection)\n *     and should return a boolean.\n * @param {T=} opt_obj  The object to be used as the value of 'this'\n *     within `f`.\n * @return {boolean} True if all key-value pairs pass the test.\n * @template T,S\n */\ngoog.structs.every = function(col, f, opt_obj) {\n  if (typeof col.every == 'function') {\n    return col.every(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || goog.isString(col)) {\n    return goog.array.every(/** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  for (var i = 0; i < l; i++) {\n    if (!f.call(/** @type {?} */ (opt_obj), values[i], keys && keys[i], col)) {\n      return false;\n    }\n  }\n  return true;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Datastructure: Hash Map.\n *\n * @author arv@google.com (Erik Arvidsson)\n *\n * This file contains an implementation of a Map structure. It implements a lot\n * of the methods used in goog.structs so those functions work on hashes. This\n * is best suited for complex key types. For simple keys such as numbers and\n * strings consider using the lighter-weight utilities in goog.object.\n */\n\n\ngoog.provide('goog.structs.Map');\n\ngoog.require('goog.iter.Iterator');\ngoog.require('goog.iter.StopIteration');\n\n\n\n/**\n * Class for Hash Map datastructure.\n * @param {*=} opt_map Map or Object to initialize the map with.\n * @param {...*} var_args If 2 or more arguments are present then they\n *     will be used as key-value pairs.\n * @constructor\n * @template K, V\n * @deprecated This type is misleading: use ES6 Map instead.\n */\ngoog.structs.Map = function(opt_map, var_args) {\n\n  /**\n   * Underlying JS object used to implement the map.\n   * @private {!Object}\n   */\n  this.map_ = {};\n\n  /**\n   * An array of keys. This is necessary for two reasons:\n   *   1. Iterating the keys using for (var key in this.map_) allocates an\n   *      object for every key in IE which is really bad for IE6 GC perf.\n   *   2. Without a side data structure, we would need to escape all the keys\n   *      as that would be the only way we could tell during iteration if the\n   *      key was an internal key or a property of the object.\n   *\n   * This array can contain deleted keys so it's necessary to check the map\n   * as well to see if the key is still in the map (this doesn't require a\n   * memory allocation in IE).\n   * @private {!Array<string>}\n   */\n  this.keys_ = [];\n\n  /**\n   * The number of key value pairs in the map.\n   * @private {number}\n   */\n  this.count_ = 0;\n\n  /**\n   * Version used to detect changes while iterating.\n   * @private {number}\n   */\n  this.version_ = 0;\n\n  var argLength = arguments.length;\n\n  if (argLength > 1) {\n    if (argLength % 2) {\n      throw new Error('Uneven number of arguments');\n    }\n    for (var i = 0; i < argLength; i += 2) {\n      this.set(arguments[i], arguments[i + 1]);\n    }\n  } else if (opt_map) {\n    this.addAll(/** @type {!Object} */ (opt_map));\n  }\n};\n\n\n/**\n * @return {number} The number of key-value pairs in the map.\n */\ngoog.structs.Map.prototype.getCount = function() {\n  return this.count_;\n};\n\n\n/**\n * Returns the values of the map.\n * @return {!Array<V>} The values in the map.\n */\ngoog.structs.Map.prototype.getValues = function() {\n  this.cleanupKeysArray_();\n\n  var rv = [];\n  for (var i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    rv.push(this.map_[key]);\n  }\n  return rv;\n};\n\n\n/**\n * Returns the keys of the map.\n * @return {!Array<string>} Array of string values.\n */\ngoog.structs.Map.prototype.getKeys = function() {\n  this.cleanupKeysArray_();\n  return /** @type {!Array<string>} */ (this.keys_.concat());\n};\n\n\n/**\n * Whether the map contains the given key.\n * @param {*} key The key to check for.\n * @return {boolean} Whether the map contains the key.\n */\ngoog.structs.Map.prototype.containsKey = function(key) {\n  return goog.structs.Map.hasKey_(this.map_, key);\n};\n\n\n/**\n * Whether the map contains the given value. This is O(n).\n * @param {V} val The value to check for.\n * @return {boolean} Whether the map contains the value.\n */\ngoog.structs.Map.prototype.containsValue = function(val) {\n  for (var i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Whether this map is equal to the argument map.\n * @param {goog.structs.Map} otherMap The map against which to test equality.\n * @param {function(V, V): boolean=} opt_equalityFn Optional equality function\n *     to test equality of values. If not specified, this will test whether\n *     the values contained in each map are identical objects.\n * @return {boolean} Whether the maps are equal.\n */\ngoog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {\n  if (this === otherMap) {\n    return true;\n  }\n\n  if (this.count_ != otherMap.getCount()) {\n    return false;\n  }\n\n  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;\n\n  this.cleanupKeysArray_();\n  for (var key, i = 0; key = this.keys_[i]; i++) {\n    if (!equalityFn(this.get(key), otherMap.get(key))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Default equality test for values.\n * @param {*} a The first value.\n * @param {*} b The second value.\n * @return {boolean} Whether a and b reference the same object.\n */\ngoog.structs.Map.defaultEquals = function(a, b) {\n  return a === b;\n};\n\n\n/**\n * @return {boolean} Whether the map is empty.\n */\ngoog.structs.Map.prototype.isEmpty = function() {\n  return this.count_ == 0;\n};\n\n\n/**\n * Removes all key-value pairs from the map.\n */\ngoog.structs.Map.prototype.clear = function() {\n  this.map_ = {};\n  this.keys_.length = 0;\n  this.count_ = 0;\n  this.version_ = 0;\n};\n\n\n/**\n * Removes a key-value pair based on the key. This is O(logN) amortized due to\n * updating the keys array whenever the count becomes half the size of the keys\n * in the keys array.\n * @param {*} key  The key to remove.\n * @return {boolean} Whether object was removed.\n */\ngoog.structs.Map.prototype.remove = function(key) {\n  if (goog.structs.Map.hasKey_(this.map_, key)) {\n    delete this.map_[key];\n    this.count_--;\n    this.version_++;\n\n    // clean up the keys array if the threshold is hit\n    if (this.keys_.length > 2 * this.count_) {\n      this.cleanupKeysArray_();\n    }\n\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Cleans up the temp keys array by removing entries that are no longer in the\n * map.\n * @private\n */\ngoog.structs.Map.prototype.cleanupKeysArray_ = function() {\n  if (this.count_ != this.keys_.length) {\n    // First remove keys that are no longer in the map.\n    var srcIndex = 0;\n    var destIndex = 0;\n    while (srcIndex < this.keys_.length) {\n      var key = this.keys_[srcIndex];\n      if (goog.structs.Map.hasKey_(this.map_, key)) {\n        this.keys_[destIndex++] = key;\n      }\n      srcIndex++;\n    }\n    this.keys_.length = destIndex;\n  }\n\n  if (this.count_ != this.keys_.length) {\n    // If the count still isn't correct, that means we have duplicates. This can\n    // happen when the same key is added and removed multiple times. Now we have\n    // to allocate one extra Object to remove the duplicates. This could have\n    // been done in the first pass, but in the common case, we can avoid\n    // allocating an extra object by only doing this when necessary.\n    var seen = {};\n    var srcIndex = 0;\n    var destIndex = 0;\n    while (srcIndex < this.keys_.length) {\n      var key = this.keys_[srcIndex];\n      if (!(goog.structs.Map.hasKey_(seen, key))) {\n        this.keys_[destIndex++] = key;\n        seen[key] = 1;\n      }\n      srcIndex++;\n    }\n    this.keys_.length = destIndex;\n  }\n};\n\n\n/**\n * Returns the value for the given key.  If the key is not found and the default\n * value is not given this will return `undefined`.\n * @param {*} key The key to get the value for.\n * @param {DEFAULT=} opt_val The value to return if no item is found for the\n *     given key, defaults to undefined.\n * @return {V|DEFAULT} The value for the given key.\n * @template DEFAULT\n */\ngoog.structs.Map.prototype.get = function(key, opt_val) {\n  if (goog.structs.Map.hasKey_(this.map_, key)) {\n    return this.map_[key];\n  }\n  return opt_val;\n};\n\n\n/**\n * Adds a key-value pair to the map.\n * @param {*} key The key.\n * @param {V} value The value to add.\n * @return {*} Some subclasses return a value.\n */\ngoog.structs.Map.prototype.set = function(key, value) {\n  if (!(goog.structs.Map.hasKey_(this.map_, key))) {\n    this.count_++;\n    // TODO(johnlenz): This class lies, it claims to return an array of string\n    // keys, but instead returns the original object used.\n    this.keys_.push(/** @type {?} */ (key));\n    // Only change the version if we add a new key.\n    this.version_++;\n  }\n  this.map_[key] = value;\n};\n\n\n/**\n * Adds multiple key-value pairs from another goog.structs.Map or Object.\n * @param {?Object} map Object containing the data to add.\n */\ngoog.structs.Map.prototype.addAll = function(map) {\n  if (map instanceof goog.structs.Map) {\n    var keys = map.getKeys();\n    for (var i = 0; i < keys.length; i++) {\n      this.set(keys[i], map.get(keys[i]));\n    }\n  } else {\n    for (var key in map) {\n      this.set(key, map[key]);\n    }\n  }\n};\n\n\n/**\n * Calls the given function on each entry in the map.\n * @param {function(this:T, V, K, goog.structs.Map<K,V>)} f\n * @param {T=} opt_obj The value of \"this\" inside f.\n * @template T\n */\ngoog.structs.Map.prototype.forEach = function(f, opt_obj) {\n  var keys = this.getKeys();\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = this.get(key);\n    f.call(opt_obj, value, key, this);\n  }\n};\n\n\n/**\n * Clones a map and returns a new map.\n * @return {!goog.structs.Map} A new map with the same key-value pairs.\n */\ngoog.structs.Map.prototype.clone = function() {\n  return new goog.structs.Map(this);\n};\n\n\n/**\n * Returns a new map in which all the keys and values are interchanged\n * (keys become values and values become keys). If multiple keys map to the\n * same value, the chosen transposed value is implementation-dependent.\n *\n * It acts very similarly to {goog.object.transpose(Object)}.\n *\n * @return {!goog.structs.Map} The transposed map.\n */\ngoog.structs.Map.prototype.transpose = function() {\n  var transposed = new goog.structs.Map();\n  for (var i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    var value = this.map_[key];\n    transposed.set(value, key);\n  }\n\n  return transposed;\n};\n\n\n/**\n * @return {!Object} Object representation of the map.\n */\ngoog.structs.Map.prototype.toObject = function() {\n  this.cleanupKeysArray_();\n  var obj = {};\n  for (var i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    obj[key] = this.map_[key];\n  }\n  return obj;\n};\n\n\n/**\n * Returns an iterator that iterates over the keys in the map.  Removal of keys\n * while iterating might have undesired side effects.\n * @return {!goog.iter.Iterator} An iterator over the keys in the map.\n */\ngoog.structs.Map.prototype.getKeyIterator = function() {\n  return this.__iterator__(true);\n};\n\n\n/**\n * Returns an iterator that iterates over the values in the map.  Removal of\n * keys while iterating might have undesired side effects.\n * @return {!goog.iter.Iterator} An iterator over the values in the map.\n */\ngoog.structs.Map.prototype.getValueIterator = function() {\n  return this.__iterator__(false);\n};\n\n\n/**\n * Returns an iterator that iterates over the values or the keys in the map.\n * This throws an exception if the map was mutated since the iterator was\n * created.\n * @param {boolean=} opt_keys True to iterate over the keys. False to iterate\n *     over the values.  The default value is false.\n * @return {!goog.iter.Iterator} An iterator over the values or keys in the map.\n */\ngoog.structs.Map.prototype.__iterator__ = function(opt_keys) {\n  // Clean up keys to minimize the risk of iterating over dead keys.\n  this.cleanupKeysArray_();\n\n  var i = 0;\n  var version = this.version_;\n  var selfObj = this;\n\n  var newIter = new goog.iter.Iterator;\n  newIter.next = function() {\n    if (version != selfObj.version_) {\n      throw new Error('The map has changed since the iterator was created');\n    }\n    if (i >= selfObj.keys_.length) {\n      throw goog.iter.StopIteration;\n    }\n    var key = selfObj.keys_[i++];\n    return opt_keys ? key : selfObj.map_[key];\n  };\n  return newIter;\n};\n\n\n/**\n * Safe way to test for hasOwnProperty.  It even allows testing for\n * 'hasOwnProperty'.\n * @param {!Object} obj The object to test for presence of the given key.\n * @param {*} key The key to check for.\n * @return {boolean} Whether the object has the key.\n * @private\n */\ngoog.structs.Map.hasKey_ = function(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n","// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Simple utilities for dealing with URI strings.\n *\n * This is intended to be a lightweight alternative to constructing goog.Uri\n * objects.  Whereas goog.Uri adds several kilobytes to the binary regardless\n * of how much of its functionality you use, this is designed to be a set of\n * mostly-independent utilities so that the compiler includes only what is\n * necessary for the task.  Estimated savings of porting is 5k pre-gzip and\n * 1.5k post-gzip.  To ensure the savings remain, future developers should\n * avoid adding new functionality to existing functions, but instead create\n * new ones and factor out shared code.\n *\n * Many of these utilities have limited functionality, tailored to common\n * cases.  The query parameter utilities assume that the parameter keys are\n * already encoded, since most keys are compile-time alphanumeric strings.  The\n * query parameter mutation utilities also do not tolerate fragment identifiers.\n *\n * By design, these functions can be slower than goog.Uri equivalents.\n * Repeated calls to some of functions may be quadratic in behavior for IE,\n * although the effect is somewhat limited given the 2kb limit.\n *\n * One advantage of the limited functionality here is that this approach is\n * less sensitive to differences in URI encodings than goog.Uri, since these\n * functions operate on strings directly, rather than decoding them and\n * then re-encoding.\n *\n * Uses features of RFC 3986 for parsing/formatting URIs:\n *   http://www.ietf.org/rfc/rfc3986.txt\n *\n * @author gboyer@google.com (Garrett Boyer) - The \"lightened\" design.\n * @author msamuel@google.com (Mike Samuel) - Domain knowledge and regexes.\n */\n\ngoog.provide('goog.uri.utils');\ngoog.provide('goog.uri.utils.ComponentIndex');\ngoog.provide('goog.uri.utils.QueryArray');\ngoog.provide('goog.uri.utils.QueryValue');\ngoog.provide('goog.uri.utils.StandardQueryParam');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.string');\n\n\n/**\n * Character codes inlined to avoid object allocations due to charCode.\n * @enum {number}\n * @private\n */\ngoog.uri.utils.CharCode_ = {\n  AMPERSAND: 38,\n  EQUAL: 61,\n  HASH: 35,\n  QUESTION: 63\n};\n\n\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?string=} opt_scheme The scheme such as 'http'.\n * @param {?string=} opt_userInfo The user name before the '@'.\n * @param {?string=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {(string|number|null)=} opt_port The port number.\n * @param {?string=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?string=} opt_queryData The URI-encoded query data.\n * @param {?string=} opt_fragment The URI-encoded fragment identifier.\n * @return {string} The fully combined URI.\n */\ngoog.uri.utils.buildFromEncodedParts = function(\n    opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData,\n    opt_fragment) {\n  var out = '';\n\n  if (opt_scheme) {\n    out += opt_scheme + ':';\n  }\n\n  if (opt_domain) {\n    out += '//';\n\n    if (opt_userInfo) {\n      out += opt_userInfo + '@';\n    }\n\n    out += opt_domain;\n\n    if (opt_port) {\n      out += ':' + opt_port;\n    }\n  }\n\n  if (opt_path) {\n    out += opt_path;\n  }\n\n  if (opt_queryData) {\n    out += '?' + opt_queryData;\n  }\n\n  if (opt_fragment) {\n    out += '#' + opt_fragment;\n  }\n\n  return out;\n};\n\n\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {@link http://www.ietf.org/rfc/rfc3986.txt} says in Appendix B\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * @type {!RegExp}\n * @private\n */\ngoog.uri.utils.splitRe_ = new RegExp(\n    '^' +\n    '(?:' +\n    '([^:/?#.]+)' +  // scheme - ignore special characters\n                     // used by other URL parts such as :,\n                     // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +  // userInfo\n    '([^/#?]*?)' +       // domain\n    '(?::([0-9]+))?' +   // port\n    '(?=[/#?]|$)' +      // authority-terminating character\n    ')?' +\n    '([^?#]+)?' +          // path\n    '(?:\\\\?([^#]*))?' +    // query\n    '(?:#([\\\\s\\\\S]*))?' +  // fragment\n    '$');\n\n\n/**\n * The index of each URI component in the return value of goog.uri.utils.split.\n * @enum {number}\n */\ngoog.uri.utils.ComponentIndex = {\n  SCHEME: 1,\n  USER_INFO: 2,\n  DOMAIN: 3,\n  PORT: 4,\n  PATH: 5,\n  QUERY_DATA: 6,\n  FRAGMENT: 7\n};\n\n\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.ComponentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {string} uri The URI string to examine.\n * @return {!Array<string|undefined>} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\ngoog.uri.utils.split = function(uri) {\n  // See @return comment -- never null.\n  return /** @type {!Array<string|undefined>} */ (\n      uri.match(goog.uri.utils.splitRe_));\n};\n\n\n/**\n * @param {?string} uri A possibly null string.\n * @param {boolean=} opt_preserveReserved If true, percent-encoding of RFC-3986\n *     reserved characters will not be removed.\n * @return {?string} The string URI-decoded, or null if uri is null.\n * @private\n */\ngoog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {\n  if (!uri) {\n    return uri;\n  }\n\n  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);\n};\n\n\n/**\n * Gets a URI component by index.\n *\n * It is preferred to use the getPathEncoded() variety of functions ahead,\n * since they are more readable.\n *\n * @param {goog.uri.utils.ComponentIndex} componentIndex The component index.\n * @param {string} uri The URI to examine.\n * @return {?string} The still-encoded component, or null if the component\n *     is not present.\n * @private\n */\ngoog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {\n  // Convert undefined, null, and empty string into null.\n  return goog.uri.utils.split(uri)[componentIndex] || null;\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The protocol or scheme, or null if none.  Does not\n *     include trailing colons or slashes.\n */\ngoog.uri.utils.getScheme = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.SCHEME, uri);\n};\n\n\n/**\n * Gets the effective scheme for the URL.  If the URL is relative then the\n * scheme is derived from the page's location.\n * @param {string} uri The URI to examine.\n * @return {string} The protocol or scheme, always lower case.\n */\ngoog.uri.utils.getEffectiveScheme = function(uri) {\n  var scheme = goog.uri.utils.getScheme(uri);\n  if (!scheme && goog.global.self && goog.global.self.location) {\n    var protocol = goog.global.self.location.protocol;\n    scheme = protocol.substr(0, protocol.length - 1);\n  }\n  // NOTE: When called from a web worker in Firefox 3.5, location maybe null.\n  // All other browsers with web workers support self.location from the worker.\n  return scheme ? scheme.toLowerCase() : '';\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The user name still encoded, or null if none.\n */\ngoog.uri.utils.getUserInfoEncoded = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.USER_INFO, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded user info, or null if none.\n */\ngoog.uri.utils.getUserInfo = function(uri) {\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getUserInfoEncoded(uri));\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The domain name still encoded, or null if none.\n */\ngoog.uri.utils.getDomainEncoded = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.DOMAIN, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded domain, or null if none.\n */\ngoog.uri.utils.getDomain = function(uri) {\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getDomainEncoded(uri), true /* opt_preserveReserved */);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?number} The port number, or null if none.\n */\ngoog.uri.utils.getPort = function(uri) {\n  // Coerce to a number.  If the result of getComponentByIndex_ is null or\n  // non-numeric, the number coersion yields NaN.  This will then return\n  // null for all non-numeric cases (though also zero, which isn't a relevant\n  // port number).\n  return Number(\n             goog.uri.utils.getComponentByIndex_(\n                 goog.uri.utils.ComponentIndex.PORT, uri)) ||\n      null;\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The path still encoded, or null if none. Includes the\n *     leading slash, if any.\n */\ngoog.uri.utils.getPathEncoded = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.PATH, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded path, or null if none.  Includes the leading\n *     slash, if any.\n */\ngoog.uri.utils.getPath = function(uri) {\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getPathEncoded(uri), true /* opt_preserveReserved */);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The query data still encoded, or null if none.  Does not\n *     include the question mark itself.\n */\ngoog.uri.utils.getQueryData = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.QUERY_DATA, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The fragment identifier, or null if none.  Does not\n *     include the hash mark itself.\n */\ngoog.uri.utils.getFragmentEncoded = function(uri) {\n  // The hash mark may not appear in any other part of the URL.\n  var hashIndex = uri.indexOf('#');\n  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @param {?string} fragment The encoded fragment identifier, or null if none.\n *     Does not include the hash mark itself.\n * @return {string} The URI with the fragment set.\n */\ngoog.uri.utils.setFragmentEncoded = function(uri, fragment) {\n  return goog.uri.utils.removeFragment(uri) + (fragment ? '#' + fragment : '');\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded fragment identifier, or null if none.  Does\n *     not include the hash mark.\n */\ngoog.uri.utils.getFragment = function(uri) {\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getFragmentEncoded(uri));\n};\n\n\n/**\n * Extracts everything up to the port of the URI.\n * @param {string} uri The URI string.\n * @return {string} Everything up to and including the port.\n */\ngoog.uri.utils.getHost = function(uri) {\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      pieces[goog.uri.utils.ComponentIndex.SCHEME],\n      pieces[goog.uri.utils.ComponentIndex.USER_INFO],\n      pieces[goog.uri.utils.ComponentIndex.DOMAIN],\n      pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\n\n\n/**\n * Returns the origin for a given URL.\n * @param {string} uri The URI string.\n * @return {string} Everything up to and including the port.\n */\ngoog.uri.utils.getOrigin = function(uri) {\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      pieces[goog.uri.utils.ComponentIndex.SCHEME], null /* opt_userInfo */,\n      pieces[goog.uri.utils.ComponentIndex.DOMAIN],\n      pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\n\n\n/**\n * Extracts the path of the URL and everything after.\n * @param {string} uri The URI string.\n * @return {string} The URI, starting at the path and including the query\n *     parameters and fragment identifier.\n */\ngoog.uri.utils.getPathAndAfter = function(uri) {\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH],\n      pieces[goog.uri.utils.ComponentIndex.QUERY_DATA],\n      pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\n\n\n/**\n * Gets the URI with the fragment identifier removed.\n * @param {string} uri The URI to examine.\n * @return {string} Everything preceding the hash mark.\n */\ngoog.uri.utils.removeFragment = function(uri) {\n  // The hash mark may not appear in any other part of the URL.\n  var hashIndex = uri.indexOf('#');\n  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);\n};\n\n\n/**\n * Ensures that two URI's have the exact same domain, scheme, and port.\n *\n * Unlike the version in goog.Uri, this checks protocol, and therefore is\n * suitable for checking against the browser's same-origin policy.\n *\n * @param {string} uri1 The first URI.\n * @param {string} uri2 The second URI.\n * @return {boolean} Whether they have the same scheme, domain and port.\n */\ngoog.uri.utils.haveSameDomain = function(uri1, uri2) {\n  var pieces1 = goog.uri.utils.split(uri1);\n  var pieces2 = goog.uri.utils.split(uri2);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] ==\n      pieces2[goog.uri.utils.ComponentIndex.DOMAIN] &&\n      pieces1[goog.uri.utils.ComponentIndex.SCHEME] ==\n      pieces2[goog.uri.utils.ComponentIndex.SCHEME] &&\n      pieces1[goog.uri.utils.ComponentIndex.PORT] ==\n      pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\n\n\n/**\n * Asserts that there are no fragment or query identifiers, only in uncompiled\n * mode.\n * @param {string} uri The URI to examine.\n * @private\n */\ngoog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {\n  goog.asserts.assert(\n      uri.indexOf('#') < 0 && uri.indexOf('?') < 0,\n      'goog.uri.utils: Fragment or query identifiers are not supported: [%s]',\n      uri);\n};\n\n\n/**\n * Supported query parameter values by the parameter serializing utilities.\n *\n * If a value is null or undefined, the key-value pair is skipped, as an easy\n * way to omit parameters conditionally.  Non-array parameters are converted\n * to a string and URI encoded.  Array values are expanded into multiple\n * &key=value pairs, with each element stringized and URI-encoded.\n *\n * @typedef {*}\n */\ngoog.uri.utils.QueryValue;\n\n\n/**\n * An array representing a set of query parameters with alternating keys\n * and values.\n *\n * Keys are assumed to be URI encoded already and live at even indices.  See\n * goog.uri.utils.QueryValue for details on how parameter values are encoded.\n *\n * Example:\n * <pre>\n * var data = [\n *   // Simple param: ?name=BobBarker\n *   'name', 'BobBarker',\n *   // Conditional param -- may be omitted entirely.\n *   'specialDietaryNeeds', hasDietaryNeeds() ? getDietaryNeeds() : null,\n *   // Multi-valued param: &house=LosAngeles&house=NewYork&house=null\n *   'house', ['LosAngeles', 'NewYork', null]\n * ];\n * </pre>\n *\n * @typedef {!Array<string|goog.uri.utils.QueryValue>}\n */\ngoog.uri.utils.QueryArray;\n\n\n/**\n * Parses encoded query parameters and calls callback function for every\n * parameter found in the string.\n *\n * Missing value of parameter (e.g. “…&key&…”) is treated as if the value was an\n * empty string.  Keys may be empty strings (e.g. “…&=value&…”) which also means\n * that “…&=&…” and “…&&…” will result in an empty key and value.\n *\n * @param {string} encodedQuery Encoded query string excluding question mark at\n *     the beginning.\n * @param {function(string, string)} callback Function called for every\n *     parameter found in query string.  The first argument (name) will not be\n *     urldecoded (so the function is consistent with buildQueryData), but the\n *     second will.  If the parameter has no value (i.e. “=” was not present)\n *     the second argument (value) will be an empty string.\n */\ngoog.uri.utils.parseQueryData = function(encodedQuery, callback) {\n  if (!encodedQuery) {\n    return;\n  }\n  var pairs = encodedQuery.split('&');\n  for (var i = 0; i < pairs.length; i++) {\n    var indexOfEquals = pairs[i].indexOf('=');\n    var name = null;\n    var value = null;\n    if (indexOfEquals >= 0) {\n      name = pairs[i].substring(0, indexOfEquals);\n      value = pairs[i].substring(indexOfEquals + 1);\n    } else {\n      name = pairs[i];\n    }\n    callback(name, value ? goog.string.urlDecode(value) : '');\n  }\n};\n\n\n/**\n * Split the URI into 3 parts where the [1] is the queryData without a leading\n * '?'. For example, the URI http://foo.com/bar?a=b#abc returns\n * ['http://foo.com/bar','a=b','#abc'].\n * @param {string} uri The URI to parse.\n * @return {!Array<string>} An array representation of uri of length 3 where the\n *     middle value is the queryData without a leading '?'.\n * @private\n */\ngoog.uri.utils.splitQueryData_ = function(uri) {\n  // Find the query data and and hash.\n  var hashIndex = uri.indexOf('#');\n  if (hashIndex < 0) {\n    hashIndex = uri.length;\n  }\n  var questionIndex = uri.indexOf('?');\n  var queryData;\n  if (questionIndex < 0 || questionIndex > hashIndex) {\n    questionIndex = hashIndex;\n    queryData = '';\n  } else {\n    queryData = uri.substring(questionIndex + 1, hashIndex);\n  }\n  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];\n};\n\n\n/**\n * Join an array created by splitQueryData_ back into a URI.\n * @param {!Array<string>} parts A URI in the form generated by splitQueryData_.\n * @return {string} The joined URI.\n * @private\n */\ngoog.uri.utils.joinQueryData_ = function(parts) {\n  return parts[0] + (parts[1] ? '?' + parts[1] : '') + parts[2];\n};\n\n\n/**\n * @param {string} queryData\n * @param {string} newData\n * @return {string}\n * @private\n */\ngoog.uri.utils.appendQueryData_ = function(queryData, newData) {\n  if (!newData) {\n    return queryData;\n  }\n  return queryData ? queryData + '&' + newData : newData;\n};\n\n\n/**\n * @param {string} uri\n * @param {string} queryData\n * @return {string}\n * @private\n */\ngoog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {\n  if (!queryData) {\n    return uri;\n  }\n  var parts = goog.uri.utils.splitQueryData_(uri);\n  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);\n  return goog.uri.utils.joinQueryData_(parts);\n};\n\n\n/**\n * Appends key=value pairs to an array, supporting multi-valued objects.\n * @param {*} key The key prefix.\n * @param {goog.uri.utils.QueryValue} value The value to serialize.\n * @param {!Array<string>} pairs The array to which the 'key=value' strings\n *     should be appended.\n * @private\n */\ngoog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {\n  goog.asserts.assertString(key);\n  if (goog.isArray(value)) {\n    // Convince the compiler it's an array.\n    goog.asserts.assertArray(value);\n    for (var j = 0; j < value.length; j++) {\n      // Convert to string explicitly, to short circuit the null and array\n      // logic in this function -- this ensures that null and undefined get\n      // written as literal 'null' and 'undefined', and arrays don't get\n      // expanded out but instead encoded in the default way.\n      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);\n    }\n  } else if (value != null) {\n    // Skip a top-level null or undefined entirely.\n    pairs.push(\n        key +\n        // Check for empty string. Zero gets encoded into the url as literal\n        // strings.  For empty string, skip the equal sign, to be consistent\n        // with UriBuilder.java.\n        (value === '' ? '' : '=' + goog.string.urlEncode(value)));\n  }\n};\n\n\n/**\n * Builds a query data string from a sequence of alternating keys and values.\n * Currently generates \"&key&\" for empty args.\n *\n * @param {!IArrayLike<string|goog.uri.utils.QueryValue>} keysAndValues\n *     Alternating keys and values. See the QueryArray typedef.\n * @param {number=} opt_startIndex A start offset into the arary, defaults to 0.\n * @return {string} The encoded query string, in the form 'a=1&b=2'.\n */\ngoog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {\n  goog.asserts.assert(\n      Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0,\n      'goog.uri.utils: Key/value lists must be even in length.');\n\n  var params = [];\n  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {\n    var key = /** @type {string} */ (keysAndValues[i]);\n    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);\n  }\n  return params.join('&');\n};\n\n\n/**\n * Builds a query data string from a map.\n * Currently generates \"&key&\" for empty args.\n *\n * @param {!Object<string, goog.uri.utils.QueryValue>} map An object where keys\n *     are URI-encoded parameter keys, and the values are arbitrary types\n *     or arrays. Keys with a null value are dropped.\n * @return {string} The encoded query string, in the form 'a=1&b=2'.\n */\ngoog.uri.utils.buildQueryDataFromMap = function(map) {\n  var params = [];\n  for (var key in map) {\n    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);\n  }\n  return params.join('&');\n};\n\n\n/**\n * Appends URI parameters to an existing URI.\n *\n * The variable arguments may contain alternating keys and values.  Keys are\n * assumed to be already URI encoded.  The values should not be URI-encoded,\n * and will instead be encoded by this function.\n * <pre>\n * appendParams('http://www.foo.com?existing=true',\n *     'key1', 'value1',\n *     'key2', 'value?willBeEncoded',\n *     'key3', ['valueA', 'valueB', 'valueC'],\n *     'key4', null);\n * result: 'http://www.foo.com?existing=true&' +\n *     'key1=value1&' +\n *     'key2=value%3FwillBeEncoded&' +\n *     'key3=valueA&key3=valueB&key3=valueC'\n * </pre>\n *\n * A single call to this function will not exhibit quadratic behavior in IE,\n * whereas multiple repeated calls may, although the effect is limited by\n * fact that URL's generally can't exceed 2kb.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {...(goog.uri.utils.QueryArray|goog.uri.utils.QueryValue)}\n * var_args\n *     An array or argument list conforming to goog.uri.utils.QueryArray.\n * @return {string} The URI with all query parameters added.\n */\ngoog.uri.utils.appendParams = function(uri, var_args) {\n  var queryData = arguments.length == 2 ?\n      goog.uri.utils.buildQueryData(arguments[1], 0) :\n      goog.uri.utils.buildQueryData(arguments, 1);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\n\n\n/**\n * Appends query parameters from a map.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object<goog.uri.utils.QueryValue>} map An object where keys are\n *     URI-encoded parameter keys, and the values are arbitrary types or arrays.\n *     Keys with a null value are dropped.\n * @return {string} The new parameters.\n */\ngoog.uri.utils.appendParamsFromMap = function(uri, map) {\n  var queryData = goog.uri.utils.buildQueryDataFromMap(map);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\n\n\n/**\n * Appends a single URI parameter.\n *\n * Repeated calls to this can exhibit quadratic behavior in IE6 due to the\n * way string append works, though it should be limited given the 2kb limit.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {string} key The key, which must already be URI encoded.\n * @param {*=} opt_value The value, which will be stringized and encoded\n *     (assumed not already to be encoded).  If omitted, undefined, or null, the\n *     key will be added as a valueless parameter.\n * @return {string} The URI with the query parameter added.\n */\ngoog.uri.utils.appendParam = function(uri, key, opt_value) {\n  var value = goog.isDefAndNotNull(opt_value) ?\n      '=' + goog.string.urlEncode(opt_value) :\n      '';\n  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);\n};\n\n\n/**\n * Finds the next instance of a query parameter with the specified name.\n *\n * Does not instantiate any objects.\n *\n * @param {string} uri The URI to search.  May contain a fragment identifier\n *     if opt_hashIndex is specified.\n * @param {number} startIndex The index to begin searching for the key at.  A\n *     match may be found even if this is one character after the ampersand.\n * @param {string} keyEncoded The URI-encoded key.\n * @param {number} hashOrEndIndex Index to stop looking at.  If a hash\n *     mark is present, it should be its index, otherwise it should be the\n *     length of the string.\n * @return {number} The position of the first character in the key's name,\n *     immediately after either a question mark or a dot.\n * @private\n */\ngoog.uri.utils.findParam_ = function(\n    uri, startIndex, keyEncoded, hashOrEndIndex) {\n  var index = startIndex;\n  var keyLength = keyEncoded.length;\n\n  // Search for the key itself and post-filter for surronuding punctuation,\n  // rather than expensively building a regexp.\n  while ((index = uri.indexOf(keyEncoded, index)) >= 0 &&\n         index < hashOrEndIndex) {\n    var precedingChar = uri.charCodeAt(index - 1);\n    // Ensure that the preceding character is '&' or '?'.\n    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND ||\n        precedingChar == goog.uri.utils.CharCode_.QUESTION) {\n      // Ensure the following character is '&', '=', '#', or NaN\n      // (end of string).\n      var followingChar = uri.charCodeAt(index + keyLength);\n      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL ||\n          followingChar == goog.uri.utils.CharCode_.AMPERSAND ||\n          followingChar == goog.uri.utils.CharCode_.HASH) {\n        return index;\n      }\n    }\n    index += keyLength + 1;\n  }\n\n  return -1;\n};\n\n\n/**\n * Regular expression for finding a hash mark or end of string.\n * @type {RegExp}\n * @private\n */\ngoog.uri.utils.hashOrEndRe_ = /#|$/;\n\n\n/**\n * Determines if the URI contains a specific key.\n *\n * Performs no object instantiations.\n *\n * @param {string} uri The URI to process.  May contain a fragment\n *     identifier.\n * @param {string} keyEncoded The URI-encoded key.  Case-sensitive.\n * @return {boolean} Whether the key is present.\n */\ngoog.uri.utils.hasParam = function(uri, keyEncoded) {\n  return goog.uri.utils.findParam_(\n             uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;\n};\n\n\n/**\n * Gets the first value of a query parameter.\n * @param {string} uri The URI to process.  May contain a fragment.\n * @param {string} keyEncoded The URI-encoded key.  Case-sensitive.\n * @return {?string} The first value of the parameter (URI-decoded), or null\n *     if the parameter is not found.\n */\ngoog.uri.utils.getParamValue = function(uri, keyEncoded) {\n  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);\n  var foundIndex =\n      goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);\n\n  if (foundIndex < 0) {\n    return null;\n  } else {\n    var endPosition = uri.indexOf('&', foundIndex);\n    if (endPosition < 0 || endPosition > hashOrEndIndex) {\n      endPosition = hashOrEndIndex;\n    }\n    // Progress forth to the end of the \"key=\" or \"key&\" substring.\n    foundIndex += keyEncoded.length + 1;\n    // Use substr, because it (unlike substring) will return empty string\n    // if foundIndex > endPosition.\n    return goog.string.urlDecode(\n        uri.substr(foundIndex, endPosition - foundIndex));\n  }\n};\n\n\n/**\n * Gets all values of a query parameter.\n * @param {string} uri The URI to process.  May contain a fragment.\n * @param {string} keyEncoded The URI-encoded key.  Case-sensitive.\n * @return {!Array<string>} All URI-decoded values with the given key.\n *     If the key is not found, this will have length 0, but never be null.\n */\ngoog.uri.utils.getParamValues = function(uri, keyEncoded) {\n  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);\n  var position = 0;\n  var foundIndex;\n  var result = [];\n\n  while ((foundIndex = goog.uri.utils.findParam_(\n              uri, position, keyEncoded, hashOrEndIndex)) >= 0) {\n    // Find where this parameter ends, either the '&' or the end of the\n    // query parameters.\n    position = uri.indexOf('&', foundIndex);\n    if (position < 0 || position > hashOrEndIndex) {\n      position = hashOrEndIndex;\n    }\n\n    // Progress forth to the end of the \"key=\" or \"key&\" substring.\n    foundIndex += keyEncoded.length + 1;\n    // Use substr, because it (unlike substring) will return empty string\n    // if foundIndex > position.\n    result.push(\n        goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));\n  }\n\n  return result;\n};\n\n\n/**\n * Regexp to find trailing question marks and ampersands.\n * @type {RegExp}\n * @private\n */\ngoog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;\n\n\n/**\n * Removes all instances of a query parameter.\n * @param {string} uri The URI to process.  Must not contain a fragment.\n * @param {string} keyEncoded The URI-encoded key.\n * @return {string} The URI with all instances of the parameter removed.\n */\ngoog.uri.utils.removeParam = function(uri, keyEncoded) {\n  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);\n  var position = 0;\n  var foundIndex;\n  var buffer = [];\n\n  // Look for a query parameter.\n  while ((foundIndex = goog.uri.utils.findParam_(\n              uri, position, keyEncoded, hashOrEndIndex)) >= 0) {\n    // Get the portion of the query string up to, but not including, the ?\n    // or & starting the parameter.\n    buffer.push(uri.substring(position, foundIndex));\n    // Progress to immediately after the '&'.  If not found, go to the end.\n    // Avoid including the hash mark.\n    position = Math.min(\n        (uri.indexOf('&', foundIndex) + 1) || hashOrEndIndex, hashOrEndIndex);\n  }\n\n  // Append everything that is remaining.\n  buffer.push(uri.substr(position));\n\n  // Join the buffer, and remove trailing punctuation that remains.\n  return buffer.join('').replace(\n      goog.uri.utils.trailingQueryPunctuationRe_, '$1');\n};\n\n\n/**\n * Replaces all existing definitions of a parameter with a single definition.\n *\n * Repeated calls to this can exhibit quadratic behavior due to the need to\n * find existing instances and reconstruct the string, though it should be\n * limited given the 2kb limit.  Consider using appendParams or setParamsFromMap\n * to update multiple parameters in bulk.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {string} keyEncoded The key, which must already be URI encoded.\n * @param {*} value The value, which will be stringized and encoded (assumed\n *     not already to be encoded).\n * @return {string} The URI with the query parameter added.\n */\ngoog.uri.utils.setParam = function(uri, keyEncoded, value) {\n  return goog.uri.utils.appendParam(\n      goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);\n};\n\n\n/**\n * Effeciently set or remove multiple query parameters in a URI. Order of\n * unchanged parameters will not be modified, all updated parameters will be\n * appended to the end of the query. Params with values of null or undefined are\n * removed.\n *\n * @param {string} uri The URI to process.\n * @param {!Object<string, goog.uri.utils.QueryValue>} params A list of\n *     parameters to update. If null or undefined, the param will be removed.\n * @return {string} An updated URI where the query data has been updated with\n *     the params.\n */\ngoog.uri.utils.setParamsFromMap = function(uri, params) {\n  var parts = goog.uri.utils.splitQueryData_(uri);\n  var queryData = parts[1];\n  var buffer = [];\n  if (queryData) {\n    goog.array.forEach(queryData.split('&'), function(pair) {\n      var indexOfEquals = pair.indexOf('=');\n      var name = indexOfEquals >= 0 ? pair.substr(0, indexOfEquals) : pair;\n      if (!params.hasOwnProperty(name)) {\n        buffer.push(pair);\n      }\n    });\n  }\n  parts[1] = goog.uri.utils.appendQueryData_(\n      buffer.join('&'), goog.uri.utils.buildQueryDataFromMap(params));\n  return goog.uri.utils.joinQueryData_(parts);\n};\n\n\n/**\n * Generates a URI path using a given URI and a path with checks to\n * prevent consecutive \"//\". The baseUri passed in must not contain\n * query or fragment identifiers. The path to append may not contain query or\n * fragment identifiers.\n *\n * @param {string} baseUri URI to use as the base.\n * @param {string} path Path to append.\n * @return {string} Updated URI.\n */\ngoog.uri.utils.appendPath = function(baseUri, path) {\n  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);\n\n  // Remove any trailing '/'\n  if (goog.string.endsWith(baseUri, '/')) {\n    baseUri = baseUri.substr(0, baseUri.length - 1);\n  }\n  // Remove any leading '/'\n  if (goog.string.startsWith(path, '/')) {\n    path = path.substr(1);\n  }\n  return goog.string.buildString(baseUri, '/', path);\n};\n\n\n/**\n * Replaces the path.\n * @param {string} uri URI to use as the base.\n * @param {string} path New path.\n * @return {string} Updated URI.\n */\ngoog.uri.utils.setPath = function(uri, path) {\n  // Add any missing '/'.\n  if (!goog.string.startsWith(path, '/')) {\n    path = '/' + path;\n  }\n  var parts = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      parts[goog.uri.utils.ComponentIndex.SCHEME],\n      parts[goog.uri.utils.ComponentIndex.USER_INFO],\n      parts[goog.uri.utils.ComponentIndex.DOMAIN],\n      parts[goog.uri.utils.ComponentIndex.PORT], path,\n      parts[goog.uri.utils.ComponentIndex.QUERY_DATA],\n      parts[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\n\n\n/**\n * Standard supported query parameters.\n * @enum {string}\n */\ngoog.uri.utils.StandardQueryParam = {\n\n  /** Unused parameter for unique-ifying. */\n  RANDOM: 'zx'\n};\n\n\n/**\n * Sets the zx parameter of a URI to a random value.\n * @param {string} uri Any URI.\n * @return {string} That URI with the \"zx\" parameter added or replaced to\n *     contain a random string.\n */\ngoog.uri.utils.makeUnique = function(uri) {\n  return goog.uri.utils.setParam(\n      uri, goog.uri.utils.StandardQueryParam.RANDOM,\n      goog.string.getRandomString());\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Class for parsing and formatting URIs.\n *\n * Use goog.Uri(string) to parse a URI string.  Use goog.Uri.create(...) to\n * create a new instance of the goog.Uri object from Uri parts.\n *\n * e.g: <code>var myUri = new goog.Uri(window.location);</code>\n *\n * Implements RFC 3986 for parsing/formatting URIs.\n * http://www.ietf.org/rfc/rfc3986.txt\n *\n * Some changes have been made to the interface (more like .NETs), though the\n * internal representation is now of un-encoded parts, this will change the\n * behavior slightly.\n *\n * @author msamuel@google.com (Mike Samuel)\n */\n\ngoog.provide('goog.Uri');\ngoog.provide('goog.Uri.QueryData');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.string');\ngoog.require('goog.structs');\ngoog.require('goog.structs.Map');\ngoog.require('goog.uri.utils');\ngoog.require('goog.uri.utils.ComponentIndex');\ngoog.require('goog.uri.utils.StandardQueryParam');\n\n\n\n/**\n * This class contains setters and getters for the parts of the URI.\n * The <code>getXyz</code>/<code>setXyz</code> methods return the decoded part\n * -- so<code>goog.Uri.parse('/foo%20bar').getPath()</code> will return the\n * decoded path, <code>/foo bar</code>.\n *\n * Reserved characters (see RFC 3986 section 2.2) can be present in\n * their percent-encoded form in scheme, domain, and path URI components and\n * will not be auto-decoded. For example:\n * <code>goog.Uri.parse('rel%61tive/path%2fto/resource').getPath()</code> will\n * return <code>relative/path%2fto/resource</code>.\n *\n * The constructor accepts an optional unparsed, raw URI string.  The parser\n * is relaxed, so special characters that aren't escaped but don't cause\n * ambiguities will not cause parse failures.\n *\n * All setters return <code>this</code> and so may be chained, a la\n * <code>goog.Uri.parse('/foo').setFragment('part').toString()</code>.\n *\n * @param {*=} opt_uri Optional string URI to parse\n *        (use goog.Uri.create() to create a URI from parts), or if\n *        a goog.Uri is passed, a clone is created.\n * @param {boolean=} opt_ignoreCase If true, #getParameterValue will ignore\n * the case of the parameter name.\n *\n * @throws URIError If opt_uri is provided and URI is malformed (that is,\n *     if decodeURIComponent fails on any of the URI components).\n * @constructor\n * @struct\n */\ngoog.Uri = function(opt_uri, opt_ignoreCase) {\n  /**\n   * Scheme such as \"http\".\n   * @private {string}\n   */\n  this.scheme_ = '';\n\n  /**\n   * User credentials in the form \"username:password\".\n   * @private {string}\n   */\n  this.userInfo_ = '';\n\n  /**\n   * Domain part, e.g. \"www.google.com\".\n   * @private {string}\n   */\n  this.domain_ = '';\n\n  /**\n   * Port, e.g. 8080.\n   * @private {?number}\n   */\n  this.port_ = null;\n\n  /**\n   * Path, e.g. \"/tests/img.png\".\n   * @private {string}\n   */\n  this.path_ = '';\n\n  /**\n   * The fragment without the #.\n   * @private {string}\n   */\n  this.fragment_ = '';\n\n  /**\n   * Whether or not this Uri should be treated as Read Only.\n   * @private {boolean}\n   */\n  this.isReadOnly_ = false;\n\n  /**\n   * Whether or not to ignore case when comparing query params.\n   * @private {boolean}\n   */\n  this.ignoreCase_ = false;\n\n  /**\n   * Object representing query data.\n   * @private {!goog.Uri.QueryData}\n   */\n  this.queryData_;\n\n  // Parse in the uri string\n  var m;\n  if (opt_uri instanceof goog.Uri) {\n    this.ignoreCase_ =\n        goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();\n    this.setScheme(opt_uri.getScheme());\n    this.setUserInfo(opt_uri.getUserInfo());\n    this.setDomain(opt_uri.getDomain());\n    this.setPort(opt_uri.getPort());\n    this.setPath(opt_uri.getPath());\n    this.setQueryData(opt_uri.getQueryData().clone());\n    this.setFragment(opt_uri.getFragment());\n  } else if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {\n    this.ignoreCase_ = !!opt_ignoreCase;\n\n    // Set the parts -- decoding as we do so.\n    // COMPATIBILITY NOTE - In IE, unmatched fields may be empty strings,\n    // whereas in other browsers they will be undefined.\n    this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || '', true);\n    this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || '', true);\n    this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || '', true);\n    this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);\n    this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || '', true);\n    this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || '', true);\n    this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || '', true);\n\n  } else {\n    this.ignoreCase_ = !!opt_ignoreCase;\n    this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);\n  }\n};\n\n\n/**\n * If true, we preserve the type of query parameters set programmatically.\n *\n * This means that if you set a parameter to a boolean, and then call\n * getParameterValue, you will get a boolean back.\n *\n * If false, we will coerce parameters to strings, just as they would\n * appear in real URIs.\n *\n * TODO(nicksantos): Remove this once people have time to fix all tests.\n *\n * @type {boolean}\n */\ngoog.Uri.preserveParameterTypesCompatibilityFlag = false;\n\n\n/**\n * Parameter name added to stop caching.\n * @type {string}\n */\ngoog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;\n\n\n/**\n * @return {string} The string form of the url.\n * @override\n */\ngoog.Uri.prototype.toString = function() {\n  var out = [];\n\n  var scheme = this.getScheme();\n  if (scheme) {\n    out.push(\n        goog.Uri.encodeSpecialChars_(\n            scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true),\n        ':');\n  }\n\n  var domain = this.getDomain();\n  if (domain || scheme == 'file') {\n    out.push('//');\n\n    var userInfo = this.getUserInfo();\n    if (userInfo) {\n      out.push(\n          goog.Uri.encodeSpecialChars_(\n              userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true),\n          '@');\n    }\n\n    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));\n\n    var port = this.getPort();\n    if (port != null) {\n      out.push(':', String(port));\n    }\n  }\n\n  var path = this.getPath();\n  if (path) {\n    if (this.hasDomain() && path.charAt(0) != '/') {\n      out.push('/');\n    }\n    out.push(\n        goog.Uri.encodeSpecialChars_(\n            path, path.charAt(0) == '/' ? goog.Uri.reDisallowedInAbsolutePath_ :\n                                          goog.Uri.reDisallowedInRelativePath_,\n            true));\n  }\n\n  var query = this.getEncodedQuery();\n  if (query) {\n    out.push('?', query);\n  }\n\n  var fragment = this.getFragment();\n  if (fragment) {\n    out.push(\n        '#', goog.Uri.encodeSpecialChars_(\n                 fragment, goog.Uri.reDisallowedInFragment_));\n  }\n  return out.join('');\n};\n\n\n/**\n * Resolves the given relative URI (a goog.Uri object), using the URI\n * represented by this instance as the base URI.\n *\n * There are several kinds of relative URIs:<br>\n * 1. foo - replaces the last part of the path, the whole query and fragment<br>\n * 2. /foo - replaces the the path, the query and fragment<br>\n * 3. //foo - replaces everything from the domain on.  foo is a domain name<br>\n * 4. ?foo - replace the query and fragment<br>\n * 5. #foo - replace the fragment only\n *\n * Additionally, if relative URI has a non-empty path, all \"..\" and \".\"\n * segments will be resolved, as described in RFC 3986.\n *\n * @param {!goog.Uri} relativeUri The relative URI to resolve.\n * @return {!goog.Uri} The resolved URI.\n */\ngoog.Uri.prototype.resolve = function(relativeUri) {\n\n  var absoluteUri = this.clone();\n\n  // we satisfy these conditions by looking for the first part of relativeUri\n  // that is not blank and applying defaults to the rest\n\n  var overridden = relativeUri.hasScheme();\n\n  if (overridden) {\n    absoluteUri.setScheme(relativeUri.getScheme());\n  } else {\n    overridden = relativeUri.hasUserInfo();\n  }\n\n  if (overridden) {\n    absoluteUri.setUserInfo(relativeUri.getUserInfo());\n  } else {\n    overridden = relativeUri.hasDomain();\n  }\n\n  if (overridden) {\n    absoluteUri.setDomain(relativeUri.getDomain());\n  } else {\n    overridden = relativeUri.hasPort();\n  }\n\n  var path = relativeUri.getPath();\n  if (overridden) {\n    absoluteUri.setPort(relativeUri.getPort());\n  } else {\n    overridden = relativeUri.hasPath();\n    if (overridden) {\n      // resolve path properly\n      if (path.charAt(0) != '/') {\n        // path is relative\n        if (this.hasDomain() && !this.hasPath()) {\n          // RFC 3986, section 5.2.3, case 1\n          path = '/' + path;\n        } else {\n          // RFC 3986, section 5.2.3, case 2\n          var lastSlashIndex = absoluteUri.getPath().lastIndexOf('/');\n          if (lastSlashIndex != -1) {\n            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;\n          }\n        }\n      }\n      path = goog.Uri.removeDotSegments(path);\n    }\n  }\n\n  if (overridden) {\n    absoluteUri.setPath(path);\n  } else {\n    overridden = relativeUri.hasQuery();\n  }\n\n  if (overridden) {\n    absoluteUri.setQueryData(relativeUri.getQueryData().clone());\n  } else {\n    overridden = relativeUri.hasFragment();\n  }\n\n  if (overridden) {\n    absoluteUri.setFragment(relativeUri.getFragment());\n  }\n\n  return absoluteUri;\n};\n\n\n/**\n * Clones the URI instance.\n * @return {!goog.Uri} New instance of the URI object.\n */\ngoog.Uri.prototype.clone = function() {\n  return new goog.Uri(this);\n};\n\n\n/**\n * @return {string} The encoded scheme/protocol for the URI.\n */\ngoog.Uri.prototype.getScheme = function() {\n  return this.scheme_;\n};\n\n\n/**\n * Sets the scheme/protocol.\n * @throws URIError If opt_decode is true and newScheme is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newScheme New scheme value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setScheme = function(newScheme, opt_decode) {\n  this.enforceReadOnly();\n  this.scheme_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;\n\n  // remove an : at the end of the scheme so somebody can pass in\n  // window.location.protocol\n  if (this.scheme_) {\n    this.scheme_ = this.scheme_.replace(/:$/, '');\n  }\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the scheme has been set.\n */\ngoog.Uri.prototype.hasScheme = function() {\n  return !!this.scheme_;\n};\n\n\n/**\n * @return {string} The decoded user info.\n */\ngoog.Uri.prototype.getUserInfo = function() {\n  return this.userInfo_;\n};\n\n\n/**\n * Sets the userInfo.\n * @throws URIError If opt_decode is true and newUserInfo is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newUserInfo New userInfo value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {\n  this.enforceReadOnly();\n  this.userInfo_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the user info has been set.\n */\ngoog.Uri.prototype.hasUserInfo = function() {\n  return !!this.userInfo_;\n};\n\n\n/**\n * @return {string} The decoded domain.\n */\ngoog.Uri.prototype.getDomain = function() {\n  return this.domain_;\n};\n\n\n/**\n * Sets the domain.\n * @throws URIError If opt_decode is true and newDomain is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newDomain New domain value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setDomain = function(newDomain, opt_decode) {\n  this.enforceReadOnly();\n  this.domain_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the domain has been set.\n */\ngoog.Uri.prototype.hasDomain = function() {\n  return !!this.domain_;\n};\n\n\n/**\n * @return {?number} The port number.\n */\ngoog.Uri.prototype.getPort = function() {\n  return this.port_;\n};\n\n\n/**\n * Sets the port number.\n * @param {*} newPort Port number. Will be explicitly casted to a number.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPort = function(newPort) {\n  this.enforceReadOnly();\n\n  if (newPort) {\n    newPort = Number(newPort);\n    if (isNaN(newPort) || newPort < 0) {\n      throw new Error('Bad port number ' + newPort);\n    }\n    this.port_ = newPort;\n  } else {\n    this.port_ = null;\n  }\n\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the port has been set.\n */\ngoog.Uri.prototype.hasPort = function() {\n  return this.port_ != null;\n};\n\n\n/**\n  * @return {string} The decoded path.\n */\ngoog.Uri.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Sets the path.\n * @throws URIError If opt_decode is true and newPath is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newPath New path value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPath = function(newPath, opt_decode) {\n  this.enforceReadOnly();\n  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the path has been set.\n */\ngoog.Uri.prototype.hasPath = function() {\n  return !!this.path_;\n};\n\n\n/**\n * @return {boolean} Whether the query string has been set.\n */\ngoog.Uri.prototype.hasQuery = function() {\n  return this.queryData_.toString() !== '';\n};\n\n\n/**\n * Sets the query data.\n * @param {goog.Uri.QueryData|string|undefined} queryData QueryData object.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n *     Applies only if queryData is a string.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setQueryData = function(queryData, opt_decode) {\n  this.enforceReadOnly();\n\n  if (queryData instanceof goog.Uri.QueryData) {\n    this.queryData_ = queryData;\n    this.queryData_.setIgnoreCase(this.ignoreCase_);\n  } else {\n    if (!opt_decode) {\n      // QueryData accepts encoded query string, so encode it if\n      // opt_decode flag is not true.\n      queryData = goog.Uri.encodeSpecialChars_(\n          queryData, goog.Uri.reDisallowedInQuery_);\n    }\n    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);\n  }\n\n  return this;\n};\n\n\n/**\n * Sets the URI query.\n * @param {string} newQuery New query value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setQuery = function(newQuery, opt_decode) {\n  return this.setQueryData(newQuery, opt_decode);\n};\n\n\n/**\n * @return {string} The encoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getEncodedQuery = function() {\n  return this.queryData_.toString();\n};\n\n\n/**\n * @return {string} The decoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getDecodedQuery = function() {\n  return this.queryData_.toDecodedString();\n};\n\n\n/**\n * Returns the query data.\n * @return {!goog.Uri.QueryData} QueryData object.\n */\ngoog.Uri.prototype.getQueryData = function() {\n  return this.queryData_;\n};\n\n\n/**\n * @return {string} The encoded URI query, not including the ?.\n *\n * Warning: This method, unlike other getter methods, returns encoded\n * value, instead of decoded one.\n */\ngoog.Uri.prototype.getQuery = function() {\n  return this.getEncodedQuery();\n};\n\n\n/**\n * Sets the value of the named query parameters, clearing previous values for\n * that key.\n *\n * @param {string} key The parameter to set.\n * @param {*} value The new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setParameterValue = function(key, value) {\n  this.enforceReadOnly();\n  this.queryData_.set(key, value);\n  return this;\n};\n\n\n/**\n * Sets the values of the named query parameters, clearing previous values for\n * that key.  Not new values will currently be moved to the end of the query\n * string.\n *\n * So, <code>goog.Uri.parse('foo?a=b&c=d&e=f').setParameterValues('c', ['new'])\n * </code> yields <tt>foo?a=b&e=f&c=new</tt>.</p>\n *\n * @param {string} key The parameter to set.\n * @param {*} values The new values. If values is a single\n *     string then it will be treated as the sole value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setParameterValues = function(key, values) {\n  this.enforceReadOnly();\n\n  if (!goog.isArray(values)) {\n    values = [String(values)];\n  }\n\n  this.queryData_.setValues(key, values);\n\n  return this;\n};\n\n\n/**\n * Returns the value<b>s</b> for a given cgi parameter as a list of decoded\n * query parameter values.\n * @param {string} name The parameter to get values for.\n * @return {!Array<?>} The values for a given cgi parameter as a list of\n *     decoded query parameter values.\n */\ngoog.Uri.prototype.getParameterValues = function(name) {\n  return this.queryData_.getValues(name);\n};\n\n\n/**\n * Returns the first value for a given cgi parameter or undefined if the given\n * parameter name does not appear in the query string.\n * @param {string} paramName Unescaped parameter name.\n * @return {string|undefined} The first value for a given cgi parameter or\n *     undefined if the given parameter name does not appear in the query\n *     string.\n */\ngoog.Uri.prototype.getParameterValue = function(paramName) {\n  // NOTE(nicksantos): This type-cast is a lie when\n  // preserveParameterTypesCompatibilityFlag is set to true.\n  // But this should only be set to true in tests.\n  return /** @type {string|undefined} */ (this.queryData_.get(paramName));\n};\n\n\n/**\n * @return {string} The URI fragment, not including the #.\n */\ngoog.Uri.prototype.getFragment = function() {\n  return this.fragment_;\n};\n\n\n/**\n * Sets the URI fragment.\n * @throws URIError If opt_decode is true and newFragment is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newFragment New fragment value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setFragment = function(newFragment, opt_decode) {\n  this.enforceReadOnly();\n  this.fragment_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the URI has a fragment set.\n */\ngoog.Uri.prototype.hasFragment = function() {\n  return !!this.fragment_;\n};\n\n\n/**\n * Returns true if this has the same domain as that of uri2.\n * @param {!goog.Uri} uri2 The URI object to compare to.\n * @return {boolean} true if same domain; false otherwise.\n */\ngoog.Uri.prototype.hasSameDomainAs = function(uri2) {\n  return ((!this.hasDomain() && !uri2.hasDomain()) ||\n          this.getDomain() == uri2.getDomain()) &&\n      ((!this.hasPort() && !uri2.hasPort()) ||\n       this.getPort() == uri2.getPort());\n};\n\n\n/**\n * Adds a random parameter to the Uri.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.makeUnique = function() {\n  this.enforceReadOnly();\n  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());\n\n  return this;\n};\n\n\n/**\n * Removes the named query parameter.\n *\n * @param {string} key The parameter to remove.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.removeParameter = function(key) {\n  this.enforceReadOnly();\n  this.queryData_.remove(key);\n  return this;\n};\n\n\n/**\n * Sets whether Uri is read only. If this goog.Uri is read-only,\n * enforceReadOnly_ will be called at the start of any function that may modify\n * this Uri.\n * @param {boolean} isReadOnly whether this goog.Uri should be read only.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.setReadOnly = function(isReadOnly) {\n  this.isReadOnly_ = isReadOnly;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the URI is read only.\n */\ngoog.Uri.prototype.isReadOnly = function() {\n  return this.isReadOnly_;\n};\n\n\n/**\n * Checks if this Uri has been marked as read only, and if so, throws an error.\n * This should be called whenever any modifying function is called.\n */\ngoog.Uri.prototype.enforceReadOnly = function() {\n  if (this.isReadOnly_) {\n    throw new Error('Tried to modify a read-only Uri');\n  }\n};\n\n\n/**\n * Sets whether to ignore case.\n * NOTE: If there are already key/value pairs in the QueryData, and\n * ignoreCase_ is set to false, the keys will all be lower-cased.\n * @param {boolean} ignoreCase whether this goog.Uri should ignore case.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.setIgnoreCase = function(ignoreCase) {\n  this.ignoreCase_ = ignoreCase;\n  if (this.queryData_) {\n    this.queryData_.setIgnoreCase(ignoreCase);\n  }\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether to ignore case.\n */\ngoog.Uri.prototype.getIgnoreCase = function() {\n  return this.ignoreCase_;\n};\n\n\n//==============================================================================\n// Static members\n//==============================================================================\n\n\n/**\n * Creates a uri from the string form.  Basically an alias of new goog.Uri().\n * If a Uri object is passed to parse then it will return a clone of the object.\n *\n * @throws URIError If parsing the URI is malformed. The passed URI components\n *     should all be parseable by decodeURIComponent.\n * @param {*} uri Raw URI string or instance of Uri\n *     object.\n * @param {boolean=} opt_ignoreCase Whether to ignore the case of parameter\n * names in #getParameterValue.\n * @return {!goog.Uri} The new URI object.\n */\ngoog.Uri.parse = function(uri, opt_ignoreCase) {\n  return uri instanceof goog.Uri ? uri.clone() :\n                                   new goog.Uri(uri, opt_ignoreCase);\n};\n\n\n/**\n * Creates a new goog.Uri object from unencoded parts.\n *\n * @param {?string=} opt_scheme Scheme/protocol or full URI to parse.\n * @param {?string=} opt_userInfo username:password.\n * @param {?string=} opt_domain www.google.com.\n * @param {?number=} opt_port 9830.\n * @param {?string=} opt_path /some/path/to/a/file.html.\n * @param {string|goog.Uri.QueryData=} opt_query a=1&b=2.\n * @param {?string=} opt_fragment The fragment without the #.\n * @param {boolean=} opt_ignoreCase Whether to ignore parameter name case in\n *     #getParameterValue.\n *\n * @return {!goog.Uri} The new URI object.\n */\ngoog.Uri.create = function(\n    opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query,\n    opt_fragment, opt_ignoreCase) {\n\n  var uri = new goog.Uri(null, opt_ignoreCase);\n\n  // Only set the parts if they are defined and not empty strings.\n  opt_scheme && uri.setScheme(opt_scheme);\n  opt_userInfo && uri.setUserInfo(opt_userInfo);\n  opt_domain && uri.setDomain(opt_domain);\n  opt_port && uri.setPort(opt_port);\n  opt_path && uri.setPath(opt_path);\n  opt_query && uri.setQueryData(opt_query);\n  opt_fragment && uri.setFragment(opt_fragment);\n\n  return uri;\n};\n\n\n/**\n * Resolves a relative Uri against a base Uri, accepting both strings and\n * Uri objects.\n *\n * @param {*} base Base Uri.\n * @param {*} rel Relative Uri.\n * @return {!goog.Uri} Resolved uri.\n */\ngoog.Uri.resolve = function(base, rel) {\n  if (!(base instanceof goog.Uri)) {\n    base = goog.Uri.parse(base);\n  }\n\n  if (!(rel instanceof goog.Uri)) {\n    rel = goog.Uri.parse(rel);\n  }\n\n  return base.resolve(rel);\n};\n\n\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {string} path A non-empty path component.\n * @return {string} Path component with removed dot segments.\n */\ngoog.Uri.removeDotSegments = function(path) {\n  if (path == '..' || path == '.') {\n    return '';\n\n  } else if (\n      !goog.string.contains(path, './') && !goog.string.contains(path, '/.')) {\n    // This optimization detects uris which do not contain dot-segments,\n    // and as a consequence do not require any processing.\n    return path;\n\n  } else {\n    var leadingSlash = goog.string.startsWith(path, '/');\n    var segments = path.split('/');\n    var out = [];\n\n    for (var pos = 0; pos < segments.length;) {\n      var segment = segments[pos++];\n\n      if (segment == '.') {\n        if (leadingSlash && pos == segments.length) {\n          out.push('');\n        }\n      } else if (segment == '..') {\n        if (out.length > 1 || out.length == 1 && out[0] != '') {\n          out.pop();\n        }\n        if (leadingSlash && pos == segments.length) {\n          out.push('');\n        }\n      } else {\n        out.push(segment);\n        leadingSlash = true;\n      }\n    }\n\n    return out.join('/');\n  }\n};\n\n\n/**\n * Decodes a value or returns the empty string if it isn't defined or empty.\n * @throws URIError If decodeURIComponent fails to decode val.\n * @param {string|undefined} val Value to decode.\n * @param {boolean=} opt_preserveReserved If true, restricted characters will\n *     not be decoded.\n * @return {string} Decoded value.\n * @private\n */\ngoog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {\n  // Don't use UrlDecode() here because val is not a query parameter.\n  if (!val) {\n    return '';\n  }\n\n  // decodeURI has the same output for '%2f' and '%252f'. We double encode %25\n  // so that we can distinguish between the 2 inputs. This is later undone by\n  // removeDoubleEncoding_.\n  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, '%2525')) :\n                                decodeURIComponent(val);\n};\n\n\n/**\n * If unescapedPart is non null, then escapes any characters in it that aren't\n * valid characters in a url and also escapes any special characters that\n * appear in extra.\n *\n * @param {*} unescapedPart The string to encode.\n * @param {RegExp} extra A character set of characters in [\\01-\\177].\n * @param {boolean=} opt_removeDoubleEncoding If true, remove double percent\n *     encoding.\n * @return {?string} null iff unescapedPart == null.\n * @private\n */\ngoog.Uri.encodeSpecialChars_ = function(\n    unescapedPart, extra, opt_removeDoubleEncoding) {\n  if (goog.isString(unescapedPart)) {\n    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);\n    if (opt_removeDoubleEncoding) {\n      // encodeURI double-escapes %XX sequences used to represent restricted\n      // characters in some URI components, remove the double escaping here.\n      encoded = goog.Uri.removeDoubleEncoding_(encoded);\n    }\n    return encoded;\n  }\n  return null;\n};\n\n\n/**\n * Converts a character in [\\01-\\177] to its unicode character equivalent.\n * @param {string} ch One character string.\n * @return {string} Encoded string.\n * @private\n */\ngoog.Uri.encodeChar_ = function(ch) {\n  var n = ch.charCodeAt(0);\n  return '%' + ((n >> 4) & 0xf).toString(16) + (n & 0xf).toString(16);\n};\n\n\n/**\n * Removes double percent-encoding from a string.\n * @param  {string} doubleEncodedString String\n * @return {string} String with double encoding removed.\n * @private\n */\ngoog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {\n  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, '%$1');\n};\n\n\n/**\n * Regular expression for characters that are disallowed in the scheme or\n * userInfo part of the URI.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\\/\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in a relative path.\n * Colon is included due to RFC 3986 3.3.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInRelativePath_ = /[\\#\\?:]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in an absolute path.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInAbsolutePath_ = /[\\#\\?]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the query.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInQuery_ = /[\\#\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the fragment.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInFragment_ = /#/g;\n\n\n/**\n * Checks whether two URIs have the same domain.\n * @param {string} uri1String First URI string.\n * @param {string} uri2String Second URI string.\n * @return {boolean} true if the two URIs have the same domain; false otherwise.\n */\ngoog.Uri.haveSameDomain = function(uri1String, uri2String) {\n  // Differs from goog.uri.utils.haveSameDomain, since this ignores scheme.\n  // TODO(gboyer): Have this just call goog.uri.util.haveSameDomain.\n  var pieces1 = goog.uri.utils.split(uri1String);\n  var pieces2 = goog.uri.utils.split(uri2String);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] ==\n      pieces2[goog.uri.utils.ComponentIndex.DOMAIN] &&\n      pieces1[goog.uri.utils.ComponentIndex.PORT] ==\n      pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\n\n\n\n/**\n * Class used to represent URI query parameters.  It is essentially a hash of\n * name-value pairs, though a name can be present more than once.\n *\n * Has the same interface as the collections in goog.structs.\n *\n * @param {?string=} opt_query Optional encoded query string to parse into\n *     the object.\n * @param {goog.Uri=} opt_uri Optional uri object that should have its\n *     cache invalidated when this object updates. Deprecated -- this\n *     is no longer required.\n * @param {boolean=} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @constructor\n * @struct\n * @final\n */\ngoog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {\n  /**\n   * The map containing name/value or name/array-of-values pairs.\n   * May be null if it requires parsing from the query string.\n   *\n   * We need to use a Map because we cannot guarantee that the key names will\n   * not be problematic for IE.\n   *\n   * @private {goog.structs.Map<string, !Array<*>>}\n   */\n  this.keyMap_ = null;\n\n  /**\n   * The number of params, or null if it requires computing.\n   * @private {?number}\n   */\n  this.count_ = null;\n\n  /**\n   * Encoded query string, or null if it requires computing from the key map.\n   * @private {?string}\n   */\n  this.encodedQuery_ = opt_query || null;\n\n  /**\n   * If true, ignore the case of the parameter name in #get.\n   * @private {boolean}\n   */\n  this.ignoreCase_ = !!opt_ignoreCase;\n};\n\n\n/**\n * If the underlying key map is not yet initialized, it parses the\n * query string and fills the map with parsed data.\n * @private\n */\ngoog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {\n  if (!this.keyMap_) {\n    this.keyMap_ = new goog.structs.Map();\n    this.count_ = 0;\n    if (this.encodedQuery_) {\n      var self = this;\n      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {\n        self.add(goog.string.urlDecode(name), value);\n      });\n    }\n  }\n};\n\n\n/**\n * Creates a new query data instance from a map of names and values.\n *\n * @param {!goog.structs.Map<string, ?>|!Object} map Map of string parameter\n *     names to parameter value. If parameter value is an array, it is\n *     treated as if the key maps to each individual value in the\n *     array.\n * @param {goog.Uri=} opt_uri URI object that should have its cache\n *     invalidated when this object updates.\n * @param {boolean=} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @return {!goog.Uri.QueryData} The populated query data instance.\n */\ngoog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {\n  var keys = goog.structs.getKeys(map);\n  if (typeof keys == 'undefined') {\n    throw new Error('Keys are undefined');\n  }\n\n  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);\n  var values = goog.structs.getValues(map);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = values[i];\n    if (!goog.isArray(value)) {\n      queryData.add(key, value);\n    } else {\n      queryData.setValues(key, value);\n    }\n  }\n  return queryData;\n};\n\n\n/**\n * Creates a new query data instance from parallel arrays of parameter names\n * and values. Allows for duplicate parameter names. Throws an error if the\n * lengths of the arrays differ.\n *\n * @param {!Array<string>} keys Parameter names.\n * @param {!Array<?>} values Parameter values.\n * @param {goog.Uri=} opt_uri URI object that should have its cache\n *     invalidated when this object updates.\n * @param {boolean=} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @return {!goog.Uri.QueryData} The populated query data instance.\n */\ngoog.Uri.QueryData.createFromKeysValues = function(\n    keys, values, opt_uri, opt_ignoreCase) {\n  if (keys.length != values.length) {\n    throw new Error('Mismatched lengths for keys/values');\n  }\n  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);\n  for (var i = 0; i < keys.length; i++) {\n    queryData.add(keys[i], values[i]);\n  }\n  return queryData;\n};\n\n\n/**\n * @return {?number} The number of parameters.\n */\ngoog.Uri.QueryData.prototype.getCount = function() {\n  this.ensureKeyMapInitialized_();\n  return this.count_;\n};\n\n\n/**\n * Adds a key value pair.\n * @param {string} key Name.\n * @param {*} value Value.\n * @return {!goog.Uri.QueryData} Instance of this object.\n */\ngoog.Uri.QueryData.prototype.add = function(key, value) {\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n\n  key = this.getKeyName_(key);\n  var values = this.keyMap_.get(key);\n  if (!values) {\n    this.keyMap_.set(key, (values = []));\n  }\n  values.push(value);\n  this.count_ = goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\n\n\n/**\n * Removes all the params with the given key.\n * @param {string} key Name.\n * @return {boolean} Whether any parameter was removed.\n */\ngoog.Uri.QueryData.prototype.remove = function(key) {\n  this.ensureKeyMapInitialized_();\n\n  key = this.getKeyName_(key);\n  if (this.keyMap_.containsKey(key)) {\n    this.invalidateCache_();\n\n    // Decrement parameter count.\n    this.count_ =\n        goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n    return this.keyMap_.remove(key);\n  }\n  return false;\n};\n\n\n/**\n * Clears the parameters.\n */\ngoog.Uri.QueryData.prototype.clear = function() {\n  this.invalidateCache_();\n  this.keyMap_ = null;\n  this.count_ = 0;\n};\n\n\n/**\n * @return {boolean} Whether we have any parameters.\n */\ngoog.Uri.QueryData.prototype.isEmpty = function() {\n  this.ensureKeyMapInitialized_();\n  return this.count_ == 0;\n};\n\n\n/**\n * Whether there is a parameter with the given name\n * @param {string} key The parameter name to check for.\n * @return {boolean} Whether there is a parameter with the given name.\n */\ngoog.Uri.QueryData.prototype.containsKey = function(key) {\n  this.ensureKeyMapInitialized_();\n  key = this.getKeyName_(key);\n  return this.keyMap_.containsKey(key);\n};\n\n\n/**\n * Whether there is a parameter with the given value.\n * @param {*} value The value to check for.\n * @return {boolean} Whether there is a parameter with the given value.\n */\ngoog.Uri.QueryData.prototype.containsValue = function(value) {\n  // NOTE(arv): This solution goes through all the params even if it was the\n  // first param. We can get around this by not reusing code or by switching to\n  // iterators.\n  var vals = this.getValues();\n  return goog.array.contains(vals, value);\n};\n\n\n/**\n * Runs a callback on every key-value pair in the map, including duplicate keys.\n * This won't maintain original order when duplicate keys are interspersed (like\n * getKeys() / getValues()).\n * @param {function(this:SCOPE, ?, string, !goog.Uri.QueryData)} f\n * @param {SCOPE=} opt_scope The value of \"this\" inside f.\n * @template SCOPE\n */\ngoog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(values, key) {\n    goog.array.forEach(values, function(value) {\n      f.call(opt_scope, value, key, this);\n    }, this);\n  }, this);\n};\n\n\n/**\n * Returns all the keys of the parameters. If a key is used multiple times\n * it will be included multiple times in the returned array\n * @return {!Array<string>} All the keys of the parameters.\n */\ngoog.Uri.QueryData.prototype.getKeys = function() {\n  this.ensureKeyMapInitialized_();\n  // We need to get the values to know how many keys to add.\n  var vals = this.keyMap_.getValues();\n  var keys = this.keyMap_.getKeys();\n  var rv = [];\n  for (var i = 0; i < keys.length; i++) {\n    var val = vals[i];\n    for (var j = 0; j < val.length; j++) {\n      rv.push(keys[i]);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Returns all the values of the parameters with the given name. If the query\n * data has no such key this will return an empty array. If no key is given\n * all values wil be returned.\n * @param {string=} opt_key The name of the parameter to get the values for.\n * @return {!Array<?>} All the values of the parameters with the given name.\n */\ngoog.Uri.QueryData.prototype.getValues = function(opt_key) {\n  this.ensureKeyMapInitialized_();\n  var rv = [];\n  if (goog.isString(opt_key)) {\n    if (this.containsKey(opt_key)) {\n      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));\n    }\n  } else {\n    // Return all values.\n    var values = this.keyMap_.getValues();\n    for (var i = 0; i < values.length; i++) {\n      rv = goog.array.concat(rv, values[i]);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Sets a key value pair and removes all other keys with the same value.\n *\n * @param {string} key Name.\n * @param {*} value Value.\n * @return {!goog.Uri.QueryData} Instance of this object.\n */\ngoog.Uri.QueryData.prototype.set = function(key, value) {\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n\n  // TODO(chrishenry): This could be better written as\n  // this.remove(key), this.add(key, value), but that would reorder\n  // the key (since the key is first removed and then added at the\n  // end) and we would have to fix unit tests that depend on key\n  // ordering.\n  key = this.getKeyName_(key);\n  if (this.containsKey(key)) {\n    this.count_ =\n        goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n  }\n  this.keyMap_.set(key, [value]);\n  this.count_ = goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\n\n\n/**\n * Returns the first value associated with the key. If the query data has no\n * such key this will return undefined or the optional default.\n * @param {string} key The name of the parameter to get the value for.\n * @param {*=} opt_default The default value to return if the query data\n *     has no such key.\n * @return {*} The first string value associated with the key, or opt_default\n *     if there's no value.\n */\ngoog.Uri.QueryData.prototype.get = function(key, opt_default) {\n  var values = key ? this.getValues(key) : [];\n  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {\n    return values.length > 0 ? values[0] : opt_default;\n  } else {\n    return values.length > 0 ? String(values[0]) : opt_default;\n  }\n};\n\n\n/**\n * Sets the values for a key. If the key already exists, this will\n * override all of the existing values that correspond to the key.\n * @param {string} key The key to set values for.\n * @param {!Array<?>} values The values to set.\n */\ngoog.Uri.QueryData.prototype.setValues = function(key, values) {\n  this.remove(key);\n\n  if (values.length > 0) {\n    this.invalidateCache_();\n    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));\n    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;\n  }\n};\n\n\n/**\n * @return {string} Encoded query string.\n * @override\n */\ngoog.Uri.QueryData.prototype.toString = function() {\n  if (this.encodedQuery_) {\n    return this.encodedQuery_;\n  }\n\n  if (!this.keyMap_) {\n    return '';\n  }\n\n  var sb = [];\n\n  // In the past, we use this.getKeys() and this.getVals(), but that\n  // generates a lot of allocations as compared to simply iterating\n  // over the keys.\n  var keys = this.keyMap_.getKeys();\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var encodedKey = goog.string.urlEncode(key);\n    var val = this.getValues(key);\n    for (var j = 0; j < val.length; j++) {\n      var param = encodedKey;\n      // Ensure that null and undefined are encoded into the url as\n      // literal strings.\n      if (val[j] !== '') {\n        param += '=' + goog.string.urlEncode(val[j]);\n      }\n      sb.push(param);\n    }\n  }\n\n  return this.encodedQuery_ = sb.join('&');\n};\n\n\n/**\n * @throws URIError If URI is malformed (that is, if decodeURIComponent fails on\n *     any of the URI components).\n * @return {string} Decoded query string.\n */\ngoog.Uri.QueryData.prototype.toDecodedString = function() {\n  return goog.Uri.decodeOrEmpty_(this.toString());\n};\n\n\n/**\n * Invalidate the cache.\n * @private\n */\ngoog.Uri.QueryData.prototype.invalidateCache_ = function() {\n  this.encodedQuery_ = null;\n};\n\n\n/**\n * Removes all keys that are not in the provided list. (Modifies this object.)\n * @param {Array<string>} keys The desired keys.\n * @return {!goog.Uri.QueryData} a reference to this object.\n */\ngoog.Uri.QueryData.prototype.filterKeys = function(keys) {\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(value, key) {\n    if (!goog.array.contains(keys, key)) {\n      this.remove(key);\n    }\n  }, this);\n  return this;\n};\n\n\n/**\n * Clone the query data instance.\n * @return {!goog.Uri.QueryData} New instance of the QueryData object.\n */\ngoog.Uri.QueryData.prototype.clone = function() {\n  var rv = new goog.Uri.QueryData();\n  rv.encodedQuery_ = this.encodedQuery_;\n  if (this.keyMap_) {\n    rv.keyMap_ = this.keyMap_.clone();\n    rv.count_ = this.count_;\n  }\n  return rv;\n};\n\n\n/**\n * Helper function to get the key name from a JavaScript object. Converts\n * the object to a string, and to lower case if necessary.\n * @private\n * @param {*} arg The object to get a key name from.\n * @return {string} valid key name which can be looked up in #keyMap_.\n */\ngoog.Uri.QueryData.prototype.getKeyName_ = function(arg) {\n  var keyName = String(arg);\n  if (this.ignoreCase_) {\n    keyName = keyName.toLowerCase();\n  }\n  return keyName;\n};\n\n\n/**\n * Ignore case in parameter names.\n * NOTE: If there are already key/value pairs in the QueryData, and\n * ignoreCase_ is set to false, the keys will all be lower-cased.\n * @param {boolean} ignoreCase whether this goog.Uri should ignore case.\n */\ngoog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {\n  var resetKeys = ignoreCase && !this.ignoreCase_;\n  if (resetKeys) {\n    this.ensureKeyMapInitialized_();\n    this.invalidateCache_();\n    this.keyMap_.forEach(function(value, key) {\n      var lowerCase = key.toLowerCase();\n      if (key != lowerCase) {\n        this.remove(key);\n        this.setValues(lowerCase, value);\n      }\n    }, this);\n  }\n  this.ignoreCase_ = ignoreCase;\n};\n\n\n/**\n * Extends a query data object with another query data or map like object. This\n * operates 'in-place', it does not create a new QueryData object.\n *\n * @param {...(?goog.Uri.QueryData|?goog.structs.Map<?, ?>|?Object)} var_args\n *     The object from which key value pairs will be copied.\n * @suppress {deprecated} Use deprecated goog.structs.forEach to allow different\n * types of parameters.\n */\ngoog.Uri.QueryData.prototype.extend = function(var_args) {\n  for (var i = 0; i < arguments.length; i++) {\n    var data = arguments[i];\n    goog.structs.forEach(\n        data, function(value, key) { this.add(key, value); }, this);\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines fireauth.iframeclient.IfcHandler used to communicate\n * with the serverless widget.\n */\n\ngoog.provide('fireauth.iframeclient.IfcHandler');\ngoog.provide('fireauth.iframeclient.IframeUrlBuilder');\ngoog.provide('fireauth.iframeclient.OAuthUrlBuilder');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.AuthProvider');\ngoog.require('fireauth.InvalidOriginError');\ngoog.require('fireauth.OAuthSignInHandler');\ngoog.require('fireauth.RpcHandler');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.constants');\ngoog.require('fireauth.iframeclient.IframeWrapper');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Timer');\ngoog.require('goog.Uri');\ngoog.require('goog.array');\ngoog.require('goog.object');\n\n\n/**\n * The OAuth handler and iframe prototcol.\n * @const {string}\n * @suppress {const|duplicate}\n */\nfireauth.iframeclient.SCHEME = 'https';\n\n\n\n/**\n * The OAuth handler and iframe port number.\n * @const {?number}\n * @suppress {const|duplicate}\n */\nfireauth.iframeclient.PORT_NUMBER = null;\n\n\n\n/**\n * The iframe URL builder used to build the iframe widget URL.\n * @param {string} authDomain The application authDomain.\n * @param {string} apiKey The API key.\n * @param {string} appName The App name.\n * @constructor\n */\nfireauth.iframeclient.IframeUrlBuilder = function(authDomain, apiKey, appName) {\n  /** @private {string} The application authDomain. */\n  this.authDomain_ = authDomain;\n  /** @private {string} The API key. */\n  this.apiKey_ = apiKey;\n  /** @private {string} The App name. */\n  this.appName_ = appName;\n  /** @private {?string|undefined} The client version. */\n  this.v_ = null;\n  /**\n   * @private {!goog.Uri} The URI object used to build the iframe URL.\n   */\n  this.uri_ = goog.Uri.create(\n      fireauth.iframeclient.SCHEME,\n      null,\n      this.authDomain_,\n      fireauth.iframeclient.PORT_NUMBER,\n      '/__/auth/iframe',\n      null,\n      null);\n  this.uri_.setParameterValue('apiKey', this.apiKey_);\n  this.uri_.setParameterValue('appName', this.appName_);\n  /** @private {?string|undefined} The endpoint ID. */\n  this.endpointId_ = null;\n  /** @private {!Array<string>} The list of framework IDs. */\n  this.frameworks_ = [];\n};\n\n\n/**\n * Sets the client version.\n * @param {?string|undefined} v The client version.\n * @return {!fireauth.iframeclient.IframeUrlBuilder} The current iframe URL\n *     builder instance.\n */\nfireauth.iframeclient.IframeUrlBuilder.prototype.setVersion = function(v) {\n  this.v_ = v;\n  return this;\n};\n\n\n/**\n * Sets the endpoint ID.\n * @param {?string|undefined} eid The endpoint ID (staging, test Gaia, etc).\n * @return {!fireauth.iframeclient.IframeUrlBuilder} The current iframe URL\n *     builder instance.\n */\nfireauth.iframeclient.IframeUrlBuilder.prototype.setEndpointId = function(eid) {\n  this.endpointId_ = eid;\n  return this;\n};\n\n\n/**\n * Sets the list of frameworks to pass to the iframe.\n * @param {?Array<string>|undefined} frameworks The list of frameworks to log.\n * @return {!fireauth.iframeclient.IframeUrlBuilder} The current iframe URL\n *     builder instance.\n */\nfireauth.iframeclient.IframeUrlBuilder.prototype.setFrameworks =\n    function(frameworks) {\n  this.frameworks_ = goog.array.clone(frameworks || []);\n  return this;\n};\n\n\n/**\n * Modifes the URI with the relevant Auth provider parameters.\n * @return {string} The constructed OAuth URL string.\n * @override\n */\nfireauth.iframeclient.IframeUrlBuilder.prototype.toString = function() {\n  // Pass the client version if available.\n  if (this.v_) {\n    this.uri_.setParameterValue('v', this.v_);\n  } else {\n    this.uri_.removeParameter('v');\n  }\n  // Pass the endpoint ID if available.\n  if (this.endpointId_) {\n    this.uri_.setParameterValue('eid', this.endpointId_);\n  } else {\n    this.uri_.removeParameter('eid');\n  }\n  // Pass the list of frameworks if available.\n  if (this.frameworks_.length) {\n    this.uri_.setParameterValue('fw', this.frameworks_.join(','));\n  } else {\n    this.uri_.removeParameter('fw');\n  }\n  return this.uri_.toString();\n};\n\n\n\n/**\n * The OAuth URL builder used to build the OAuth handler widget URL.\n * @param {string} authDomain The application authDomain.\n * @param {string} apiKey The API key.\n * @param {string} appName The App name.\n * @param {string} authType The Auth operation type.\n * @param {!fireauth.AuthProvider} provider The Auth provider that the OAuth\n *     handler request is built to sign in to.\n * @constructor\n */\nfireauth.iframeclient.OAuthUrlBuilder =\n    function(authDomain, apiKey, appName, authType, provider) {\n  /** @private {string} The application authDomain. */\n  this.authDomain_ = authDomain;\n  /** @private {string} The API key. */\n  this.apiKey_ = apiKey;\n  /** @private {string} The App name. */\n  this.appName_ = appName;\n  /** @private {string} The Auth operation type. */\n  this.authType_ = authType;\n  /**\n   * @private {?string|undefined} The redirect URL used in redirect operations.\n   */\n  this.redirectUrl_ = null;\n  /** @private {?string|undefined} The event ID. */\n  this.eventId_ = null;\n  /** @private {?string|undefined} The client version. */\n  this.v_ = null;\n  /**\n   * @private {!fireauth.AuthProvider} The Firebase Auth provider that the OAuth\n   *     handler request is built to sign in to.\n   */\n  this.provider_ = provider;\n  /** @private {?string|undefined} The endpoint ID. */\n  this.endpointId_ = null;\n};\n\n\n/**\n * Sets the redirect URL.\n * @param {?string|undefined} redirectUrl The redirect URL used in redirect\n *     operations.\n * @return {!fireauth.iframeclient.OAuthUrlBuilder} The current OAuth URL\n *     builder instance.\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.setRedirectUrl =\n    function(redirectUrl) {\n  this.redirectUrl_ = redirectUrl;\n  return this;\n};\n\n\n/**\n * Sets the event ID.\n * @param {?string|undefined} eventId The event ID.\n * @return {!fireauth.iframeclient.OAuthUrlBuilder} The current OAuth URL\n *     builder instance.\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.setEventId = function(eventId) {\n  this.eventId_ = eventId;\n  return this;\n};\n\n\n/**\n * Sets the client version.\n * @param {?string|undefined} v The client version.\n * @return {!fireauth.iframeclient.OAuthUrlBuilder} The current OAuth URL\n *     builder instance.\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.setVersion = function(v) {\n  this.v_ = v;\n  return this;\n};\n\n\n/**\n * Sets the endpoint ID.\n * @param {?string|undefined} eid The endpoint ID (staging, test Gaia, etc).\n * @return {!fireauth.iframeclient.OAuthUrlBuilder} The current OAuth URL\n *     builder instance.\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.setEndpointId = function(eid) {\n  this.endpointId_ = eid;\n  return this;\n};\n\n\n/**\n * Sets any additional optional parameters. This will overwrite any previously\n * set additional parameters.\n * @param {?Object<string, string>|undefined} additionalParams The optional\n *     additional parameters.\n * @return {!fireauth.iframeclient.OAuthUrlBuilder} The current OAuth URL\n *     builder instance.\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.setAdditionalParameters =\n    function(additionalParams) {\n  this.additionalParams_ = goog.object.clone(additionalParams || null);\n  return this;\n};\n\n\n/**\n * Modifies the URI with the relevant Auth provider parameters.\n * @return {string} The constructed OAuth URL string.\n * @override\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.toString = function() {\n  var uri = goog.Uri.create(\n      fireauth.iframeclient.SCHEME,\n      null,\n      this.authDomain_,\n      fireauth.iframeclient.PORT_NUMBER,\n      '/__/auth/handler',\n      null,\n      null);\n  uri.setParameterValue('apiKey', this.apiKey_);\n  uri.setParameterValue('appName', this.appName_);\n  uri.setParameterValue('authType', this.authType_);\n\n  // Add custom parameters for OAuth1/OAuth2 providers.\n  if (this.provider_['isOAuthProvider']) {\n    // Set default language if available and no language already set.\n    /** @type {!fireauth.FederatedProvider} */ (this.provider_)\n        .setDefaultLanguage(this.getAuthLanguage_());\n    uri.setParameterValue('providerId', this.provider_['providerId']);\n    var customParameters = /** @type {!fireauth.FederatedProvider} */ (\n        this.provider_).getCustomParameters();\n    if (!goog.object.isEmpty(customParameters)) {\n      uri.setParameterValue(\n          'customParameters',\n          /** @type {string} */ (fireauth.util.stringifyJSON(customParameters))\n          );\n    }\n  }\n\n  // Add scopes for OAuth2 providers.\n  if (typeof this.provider_.getScopes === 'function') {\n    var scopes = this.provider_.getScopes();\n    if (scopes.length) {\n      uri.setParameterValue('scopes', scopes.join(','));\n    }\n  }\n\n  if (this.redirectUrl_) {\n    uri.setParameterValue('redirectUrl', this.redirectUrl_);\n  } else {\n    uri.removeParameter('redirectUrl');\n  }\n  if (this.eventId_) {\n    uri.setParameterValue('eventId', this.eventId_);\n  } else {\n    uri.removeParameter('eventId');\n  }\n  // Pass the client version if available.\n  if (this.v_) {\n    uri.setParameterValue('v', this.v_);\n  } else {\n    uri.removeParameter('v');\n  }\n  if (this.additionalParams_) {\n    for (var key in this.additionalParams_) {\n      if (this.additionalParams_.hasOwnProperty(key) &&\n          // Don't overwrite other existing parameters.\n          !uri.getParameterValue(key)) {\n        uri.setParameterValue(key, this.additionalParams_[key]);\n      }\n    }\n  }\n  // Pass the endpoint ID if available.\n  if (this.endpointId_) {\n    uri.setParameterValue('eid', this.endpointId_);\n  } else {\n    uri.removeParameter('eid');\n  }\n  // Append any framework IDs to the handler URL to log in handler RPC requests.\n  var frameworks = this.getAuthFrameworks_();\n  if (frameworks.length) {\n    uri.setParameterValue('fw', frameworks.join(','));\n  }\n  return uri.toString();\n};\n\n\n/**\n * Returns the current Auth instance's language code.\n * @return {?string} The corresponding language code.\n * @private\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.getAuthLanguage_ = function() {\n  try {\n    // Get the Auth instance for the current App identified by the App name.\n    // This could fail if, for example, the App instance was deleted.\n    return firebase['app'](this.appName_)['auth']().getLanguageCode();\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * Returns the list of Firebase frameworks used for logging purposes.\n * @return {!Array<string>} The list of corresponding Firebase frameworks.\n * @private\n */\nfireauth.iframeclient.OAuthUrlBuilder.prototype.getAuthFrameworks_ =\n    function() {\n  return fireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_(\n      this.appName_);\n};\n\n\n/**\n * Returns the list of Firebase frameworks used for logging purposes\n * corresponding to the Firebase App name provided.\n * @param {string} appName The Firebase App name.\n * @return {!Array<string>} The list of corresponding Firebase frameworks.\n * @private\n */\nfireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_ =\n    function(appName) {\n  try {\n    // Get the Auth instance's list of Firebase framework IDs for the current\n    // App identified by the App name.\n    // This could fail if, for example, the App instance was deleted.\n    return firebase['app'](appName)['auth']().getFramework();\n  } catch (e) {\n    return [];\n  }\n};\n\n\n\n/**\n * Initializes the ifcHandler which provides the mechanism to listen to Auth\n * events on the hidden iframe.\n * @param {string} authDomain The firebase authDomain used to determine the\n *     OAuth helper page domain.\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The App ID for the Auth instance that triggered this\n *     request.\n * @param {?string=} opt_clientVersion The optional client version string.\n * @param {?string=} opt_endpointId The endpoint ID (staging, test Gaia, etc).\n * @constructor\n * @implements {fireauth.OAuthSignInHandler}\n */\nfireauth.iframeclient.IfcHandler = function(authDomain, apiKey, appName,\n    opt_clientVersion, opt_endpointId) {\n  /** @private {string} The Auth domain. */\n  this.authDomain_ = authDomain;\n  /** @private {string} The API key. */\n  this.apiKey_ = apiKey;\n  /** @private {string} The App name. */\n  this.appName_ = appName;\n  /** @private {?string} The client version. */\n  this.clientVersion_ = opt_clientVersion || null;\n  /** @private {?string} The Auth endpoint ID. */\n  this.endpointId_ = opt_endpointId || null;\n  // Delay RPC handler and iframe URL initialization until needed to ensure\n  // logged frameworks are propagated to the iframe.\n  /** @private {?string} The full client version string. */\n  this.fullClientVersion_ = null;\n  /** @private {?string} The iframe URL. */\n  this.iframeUrl_ = null;\n  /** @private {?fireauth.RpcHandler} The RPC handler for provided API key. */\n  this.rpcHandler_ = null;\n  /**\n   * @private {!Array<!function(?fireauth.AuthEvent)>} The Auth event\n   *     listeners.\n   */\n  this.authEventListeners_ = [];\n  // Delay origin validator determination until needed, so the error is not\n  // thrown in the background. This will also prevent the getProjectConfig RPC\n  // until it is required.\n  /** @private {?goog.Promise} The origin validator. */\n  this.originValidator_ = null;\n  /** @private {?goog.Promise} The initialization promise. */\n  this.isInitialized_ = null;\n};\n\n\n/**\n * Validates the provided URL.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler used to validate the\n *     requested origin.\n * @param {string=} opt_origin The optional page origin. If not provided, the\n *     window.location.href value is used.\n * @return {!goog.Promise} The promise that resolves if the provided origin is\n *     valid.\n * @private\n */\nfireauth.iframeclient.IfcHandler.getOriginValidator_ =\n    function(rpcHandler, opt_origin) {\n  var origin = opt_origin || fireauth.util.getCurrentUrl();\n  return rpcHandler.getAuthorizedDomains().then(function(authorizedDomains) {\n    if (!fireauth.util.isAuthorizedDomain(authorizedDomains, origin)) {\n      throw new fireauth.InvalidOriginError(fireauth.util.getCurrentUrl());\n    }\n  });\n};\n\n\n/**\n * Initializes the iframe client wrapper.\n * @return {!goog.Promise} The promise that resolves on initialization.\n */\nfireauth.iframeclient.IfcHandler.prototype.initialize = function() {\n  // Already initialized.\n  if (this.isInitialized_) {\n    return this.isInitialized_;\n  }\n  var self = this;\n  this.isInitialized_ = fireauth.util.onDomReady().then(function() {\n    /**\n     * @private {!fireauth.iframeclient.IframeWrapper} The iframe wrapper\n     *     instance.\n     */\n    self.iframeWrapper_ = new fireauth.iframeclient.IframeWrapper(\n        self.getIframeUrl());\n    // Register all event listeners to Auth event messages sent from Auth\n    // iframe.\n    self.registerEvents_();\n  });\n  return this.isInitialized_;\n};\n\n\n/**\n * Waits for popup window to close. When closed start timeout listener for popup\n * pending promise. If in the process, it was detected that the iframe does not\n * support web storage, the popup is closed and the web storage unsupported\n * error is thrown.\n * @param {!Window} popupWin The popup window.\n * @param {!function(!fireauth.AuthError)} onError The on error callback.\n * @param {number} timeoutDuration The time to wait in ms after the popup is\n *     closed before triggering the popup closed by user error.\n * @return {!goog.Promise}\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.startPopupTimeout =\n    function(popupWin, onError, timeoutDuration) {\n  // Expire pending timeout promise for popup operation.\n  var popupClosedByUserError = new fireauth.AuthError(\n      fireauth.authenum.Error.POPUP_CLOSED_BY_USER);\n  // If web storage is disabled in the iframe, expire popup timeout quickly with\n  // this error.\n  var webStorageNotSupportedError = new fireauth.AuthError(\n      fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED);\n  var self = this;\n  var isResolved = false;\n  // Wait for the iframe to be ready first.\n  return this.initializeAndWait().then(function() {\n    // We do not return isWebStorageSupported() to ensure that this is backward\n    // compatible.\n    // Pushing the following client changes before updating the iframe to\n    // respond to these events would continue to work.\n    // The downside is that the popup could be closed before this resolves.\n    // In that case, they would get an error that the popup was closed and not\n    // the error that web storage is not supported, though that is unlikely\n    // as isWebStorageSupported should execute faster than the popup timeout.\n    // If web storage is not supported in the iframe, fail quickly.\n    self.isWebStorageSupported().then(function(isSupported) {\n      if (!isSupported) {\n        // If not supported, close window.\n        if (popupWin) {\n          fireauth.util.closeWindow(popupWin);\n        }\n        onError(webStorageNotSupportedError);\n        isResolved = true;\n      }\n    });\n  }).thenCatch(function(error) {\n    // Ignore any possible error in iframe embedding.\n    // These types of errors will be handled in processPopup which will close\n    // the popup too if that happens.\n    return;\n  }).then(function() {\n    // Skip if already resolved.\n    if (isResolved) {\n      return;\n    }\n    // After the iframe is ready, wait for popup to close and then start timeout\n    // check.\n    return fireauth.util.onPopupClose(popupWin);\n  }).then(function() {\n    // Skip if already resolved.\n    if (isResolved) {\n      return;\n    }\n    return goog.Timer.promise(timeoutDuration).then(function() {\n      // If this is already resolved or rejected, this will do nothing.\n      onError(popupClosedByUserError);\n    });\n  });\n};\n\n\n/**\n * @return {boolean} Whether the handler should be initialized early.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.shouldBeInitializedEarly =\n    function() {\n  var ua = fireauth.util.getUserAgentString();\n  // Cannot run in the background (can't wait for iframe to be embedded\n  // before triggering popup redirect) and is Safari (can only detect\n  // localStorage in iframe via change event) => embed iframe ASAP.\n  // Do the same for mobile browsers on iOS devices as they use the same\n  // Safari implementation underneath.\n  return !fireauth.util.runsInBackground(ua) &&\n         !fireauth.util.iframeCanSyncWebStorage(ua);\n};\n\n\n/**\n * @return {boolean} Whether the sign-in handler in the current environment\n *     has volatile session storage.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.hasVolatileStorage = function() {\n  // Web environment with web storage enabled has stable sessionStorage.\n  return false;\n};\n\n\n/**\n * Processes the popup request. The popup instance must be provided externally\n * and on error, the requestor must close the window.\n * @param {?Window} popupWin The popup window reference.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {!function()} onInitialize The function to call on initialization.\n * @param {!function(*)} onError The function to call on error.\n * @param {string=} opt_eventId The optional event ID.\n * @param {boolean=} opt_alreadyRedirected Whether popup is already redirected\n *     to final destination.\n * @return {!goog.Promise} The popup window promise.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.processPopup = function(\n    popupWin,\n    mode,\n    provider,\n    onInitialize,\n    onError,\n    opt_eventId,\n    opt_alreadyRedirected) {\n  // processPopup is failing since it tries to access popup win when tab can\n  // not run in background. For now bypass processPopup which runs\n  // additional origin check not accounted above. Besides, iframe will never\n  // hand result to parent if origin not whitelisted.\n  // Error thrown by browser: Unable to establish a connection with the\n  // popup. It may have been blocked by the browser.\n  // If popup is null, startPopupTimeout will catch it without having the\n  // above error getting triggered due to popup access from opener.\n\n  // Reject immediately if the popup is blocked.\n  if (!popupWin) {\n    return goog.Promise.reject(\n        new fireauth.AuthError(fireauth.authenum.Error.POPUP_BLOCKED));\n  }\n  // Already redirected and cannot run in the background, resolve quickly while\n  // initializing.\n  if (opt_alreadyRedirected && !fireauth.util.runsInBackground()) {\n    // Initialize first before resolving.\n    this.initializeAndWait().thenCatch(function(error) {\n      fireauth.util.closeWindow(popupWin);\n      onError(error);\n    });\n    onInitialize();\n    // Already redirected.\n    return goog.Promise.resolve();\n  }\n  // If origin validator not determined yet.\n  if (!this.originValidator_) {\n    this.originValidator_ =\n        fireauth.iframeclient.IfcHandler.getOriginValidator_(\n            this.getRpcHandler_());\n  }\n  var self = this;\n  return this.originValidator_.then(function() {\n    // After origin validation, wait for iframe to be ready before redirecting.\n    var onReady = self.initializeAndWait().thenCatch(function(error) {\n      fireauth.util.closeWindow(popupWin);\n      onError(error);\n      throw error;\n    });\n    onInitialize();\n    return onReady;\n  }).then(function() {\n    // Popup and redirect operations work for OAuth providers only.\n    fireauth.AuthProvider.checkIfOAuthSupported(provider);\n    // Already redirected to intended destination, no need to redirect again.\n    if (opt_alreadyRedirected) {\n      return;\n    }\n    var oauthHelperWidgetUrl =\n        fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(\n            self.authDomain_,\n            self.apiKey_,\n            self.appName_,\n            mode,\n            provider,\n            null,\n            opt_eventId,\n            self.clientVersion_,\n            undefined,\n            self.endpointId_);\n    // Redirect popup to OAuth helper widget URL.\n    fireauth.util.goTo(oauthHelperWidgetUrl, /** @type {!Window} */ (popupWin));\n  }).thenCatch(function(e) {\n    // Force another origin validation.\n    if (e.code == 'auth/network-request-failed') {\n      self.originValidator_ = null;\n    }\n    throw e;\n  });\n};\n\n\n/**\n * @return {!fireauth.RpcHandler} The RPC handler instance with the relevant\n *     endpoints, version and frameworks.\n * @private\n */\nfireauth.iframeclient.IfcHandler.prototype.getRpcHandler_ = function() {\n  if (!this.rpcHandler_) {\n    this.fullClientVersion_ = this.clientVersion_ ?\n        fireauth.util.getClientVersion(\n            fireauth.util.ClientImplementation.JSCORE,\n            this.clientVersion_,\n            fireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_(\n                this.appName_)) :\n        null;\n    this.rpcHandler_ = new fireauth.RpcHandler(\n        this.apiKey_,\n        // Get the client Auth endpoint used.\n        fireauth.constants.getEndpointConfig(this.endpointId_),\n        this.fullClientVersion_);\n  }\n  return this.rpcHandler_;\n};\n\n\n/**\n * Processes the redirect request.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {?string=} opt_eventId The optional event ID.\n * @return {!goog.Promise}\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.processRedirect =\n    function(mode, provider, opt_eventId) {\n  // If origin validator not determined yet.\n  if (!this.originValidator_) {\n    this.originValidator_ =\n        fireauth.iframeclient.IfcHandler.getOriginValidator_(\n            this.getRpcHandler_());\n  }\n  var self = this;\n  // Make sure origin is validated.\n  return this.originValidator_.then(function() {\n    fireauth.AuthProvider.checkIfOAuthSupported(provider);\n    var oauthHelperWidgetUrl =\n        fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(\n            self.authDomain_,\n            self.apiKey_,\n            self.appName_,\n            mode,\n            provider,\n            fireauth.util.getCurrentUrl(),\n            opt_eventId,\n            self.clientVersion_,\n            undefined,\n            self.endpointId_);\n    // Redirect to OAuth helper widget URL.\n    fireauth.util.goTo(oauthHelperWidgetUrl);\n  }).thenCatch(function(e) {\n    // Force another origin validation on network errors.\n    if (e.code == 'auth/network-request-failed') {\n      self.originValidator_ = null;\n    }\n    throw e;\n  });\n};\n\n\n/** @return {string} The iframe URL. */\nfireauth.iframeclient.IfcHandler.prototype.getIframeUrl = function() {\n  if (!this.iframeUrl_) {\n    this.iframeUrl_ = fireauth.iframeclient.IfcHandler.getAuthIframeUrl(\n        this.authDomain_, this.apiKey_, this.appName_, this.clientVersion_,\n        this.endpointId_,\n        fireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_(\n            this.appName_));\n  }\n  return this.iframeUrl_;\n};\n\n\n/**\n * @return {!goog.Promise} The promise that resolves when the iframe is ready.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.initializeAndWait = function() {\n  // Initialize if not initialized yet.\n  var self = this;\n  return this.initialize().then(function() {\n    return self.iframeWrapper_.onReady();\n  }).thenCatch(function(error) {\n    // Reset origin validator.\n    self.originValidator_ = null;\n    // Reject iframe ready promise with network error.\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.NETWORK_REQUEST_FAILED);\n  });\n};\n\n\n/**\n * @return {boolean} Whether the handler will unload the current page on\n *     redirect operations.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.unloadsOnRedirect = function() {\n  return true;\n};\n\n\n/**\n * @param {string} authDomain The Firebase authDomain used to determine the\n *     OAuth helper page domain.\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The App ID for the Auth instance that triggered this\n *     request.\n * @param {?string=} opt_clientVersion The optional client version string.\n * @param {?string=} opt_endpointId The endpoint ID (staging, test Gaia, etc).\n * @param {?Array<string>=} opt_frameworks The optional list of framework IDs.\n * @return {string} The data iframe src URL.\n */\nfireauth.iframeclient.IfcHandler.getAuthIframeUrl = function(authDomain, apiKey,\n    appName, opt_clientVersion, opt_endpointId, opt_frameworks) {\n  // OAuth helper iframe URL.\n  var builder = new fireauth.iframeclient.IframeUrlBuilder(\n      authDomain, apiKey, appName);\n  return builder\n      .setVersion(opt_clientVersion)\n      .setEndpointId(opt_endpointId)\n      .setFrameworks(opt_frameworks)\n      .toString();\n};\n\n\n/**\n * @param {string} authDomain The Firebase authDomain used to determine the\n *     OAuth helper page domain.\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The App ID for the Auth instance that triggered this\n *     request.\n * @param {string} authType The type of operation that depends on OAuth sign in.\n * @param {!fireauth.AuthProvider} provider The provider to sign in to.\n * @param {?string=} opt_redirectUrl The optional URL to redirect to on OAuth\n *     sign in completion.\n * @param {?string=} opt_eventId The optional event ID to identify on receipt.\n * @param {?string=} opt_clientVersion The optional client version string.\n * @param {?Object<string, string>=} opt_additionalParams The optional\n *     additional parameters.\n * @param {?string=} opt_endpointId The endpoint ID (staging, test Gaia, etc).\n * @return {string} The OAuth helper widget URL.\n */\nfireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl = function(\n    authDomain,\n    apiKey,\n    appName,\n    authType,\n    provider,\n    opt_redirectUrl,\n    opt_eventId,\n    opt_clientVersion,\n    opt_additionalParams,\n    opt_endpointId) {\n  // OAuth helper widget URL.\n  var builder = new fireauth.iframeclient.OAuthUrlBuilder(\n      authDomain, apiKey, appName, authType, provider);\n  return builder\n      .setRedirectUrl(opt_redirectUrl)\n      .setEventId(opt_eventId)\n      .setVersion(opt_clientVersion)\n      .setAdditionalParameters(opt_additionalParams)\n      .setEndpointId(opt_endpointId)\n      .toString();\n};\n\n\n/**\n * Post message receiver event names.\n * @enum {string}\n */\nfireauth.iframeclient.IfcHandler.ReceiverEvent = {\n  AUTH_EVENT: 'authEvent'\n};\n\n\n/**\n * Post message sender event names.\n * @enum {string}\n */\nfireauth.iframeclient.IfcHandler.SenderEvent = {\n  WEB_STORAGE_SUPPORT_EVENT: 'webStorageSupport'\n};\n\n\n/**\n * Post message response field names.\n * @enum {string}\n */\nfireauth.iframeclient.IfcHandler.Response = {\n  STATUS: 'status',\n  AUTH_EVENT: 'authEvent',\n  WEB_STORAGE_SUPPORT: 'webStorageSupport'\n};\n\n\n/**\n * Post message status values.\n * @enum {string}\n */\nfireauth.iframeclient.IfcHandler.Status = {\n  ACK: 'ACK',\n  ERROR: 'ERROR'\n};\n\n\n/**\n * Registers all event listeners.\n * @private\n */\nfireauth.iframeclient.IfcHandler.prototype.registerEvents_ = function() {\n  // Should be run in initialization.\n  if (!this.iframeWrapper_) {\n    throw new Error('IfcHandler must be initialized!');\n  }\n  var self = this;\n  // Listen to Auth change events emitted from iframe.\n  this.iframeWrapper_.registerEvent(\n      fireauth.iframeclient.IfcHandler.ReceiverEvent.AUTH_EVENT,\n      function(response) {\n        var resolveResponse = {};\n        if (response &&\n            response[fireauth.iframeclient.IfcHandler.Response.AUTH_EVENT]) {\n          var isHandled = false;\n          // Get Auth event (plain object).\n          var authEvent = fireauth.AuthEvent.fromPlainObject(\n              response[fireauth.iframeclient.IfcHandler.Response.AUTH_EVENT]);\n          // Trigger Auth change on all listeners.\n          for (var i = 0; i < self.authEventListeners_.length; i++) {\n            isHandled = self.authEventListeners_[i](authEvent) || isHandled;\n          }\n          // Return ack response to notify sender of success.\n          resolveResponse = {};\n          resolveResponse[fireauth.iframeclient.IfcHandler.Response.STATUS] =\n              isHandled ? fireauth.iframeclient.IfcHandler.Status.ACK :\n                  fireauth.iframeclient.IfcHandler.Status.ERROR;\n          return goog.Promise.resolve(resolveResponse);\n        }\n        // Return error status if the response is invalid.\n        resolveResponse[fireauth.iframeclient.IfcHandler.Response.STATUS] =\n            fireauth.iframeclient.IfcHandler.Status.ERROR;\n        return goog.Promise.resolve(resolveResponse);\n      });\n};\n\n\n/**\n * @return {!goog.Promise<boolean>} Whether web storage is supported in the\n *     iframe.\n */\nfireauth.iframeclient.IfcHandler.prototype.isWebStorageSupported = function() {\n  var webStorageSupportEvent =\n      fireauth.iframeclient.IfcHandler.SenderEvent.WEB_STORAGE_SUPPORT_EVENT;\n  var message = {\n    'type': webStorageSupportEvent\n  };\n  var self = this;\n  // Initialize if not initialized yet.\n  return this.initialize().then(function() {\n    return self.iframeWrapper_.sendMessage(message);\n  }).then(function(response) {\n    // Parse the response and return the passed web storage support status.\n    var key = fireauth.iframeclient.IfcHandler.Response.WEB_STORAGE_SUPPORT;\n    if (response &&\n        response.length &&\n        typeof response[0][key] !== 'undefined') {\n      return response[0][key];\n    }\n    // Internal error.\n    throw new Error;\n  });\n};\n\n\n/**\n * @param {!function(?fireauth.AuthEvent):boolean} listener The Auth event\n *     listener to add.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.addAuthEventListener =\n    function(listener) {\n  this.authEventListeners_.push(listener);\n};\n\n\n/**\n * @param {!function(?fireauth.AuthEvent):boolean} listener The Auth event\n *     listener to remove.\n * @override\n */\nfireauth.iframeclient.IfcHandler.prototype.removeAuthEventListener =\n    function(listener) {\n  goog.array.removeAllIf(this.authEventListeners_, function(ele) {\n    return ele == listener;\n  });\n};\n","// Copyright 2010 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Browser capability checks for the dom package.\n *\n */\n\n\ngoog.provide('goog.dom.BrowserFeature');\n\ngoog.require('goog.userAgent');\n\n\n/**\n * Enum of browser capabilities.\n * @enum {boolean}\n */\ngoog.dom.BrowserFeature = {\n  /**\n   * Whether attributes 'name' and 'type' can be added to an element after it's\n   * created. False in Internet Explorer prior to version 9.\n   */\n  CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:\n      !goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9),\n\n  /**\n   * Whether we can use element.children to access an element's Element\n   * children. Available since Gecko 1.9.1, IE 9. (IE<9 also includes comment\n   * nodes in the collection.)\n   */\n  CAN_USE_CHILDREN_ATTRIBUTE: !goog.userAgent.GECKO && !goog.userAgent.IE ||\n      goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) ||\n      goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher('1.9.1'),\n\n  /**\n   * Opera, Safari 3, and Internet Explorer 9 all support innerText but they\n   * include text nodes in script and style tags. Not document-mode-dependent.\n   */\n  CAN_USE_INNER_TEXT:\n      (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('9')),\n\n  /**\n   * MSIE, Opera, and Safari>=4 support element.parentElement to access an\n   * element's parent if it is an Element.\n   */\n  CAN_USE_PARENT_ELEMENT_PROPERTY:\n      goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT,\n\n  /**\n   * Whether NoScope elements need a scoped element written before them in\n   * innerHTML.\n   * MSDN: http://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx#1\n   */\n  INNER_HTML_NEEDS_SCOPED_ELEMENT: goog.userAgent.IE,\n\n  /**\n   * Whether we use legacy IE range API.\n   */\n  LEGACY_IE_RANGES:\n      goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('goog.string.Const');\n\ngoog.require('goog.asserts');\ngoog.require('goog.string.TypedString');\n\n\n\n/**\n * Wrapper for compile-time-constant strings.\n *\n * Const is a wrapper for strings that can only be created from program\n * constants (i.e., string literals).  This property relies on a custom Closure\n * compiler check that `goog.string.Const.from` is only invoked on\n * compile-time-constant expressions.\n *\n * Const is useful in APIs whose correct and secure use requires that certain\n * arguments are not attacker controlled: Compile-time constants are inherently\n * under the control of the application and not under control of external\n * attackers, and hence are safe to use in such contexts.\n *\n * Instances of this type must be created via its factory method\n * `goog.string.Const.from` and not by invoking its constructor.  The\n * constructor intentionally takes no parameters and the type is immutable;\n * hence only a default instance corresponding to the empty string can be\n * obtained via constructor invocation.\n *\n * @see goog.string.Const#from\n * @constructor\n * @final\n * @struct\n * @implements {goog.string.TypedString}\n */\ngoog.string.Const = function() {\n  /**\n   * The wrapped value of this Const object.  The field has a purposely ugly\n   * name to make (non-compiled) code that attempts to directly access this\n   * field stand out.\n   * @private {string}\n   */\n  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = '';\n\n  /**\n   * A type marker used to implement additional run-time type checking.\n   * @see goog.string.Const#unwrap\n   * @const {!Object}\n   * @private\n   */\n  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ =\n      goog.string.Const.TYPE_MARKER_;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.string.Const.prototype.implementsGoogStringTypedString = true;\n\n\n/**\n * Returns this Const's value a string.\n *\n * IMPORTANT: In code where it is security-relevant that an object's type is\n * indeed `goog.string.Const`, use `goog.string.Const.unwrap`\n * instead of this method.\n *\n * @see goog.string.Const#unwrap\n * @override\n */\ngoog.string.Const.prototype.getTypedStringValue = function() {\n  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;\n};\n\n\n/**\n * Returns a debug-string representation of this value.\n *\n * To obtain the actual string value wrapped inside an object of this type,\n * use `goog.string.Const.unwrap`.\n *\n * @see goog.string.Const#unwrap\n * @override\n */\ngoog.string.Const.prototype.toString = function() {\n  return 'Const{' +\n      this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ +\n      '}';\n};\n\n\n/**\n * Performs a runtime check that the provided object is indeed an instance\n * of `goog.string.Const`, and returns its value.\n * @param {!goog.string.Const} stringConst The object to extract from.\n * @return {string} The Const object's contained string, unless the run-time\n *     type check fails. In that case, `unwrap` returns an innocuous\n *     string, or, if assertions are enabled, throws\n *     `goog.asserts.AssertionError`.\n */\ngoog.string.Const.unwrap = function(stringConst) {\n  // Perform additional run-time type-checking to ensure that stringConst is\n  // indeed an instance of the expected type.  This provides some additional\n  // protection against security bugs due to application code that disables type\n  // checks.\n  if (stringConst instanceof goog.string.Const &&\n      stringConst.constructor === goog.string.Const &&\n      stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ ===\n          goog.string.Const.TYPE_MARKER_) {\n    return stringConst\n        .stringConstValueWithSecurityContract__googStringSecurityPrivate_;\n  } else {\n    goog.asserts.fail(\n        'expected object of type Const, got \\'' + stringConst + '\\'');\n    return 'type_error:Const';\n  }\n};\n\n\n/**\n * Creates a Const object from a compile-time constant string.\n *\n * It is illegal to invoke this function on an expression whose\n * compile-time-contant value cannot be determined by the Closure compiler.\n *\n * Correct invocations include,\n * <pre>\n *   var s = goog.string.Const.from('hello');\n *   var t = goog.string.Const.from('hello' + 'world');\n * </pre>\n *\n * In contrast, the following are illegal:\n * <pre>\n *   var s = goog.string.Const.from(getHello());\n *   var t = goog.string.Const.from('hello' + world);\n * </pre>\n *\n * @param {string} s A constant string from which to create a Const.\n * @return {!goog.string.Const} A Const object initialized to stringConst.\n */\ngoog.string.Const.from = function(s) {\n  return goog.string.Const.create__googStringSecurityPrivate_(s);\n};\n\n\n/**\n * Type marker for the Const type, used to implement additional run-time\n * type checking.\n * @const {!Object}\n * @private\n */\ngoog.string.Const.TYPE_MARKER_ = {};\n\n\n/**\n * Utility method to create Const instances.\n * @param {string} s The string to initialize the Const object with.\n * @return {!goog.string.Const} The initialized Const object.\n * @private\n */\ngoog.string.Const.create__googStringSecurityPrivate_ = function(s) {\n  var stringConst = new goog.string.Const();\n  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ =\n      s;\n  return stringConst;\n};\n\n\n/**\n * A Const instance wrapping the empty string.\n * @const {!goog.string.Const}\n */\ngoog.string.Const.EMPTY = goog.string.Const.from('');\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview The TrustedResourceUrl type and its builders.\n *\n * TODO(xtof): Link to document stating type contract.\n */\n\ngoog.provide('goog.html.TrustedResourceUrl');\n\ngoog.require('goog.asserts');\ngoog.require('goog.i18n.bidi.Dir');\ngoog.require('goog.i18n.bidi.DirectionalString');\ngoog.require('goog.string.Const');\ngoog.require('goog.string.TypedString');\n\n\n\n/**\n * A URL which is under application control and from which script, CSS, and\n * other resources that represent executable code, can be fetched.\n *\n * Given that the URL can only be constructed from strings under application\n * control and is used to load resources, bugs resulting in a malformed URL\n * should not have a security impact and are likely to be easily detectable\n * during testing. Given the wide number of non-RFC compliant URLs in use,\n * stricter validation could prevent some applications from being able to use\n * this type.\n *\n * Instances of this type must be created via the factory method,\n * (`fromConstant`, `fromConstants`, `format` or\n * `formatWithParams`), and not by invoking its constructor. The constructor\n * intentionally takes no parameters and the type is immutable; hence only a\n * default instance corresponding to the empty string can be obtained via\n * constructor invocation.\n *\n * @see goog.html.TrustedResourceUrl#fromConstant\n * @constructor\n * @final\n * @struct\n * @implements {goog.i18n.bidi.DirectionalString}\n * @implements {goog.string.TypedString}\n */\ngoog.html.TrustedResourceUrl = function() {\n  /**\n   * The contained value of this TrustedResourceUrl.  The field has a purposely\n   * ugly name to make (non-compiled) code that attempts to directly access this\n   * field stand out.\n   * @private {string}\n   */\n  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = '';\n\n  /**\n   * A type marker used to implement additional run-time type checking.\n   * @see goog.html.TrustedResourceUrl#unwrap\n   * @const {!Object}\n   * @private\n   */\n  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ =\n      goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;\n\n\n/**\n * Returns this TrustedResourceUrl's value as a string.\n *\n * IMPORTANT: In code where it is security relevant that an object's type is\n * indeed `TrustedResourceUrl`, use\n * `goog.html.TrustedResourceUrl.unwrap` instead of this method. If in\n * doubt, assume that it's security relevant. In particular, note that\n * goog.html functions which return a goog.html type do not guarantee that\n * the returned instance is of the right type. For example:\n *\n * <pre>\n * var fakeSafeHtml = new String('fake');\n * fakeSafeHtml.__proto__ = goog.html.SafeHtml.prototype;\n * var newSafeHtml = goog.html.SafeHtml.htmlEscape(fakeSafeHtml);\n * // newSafeHtml is just an alias for fakeSafeHtml, it's passed through by\n * // goog.html.SafeHtml.htmlEscape() as fakeSafeHtml instanceof\n * // goog.html.SafeHtml.\n * </pre>\n *\n * @see goog.html.TrustedResourceUrl#unwrap\n * @override\n */\ngoog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString =\n    true;\n\n\n/**\n * Returns this URLs directionality, which is always `LTR`.\n * @override\n */\ngoog.html.TrustedResourceUrl.prototype.getDirection = function() {\n  return goog.i18n.bidi.Dir.LTR;\n};\n\n\n/**\n * Creates a new TrustedResourceUrl with params added to URL.\n * @param {!Object<string, *>} params Parameters to add to URL. Parameters with\n *     value `null` or `undefined` are skipped. Both keys and values\n *     are encoded. If the value is an array then the same parameter is added\n *     for every element in the array. Note that JavaScript doesn't guarantee\n *     the order of values in an object which might result in non-deterministic\n *     order of the parameters. However, browsers currently preserve the order.\n * @return {!goog.html.TrustedResourceUrl} New TrustedResourceUrl with params.\n */\ngoog.html.TrustedResourceUrl.prototype.cloneWithParams = function(params) {\n  var url = goog.html.TrustedResourceUrl.unwrap(this);\n  var separator = /\\?/.test(url) ? '&' : '?';\n  for (var key in params) {\n    var values = goog.isArray(params[key]) ?\n        /** @type {!Array<*>} */ (params[key]) :\n        [params[key]];\n    for (var i = 0; i < values.length; i++) {\n      if (values[i] == null) {\n        continue;\n      }\n      url += separator + encodeURIComponent(key) + '=' +\n          encodeURIComponent(String(values[i]));\n      separator = '&';\n    }\n  }\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a debug string-representation of this value.\n   *\n   * To obtain the actual string value wrapped in a TrustedResourceUrl, use\n   * `goog.html.TrustedResourceUrl.unwrap`.\n   *\n   * @see goog.html.TrustedResourceUrl#unwrap\n   * @override\n   */\n  goog.html.TrustedResourceUrl.prototype.toString = function() {\n    return 'TrustedResourceUrl{' +\n        this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + '}';\n  };\n}\n\n\n/**\n * Performs a runtime check that the provided object is indeed a\n * TrustedResourceUrl object, and returns its value.\n *\n * @param {!goog.html.TrustedResourceUrl} trustedResourceUrl The object to\n *     extract from.\n * @return {string} The trustedResourceUrl object's contained string, unless\n *     the run-time type check fails. In that case, `unwrap` returns an\n *     innocuous string, or, if assertions are enabled, throws\n *     `goog.asserts.AssertionError`.\n */\ngoog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {\n  // Perform additional Run-time type-checking to ensure that\n  // trustedResourceUrl is indeed an instance of the expected type.  This\n  // provides some additional protection against security bugs due to\n  // application code that disables type checks.\n  // Specifically, the following checks are performed:\n  // 1. The object is an instance of the expected type.\n  // 2. The object is not an instance of a subclass.\n  // 3. The object carries a type marker for the expected type. \"Faking\" an\n  // object requires a reference to the type marker, which has names intended\n  // to stand out in code reviews.\n  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl &&\n      trustedResourceUrl.constructor === goog.html.TrustedResourceUrl &&\n      trustedResourceUrl\n              .TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ===\n          goog.html.TrustedResourceUrl\n              .TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {\n    return trustedResourceUrl\n        .privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;\n  } else {\n    goog.asserts.fail('expected object of type TrustedResourceUrl, got \\'' +\n        trustedResourceUrl + '\\' of type ' + goog.typeOf(trustedResourceUrl));\n    return 'type_error:TrustedResourceUrl';\n  }\n};\n\n\n/**\n * Creates a TrustedResourceUrl from a format string and arguments.\n *\n * The arguments for interpolation into the format string map labels to values.\n * Values of type `goog.string.Const` are interpolated without modifcation.\n * Values of other types are cast to string and encoded with\n * encodeURIComponent.\n *\n * `%{<label>}` markers are used in the format string to indicate locations\n * to be interpolated with the valued mapped to the given label. `<label>`\n * must contain only alphanumeric and `_` characters.\n *\n * The format string must start with one of the following:\n * - `https://<origin>/`\n * - `//<origin>/`\n * - `/<pathStart>`\n * - `about:blank#`\n *\n * `<origin>` must contain only alphanumeric or any of the following: `-.:[]`.\n * `<pathStart>` is any character except `/` and `\\`.\n *\n * Example usage:\n *\n *    var url = goog.html.TrustedResourceUrl.format(goog.string.Const.from(\n *        'https://www.google.com/search?q=%{query}'), {'query': searchTerm});\n *\n *    var url = goog.html.TrustedResourceUrl.format(goog.string.Const.from(\n *        '//www.youtube.com/v/%{videoId}?hl=en&fs=1%{autoplay}'), {\n *        'videoId': videoId,\n *        'autoplay': opt_autoplay ?\n *            goog.string.Const.from('&autoplay=1') : goog.string.Const.EMPTY\n *    });\n *\n * While this function can be used to create a TrustedResourceUrl from only\n * constants, fromConstant() and fromConstants() are generally preferable for\n * that purpose.\n *\n * @param {!goog.string.Const} format The format string.\n * @param {!Object<string, (string|number|!goog.string.Const)>} args Mapping\n *     of labels to values to be interpolated into the format string.\n *     goog.string.Const values are interpolated without encoding.\n * @return {!goog.html.TrustedResourceUrl}\n * @throws {!Error} On an invalid format string or if a label used in the\n *     the format string is not present in args.\n */\ngoog.html.TrustedResourceUrl.format = function(format, args) {\n  var formatStr = goog.string.Const.unwrap(format);\n  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {\n    throw new Error('Invalid TrustedResourceUrl format: ' + formatStr);\n  }\n  var result = formatStr.replace(\n      goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {\n        if (!Object.prototype.hasOwnProperty.call(args, id)) {\n          throw new Error(\n              'Found marker, \"' + id + '\", in format string, \"' + formatStr +\n              '\", but no valid label mapping found ' +\n              'in args: ' + JSON.stringify(args));\n        }\n        var arg = args[id];\n        if (arg instanceof goog.string.Const) {\n          return goog.string.Const.unwrap(arg);\n        } else {\n          return encodeURIComponent(String(arg));\n        }\n      });\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);\n};\n\n\n/**\n * @private @const {!RegExp}\n */\ngoog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\\w+)}/g;\n\n\n/**\n * The URL must be absolute, scheme-relative or path-absolute. So it must\n * start with:\n * - https:// followed by allowed origin characters.\n * - // followed by allowed origin characters.\n * - / not followed by / or \\. There will only be an absolute path.\n *\n * Based on\n * https://url.spec.whatwg.org/commit-snapshots/56b74ce7cca8883eab62e9a12666e2fac665d03d/#url-parsing\n * an initial / which is not followed by another / or \\ will end up in the \"path\n * state\" and from there it can only go to \"fragment state\" and \"query state\".\n *\n * We don't enforce a well-formed domain name. So '.' or '1.2' are valid.\n * That's ok because the origin comes from a compile-time constant.\n *\n * A regular expression is used instead of goog.uri for several reasons:\n * - Strictness. E.g. we don't want any userinfo component and we don't\n *   want '/./, nor \\' in the first path component.\n * - Small trusted base. goog.uri is generic and might need to change,\n *   reasoning about all the ways it can parse a URL now and in the future\n *   is error-prone.\n * - Code size. We expect many calls to .format(), many of which might\n *   not be using goog.uri.\n * - Simplicity. Using goog.uri would likely not result in simpler nor shorter\n *   code.\n * @private @const {!RegExp}\n */\ngoog.html.TrustedResourceUrl.BASE_URL_ =\n    /^(?:https:)?\\/\\/[0-9a-z.:[\\]-]+\\/|^\\/[^\\/\\\\]|^about:blank#/i;\n\n\n/**\n * Formats the URL same as TrustedResourceUrl.format and then adds extra URL\n * parameters.\n *\n * Example usage:\n *\n *     // Creates '//www.youtube.com/v/abc?autoplay=1' for videoId='abc' and\n *     // opt_autoplay=1. Creates '//www.youtube.com/v/abc' for videoId='abc'\n *     // and opt_autoplay=undefined.\n *     var url = goog.html.TrustedResourceUrl.formatWithParams(\n *         goog.string.Const.from('//www.youtube.com/v/%{videoId}'),\n *         {'videoId': videoId},\n *         {'autoplay': opt_autoplay});\n *\n * @param {!goog.string.Const} format The format string.\n * @param {!Object<string, (string|number|!goog.string.Const)>} args Mapping\n *     of labels to values to be interpolated into the format string.\n *     goog.string.Const values are interpolated without encoding.\n * @param {!Object<string, *>} params Parameters to add to URL. Parameters with\n *     value `null` or `undefined` are skipped. Both keys and values\n *     are encoded. If the value is an array then the same parameter is added\n *     for every element in the array. Note that JavaScript doesn't guarantee\n *     the order of values in an object which might result in non-deterministic\n *     order of the parameters. However, browsers currently preserve the order.\n * @return {!goog.html.TrustedResourceUrl}\n * @throws {!Error} On an invalid format string or if a label used in the\n *     the format string is not present in args.\n */\ngoog.html.TrustedResourceUrl.formatWithParams = function(format, args, params) {\n  var url = goog.html.TrustedResourceUrl.format(format, args);\n  return url.cloneWithParams(params);\n};\n\n\n/**\n * Creates a TrustedResourceUrl object from a compile-time constant string.\n *\n * Compile-time constant strings are inherently program-controlled and hence\n * trusted.\n *\n * @param {!goog.string.Const} url A compile-time-constant string from which to\n *     create a TrustedResourceUrl.\n * @return {!goog.html.TrustedResourceUrl} A TrustedResourceUrl object\n *     initialized to `url`.\n */\ngoog.html.TrustedResourceUrl.fromConstant = function(url) {\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(\n          goog.string.Const.unwrap(url));\n};\n\n\n/**\n * Creates a TrustedResourceUrl object from a compile-time constant strings.\n *\n * Compile-time constant strings are inherently program-controlled and hence\n * trusted.\n *\n * @param {!Array<!goog.string.Const>} parts Compile-time-constant strings from\n *     which to create a TrustedResourceUrl.\n * @return {!goog.html.TrustedResourceUrl} A TrustedResourceUrl object\n *     initialized to concatenation of `parts`.\n */\ngoog.html.TrustedResourceUrl.fromConstants = function(parts) {\n  var unwrapped = '';\n  for (var i = 0; i < parts.length; i++) {\n    unwrapped += goog.string.Const.unwrap(parts[i]);\n  }\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);\n};\n\n\n/**\n * Type marker for the TrustedResourceUrl type, used to implement additional\n * run-time type checking.\n * @const {!Object}\n * @private\n */\ngoog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};\n\n\n/**\n * Package-internal utility method to create TrustedResourceUrl instances.\n *\n * @param {string} url The string to initialize the TrustedResourceUrl object\n *     with.\n * @return {!goog.html.TrustedResourceUrl} The initialized TrustedResourceUrl\n *     object.\n * @package\n */\ngoog.html.TrustedResourceUrl\n    .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {\n  var trustedResourceUrl = new goog.html.TrustedResourceUrl();\n  trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ =\n      url;\n  return trustedResourceUrl;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview The SafeUrl type and its builders.\n *\n * TODO(xtof): Link to document stating type contract.\n */\n\ngoog.provide('goog.html.SafeUrl');\n\ngoog.require('goog.asserts');\ngoog.require('goog.fs.url');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.i18n.bidi.Dir');\ngoog.require('goog.i18n.bidi.DirectionalString');\ngoog.require('goog.string');\ngoog.require('goog.string.Const');\ngoog.require('goog.string.TypedString');\n\n\n\n/**\n * A string that is safe to use in URL context in DOM APIs and HTML documents.\n *\n * A SafeUrl is a string-like object that carries the security type contract\n * that its value as a string will not cause untrusted script execution\n * when evaluated as a hyperlink URL in a browser.\n *\n * Values of this type are guaranteed to be safe to use in URL/hyperlink\n * contexts, such as assignment to URL-valued DOM properties, in the sense that\n * the use will not result in a Cross-Site-Scripting vulnerability. Similarly,\n * SafeUrls can be interpolated into the URL context of an HTML template (e.g.,\n * inside a href attribute). However, appropriate HTML-escaping must still be\n * applied.\n *\n * Note that, as documented in `goog.html.SafeUrl.unwrap`, this type's\n * contract does not guarantee that instances are safe to interpolate into HTML\n * without appropriate escaping.\n *\n * Note also that this type's contract does not imply any guarantees regarding\n * the resource the URL refers to.  In particular, SafeUrls are <b>not</b>\n * safe to use in a context where the referred-to resource is interpreted as\n * trusted code, e.g., as the src of a script tag.\n *\n * Instances of this type must be created via the factory methods\n * (`goog.html.SafeUrl.fromConstant`, `goog.html.SafeUrl.sanitize`),\n * etc and not by invoking its constructor.  The constructor intentionally\n * takes no parameters and the type is immutable; hence only a default instance\n * corresponding to the empty string can be obtained via constructor invocation.\n *\n * @see goog.html.SafeUrl#fromConstant\n * @see goog.html.SafeUrl#from\n * @see goog.html.SafeUrl#sanitize\n * @constructor\n * @final\n * @struct\n * @implements {goog.i18n.bidi.DirectionalString}\n * @implements {goog.string.TypedString}\n */\ngoog.html.SafeUrl = function() {\n  /**\n   * The contained value of this SafeUrl.  The field has a purposely ugly\n   * name to make (non-compiled) code that attempts to directly access this\n   * field stand out.\n   * @private {string}\n   */\n  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = '';\n\n  /**\n   * A type marker used to implement additional run-time type checking.\n   * @see goog.html.SafeUrl#unwrap\n   * @const {!Object}\n   * @private\n   */\n  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ =\n      goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;\n};\n\n\n/**\n * The innocuous string generated by goog.html.SafeUrl.sanitize when passed\n * an unsafe URL.\n *\n * about:invalid is registered in\n * http://www.w3.org/TR/css3-values/#about-invalid.\n * http://tools.ietf.org/html/rfc6694#section-2.2.1 permits about URLs to\n * contain a fragment, which is not to be considered when determining if an\n * about URL is well-known.\n *\n * Using about:invalid seems preferable to using a fixed data URL, since\n * browsers might choose to not report CSP violations on it, as legitimate\n * CSS function calls to attr() can result in this URL being produced. It is\n * also a standard URL which matches exactly the semantics we need:\n * \"The about:invalid URI references a non-existent document with a generic\n * error condition. It can be used when a URI is necessary, but the default\n * value shouldn't be resolveable as any type of document\".\n *\n * @const {string}\n */\ngoog.html.SafeUrl.INNOCUOUS_STRING = 'about:invalid#zClosurez';\n\n\n/**\n * @override\n * @const\n */\ngoog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;\n\n\n/**\n * Returns this SafeUrl's value a string.\n *\n * IMPORTANT: In code where it is security relevant that an object's type is\n * indeed `SafeUrl`, use `goog.html.SafeUrl.unwrap` instead of this\n * method. If in doubt, assume that it's security relevant. In particular, note\n * that goog.html functions which return a goog.html type do not guarantee that\n * the returned instance is of the right type. For example:\n *\n * <pre>\n * var fakeSafeHtml = new String('fake');\n * fakeSafeHtml.__proto__ = goog.html.SafeHtml.prototype;\n * var newSafeHtml = goog.html.SafeHtml.htmlEscape(fakeSafeHtml);\n * // newSafeHtml is just an alias for fakeSafeHtml, it's passed through by\n * // goog.html.SafeHtml.htmlEscape() as fakeSafeHtml instanceof\n * // goog.html.SafeHtml.\n * </pre>\n *\n * IMPORTANT: The guarantees of the SafeUrl type contract only extend to the\n * behavior of browsers when interpreting URLs. Values of SafeUrl objects MUST\n * be appropriately escaped before embedding in a HTML document. Note that the\n * required escaping is context-sensitive (e.g. a different escaping is\n * required for embedding a URL in a style property within a style\n * attribute, as opposed to embedding in a href attribute).\n *\n * @see goog.html.SafeUrl#unwrap\n * @override\n */\ngoog.html.SafeUrl.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;\n\n\n/**\n * Returns this URLs directionality, which is always `LTR`.\n * @override\n */\ngoog.html.SafeUrl.prototype.getDirection = function() {\n  return goog.i18n.bidi.Dir.LTR;\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a debug string-representation of this value.\n   *\n   * To obtain the actual string value wrapped in a SafeUrl, use\n   * `goog.html.SafeUrl.unwrap`.\n   *\n   * @see goog.html.SafeUrl#unwrap\n   * @override\n   */\n  goog.html.SafeUrl.prototype.toString = function() {\n    return 'SafeUrl{' + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ +\n        '}';\n  };\n}\n\n\n/**\n * Performs a runtime check that the provided object is indeed a SafeUrl\n * object, and returns its value.\n *\n * IMPORTANT: The guarantees of the SafeUrl type contract only extend to the\n * behavior of  browsers when interpreting URLs. Values of SafeUrl objects MUST\n * be appropriately escaped before embedding in a HTML document. Note that the\n * required escaping is context-sensitive (e.g. a different escaping is\n * required for embedding a URL in a style property within a style\n * attribute, as opposed to embedding in a href attribute).\n *\n * @param {!goog.html.SafeUrl} safeUrl The object to extract from.\n * @return {string} The SafeUrl object's contained string, unless the run-time\n *     type check fails. In that case, `unwrap` returns an innocuous\n *     string, or, if assertions are enabled, throws\n *     `goog.asserts.AssertionError`.\n */\ngoog.html.SafeUrl.unwrap = function(safeUrl) {\n  // Perform additional Run-time type-checking to ensure that safeUrl is indeed\n  // an instance of the expected type.  This provides some additional protection\n  // against security bugs due to application code that disables type checks.\n  // Specifically, the following checks are performed:\n  // 1. The object is an instance of the expected type.\n  // 2. The object is not an instance of a subclass.\n  // 3. The object carries a type marker for the expected type. \"Faking\" an\n  // object requires a reference to the type marker, which has names intended\n  // to stand out in code reviews.\n  if (safeUrl instanceof goog.html.SafeUrl &&\n      safeUrl.constructor === goog.html.SafeUrl &&\n      safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ===\n          goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {\n    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n  } else {\n    goog.asserts.fail('expected object of type SafeUrl, got \\'' +\n        safeUrl + '\\' of type ' + goog.typeOf(safeUrl));\n    return 'type_error:SafeUrl';\n  }\n};\n\n\n/**\n * Creates a SafeUrl object from a compile-time constant string.\n *\n * Compile-time constant strings are inherently program-controlled and hence\n * trusted.\n *\n * @param {!goog.string.Const} url A compile-time-constant string from which to\n *         create a SafeUrl.\n * @return {!goog.html.SafeUrl} A SafeUrl object initialized to `url`.\n */\ngoog.html.SafeUrl.fromConstant = function(url) {\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\n      goog.string.Const.unwrap(url));\n};\n\n\n/**\n * A pattern that matches Blob or data types that can have SafeUrls created\n * from URL.createObjectURL(blob) or via a data: URI.\n * @const\n * @private\n */\ngoog.html.SAFE_MIME_TYPE_PATTERN_ = new RegExp(\n    // Note: Due to content-sniffing concerns, only add MIME types for\n    // media formats.\n    '^(?:audio/(?:3gpp|3gpp2|aac|midi|mp4|mpeg|ogg|x-m4a|x-wav|webm)|' +\n        'image/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|' +\n        // TODO(b/68188949): Due to content-sniffing concerns, text/csv should\n        // be removed from the whitelist.\n        'text/csv|' +\n        'video/(?:mpeg|mp4|ogg|webm|quicktime))$',\n    'i');\n\n\n/**\n * Creates a SafeUrl wrapping a blob URL for the given `blob`.\n *\n * The blob URL is created with `URL.createObjectURL`. If the MIME type\n * for `blob` is not of a known safe audio, image or video MIME type,\n * then the SafeUrl will wrap {@link #INNOCUOUS_STRING}.\n *\n * @see http://www.w3.org/TR/FileAPI/#url\n * @param {!Blob} blob\n * @return {!goog.html.SafeUrl} The blob URL, or an innocuous string wrapped\n *   as a SafeUrl.\n */\ngoog.html.SafeUrl.fromBlob = function(blob) {\n  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ?\n      goog.fs.url.createObjectUrl(blob) :\n      goog.html.SafeUrl.INNOCUOUS_STRING;\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n\n/**\n * Matches a base-64 data URL, with the first match group being the MIME type.\n * @const\n * @private\n */\ngoog.html.DATA_URL_PATTERN_ = /^data:([^;,]*);base64,[a-z0-9+\\/]+=*$/i;\n\n\n/**\n * Creates a SafeUrl wrapping a data: URL, after validating it matches a\n * known-safe audio, image or video MIME type.\n *\n * @param {string} dataUrl A valid base64 data URL with one of the whitelisted\n *     audio, image or video MIME types.\n * @return {!goog.html.SafeUrl} A matching safe URL, or {@link INNOCUOUS_STRING}\n *     wrapped as a SafeUrl if it does not pass.\n */\ngoog.html.SafeUrl.fromDataUrl = function(dataUrl) {\n  // There's a slight risk here that a browser sniffs the content type if it\n  // doesn't know the MIME type and executes HTML within the data: URL. For this\n  // to cause XSS it would also have to execute the HTML in the same origin\n  // of the page with the link. It seems unlikely that both of these will\n  // happen, particularly in not really old IEs.\n  var match = dataUrl.match(goog.html.DATA_URL_PATTERN_);\n  var valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\n      valid ? dataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);\n};\n\n\n/**\n * Creates a SafeUrl wrapping a tel: URL.\n *\n * @param {string} telUrl A tel URL.\n * @return {!goog.html.SafeUrl} A matching safe URL, or {@link INNOCUOUS_STRING}\n *     wrapped as a SafeUrl if it does not pass.\n */\ngoog.html.SafeUrl.fromTelUrl = function(telUrl) {\n  // There's a risk that a tel: URL could immediately place a call once\n  // clicked, without requiring user confirmation. For that reason it is\n  // handled in this separate function.\n  if (!goog.string.caseInsensitiveStartsWith(telUrl, 'tel:')) {\n    telUrl = goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\n      telUrl);\n};\n\n\n/**\n * Creates a SafeUrl from TrustedResourceUrl. This is safe because\n * TrustedResourceUrl is more tightly restricted than SafeUrl.\n *\n * @param {!goog.html.TrustedResourceUrl} trustedResourceUrl\n * @return {!goog.html.SafeUrl}\n */\ngoog.html.SafeUrl.fromTrustedResourceUrl = function(trustedResourceUrl) {\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\n      goog.html.TrustedResourceUrl.unwrap(trustedResourceUrl));\n};\n\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that satisfy\n * the SafeUrl contract.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * @private\n * @const {!RegExp}\n */\ngoog.html.SAFE_URL_PATTERN_ =\n    /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;\n\n\n/**\n * Creates a SafeUrl object from `url`. If `url` is a\n * goog.html.SafeUrl then it is simply returned. Otherwise the input string is\n * validated to match a pattern of commonly used safe URLs.\n *\n * `url` may be a URL with the http, https, mailto or ftp scheme,\n * or a relative URL (i.e., a URL without a scheme; specifically, a\n * scheme-relative, absolute-path-relative, or path-relative URL).\n *\n * @see http://url.spec.whatwg.org/#concept-relative-url\n * @param {string|!goog.string.TypedString} url The URL to validate.\n * @return {!goog.html.SafeUrl} The validated URL, wrapped as a SafeUrl.\n */\ngoog.html.SafeUrl.sanitize = function(url) {\n  if (url instanceof goog.html.SafeUrl) {\n    return url;\n  } else if (url.implementsGoogStringTypedString) {\n    url = /** @type {!goog.string.TypedString} */ (url).getTypedStringValue();\n  } else {\n    url = String(url);\n  }\n  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {\n    url = goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n/**\n * Creates a SafeUrl object from `url`. If `url` is a\n * goog.html.SafeUrl then it is simply returned. Otherwise the input string is\n * validated to match a pattern of commonly used safe URLs.\n *\n * `url` may be a URL with the http, https, mailto or ftp scheme,\n * or a relative URL (i.e., a URL without a scheme; specifically, a\n * scheme-relative, absolute-path-relative, or path-relative URL).\n *\n * This function asserts (using goog.asserts) that the URL matches this pattern.\n * If it does not, in addition to failing the assert, an innocous URL will be\n * returned.\n *\n * @see http://url.spec.whatwg.org/#concept-relative-url\n * @param {string|!goog.string.TypedString} url The URL to validate.\n * @return {!goog.html.SafeUrl} The validated URL, wrapped as a SafeUrl.\n */\ngoog.html.SafeUrl.sanitizeAssertUnchanged = function(url) {\n  if (url instanceof goog.html.SafeUrl) {\n    return url;\n  } else if (url.implementsGoogStringTypedString) {\n    url = /** @type {!goog.string.TypedString} */ (url).getTypedStringValue();\n  } else {\n    url = String(url);\n  }\n  if (!goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(url))) {\n    url = goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n\n\n/**\n * Type marker for the SafeUrl type, used to implement additional run-time\n * type checking.\n * @const {!Object}\n * @private\n */\ngoog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};\n\n\n/**\n * Package-internal utility method to create SafeUrl instances.\n *\n * @param {string} url The string to initialize the SafeUrl object with.\n * @return {!goog.html.SafeUrl} The initialized SafeUrl object.\n * @package\n */\ngoog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(\n    url) {\n  var safeUrl = new goog.html.SafeUrl();\n  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;\n  return safeUrl;\n};\n\n\n/**\n * A SafeUrl corresponding to the special about:blank url.\n * @const {!goog.html.SafeUrl}\n */\ngoog.html.SafeUrl.ABOUT_BLANK =\n    goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\n        'about:blank');\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @fileoverview The SafeHtml type and its builders.\n *\n * TODO(xtof): Link to document stating type contract.\n */\n\ngoog.provide('goog.html.SafeHtml');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.tags');\ngoog.require('goog.html.SafeScript');\ngoog.require('goog.html.SafeStyle');\ngoog.require('goog.html.SafeStyleSheet');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.i18n.bidi.Dir');\ngoog.require('goog.i18n.bidi.DirectionalString');\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.string.Const');\ngoog.require('goog.string.TypedString');\n\n\n\n/**\n * A string that is safe to use in HTML context in DOM APIs and HTML documents.\n *\n * A SafeHtml is a string-like object that carries the security type contract\n * that its value as a string will not cause untrusted script execution when\n * evaluated as HTML in a browser.\n *\n * Values of this type are guaranteed to be safe to use in HTML contexts,\n * such as, assignment to the innerHTML DOM property, or interpolation into\n * a HTML template in HTML PC_DATA context, in the sense that the use will not\n * result in a Cross-Site-Scripting vulnerability.\n *\n * Instances of this type must be created via the factory methods\n * (`goog.html.SafeHtml.create`, `goog.html.SafeHtml.htmlEscape`),\n * etc and not by invoking its constructor.  The constructor intentionally\n * takes no parameters and the type is immutable; hence only a default instance\n * corresponding to the empty string can be obtained via constructor invocation.\n *\n * @see goog.html.SafeHtml#create\n * @see goog.html.SafeHtml#htmlEscape\n * @constructor\n * @final\n * @struct\n * @implements {goog.i18n.bidi.DirectionalString}\n * @implements {goog.string.TypedString}\n */\ngoog.html.SafeHtml = function() {\n  /**\n   * The contained value of this SafeHtml.  The field has a purposely ugly\n   * name to make (non-compiled) code that attempts to directly access this\n   * field stand out.\n   * @private {string}\n   */\n  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = '';\n\n  /**\n   * A type marker used to implement additional run-time type checking.\n   * @see goog.html.SafeHtml#unwrap\n   * @const {!Object}\n   * @private\n   */\n  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ =\n      goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;\n\n  /**\n   * This SafeHtml's directionality, or null if unknown.\n   * @private {?goog.i18n.bidi.Dir}\n   */\n  this.dir_ = null;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;\n\n\n/** @override */\ngoog.html.SafeHtml.prototype.getDirection = function() {\n  return this.dir_;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;\n\n\n/**\n * Returns this SafeHtml's value as string.\n *\n * IMPORTANT: In code where it is security relevant that an object's type is\n * indeed `SafeHtml`, use `goog.html.SafeHtml.unwrap` instead of\n * this method. If in doubt, assume that it's security relevant. In particular,\n * note that goog.html functions which return a goog.html type do not guarantee\n * that the returned instance is of the right type. For example:\n *\n * <pre>\n * var fakeSafeHtml = new String('fake');\n * fakeSafeHtml.__proto__ = goog.html.SafeHtml.prototype;\n * var newSafeHtml = goog.html.SafeHtml.htmlEscape(fakeSafeHtml);\n * // newSafeHtml is just an alias for fakeSafeHtml, it's passed through by\n * // goog.html.SafeHtml.htmlEscape() as fakeSafeHtml\n * // instanceof goog.html.SafeHtml.\n * </pre>\n *\n * @see goog.html.SafeHtml#unwrap\n * @override\n */\ngoog.html.SafeHtml.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a debug string-representation of this value.\n   *\n   * To obtain the actual string value wrapped in a SafeHtml, use\n   * `goog.html.SafeHtml.unwrap`.\n   *\n   * @see goog.html.SafeHtml#unwrap\n   * @override\n   */\n  goog.html.SafeHtml.prototype.toString = function() {\n    return 'SafeHtml{' + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ +\n        '}';\n  };\n}\n\n\n/**\n * Performs a runtime check that the provided object is indeed a SafeHtml\n * object, and returns its value.\n * @param {!goog.html.SafeHtml} safeHtml The object to extract from.\n * @return {string} The SafeHtml object's contained string, unless the run-time\n *     type check fails. In that case, `unwrap` returns an innocuous\n *     string, or, if assertions are enabled, throws\n *     `goog.asserts.AssertionError`.\n */\ngoog.html.SafeHtml.unwrap = function(safeHtml) {\n  // Perform additional run-time type-checking to ensure that safeHtml is indeed\n  // an instance of the expected type.  This provides some additional protection\n  // against security bugs due to application code that disables type checks.\n  // Specifically, the following checks are performed:\n  // 1. The object is an instance of the expected type.\n  // 2. The object is not an instance of a subclass.\n  // 3. The object carries a type marker for the expected type. \"Faking\" an\n  // object requires a reference to the type marker, which has names intended\n  // to stand out in code reviews.\n  if (safeHtml instanceof goog.html.SafeHtml &&\n      safeHtml.constructor === goog.html.SafeHtml &&\n      safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ===\n          goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {\n    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n  } else {\n    goog.asserts.fail('expected object of type SafeHtml, got \\'' +\n        safeHtml + '\\' of type ' + goog.typeOf(safeHtml));\n    return 'type_error:SafeHtml';\n  }\n};\n\n\n/**\n * Shorthand for union of types that can sensibly be converted to strings\n * or might already be SafeHtml (as SafeHtml is a goog.string.TypedString).\n * @private\n * @typedef {string|number|boolean|!goog.string.TypedString|\n *           !goog.i18n.bidi.DirectionalString}\n */\ngoog.html.SafeHtml.TextOrHtml_;\n\n\n/**\n * Returns HTML-escaped text as a SafeHtml object.\n *\n * If text is of a type that implements\n * `goog.i18n.bidi.DirectionalString`, the directionality of the new\n * `SafeHtml` object is set to `text`'s directionality, if known.\n * Otherwise, the directionality of the resulting SafeHtml is unknown (i.e.,\n * `null`).\n *\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n *     the parameter is of type SafeHtml it is returned directly (no escaping\n *     is done).\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\n */\ngoog.html.SafeHtml.htmlEscape = function(textOrHtml) {\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var dir = null;\n  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {\n    dir = /** @type {!goog.i18n.bidi.DirectionalString} */ (textOrHtml)\n              .getDirection();\n  }\n  var textAsString;\n  if (textOrHtml.implementsGoogStringTypedString) {\n    textAsString = /** @type {!goog.string.TypedString} */ (textOrHtml)\n                       .getTypedStringValue();\n  } else {\n    textAsString = String(textOrHtml);\n  }\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      goog.string.htmlEscape(textAsString), dir);\n};\n\n\n/**\n * Returns HTML-escaped text as a SafeHtml object, with newlines changed to\n * &lt;br&gt;.\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n *     the parameter is of type SafeHtml it is returned directly (no escaping\n *     is done).\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\n */\ngoog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)),\n      html.getDirection());\n};\n\n\n/**\n * Returns HTML-escaped text as a SafeHtml object, with newlines changed to\n * &lt;br&gt; and escaping whitespace to preserve spatial formatting. Character\n * entity #160 is used to make it safer for XML.\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n *     the parameter is of type SafeHtml it is returned directly (no escaping\n *     is done).\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\n */\ngoog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(\n    textOrHtml) {\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(html)),\n      html.getDirection());\n};\n\n\n/**\n * Coerces an arbitrary object into a SafeHtml object.\n *\n * If `textOrHtml` is already of type `goog.html.SafeHtml`, the same\n * object is returned. Otherwise, `textOrHtml` is coerced to string, and\n * HTML-escaped. If `textOrHtml` is of a type that implements\n * `goog.i18n.bidi.DirectionalString`, its directionality, if known, is\n * preserved.\n *\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text or SafeHtml to\n *     coerce.\n * @return {!goog.html.SafeHtml} The resulting SafeHtml object.\n * @deprecated Use goog.html.SafeHtml.htmlEscape.\n */\ngoog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;\n\n\n/**\n * @const\n * @private\n */\ngoog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;\n\n\n/**\n * Set of attributes containing URL as defined at\n * http://www.w3.org/TR/html5/index.html#attributes-1.\n * @private @const {!Object<string,boolean>}\n */\ngoog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet(\n    'action', 'cite', 'data', 'formaction', 'href', 'manifest', 'poster',\n    'src');\n\n\n/**\n * Tags which are unsupported via create(). They might be supported via a\n * tag-specific create method. These are tags which might require a\n * TrustedResourceUrl in one of their attributes or a restricted type for\n * their content.\n * @private @const {!Object<string,boolean>}\n */\ngoog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(\n    goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED,\n    goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH,\n    goog.dom.TagName.META, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT,\n    goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);\n\n\n/**\n * @typedef {string|number|goog.string.TypedString|\n *     goog.html.SafeStyle.PropertyMap|undefined}\n */\ngoog.html.SafeHtml.AttributeValue;\n\n\n/**\n * Creates a SafeHtml content consisting of a tag with optional attributes and\n * optional content.\n *\n * For convenience tag names and attribute names are accepted as regular\n * strings, instead of goog.string.Const. Nevertheless, you should not pass\n * user-controlled values to these parameters. Note that these parameters are\n * syntactically validated at runtime, and invalid values will result in\n * an exception.\n *\n * Example usage:\n *\n * goog.html.SafeHtml.create('br');\n * goog.html.SafeHtml.create('div', {'class': 'a'});\n * goog.html.SafeHtml.create('p', {}, 'a');\n * goog.html.SafeHtml.create('p', {}, goog.html.SafeHtml.create('br'));\n *\n * goog.html.SafeHtml.create('span', {\n *   'style': {'margin': '0'}\n * });\n *\n * To guarantee SafeHtml's type contract is upheld there are restrictions on\n * attribute values and tag names.\n *\n * - For attributes which contain script code (on*), a goog.string.Const is\n *   required.\n * - For attributes which contain style (style), a goog.html.SafeStyle or a\n *   goog.html.SafeStyle.PropertyMap is required.\n * - For attributes which are interpreted as URLs (e.g. src, href) a\n *   goog.html.SafeUrl, goog.string.Const or string is required. If a string\n *   is passed, it will be sanitized with SafeUrl.sanitize().\n * - For tags which can load code or set security relevant page metadata,\n *   more specific goog.html.SafeHtml.create*() functions must be used. Tags\n *   which are not supported by this function are applet, base, embed, iframe,\n *   link, math, object, script, style, svg, and template.\n *\n * @param {!goog.dom.TagName|string} tagName The name of the tag. Only tag names\n *     consisting of [a-zA-Z0-9-] are allowed. Tag names documented above are\n *     disallowed.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\n *     HTML-escape and put inside the tag. This must be empty for void tags\n *     like <br>. Array elements are concatenated.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid tag name, attribute name, or attribute value is\n *     provided.\n * @throws {goog.asserts.AssertionError} If content for void tag is provided.\n */\ngoog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {\n  goog.html.SafeHtml.verifyTagName(String(tagName));\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      String(tagName), opt_attributes, opt_content);\n};\n\n\n/**\n * Verifies if the tag name is valid and if it doesn't change the context.\n * E.g. STRONG is fine but SCRIPT throws because it changes context. See\n * goog.html.SafeHtml.create for an explanation of allowed tags.\n * @param {string} tagName\n * @throws {Error} If invalid tag name is provided.\n * @package\n */\ngoog.html.SafeHtml.verifyTagName = function(tagName) {\n  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {\n    throw new Error('Invalid tag name <' + tagName + '>.');\n  }\n  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {\n    throw new Error('Tag name <' + tagName + '> is not allowed for SafeHtml.');\n  }\n};\n\n\n/**\n * Creates a SafeHtml representing an iframe tag.\n *\n * This by default restricts the iframe as much as possible by setting the\n * sandbox attribute to the empty string. If the iframe requires less\n * restrictions, set the sandbox attribute as tight as possible, but do not rely\n * on the sandbox as a security feature because it is not supported by older\n * browsers. If a sandbox is essential to security (e.g. for third-party\n * frames), use createSandboxIframe which checks for browser support.\n *\n * @see https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#attr-sandbox\n *\n * @param {?goog.html.TrustedResourceUrl=} opt_src The value of the src\n *     attribute. If null or undefined src will not be set.\n * @param {?goog.html.SafeHtml=} opt_srcdoc The value of the srcdoc attribute.\n *     If null or undefined srcdoc will not be set.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\n *     HTML-escape and put inside the tag. Array elements are concatenated.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid tag name, attribute name, or attribute value is\n *     provided. If opt_attributes contains the src or srcdoc attributes.\n */\ngoog.html.SafeHtml.createIframe = function(\n    opt_src, opt_srcdoc, opt_attributes, opt_content) {\n  if (opt_src) {\n    // Check whether this is really TrustedResourceUrl.\n    goog.html.TrustedResourceUrl.unwrap(opt_src);\n  }\n\n  var fixedAttributes = {};\n  fixedAttributes['src'] = opt_src || null;\n  fixedAttributes['srcdoc'] =\n      opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);\n  var defaultAttributes = {'sandbox': ''};\n  var attributes = goog.html.SafeHtml.combineAttributes(\n      fixedAttributes, defaultAttributes, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'iframe', attributes, opt_content);\n};\n\n\n/**\n * Creates a SafeHtml representing a sandboxed iframe tag.\n *\n * The sandbox attribute is enforced in its most restrictive mode, an empty\n * string. Consequently, the security requirements for the src and srcdoc\n * attributes are relaxed compared to SafeHtml.createIframe. This function\n * will throw on browsers that do not support the sandbox attribute, as\n * determined by SafeHtml.canUseSandboxIframe.\n *\n * The SafeHtml returned by this function can trigger downloads with no\n * user interaction on Chrome (though only a few, further attempts are blocked).\n * Firefox and IE will block all downloads from the sandbox.\n *\n * @see https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#attr-sandbox\n * @see https://lists.w3.org/Archives/Public/public-whatwg-archive/2013Feb/0112.html\n *\n * @param {string|!goog.html.SafeUrl=} opt_src The value of the src\n *     attribute. If null or undefined src will not be set.\n * @param {string=} opt_srcdoc The value of the srcdoc attribute.\n *     If null or undefined srcdoc will not be set. Will not be sanitized.\n * @param {!Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\n *     HTML-escape and put inside the tag. Array elements are concatenated.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid tag name, attribute name, or attribute value is\n *     provided. If opt_attributes contains the src, srcdoc or sandbox\n *     attributes. If browser does not support the sandbox attribute on iframe.\n */\ngoog.html.SafeHtml.createSandboxIframe = function(\n    opt_src, opt_srcdoc, opt_attributes, opt_content) {\n  if (!goog.html.SafeHtml.canUseSandboxIframe()) {\n    throw new Error('The browser does not support sandboxed iframes.');\n  }\n\n  var fixedAttributes = {};\n  if (opt_src) {\n    // Note that sanitize is a no-op on SafeUrl.\n    fixedAttributes['src'] =\n        goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src));\n  } else {\n    fixedAttributes['src'] = null;\n  }\n  fixedAttributes['srcdoc'] = opt_srcdoc || null;\n  fixedAttributes['sandbox'] = '';\n  var attributes =\n      goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'iframe', attributes, opt_content);\n};\n\n\n/**\n * Checks if the user agent supports sandboxed iframes.\n * @return {boolean}\n */\ngoog.html.SafeHtml.canUseSandboxIframe = function() {\n  return goog.global['HTMLIFrameElement'] &&\n      ('sandbox' in goog.global['HTMLIFrameElement'].prototype);\n};\n\n\n/**\n * Creates a SafeHtml representing a script tag with the src attribute.\n * @param {!goog.html.TrustedResourceUrl} src The value of the src\n * attribute.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=}\n * opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined\n *     causes the attribute to be omitted.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid attribute name or value is provided. If\n *     opt_attributes contains the src attribute.\n */\ngoog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {\n  // TODO(mlourenco): The charset attribute should probably be blocked. If\n  // its value is attacker controlled, the script contains attacker controlled\n  // sub-strings (even if properly escaped) and the server does not set charset\n  // then XSS is likely possible.\n  // https://html.spec.whatwg.org/multipage/scripting.html#dom-script-charset\n\n  // Check whether this is really TrustedResourceUrl.\n  goog.html.TrustedResourceUrl.unwrap(src);\n\n  var fixedAttributes = {'src': src};\n  var defaultAttributes = {};\n  var attributes = goog.html.SafeHtml.combineAttributes(\n      fixedAttributes, defaultAttributes, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'script', attributes);\n};\n\n\n/**\n * Creates a SafeHtml representing a script tag. Does not allow the language,\n * src, text or type attributes to be set.\n * @param {!goog.html.SafeScript|!Array<!goog.html.SafeScript>}\n *     script Content to put inside the tag. Array elements are\n *     concatenated.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid attribute name or attribute value is provided. If\n *     opt_attributes contains the language, src, text or type attribute.\n */\ngoog.html.SafeHtml.createScript = function(script, opt_attributes) {\n  for (var attr in opt_attributes) {\n    var attrLower = attr.toLowerCase();\n    if (attrLower == 'language' || attrLower == 'src' || attrLower == 'text' ||\n        attrLower == 'type') {\n      throw new Error('Cannot set \"' + attrLower + '\" attribute');\n    }\n  }\n\n  var content = '';\n  script = goog.array.concat(script);\n  for (var i = 0; i < script.length; i++) {\n    content += goog.html.SafeScript.unwrap(script[i]);\n  }\n  // Convert to SafeHtml so that it's not HTML-escaped. This is safe because\n  // as part of its contract, SafeScript should have no dangerous '<'.\n  var htmlContent =\n      goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n          content, goog.i18n.bidi.Dir.NEUTRAL);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'script', opt_attributes, htmlContent);\n};\n\n\n/**\n * Creates a SafeHtml representing a style tag. The type attribute is set\n * to \"text/css\".\n * @param {!goog.html.SafeStyleSheet|!Array<!goog.html.SafeStyleSheet>}\n *     styleSheet Content to put inside the tag. Array elements are\n *     concatenated.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid attribute name or attribute value is provided. If\n *     opt_attributes contains the type attribute.\n */\ngoog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {\n  var fixedAttributes = {'type': 'text/css'};\n  var defaultAttributes = {};\n  var attributes = goog.html.SafeHtml.combineAttributes(\n      fixedAttributes, defaultAttributes, opt_attributes);\n\n  var content = '';\n  styleSheet = goog.array.concat(styleSheet);\n  for (var i = 0; i < styleSheet.length; i++) {\n    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);\n  }\n  // Convert to SafeHtml so that it's not HTML-escaped. This is safe because\n  // as part of its contract, SafeStyleSheet should have no dangerous '<'.\n  var htmlContent =\n      goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n          content, goog.i18n.bidi.Dir.NEUTRAL);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'style', attributes, htmlContent);\n};\n\n\n/**\n * Creates a SafeHtml representing a meta refresh tag.\n * @param {!goog.html.SafeUrl|string} url Where to redirect. If a string is\n *     passed, it will be sanitized with SafeUrl.sanitize().\n * @param {number=} opt_secs Number of seconds until the page should be\n *     reloaded. Will be set to 0 if unspecified.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n */\ngoog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {\n\n  // Note that sanitize is a no-op on SafeUrl.\n  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));\n\n  if (goog.labs.userAgent.browser.isIE() ||\n      goog.labs.userAgent.browser.isEdge()) {\n    // IE/EDGE can't parse the content attribute if the url contains a\n    // semicolon. We can fix this by adding quotes around the url, but then we\n    // can't parse quotes in the URL correctly. Also, it seems that IE/EDGE\n    // did not unescape semicolons in these URLs at some point in the past. We\n    // take a best-effort approach.\n    //\n    // If the URL has semicolons (which may happen in some cases, see\n    // http://www.w3.org/TR/1999/REC-html401-19991224/appendix/notes.html#h-B.2\n    // for instance), wrap it in single quotes to protect the semicolons.\n    // If the URL has semicolons and single quotes, url-encode the single quotes\n    // as well.\n    //\n    // This is imperfect. Notice that both ' and ; are reserved characters in\n    // URIs, so this could do the wrong thing, but at least it will do the wrong\n    // thing in only rare cases.\n    if (goog.string.contains(unwrappedUrl, ';')) {\n      unwrappedUrl = \"'\" + unwrappedUrl.replace(/'/g, '%27') + \"'\";\n    }\n  }\n  var attributes = {\n    'http-equiv': 'refresh',\n    'content': (opt_secs || 0) + '; url=' + unwrappedUrl\n  };\n\n  // This function will handle the HTML escaping for attributes.\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'meta', attributes);\n};\n\n\n/**\n * @param {string} tagName The tag name.\n * @param {string} name The attribute name.\n * @param {!goog.html.SafeHtml.AttributeValue} value The attribute value.\n * @return {string} A \"name=value\" string.\n * @throws {Error} If attribute value is unsafe for the given tag and attribute.\n * @private\n */\ngoog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {\n  // If it's goog.string.Const, allow any valid attribute name.\n  if (value instanceof goog.string.Const) {\n    value = goog.string.Const.unwrap(value);\n  } else if (name.toLowerCase() == 'style') {\n    value = goog.html.SafeHtml.getStyleValue_(value);\n  } else if (/^on/i.test(name)) {\n    // TODO(jakubvrana): Disallow more attributes with a special meaning.\n    throw new Error(\n        'Attribute \"' + name + '\" requires goog.string.Const value, \"' + value +\n        '\" given.');\n    // URL attributes handled differently according to tag.\n  } else if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {\n    if (value instanceof goog.html.TrustedResourceUrl) {\n      value = goog.html.TrustedResourceUrl.unwrap(value);\n    } else if (value instanceof goog.html.SafeUrl) {\n      value = goog.html.SafeUrl.unwrap(value);\n    } else if (goog.isString(value)) {\n      value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();\n    } else {\n      throw new Error(\n          'Attribute \"' + name + '\" on tag \"' + tagName +\n          '\" requires goog.html.SafeUrl, goog.string.Const, or string,' +\n          ' value \"' + value + '\" given.');\n    }\n  }\n\n  // Accept SafeUrl, TrustedResourceUrl, etc. for attributes which only require\n  // HTML-escaping.\n  if (value.implementsGoogStringTypedString) {\n    // Ok to call getTypedStringValue() since there's no reliance on the type\n    // contract for security here.\n    value =\n        /** @type {!goog.string.TypedString} */ (value).getTypedStringValue();\n  }\n\n  goog.asserts.assert(\n      goog.isString(value) || goog.isNumber(value),\n      'String or number value expected, got ' + (typeof value) +\n          ' with value: ' + value);\n  return name + '=\"' + goog.string.htmlEscape(String(value)) + '\"';\n};\n\n\n/**\n * Gets value allowed in \"style\" attribute.\n * @param {!goog.html.SafeHtml.AttributeValue} value It could be SafeStyle or a\n *     map which will be passed to goog.html.SafeStyle.create.\n * @return {string} Unwrapped value.\n * @throws {Error} If string value is given.\n * @private\n */\ngoog.html.SafeHtml.getStyleValue_ = function(value) {\n  if (!goog.isObject(value)) {\n    throw new Error(\n        'The \"style\" attribute requires goog.html.SafeStyle or map ' +\n        'of style properties, ' + (typeof value) + ' given: ' + value);\n  }\n  if (!(value instanceof goog.html.SafeStyle)) {\n    // Process the property bag into a style object.\n    value = goog.html.SafeStyle.create(value);\n  }\n  return goog.html.SafeStyle.unwrap(value);\n};\n\n\n/**\n * Creates a SafeHtml content with known directionality consisting of a tag with\n * optional attributes and optional content.\n * @param {!goog.i18n.bidi.Dir} dir Directionality.\n * @param {string} tagName\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n */\ngoog.html.SafeHtml.createWithDir = function(\n    dir, tagName, opt_attributes, opt_content) {\n  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);\n  html.dir_ = dir;\n  return html;\n};\n\n\n/**\n * Creates a new SafeHtml object by concatenating values.\n * @param {...(!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)} var_args Values to concatenate.\n * @return {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.concat = function(var_args) {\n  var dir = goog.i18n.bidi.Dir.NEUTRAL;\n  var content = '';\n\n  /**\n   * @param {!goog.html.SafeHtml.TextOrHtml_|\n   *     !Array<!goog.html.SafeHtml.TextOrHtml_>} argument\n   */\n  var addArgument = function(argument) {\n    if (goog.isArray(argument)) {\n      goog.array.forEach(argument, addArgument);\n    } else {\n      var html = goog.html.SafeHtml.htmlEscape(argument);\n      content += goog.html.SafeHtml.unwrap(html);\n      var htmlDir = html.getDirection();\n      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {\n        dir = htmlDir;\n      } else if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {\n        dir = null;\n      }\n    }\n  };\n\n  goog.array.forEach(arguments, addArgument);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      content, dir);\n};\n\n\n/**\n * Creates a new SafeHtml object with known directionality by concatenating the\n * values.\n * @param {!goog.i18n.bidi.Dir} dir Directionality.\n * @param {...(!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)} var_args Elements of array\n *     arguments would be processed recursively.\n * @return {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.concatWithDir = function(dir, var_args) {\n  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));\n  html.dir_ = dir;\n  return html;\n};\n\n\n/**\n * Type marker for the SafeHtml type, used to implement additional run-time\n * type checking.\n * @const {!Object}\n * @private\n */\ngoog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};\n\n\n/**\n * Package-internal utility method to create SafeHtml instances.\n *\n * @param {string} html The string to initialize the SafeHtml object with.\n * @param {?goog.i18n.bidi.Dir} dir The directionality of the SafeHtml to be\n *     constructed, or null if unknown.\n * @return {!goog.html.SafeHtml} The initialized SafeHtml object.\n * @package\n */\ngoog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(\n    html, dir) {\n  return new goog.html.SafeHtml().initSecurityPrivateDoNotAccessOrElse_(\n      html, dir);\n};\n\n\n/**\n * Called from createSafeHtmlSecurityPrivateDoNotAccessOrElse(). This\n * method exists only so that the compiler can dead code eliminate static\n * fields (like EMPTY) when they're not accessed.\n * @param {string} html\n * @param {?goog.i18n.bidi.Dir} dir\n * @return {!goog.html.SafeHtml}\n * @private\n */\ngoog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(\n    html, dir) {\n  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;\n  this.dir_ = dir;\n  return this;\n};\n\n\n/**\n * Like create() but does not restrict which tags can be constructed.\n *\n * @param {string} tagName Tag name. Set or validated by caller.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n * @param {(!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)=} opt_content\n * @return {!goog.html.SafeHtml}\n * @throws {Error} If invalid or unsafe attribute name or value is provided.\n * @throws {goog.asserts.AssertionError} If content for void tag is provided.\n * @package\n */\ngoog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(\n    tagName, opt_attributes, opt_content) {\n  var dir = null;\n  var result = '<' + tagName;\n  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);\n\n  var content = opt_content;\n  if (!goog.isDefAndNotNull(content)) {\n    content = [];\n  } else if (!goog.isArray(content)) {\n    content = [content];\n  }\n\n  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {\n    goog.asserts.assert(\n        !content.length, 'Void tag <' + tagName + '> does not allow content.');\n    result += '>';\n  } else {\n    var html = goog.html.SafeHtml.concat(content);\n    result += '>' + goog.html.SafeHtml.unwrap(html) + '</' + tagName + '>';\n    dir = html.getDirection();\n  }\n\n  var dirAttribute = opt_attributes && opt_attributes['dir'];\n  if (dirAttribute) {\n    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {\n      // If the tag has the \"dir\" attribute specified then its direction is\n      // neutral because it can be safely used in any context.\n      dir = goog.i18n.bidi.Dir.NEUTRAL;\n    } else {\n      dir = null;\n    }\n  }\n\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      result, dir);\n};\n\n\n/**\n * Creates a string with attributes to insert after tagName.\n * @param {string} tagName\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n * @return {string} Returns an empty string if there are no attributes, returns\n *     a string starting with a space otherwise.\n * @throws {Error} If attribute value is unsafe for the given tag and attribute.\n * @package\n */\ngoog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {\n  var result = '';\n  if (opt_attributes) {\n    for (var name in opt_attributes) {\n      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {\n        throw new Error('Invalid attribute name \"' + name + '\".');\n      }\n      var value = opt_attributes[name];\n      if (!goog.isDefAndNotNull(value)) {\n        continue;\n      }\n      result +=\n          ' ' + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);\n    }\n  }\n  return result;\n};\n\n\n/**\n * @param {!Object<string, ?goog.html.SafeHtml.AttributeValue>} fixedAttributes\n * @param {!Object<string, string>} defaultAttributes\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Optional attributes passed to create*().\n * @return {!Object<string, ?goog.html.SafeHtml.AttributeValue>}\n * @throws {Error} If opt_attributes contains an attribute with the same name\n *     as an attribute in fixedAttributes.\n * @package\n */\ngoog.html.SafeHtml.combineAttributes = function(\n    fixedAttributes, defaultAttributes, opt_attributes) {\n  var combinedAttributes = {};\n  var name;\n\n  for (name in fixedAttributes) {\n    goog.asserts.assert(name.toLowerCase() == name, 'Must be lower case');\n    combinedAttributes[name] = fixedAttributes[name];\n  }\n  for (name in defaultAttributes) {\n    goog.asserts.assert(name.toLowerCase() == name, 'Must be lower case');\n    combinedAttributes[name] = defaultAttributes[name];\n  }\n\n  for (name in opt_attributes) {\n    var nameLower = name.toLowerCase();\n    if (nameLower in fixedAttributes) {\n      throw new Error(\n          'Cannot override \"' + nameLower + '\" attribute, got \"' + name +\n          '\" with value \"' + opt_attributes[name] + '\"');\n    }\n    if (nameLower in defaultAttributes) {\n      delete combinedAttributes[nameLower];\n    }\n    combinedAttributes[name] = opt_attributes[name];\n  }\n\n  return combinedAttributes;\n};\n\n\n/**\n * A SafeHtml instance corresponding to the HTML doctype: \"<!DOCTYPE html>\".\n * @const {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.DOCTYPE_HTML =\n    goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        '<!DOCTYPE html>', goog.i18n.bidi.Dir.NEUTRAL);\n\n\n/**\n * A SafeHtml instance corresponding to the empty string.\n * @const {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.EMPTY =\n    goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        '', goog.i18n.bidi.Dir.NEUTRAL);\n\n\n/**\n * A SafeHtml instance corresponding to the <br> tag.\n * @const {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.BR =\n    goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        '<br>', goog.i18n.bidi.Dir.NEUTRAL);\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for manipulating the browser's Document Object Model\n * Inspiration taken *heavily* from mochikit (http://mochikit.com/).\n *\n * You can use {@link goog.dom.DomHelper} to create new dom helpers that refer\n * to a different document object.  This is useful if you are working with\n * frames or multiple windows.\n *\n * @author arv@google.com (Erik Arvidsson)\n * @suppress {strictMissingProperties}\n */\n\n\n// TODO(arv): Rename/refactor getTextContent and getRawTextContent. The problem\n// is that getTextContent should mimic the DOM3 textContent. We should add a\n// getInnerText (or getText) which tries to return the visible text, innerText.\n\n\ngoog.provide('goog.dom');\ngoog.provide('goog.dom.Appendable');\ngoog.provide('goog.dom.DomHelper');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom.BrowserFeature');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.safe');\ngoog.require('goog.html.SafeHtml');\ngoog.require('goog.html.uncheckedconversions');\ngoog.require('goog.math.Coordinate');\ngoog.require('goog.math.Size');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.string.Unicode');\ngoog.require('goog.userAgent');\n\n\n/**\n * @define {boolean} Whether we know at compile time that the browser is in\n * quirks mode.\n */\ngoog.define('goog.dom.ASSUME_QUIRKS_MODE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile time that the browser is in\n * standards compliance mode.\n */\ngoog.define('goog.dom.ASSUME_STANDARDS_MODE', false);\n\n\n/**\n * Whether we know the compatibility mode at compile time.\n * @type {boolean}\n * @private\n */\ngoog.dom.COMPAT_MODE_KNOWN_ =\n    goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;\n\n\n/**\n * Gets the DomHelper object for the document where the element resides.\n * @param {(Node|Window)=} opt_element If present, gets the DomHelper for this\n *     element.\n * @return {!goog.dom.DomHelper} The DomHelper.\n */\ngoog.dom.getDomHelper = function(opt_element) {\n  return opt_element ?\n      new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) :\n      (goog.dom.defaultDomHelper_ ||\n       (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper()));\n};\n\n\n/**\n * Cached default DOM helper.\n * @type {!goog.dom.DomHelper|undefined}\n * @private\n */\ngoog.dom.defaultDomHelper_;\n\n\n/**\n * Gets the document object being used by the dom library.\n * @return {!Document} Document object.\n */\ngoog.dom.getDocument = function() {\n  return document;\n};\n\n\n/**\n * Gets an element from the current document by element id.\n *\n * If an Element is passed in, it is returned.\n *\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n */\ngoog.dom.getElement = function(element) {\n  return goog.dom.getElementHelper_(document, element);\n};\n\n\n/**\n * Gets an element by id from the given document (if present).\n * If an element is given, it is returned.\n * @param {!Document} doc\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The resulting element.\n * @private\n */\ngoog.dom.getElementHelper_ = function(doc, element) {\n  return goog.isString(element) ? doc.getElementById(element) : element;\n};\n\n\n/**\n * Gets an element by id, asserting that the element is found.\n *\n * This is used when an element is expected to exist, and should fail with\n * an assertion error if it does not (if assertions are enabled).\n *\n * @param {string} id Element ID.\n * @return {!Element} The element with the given ID, if it exists.\n */\ngoog.dom.getRequiredElement = function(id) {\n  return goog.dom.getRequiredElementHelper_(document, id);\n};\n\n\n/**\n * Helper function for getRequiredElementHelper functions, both static and\n * on DomHelper.  Asserts the element with the given id exists.\n * @param {!Document} doc\n * @param {string} id\n * @return {!Element} The element with the given ID, if it exists.\n * @private\n */\ngoog.dom.getRequiredElementHelper_ = function(doc, id) {\n  // To prevent users passing in Elements as is permitted in getElement().\n  goog.asserts.assertString(id);\n  var element = goog.dom.getElementHelper_(doc, id);\n  element =\n      goog.asserts.assertElement(element, 'No element found with id: ' + id);\n  return element;\n};\n\n\n/**\n * Alias for getElement.\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n * @deprecated Use {@link goog.dom.getElement} instead.\n */\ngoog.dom.$ = goog.dom.getElement;\n\n\n/**\n * Gets elements by tag name.\n * @param {!goog.dom.TagName<T>} tagName\n * @param {(!Document|!Element)=} opt_parent Parent element or document where to\n *     look for elements. Defaults to document.\n * @return {!NodeList<R>} List of elements. The members of the list are\n *     {!Element} if tagName is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getElementsByTagName = function(tagName, opt_parent) {\n  var parent = opt_parent || document;\n  return parent.getElementsByTagName(String(tagName));\n};\n\n\n/**\n * Looks up elements by both tag and class name, using browser native functions\n * (`querySelectorAll`, `getElementsByTagName` or\n * `getElementsByClassName`) where possible. This function\n * is a useful, if limited, way of collecting a list of DOM elements\n * with certain characteristics.  `goog.dom.query` offers a\n * more powerful and general solution which allows matching on CSS3\n * selector expressions, but at increased cost in code size. If all you\n * need is particular tags belonging to a single class, this function\n * is fast and sleek.\n *\n * Note that tag names are case sensitive in the SVG namespace, and this\n * function converts opt_tag to uppercase for comparisons. For queries in the\n * SVG namespace you should use querySelector or querySelectorAll instead.\n * https://bugzilla.mozilla.org/show_bug.cgi?id=963870\n * https://bugs.webkit.org/show_bug.cgi?id=83438\n *\n * @see {goog.dom.query}\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementsByTagNameAndClass_(\n      document, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Gets the first element matching the tag and the class.\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {?R} Reference to a DOM node. The return type is {?Element} if\n *     tagName is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementByTagNameAndClass_(\n      document, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Returns a static, array-like list of the elements with the provided\n * className.\n * @see {goog.dom.query}\n * @param {string} className the name of the class to look for.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<!Element>} The items found with the class name provided.\n */\ngoog.dom.getElementsByClass = function(className, opt_el) {\n  var parent = opt_el || document;\n  if (goog.dom.canUseQuerySelector_(parent)) {\n    return parent.querySelectorAll('.' + className);\n  }\n  return goog.dom.getElementsByTagNameAndClass_(\n      document, '*', className, opt_el);\n};\n\n\n/**\n * Returns the first element with the provided className.\n * @see {goog.dom.query}\n * @param {string} className the name of the class to look for.\n * @param {Element|Document=} opt_el Optional element to look in.\n * @return {Element} The first item with the class name provided.\n */\ngoog.dom.getElementByClass = function(className, opt_el) {\n  var parent = opt_el || document;\n  var retVal = null;\n  if (parent.getElementsByClassName) {\n    retVal = parent.getElementsByClassName(className)[0];\n  } else {\n    retVal =\n        goog.dom.getElementByTagNameAndClass_(document, '*', className, opt_el);\n  }\n  return retVal || null;\n};\n\n\n/**\n * Ensures an element with the given className exists, and then returns the\n * first element with the provided className.\n * @see {goog.dom.query}\n * @param {string} className the name of the class to look for.\n * @param {!Element|!Document=} opt_root Optional element or document to look\n *     in.\n * @return {!Element} The first item with the class name provided.\n * @throws {goog.asserts.AssertionError} Thrown if no element is found.\n */\ngoog.dom.getRequiredElementByClass = function(className, opt_root) {\n  var retValue = goog.dom.getElementByClass(className, opt_root);\n  return goog.asserts.assert(\n      retValue, 'No element found with className: ' + className);\n};\n\n\n/**\n * Prefer the standardized (http://www.w3.org/TR/selectors-api/), native and\n * fast W3C Selectors API.\n * @param {!(Element|Document)} parent The parent document object.\n * @return {boolean} whether or not we can use parent.querySelector* APIs.\n * @private\n */\ngoog.dom.canUseQuerySelector_ = function(parent) {\n  return !!(parent.querySelectorAll && parent.querySelector);\n};\n\n\n/**\n * Helper for `getElementsByTagNameAndClass`.\n * @param {!Document} doc The document to get the elements in.\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @private\n */\ngoog.dom.getElementsByTagNameAndClass_ = function(\n    doc, opt_tag, opt_class, opt_el) {\n  var parent = opt_el || doc;\n  var tagName =\n      (opt_tag && opt_tag != '*') ? String(opt_tag).toUpperCase() : '';\n\n  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {\n    var query = tagName + (opt_class ? '.' + opt_class : '');\n    return parent.querySelectorAll(query);\n  }\n\n  // Use the native getElementsByClassName if available, under the assumption\n  // that even when the tag name is specified, there will be fewer elements to\n  // filter through when going by class than by tag name\n  if (opt_class && parent.getElementsByClassName) {\n    var els = parent.getElementsByClassName(opt_class);\n\n    if (tagName) {\n      var arrayLike = {};\n      var len = 0;\n\n      // Filter for specific tags if requested.\n      for (var i = 0, el; el = els[i]; i++) {\n        if (tagName == el.nodeName) {\n          arrayLike[len++] = el;\n        }\n      }\n      arrayLike.length = len;\n\n      return /** @type {!IArrayLike<!Element>} */ (arrayLike);\n    } else {\n      return els;\n    }\n  }\n\n  var els = parent.getElementsByTagName(tagName || '*');\n\n  if (opt_class) {\n    var arrayLike = {};\n    var len = 0;\n    for (var i = 0, el; el = els[i]; i++) {\n      var className = el.className;\n      // Check if className has a split function since SVG className does not.\n      if (typeof className.split == 'function' &&\n          goog.array.contains(className.split(/\\s+/), opt_class)) {\n        arrayLike[len++] = el;\n      }\n    }\n    arrayLike.length = len;\n    return /** @type {!IArrayLike<!Element>} */ (arrayLike);\n  } else {\n    return els;\n  }\n};\n\n\n/**\n * Helper for goog.dom.getElementByTagNameAndClass.\n *\n * @param {!Document} doc The document to get the elements in.\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {?R} Reference to a DOM node. The return type is {?Element} if\n *     tagName is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @private\n */\ngoog.dom.getElementByTagNameAndClass_ = function(\n    doc, opt_tag, opt_class, opt_el) {\n  var parent = opt_el || doc;\n  var tag = (opt_tag && opt_tag != '*') ? String(opt_tag).toUpperCase() : '';\n  if (goog.dom.canUseQuerySelector_(parent) && (tag || opt_class)) {\n    return parent.querySelector(tag + (opt_class ? '.' + opt_class : ''));\n  }\n  var elements =\n      goog.dom.getElementsByTagNameAndClass_(doc, opt_tag, opt_class, opt_el);\n  return elements[0] || null;\n};\n\n\n\n/**\n * Alias for `getElementsByTagNameAndClass`.\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {Element=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @deprecated Use {@link goog.dom.getElementsByTagNameAndClass} instead.\n */\ngoog.dom.$$ = goog.dom.getElementsByTagNameAndClass;\n\n\n/**\n * Sets multiple properties, and sometimes attributes, on an element. Note that\n * properties are simply object properties on the element instance, while\n * attributes are visible in the DOM. Many properties map to attributes with the\n * same names, some with different names, and there are also unmappable cases.\n *\n * This method sets properties by default (which means that custom attributes\n * are not supported). These are the exeptions (some of which is legacy):\n * - \"style\": Even though this is an attribute name, it is translated to a\n *   property, \"style.cssText\". Note that this property sanitizes and formats\n *   its value, unlike the attribute.\n * - \"class\": This is an attribute name, it is translated to the \"className\"\n *   property.\n * - \"for\": This is an attribute name, it is translated to the \"htmlFor\"\n *   property.\n * - Entries in {@see goog.dom.DIRECT_ATTRIBUTE_MAP_} are set as attributes,\n *   this is probably due to browser quirks.\n * - \"aria-*\", \"data-*\": Always set as attributes, they have no property\n *   counterparts.\n *\n * @param {Element} element DOM node to set properties on.\n * @param {Object} properties Hash of property:value pairs.\n *     Property values can be strings or goog.string.TypedString values (such as\n *     goog.html.SafeUrl).\n */\ngoog.dom.setProperties = function(element, properties) {\n  goog.object.forEach(properties, function(val, key) {\n    if (val && val.implementsGoogStringTypedString) {\n      val = val.getTypedStringValue();\n    }\n    if (key == 'style') {\n      element.style.cssText = val;\n    } else if (key == 'class') {\n      element.className = val;\n    } else if (key == 'for') {\n      element.htmlFor = val;\n    } else if (goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key)) {\n      element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);\n    } else if (\n        goog.string.startsWith(key, 'aria-') ||\n        goog.string.startsWith(key, 'data-')) {\n      element.setAttribute(key, val);\n    } else {\n      element[key] = val;\n    }\n  });\n};\n\n\n/**\n * Map of attributes that should be set using\n * element.setAttribute(key, val) instead of element[key] = val.  Used\n * by goog.dom.setProperties.\n *\n * @private {!Object<string, string>}\n * @const\n */\ngoog.dom.DIRECT_ATTRIBUTE_MAP_ = {\n  'cellpadding': 'cellPadding',\n  'cellspacing': 'cellSpacing',\n  'colspan': 'colSpan',\n  'frameborder': 'frameBorder',\n  'height': 'height',\n  'maxlength': 'maxLength',\n  'nonce': 'nonce',\n  'role': 'role',\n  'rowspan': 'rowSpan',\n  'type': 'type',\n  'usemap': 'useMap',\n  'valign': 'vAlign',\n  'width': 'width'\n};\n\n\n/**\n * Gets the dimensions of the viewport.\n *\n * Gecko Standards mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Width of viewport including scrollbar.\n * body.clientWidth   Width of body element.\n *\n * docEl.clientHeight Height of viewport excluding scrollbar.\n * win.innerHeight    Height of viewport including scrollbar.\n * body.clientHeight  Height of document.\n *\n * Gecko Backwards compatible mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Width of viewport including scrollbar.\n * body.clientWidth   Width of viewport excluding scrollbar.\n *\n * docEl.clientHeight Height of document.\n * win.innerHeight    Height of viewport including scrollbar.\n * body.clientHeight  Height of viewport excluding scrollbar.\n *\n * IE6/7 Standards mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Undefined.\n * body.clientWidth   Width of body element.\n *\n * docEl.clientHeight Height of viewport excluding scrollbar.\n * win.innerHeight    Undefined.\n * body.clientHeight  Height of document element.\n *\n * IE5 + IE6/7 Backwards compatible mode:\n * docEl.clientWidth  0.\n * win.innerWidth     Undefined.\n * body.clientWidth   Width of viewport excluding scrollbar.\n *\n * docEl.clientHeight 0.\n * win.innerHeight    Undefined.\n * body.clientHeight  Height of viewport excluding scrollbar.\n *\n * Opera 9 Standards and backwards compatible mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Width of viewport including scrollbar.\n * body.clientWidth   Width of viewport excluding scrollbar.\n *\n * docEl.clientHeight Height of document.\n * win.innerHeight    Height of viewport including scrollbar.\n * body.clientHeight  Height of viewport excluding scrollbar.\n *\n * WebKit:\n * Safari 2\n * docEl.clientHeight Same as scrollHeight.\n * docEl.clientWidth  Same as innerWidth.\n * win.innerWidth     Width of viewport excluding scrollbar.\n * win.innerHeight    Height of the viewport including scrollbar.\n * frame.innerHeight  Height of the viewport exluding scrollbar.\n *\n * Safari 3 (tested in 522)\n *\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * docEl.clientHeight Height of viewport excluding scrollbar in strict mode.\n * body.clientHeight  Height of viewport excluding scrollbar in quirks mode.\n *\n * @param {Window=} opt_window Optional window element to test.\n * @return {!goog.math.Size} Object with values 'width' and 'height'.\n */\ngoog.dom.getViewportSize = function(opt_window) {\n  // TODO(arv): This should not take an argument\n  return goog.dom.getViewportSize_(opt_window || window);\n};\n\n\n/**\n * Helper for `getViewportSize`.\n * @param {Window} win The window to get the view port size for.\n * @return {!goog.math.Size} Object with values 'width' and 'height'.\n * @private\n */\ngoog.dom.getViewportSize_ = function(win) {\n  var doc = win.document;\n  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;\n  return new goog.math.Size(el.clientWidth, el.clientHeight);\n};\n\n\n/**\n * Calculates the height of the document.\n *\n * @return {number} The height of the current document.\n */\ngoog.dom.getDocumentHeight = function() {\n  return goog.dom.getDocumentHeight_(window);\n};\n\n/**\n * Calculates the height of the document of the given window.\n *\n * @param {!Window} win The window whose document height to retrieve.\n * @return {number} The height of the document of the given window.\n */\ngoog.dom.getDocumentHeightForWindow = function(win) {\n  return goog.dom.getDocumentHeight_(win);\n};\n\n/**\n * Calculates the height of the document of the given window.\n *\n * Function code copied from the opensocial gadget api:\n *   gadgets.window.adjustHeight(opt_height)\n *\n * @private\n * @param {!Window} win The window whose document height to retrieve.\n * @return {number} The height of the document of the given window.\n */\ngoog.dom.getDocumentHeight_ = function(win) {\n  // NOTE(eae): This method will return the window size rather than the document\n  // size in webkit quirks mode.\n  var doc = win.document;\n  var height = 0;\n\n  if (doc) {\n    // Calculating inner content height is hard and different between\n    // browsers rendering in Strict vs. Quirks mode.  We use a combination of\n    // three properties within document.body and document.documentElement:\n    // - scrollHeight\n    // - offsetHeight\n    // - clientHeight\n    // These values differ significantly between browsers and rendering modes.\n    // But there are patterns.  It just takes a lot of time and persistence\n    // to figure out.\n\n    var body = doc.body;\n    var docEl = /** @type {!HTMLElement} */ (doc.documentElement);\n    if (!(docEl && body)) {\n      return 0;\n    }\n\n    // Get the height of the viewport\n    var vh = goog.dom.getViewportSize_(win).height;\n    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {\n      // In Strict mode:\n      // The inner content height is contained in either:\n      //    document.documentElement.scrollHeight\n      //    document.documentElement.offsetHeight\n      // Based on studying the values output by different browsers,\n      // use the value that's NOT equal to the viewport height found above.\n      height =\n          docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;\n    } else {\n      // In Quirks mode:\n      // documentElement.clientHeight is equal to documentElement.offsetHeight\n      // except in IE.  In most browsers, document.documentElement can be used\n      // to calculate the inner content height.\n      // However, in other browsers (e.g. IE), document.body must be used\n      // instead.  How do we know which one to use?\n      // If document.documentElement.clientHeight does NOT equal\n      // document.documentElement.offsetHeight, then use document.body.\n      var sh = docEl.scrollHeight;\n      var oh = docEl.offsetHeight;\n      if (docEl.clientHeight != oh) {\n        sh = body.scrollHeight;\n        oh = body.offsetHeight;\n      }\n\n      // Detect whether the inner content height is bigger or smaller\n      // than the bounding box (viewport).  If bigger, take the larger\n      // value.  If smaller, take the smaller value.\n      if (sh > vh) {\n        // Content is larger\n        height = sh > oh ? sh : oh;\n      } else {\n        // Content is smaller\n        height = sh < oh ? sh : oh;\n      }\n    }\n  }\n\n  return height;\n};\n\n\n/**\n * Gets the page scroll distance as a coordinate object.\n *\n * @param {Window=} opt_window Optional window element to test.\n * @return {!goog.math.Coordinate} Object with values 'x' and 'y'.\n * @deprecated Use {@link goog.dom.getDocumentScroll} instead.\n */\ngoog.dom.getPageScroll = function(opt_window) {\n  var win = opt_window || goog.global || window;\n  return goog.dom.getDomHelper(win.document).getDocumentScroll();\n};\n\n\n/**\n * Gets the document scroll distance as a coordinate object.\n *\n * @return {!goog.math.Coordinate} Object with values 'x' and 'y'.\n */\ngoog.dom.getDocumentScroll = function() {\n  return goog.dom.getDocumentScroll_(document);\n};\n\n\n/**\n * Helper for `getDocumentScroll`.\n *\n * @param {!Document} doc The document to get the scroll for.\n * @return {!goog.math.Coordinate} Object with values 'x' and 'y'.\n * @private\n */\ngoog.dom.getDocumentScroll_ = function(doc) {\n  var el = goog.dom.getDocumentScrollElement_(doc);\n  var win = goog.dom.getWindow_(doc);\n  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher('10') &&\n      win.pageYOffset != el.scrollTop) {\n    // The keyboard on IE10 touch devices shifts the page using the pageYOffset\n    // without modifying scrollTop. For this case, we want the body scroll\n    // offsets.\n    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);\n  }\n  return new goog.math.Coordinate(\n      win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);\n};\n\n\n/**\n * Gets the document scroll element.\n * @return {!Element} Scrolling element.\n */\ngoog.dom.getDocumentScrollElement = function() {\n  return goog.dom.getDocumentScrollElement_(document);\n};\n\n\n/**\n * Helper for `getDocumentScrollElement`.\n * @param {!Document} doc The document to get the scroll element for.\n * @return {!Element} Scrolling element.\n * @private\n */\ngoog.dom.getDocumentScrollElement_ = function(doc) {\n  // Old WebKit needs body.scrollLeft in both quirks mode and strict mode. We\n  // also default to the documentElement if the document does not have a body\n  // (e.g. a SVG document).\n  // Uses http://dev.w3.org/csswg/cssom-view/#dom-document-scrollingelement to\n  // avoid trying to guess about browser behavior from the UA string.\n  if (doc.scrollingElement) {\n    return doc.scrollingElement;\n  }\n  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {\n    return doc.documentElement;\n  }\n  return doc.body || doc.documentElement;\n};\n\n\n/**\n * Gets the window object associated with the given document.\n *\n * @param {Document=} opt_doc  Document object to get window for.\n * @return {!Window} The window associated with the given document.\n */\ngoog.dom.getWindow = function(opt_doc) {\n  // TODO(arv): This should not take an argument.\n  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;\n};\n\n\n/**\n * Helper for `getWindow`.\n *\n * @param {!Document} doc  Document object to get window for.\n * @return {!Window} The window associated with the given document.\n * @private\n */\ngoog.dom.getWindow_ = function(doc) {\n  return /** @type {!Window} */ (doc.parentWindow || doc.defaultView);\n};\n\n\n/**\n * Returns a dom node with a set of attributes.  This function accepts varargs\n * for subsequent nodes to be added.  Subsequent nodes will be added to the\n * first node as childNodes.\n *\n * So:\n * <code>createDom(goog.dom.TagName.DIV, null, createDom(goog.dom.TagName.P),\n * createDom(goog.dom.TagName.P));</code> would return a div with two child\n * paragraphs\n *\n * For passing properties, please see {@link goog.dom.setProperties} for more\n * information.\n *\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...(Object|string|Array|NodeList)} var_args Further DOM nodes or\n *     strings for text nodes. If one of the var_args is an array or NodeList,\n *     its elements will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.createDom = function(tagName, opt_attributes, var_args) {\n  return goog.dom.createDom_(document, arguments);\n};\n\n\n/**\n * Helper for `createDom`.\n * @param {!Document} doc The document to create the DOM in.\n * @param {!Arguments} args Argument object passed from the callers. See\n *     `goog.dom.createDom` for details.\n * @return {!Element} Reference to a DOM node.\n * @private\n */\ngoog.dom.createDom_ = function(doc, args) {\n  var tagName = String(args[0]);\n  var attributes = args[1];\n\n  // Internet Explorer is dumb:\n  // name: https://msdn.microsoft.com/en-us/library/ms534184(v=vs.85).aspx\n  // type: https://msdn.microsoft.com/en-us/library/ms534700(v=vs.85).aspx\n  // Also does not allow setting of 'type' attribute on 'input' or 'button'.\n  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes &&\n      (attributes.name || attributes.type)) {\n    var tagNameArr = ['<', tagName];\n    if (attributes.name) {\n      tagNameArr.push(' name=\"', goog.string.htmlEscape(attributes.name), '\"');\n    }\n    if (attributes.type) {\n      tagNameArr.push(' type=\"', goog.string.htmlEscape(attributes.type), '\"');\n\n      // Clone attributes map to remove 'type' without mutating the input.\n      var clone = {};\n      goog.object.extend(clone, attributes);\n\n      // JSCompiler can't see how goog.object.extend added this property,\n      // because it was essentially added by reflection.\n      // So it needs to be quoted.\n      delete clone['type'];\n\n      attributes = clone;\n    }\n    tagNameArr.push('>');\n    tagName = tagNameArr.join('');\n  }\n\n  var element = doc.createElement(tagName);\n\n  if (attributes) {\n    if (goog.isString(attributes)) {\n      element.className = attributes;\n    } else if (goog.isArray(attributes)) {\n      element.className = attributes.join(' ');\n    } else {\n      goog.dom.setProperties(element, attributes);\n    }\n  }\n\n  if (args.length > 2) {\n    goog.dom.append_(doc, element, args, 2);\n  }\n\n  return element;\n};\n\n\n/**\n * Appends a node with text or other nodes.\n * @param {!Document} doc The document to create new nodes in.\n * @param {!Node} parent The node to append nodes to.\n * @param {!Arguments} args The values to add. See `goog.dom.append`.\n * @param {number} startIndex The index of the array to start from.\n * @private\n */\ngoog.dom.append_ = function(doc, parent, args, startIndex) {\n  function childHandler(child) {\n    // TODO(user): More coercion, ala MochiKit?\n    if (child) {\n      parent.appendChild(\n          goog.isString(child) ? doc.createTextNode(child) : child);\n    }\n  }\n\n  for (var i = startIndex; i < args.length; i++) {\n    var arg = args[i];\n    // TODO(attila): Fix isArrayLike to return false for a text node.\n    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {\n      // If the argument is a node list, not a real array, use a clone,\n      // because forEach can't be used to mutate a NodeList.\n      goog.array.forEach(\n          goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg,\n          childHandler);\n    } else {\n      childHandler(arg);\n    }\n  }\n};\n\n\n/**\n * Alias for `createDom`.\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...(Object|string|Array|NodeList)} var_args Further DOM nodes or\n *     strings for text nodes. If one of the var_args is an array, its\n *     children will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @deprecated Use {@link goog.dom.createDom} instead.\n */\ngoog.dom.$dom = goog.dom.createDom;\n\n\n/**\n * Creates a new element.\n * @param {string|!goog.dom.TagName<T>} name Tag to create.\n * @return {R} The new element. The return type is {!Element} if name is\n *     a string or a more specific type if it is a member of goog.dom.TagName\n *     (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.createElement = function(name) {\n  return goog.dom.createElement_(document, name);\n};\n\n\n/**\n * Creates a new element.\n * @param {!Document} doc The document to create the element in.\n * @param {string|!goog.dom.TagName<T>} name Tag to create.\n * @return {R} The new element. The return type is {!Element} if name is\n *     a string or a more specific type if it is a member of goog.dom.TagName\n *     (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @private\n */\ngoog.dom.createElement_ = function(doc, name) {\n  return doc.createElement(String(name));\n};\n\n\n/**\n * Creates a new text node.\n * @param {number|string} content Content.\n * @return {!Text} The new text node.\n */\ngoog.dom.createTextNode = function(content) {\n  return document.createTextNode(String(content));\n};\n\n\n/**\n * Create a table.\n * @param {number} rows The number of rows in the table.  Must be >= 1.\n * @param {number} columns The number of columns in the table.  Must be >= 1.\n * @param {boolean=} opt_fillWithNbsp If true, fills table entries with\n *     `goog.string.Unicode.NBSP` characters.\n * @return {!Element} The created table.\n */\ngoog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {\n  // TODO(mlourenco): Return HTMLTableElement, also in prototype function.\n  // Callers need to be updated to e.g. not assign numbers to table.cellSpacing.\n  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);\n};\n\n\n/**\n * Create a table.\n * @param {!Document} doc Document object to use to create the table.\n * @param {number} rows The number of rows in the table.  Must be >= 1.\n * @param {number} columns The number of columns in the table.  Must be >= 1.\n * @param {boolean} fillWithNbsp If true, fills table entries with\n *     `goog.string.Unicode.NBSP` characters.\n * @return {!HTMLTableElement} The created table.\n * @private\n */\ngoog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {\n  var table = goog.dom.createElement_(doc, goog.dom.TagName.TABLE);\n  var tbody =\n      table.appendChild(goog.dom.createElement_(doc, goog.dom.TagName.TBODY));\n  for (var i = 0; i < rows; i++) {\n    var tr = goog.dom.createElement_(doc, goog.dom.TagName.TR);\n    for (var j = 0; j < columns; j++) {\n      var td = goog.dom.createElement_(doc, goog.dom.TagName.TD);\n      // IE <= 9 will create a text node if we set text content to the empty\n      // string, so we avoid doing it unless necessary. This ensures that the\n      // same DOM tree is returned on all browsers.\n      if (fillWithNbsp) {\n        goog.dom.setTextContent(td, goog.string.Unicode.NBSP);\n      }\n      tr.appendChild(td);\n    }\n    tbody.appendChild(tr);\n  }\n  return table;\n};\n\n\n\n/**\n * Creates a new Node from constant strings of HTML markup.\n * @param {...!goog.string.Const} var_args The HTML strings to concatenate then\n *     convert into a node.\n * @return {!Node}\n */\ngoog.dom.constHtmlToNode = function(var_args) {\n  var stringArray = goog.array.map(arguments, goog.string.Const.unwrap);\n  var safeHtml =\n      goog.html.uncheckedconversions\n          .safeHtmlFromStringKnownToSatisfyTypeContract(\n              goog.string.Const.from(\n                  'Constant HTML string, that gets turned into a ' +\n                  'Node later, so it will be automatically balanced.'),\n              stringArray.join(''));\n  return goog.dom.safeHtmlToNode(safeHtml);\n};\n\n\n/**\n * Converts HTML markup into a node. This is a safe version of\n * `goog.dom.htmlToDocumentFragment` which is now deleted.\n * @param {!goog.html.SafeHtml} html The HTML markup to convert.\n * @return {!Node} The resulting node.\n */\ngoog.dom.safeHtmlToNode = function(html) {\n  return goog.dom.safeHtmlToNode_(document, html);\n};\n\n\n/**\n * Helper for `safeHtmlToNode`.\n * @param {!Document} doc The document.\n * @param {!goog.html.SafeHtml} html The HTML markup to convert.\n * @return {!Node} The resulting node.\n * @private\n */\ngoog.dom.safeHtmlToNode_ = function(doc, html) {\n  var tempDiv = goog.dom.createElement_(doc, goog.dom.TagName.DIV);\n  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {\n    goog.dom.safe.setInnerHtml(\n        tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.BR, html));\n    tempDiv.removeChild(tempDiv.firstChild);\n  } else {\n    goog.dom.safe.setInnerHtml(tempDiv, html);\n  }\n  return goog.dom.childrenToNode_(doc, tempDiv);\n};\n\n\n/**\n * Helper for `safeHtmlToNode_`.\n * @param {!Document} doc The document.\n * @param {!Node} tempDiv The input node.\n * @return {!Node} The resulting node.\n * @private\n */\ngoog.dom.childrenToNode_ = function(doc, tempDiv) {\n  if (tempDiv.childNodes.length == 1) {\n    return tempDiv.removeChild(tempDiv.firstChild);\n  } else {\n    var fragment = doc.createDocumentFragment();\n    while (tempDiv.firstChild) {\n      fragment.appendChild(tempDiv.firstChild);\n    }\n    return fragment;\n  }\n};\n\n\n/**\n * Returns true if the browser is in \"CSS1-compatible\" (standards-compliant)\n * mode, false otherwise.\n * @return {boolean} True if in CSS1-compatible mode.\n */\ngoog.dom.isCss1CompatMode = function() {\n  return goog.dom.isCss1CompatMode_(document);\n};\n\n\n/**\n * Returns true if the browser is in \"CSS1-compatible\" (standards-compliant)\n * mode, false otherwise.\n * @param {!Document} doc The document to check.\n * @return {boolean} True if in CSS1-compatible mode.\n * @private\n */\ngoog.dom.isCss1CompatMode_ = function(doc) {\n  if (goog.dom.COMPAT_MODE_KNOWN_) {\n    return goog.dom.ASSUME_STANDARDS_MODE;\n  }\n\n  return doc.compatMode == 'CSS1Compat';\n};\n\n\n/**\n * Determines if the given node can contain children, intended to be used for\n * HTML generation.\n *\n * IE natively supports node.canHaveChildren but has inconsistent behavior.\n * Prior to IE8 the base tag allows children and in IE9 all nodes return true\n * for canHaveChildren.\n *\n * In practice all non-IE browsers allow you to add children to any node, but\n * the behavior is inconsistent:\n *\n * <pre>\n *   var a = goog.dom.createElement(goog.dom.TagName.BR);\n *   a.appendChild(document.createTextNode('foo'));\n *   a.appendChild(document.createTextNode('bar'));\n *   console.log(a.childNodes.length);  // 2\n *   console.log(a.innerHTML);  // Chrome: \"\", IE9: \"foobar\", FF3.5: \"foobar\"\n * </pre>\n *\n * For more information, see:\n * http://dev.w3.org/html5/markup/syntax.html#syntax-elements\n *\n * TODO(user): Rename shouldAllowChildren() ?\n *\n * @param {Node} node The node to check.\n * @return {boolean} Whether the node can contain children.\n */\ngoog.dom.canHaveChildren = function(node) {\n  if (node.nodeType != goog.dom.NodeType.ELEMENT) {\n    return false;\n  }\n  switch (/** @type {!Element} */ (node).tagName) {\n    case String(goog.dom.TagName.APPLET):\n    case String(goog.dom.TagName.AREA):\n    case String(goog.dom.TagName.BASE):\n    case String(goog.dom.TagName.BR):\n    case String(goog.dom.TagName.COL):\n    case String(goog.dom.TagName.COMMAND):\n    case String(goog.dom.TagName.EMBED):\n    case String(goog.dom.TagName.FRAME):\n    case String(goog.dom.TagName.HR):\n    case String(goog.dom.TagName.IMG):\n    case String(goog.dom.TagName.INPUT):\n    case String(goog.dom.TagName.IFRAME):\n    case String(goog.dom.TagName.ISINDEX):\n    case String(goog.dom.TagName.KEYGEN):\n    case String(goog.dom.TagName.LINK):\n    case String(goog.dom.TagName.NOFRAMES):\n    case String(goog.dom.TagName.NOSCRIPT):\n    case String(goog.dom.TagName.META):\n    case String(goog.dom.TagName.OBJECT):\n    case String(goog.dom.TagName.PARAM):\n    case String(goog.dom.TagName.SCRIPT):\n    case String(goog.dom.TagName.SOURCE):\n    case String(goog.dom.TagName.STYLE):\n    case String(goog.dom.TagName.TRACK):\n    case String(goog.dom.TagName.WBR):\n      return false;\n  }\n  return true;\n};\n\n\n/**\n * Appends a child to a node.\n * @param {Node} parent Parent.\n * @param {Node} child Child.\n */\ngoog.dom.appendChild = function(parent, child) {\n  parent.appendChild(child);\n};\n\n\n/**\n * Appends a node with text or other nodes.\n * @param {!Node} parent The node to append nodes to.\n * @param {...goog.dom.Appendable} var_args The things to append to the node.\n *     If this is a Node it is appended as is.\n *     If this is a string then a text node is appended.\n *     If this is an array like object then fields 0 to length - 1 are appended.\n */\ngoog.dom.append = function(parent, var_args) {\n  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);\n};\n\n\n/**\n * Removes all the child nodes on a DOM node.\n * @param {Node} node Node to remove children from.\n */\ngoog.dom.removeChildren = function(node) {\n  // Note: Iterations over live collections can be slow, this is the fastest\n  // we could find. The double parenthesis are used to prevent JsCompiler and\n  // strict warnings.\n  var child;\n  while ((child = node.firstChild)) {\n    node.removeChild(child);\n  }\n};\n\n\n/**\n * Inserts a new node before an existing reference node (i.e. as the previous\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert before.\n */\ngoog.dom.insertSiblingBefore = function(newNode, refNode) {\n  if (refNode.parentNode) {\n    refNode.parentNode.insertBefore(newNode, refNode);\n  }\n};\n\n\n/**\n * Inserts a new node after an existing reference node (i.e. as the next\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert after.\n */\ngoog.dom.insertSiblingAfter = function(newNode, refNode) {\n  if (refNode.parentNode) {\n    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);\n  }\n};\n\n\n/**\n * Insert a child at a given index. If index is larger than the number of child\n * nodes that the parent currently has, the node is inserted as the last child\n * node.\n * @param {Element} parent The element into which to insert the child.\n * @param {Node} child The element to insert.\n * @param {number} index The index at which to insert the new child node. Must\n *     not be negative.\n */\ngoog.dom.insertChildAt = function(parent, child, index) {\n  // Note that if the second argument is null, insertBefore\n  // will append the child at the end of the list of children.\n  parent.insertBefore(child, parent.childNodes[index] || null);\n};\n\n\n/**\n * Removes a node from its parent.\n * @param {Node} node The node to remove.\n * @return {Node} The node removed if removed; else, null.\n */\ngoog.dom.removeNode = function(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n};\n\n\n/**\n * Replaces a node in the DOM tree. Will do nothing if `oldNode` has no\n * parent.\n * @param {Node} newNode Node to insert.\n * @param {Node} oldNode Node to replace.\n */\ngoog.dom.replaceNode = function(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n};\n\n\n/**\n * Flattens an element. That is, removes it and replace it with its children.\n * Does nothing if the element is not in the document.\n * @param {Element} element The element to flatten.\n * @return {Element|undefined} The original element, detached from the document\n *     tree, sans children; or undefined, if the element was not in the document\n *     to begin with.\n */\ngoog.dom.flattenElement = function(element) {\n  var child, parent = element.parentNode;\n  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {\n    // Use IE DOM method (supported by Opera too) if available\n    if (element.removeNode) {\n      return /** @type {Element} */ (element.removeNode(false));\n    } else {\n      // Move all children of the original node up one level.\n      while ((child = element.firstChild)) {\n        parent.insertBefore(child, element);\n      }\n\n      // Detach the original element.\n      return /** @type {Element} */ (goog.dom.removeNode(element));\n    }\n  }\n};\n\n\n/**\n * Returns an array containing just the element children of the given element.\n * @param {Element} element The element whose element children we want.\n * @return {!(Array<!Element>|NodeList<!Element>)} An array or array-like list\n *     of just the element children of the given element.\n */\ngoog.dom.getChildren = function(element) {\n  // We check if the children attribute is supported for child elements\n  // since IE8 misuses the attribute by also including comments.\n  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE &&\n      element.children != undefined) {\n    return element.children;\n  }\n  // Fall back to manually filtering the element's child nodes.\n  return goog.array.filter(element.childNodes, function(node) {\n    return node.nodeType == goog.dom.NodeType.ELEMENT;\n  });\n};\n\n\n/**\n * Returns the first child node that is an element.\n * @param {Node} node The node to get the first child element of.\n * @return {Element} The first child node of `node` that is an element.\n */\ngoog.dom.getFirstElementChild = function(node) {\n  if (goog.isDef(node.firstElementChild)) {\n    return /** @type {!Element} */ (node).firstElementChild;\n  }\n  return goog.dom.getNextElementNode_(node.firstChild, true);\n};\n\n\n/**\n * Returns the last child node that is an element.\n * @param {Node} node The node to get the last child element of.\n * @return {Element} The last child node of `node` that is an element.\n */\ngoog.dom.getLastElementChild = function(node) {\n  if (goog.isDef(node.lastElementChild)) {\n    return /** @type {!Element} */ (node).lastElementChild;\n  }\n  return goog.dom.getNextElementNode_(node.lastChild, false);\n};\n\n\n/**\n * Returns the first next sibling that is an element.\n * @param {Node} node The node to get the next sibling element of.\n * @return {Element} The next sibling of `node` that is an element.\n */\ngoog.dom.getNextElementSibling = function(node) {\n  if (goog.isDef(node.nextElementSibling)) {\n    return /** @type {!Element} */ (node).nextElementSibling;\n  }\n  return goog.dom.getNextElementNode_(node.nextSibling, true);\n};\n\n\n/**\n * Returns the first previous sibling that is an element.\n * @param {Node} node The node to get the previous sibling element of.\n * @return {Element} The first previous sibling of `node` that is\n *     an element.\n */\ngoog.dom.getPreviousElementSibling = function(node) {\n  if (goog.isDef(node.previousElementSibling)) {\n    return /** @type {!Element} */ (node).previousElementSibling;\n  }\n  return goog.dom.getNextElementNode_(node.previousSibling, false);\n};\n\n\n/**\n * Returns the first node that is an element in the specified direction,\n * starting with `node`.\n * @param {Node} node The node to get the next element from.\n * @param {boolean} forward Whether to look forwards or backwards.\n * @return {Element} The first element.\n * @private\n */\ngoog.dom.getNextElementNode_ = function(node, forward) {\n  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {\n    node = forward ? node.nextSibling : node.previousSibling;\n  }\n\n  return /** @type {Element} */ (node);\n};\n\n\n/**\n * Returns the next node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The next node in the DOM tree, or null if this was the last\n *     node.\n */\ngoog.dom.getNextNode = function(node) {\n  if (!node) {\n    return null;\n  }\n\n  if (node.firstChild) {\n    return node.firstChild;\n  }\n\n  while (node && !node.nextSibling) {\n    node = node.parentNode;\n  }\n\n  return node ? node.nextSibling : null;\n};\n\n\n/**\n * Returns the previous node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The previous node in the DOM tree, or null if this was the\n *     first node.\n */\ngoog.dom.getPreviousNode = function(node) {\n  if (!node) {\n    return null;\n  }\n\n  if (!node.previousSibling) {\n    return node.parentNode;\n  }\n\n  node = node.previousSibling;\n  while (node && node.lastChild) {\n    node = node.lastChild;\n  }\n\n  return node;\n};\n\n\n/**\n * Whether the object looks like a DOM node.\n * @param {?} obj The object being tested for node likeness.\n * @return {boolean} Whether the object looks like a DOM node.\n */\ngoog.dom.isNodeLike = function(obj) {\n  return goog.isObject(obj) && obj.nodeType > 0;\n};\n\n\n/**\n * Whether the object looks like an Element.\n * @param {?} obj The object being tested for Element likeness.\n * @return {boolean} Whether the object looks like an Element.\n */\ngoog.dom.isElement = function(obj) {\n  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;\n};\n\n\n/**\n * Returns true if the specified value is a Window object. This includes the\n * global window for HTML pages, and iframe windows.\n * @param {?} obj Variable to test.\n * @return {boolean} Whether the variable is a window.\n */\ngoog.dom.isWindow = function(obj) {\n  return goog.isObject(obj) && obj['window'] == obj;\n};\n\n\n/**\n * Returns an element's parent, if it's an Element.\n * @param {Element} element The DOM element.\n * @return {Element} The parent, or null if not an Element.\n */\ngoog.dom.getParentElement = function(element) {\n  var parent;\n  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {\n    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher('9') &&\n        !goog.userAgent.isVersionOrHigher('10');\n    // SVG elements in IE9 can't use the parentElement property.\n    // goog.global['SVGElement'] is not defined in IE9 quirks mode.\n    if (!(isIe9 && goog.global['SVGElement'] &&\n          element instanceof goog.global['SVGElement'])) {\n      parent = element.parentElement;\n      if (parent) {\n        return parent;\n      }\n    }\n  }\n  parent = element.parentNode;\n  return goog.dom.isElement(parent) ? /** @type {!Element} */ (parent) : null;\n};\n\n\n/**\n * Whether a node contains another node.\n * @param {?Node|undefined} parent The node that should contain the other node.\n * @param {?Node|undefined} descendant The node to test presence of.\n * @return {boolean} Whether the parent node contains the descendent node.\n */\ngoog.dom.contains = function(parent, descendant) {\n  if (!parent || !descendant) {\n    return false;\n  }\n  // We use browser specific methods for this if available since it is faster\n  // that way.\n\n  // IE DOM\n  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {\n    return parent == descendant || parent.contains(descendant);\n  }\n\n  // W3C DOM Level 3\n  if (typeof parent.compareDocumentPosition != 'undefined') {\n    return parent == descendant ||\n        Boolean(parent.compareDocumentPosition(descendant) & 16);\n  }\n\n  // W3C DOM Level 1\n  while (descendant && parent != descendant) {\n    descendant = descendant.parentNode;\n  }\n  return descendant == parent;\n};\n\n\n/**\n * Compares the document order of two nodes, returning 0 if they are the same\n * node, a negative number if node1 is before node2, and a positive number if\n * node2 is before node1.  Note that we compare the order the tags appear in the\n * document so in the tree <b><i>text</i></b> the B node is considered to be\n * before the I node.\n *\n * @param {Node} node1 The first node to compare.\n * @param {Node} node2 The second node to compare.\n * @return {number} 0 if the nodes are the same node, a negative number if node1\n *     is before node2, and a positive number if node2 is before node1.\n */\ngoog.dom.compareNodeOrder = function(node1, node2) {\n  // Fall out quickly for equality.\n  if (node1 == node2) {\n    return 0;\n  }\n\n  // Use compareDocumentPosition where available\n  if (node1.compareDocumentPosition) {\n    // 4 is the bitmask for FOLLOWS.\n    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;\n  }\n\n  // Special case for document nodes on IE 7 and 8.\n  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {\n    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {\n      return -1;\n    }\n    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {\n      return 1;\n    }\n  }\n\n  // Process in IE using sourceIndex - we check to see if the first node has\n  // a source index or if its parent has one.\n  if ('sourceIndex' in node1 ||\n      (node1.parentNode && 'sourceIndex' in node1.parentNode)) {\n    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;\n    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;\n\n    if (isElement1 && isElement2) {\n      return node1.sourceIndex - node2.sourceIndex;\n    } else {\n      var parent1 = node1.parentNode;\n      var parent2 = node2.parentNode;\n\n      if (parent1 == parent2) {\n        return goog.dom.compareSiblingOrder_(node1, node2);\n      }\n\n      if (!isElement1 && goog.dom.contains(parent1, node2)) {\n        return -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);\n      }\n\n\n      if (!isElement2 && goog.dom.contains(parent2, node1)) {\n        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);\n      }\n\n      return (isElement1 ? node1.sourceIndex : parent1.sourceIndex) -\n          (isElement2 ? node2.sourceIndex : parent2.sourceIndex);\n    }\n  }\n\n  // For Safari, we compare ranges.\n  var doc = goog.dom.getOwnerDocument(node1);\n\n  var range1, range2;\n  range1 = doc.createRange();\n  range1.selectNode(node1);\n  range1.collapse(true);\n\n  range2 = doc.createRange();\n  range2.selectNode(node2);\n  range2.collapse(true);\n\n  return range1.compareBoundaryPoints(\n      goog.global['Range'].START_TO_END, range2);\n};\n\n\n/**\n * Utility function to compare the position of two nodes, when\n * `textNode`'s parent is an ancestor of `node`.  If this entry\n * condition is not met, this function will attempt to reference a null object.\n * @param {!Node} textNode The textNode to compare.\n * @param {Node} node The node to compare.\n * @return {number} -1 if node is before textNode, +1 otherwise.\n * @private\n */\ngoog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {\n  var parent = textNode.parentNode;\n  if (parent == node) {\n    // If textNode is a child of node, then node comes first.\n    return -1;\n  }\n  var sibling = node;\n  while (sibling.parentNode != parent) {\n    sibling = sibling.parentNode;\n  }\n  return goog.dom.compareSiblingOrder_(sibling, textNode);\n};\n\n\n/**\n * Utility function to compare the position of two nodes known to be non-equal\n * siblings.\n * @param {Node} node1 The first node to compare.\n * @param {!Node} node2 The second node to compare.\n * @return {number} -1 if node1 is before node2, +1 otherwise.\n * @private\n */\ngoog.dom.compareSiblingOrder_ = function(node1, node2) {\n  var s = node2;\n  while ((s = s.previousSibling)) {\n    if (s == node1) {\n      // We just found node1 before node2.\n      return -1;\n    }\n  }\n\n  // Since we didn't find it, node1 must be after node2.\n  return 1;\n};\n\n\n/**\n * Find the deepest common ancestor of the given nodes.\n * @param {...Node} var_args The nodes to find a common ancestor of.\n * @return {Node} The common ancestor of the nodes, or null if there is none.\n *     null will only be returned if two or more of the nodes are from different\n *     documents.\n */\ngoog.dom.findCommonAncestor = function(var_args) {\n  var i, count = arguments.length;\n  if (!count) {\n    return null;\n  } else if (count == 1) {\n    return arguments[0];\n  }\n\n  var paths = [];\n  var minLength = Infinity;\n  for (i = 0; i < count; i++) {\n    // Compute the list of ancestors.\n    var ancestors = [];\n    var node = arguments[i];\n    while (node) {\n      ancestors.unshift(node);\n      node = node.parentNode;\n    }\n\n    // Save the list for comparison.\n    paths.push(ancestors);\n    minLength = Math.min(minLength, ancestors.length);\n  }\n  var output = null;\n  for (i = 0; i < minLength; i++) {\n    var first = paths[0][i];\n    for (var j = 1; j < count; j++) {\n      if (first != paths[j][i]) {\n        return output;\n      }\n    }\n    output = first;\n  }\n  return output;\n};\n\n\n/**\n * Returns the owner document for a node.\n * @param {Node|Window} node The node to get the document for.\n * @return {!Document} The document owning the node.\n */\ngoog.dom.getOwnerDocument = function(node) {\n  // TODO(nnaze): Update param signature to be non-nullable.\n  goog.asserts.assert(node, 'Node cannot be null or undefined.');\n  return /** @type {!Document} */ (\n      node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument ||\n              node.document);\n};\n\n\n/**\n * Cross-browser function for getting the document element of a frame or iframe.\n * @param {Element} frame Frame element.\n * @return {!Document} The frame content document.\n */\ngoog.dom.getFrameContentDocument = function(frame) {\n  return frame.contentDocument ||\n      /** @type {!HTMLFrameElement} */ (frame).contentWindow.document;\n};\n\n\n/**\n * Cross-browser function for getting the window of a frame or iframe.\n * @param {Element} frame Frame element.\n * @return {Window} The window associated with the given frame, or null if none\n *     exists.\n */\ngoog.dom.getFrameContentWindow = function(frame) {\n  try {\n    return frame.contentWindow ||\n        (frame.contentDocument ? goog.dom.getWindow(frame.contentDocument) :\n                                 null);\n  } catch (e) {\n    // NOTE(user): In IE8, checking the contentWindow or contentDocument\n    // properties will throw a \"Unspecified Error\" exception if the iframe is\n    // not inserted in the DOM. If we get this we can be sure that no window\n    // exists, so return null.\n  }\n  return null;\n};\n\n\n/**\n * Sets the text content of a node, with cross-browser support.\n * @param {Node} node The node to change the text content of.\n * @param {string|number} text The value that should replace the node's content.\n */\ngoog.dom.setTextContent = function(node, text) {\n  goog.asserts.assert(\n      node != null,\n      'goog.dom.setTextContent expects a non-null value for node');\n\n  if ('textContent' in node) {\n    node.textContent = text;\n  } else if (node.nodeType == goog.dom.NodeType.TEXT) {\n    /** @type {!Text} */ (node).data = String(text);\n  } else if (\n      node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {\n    // If the first child is a text node we just change its data and remove the\n    // rest of the children.\n    while (node.lastChild != node.firstChild) {\n      node.removeChild(node.lastChild);\n    }\n    /** @type {!Text} */ (node.firstChild).data = String(text);\n  } else {\n    goog.dom.removeChildren(node);\n    var doc = goog.dom.getOwnerDocument(node);\n    node.appendChild(doc.createTextNode(String(text)));\n  }\n};\n\n\n/**\n * Gets the outerHTML of a node, which islike innerHTML, except that it\n * actually contains the HTML of the node itself.\n * @param {Element} element The element to get the HTML of.\n * @return {string} The outerHTML of the given element.\n */\ngoog.dom.getOuterHtml = function(element) {\n  goog.asserts.assert(\n      element !== null,\n      'goog.dom.getOuterHtml expects a non-null value for element');\n  // IE, Opera and WebKit all have outerHTML.\n  if ('outerHTML' in element) {\n    return element.outerHTML;\n  } else {\n    var doc = goog.dom.getOwnerDocument(element);\n    var div = goog.dom.createElement_(doc, goog.dom.TagName.DIV);\n    div.appendChild(element.cloneNode(true));\n    return div.innerHTML;\n  }\n};\n\n\n/**\n * Finds the first descendant node that matches the filter function, using\n * a depth first search. This function offers the most general purpose way\n * of finding a matching element. You may also wish to consider\n * `goog.dom.query` which can express many matching criteria using\n * CSS selector expressions. These expressions often result in a more\n * compact representation of the desired result.\n * @see goog.dom.query\n *\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {Node|undefined} The found node or undefined if none is found.\n */\ngoog.dom.findNode = function(root, p) {\n  var rv = [];\n  var found = goog.dom.findNodes_(root, p, rv, true);\n  return found ? rv[0] : undefined;\n};\n\n\n/**\n * Finds all the descendant nodes that match the filter function, using a\n * a depth first search. This function offers the most general-purpose way\n * of finding a set of matching elements. You may also wish to consider\n * `goog.dom.query` which can express many matching criteria using\n * CSS selector expressions. These expressions often result in a more\n * compact representation of the desired result.\n\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {!Array<!Node>} The found nodes or an empty array if none are found.\n */\ngoog.dom.findNodes = function(root, p) {\n  var rv = [];\n  goog.dom.findNodes_(root, p, rv, false);\n  return rv;\n};\n\n\n/**\n * Finds the first or all the descendant nodes that match the filter function,\n * using a depth first search.\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @param {!Array<!Node>} rv The found nodes are added to this array.\n * @param {boolean} findOne If true we exit after the first found node.\n * @return {boolean} Whether the search is complete or not. True in case findOne\n *     is true and the node is found. False otherwise.\n * @private\n */\ngoog.dom.findNodes_ = function(root, p, rv, findOne) {\n  if (root != null) {\n    var child = root.firstChild;\n    while (child) {\n      if (p(child)) {\n        rv.push(child);\n        if (findOne) {\n          return true;\n        }\n      }\n      if (goog.dom.findNodes_(child, p, rv, findOne)) {\n        return true;\n      }\n      child = child.nextSibling;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Map of tags whose content to ignore when calculating text length.\n * @private {!Object<string, number>}\n * @const\n */\ngoog.dom.TAGS_TO_IGNORE_ = {\n  'SCRIPT': 1,\n  'STYLE': 1,\n  'HEAD': 1,\n  'IFRAME': 1,\n  'OBJECT': 1\n};\n\n\n/**\n * Map of tags which have predefined values with regard to whitespace.\n * @private {!Object<string, string>}\n * @const\n */\ngoog.dom.PREDEFINED_TAG_VALUES_ = {\n  'IMG': ' ',\n  'BR': '\\n'\n};\n\n\n/**\n * Returns true if the element has a tab index that allows it to receive\n * keyboard focus (tabIndex >= 0), false otherwise.  Note that some elements\n * natively support keyboard focus, even if they have no tab index.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element has a tab index that allows keyboard\n *     focus.\n */\ngoog.dom.isFocusableTabIndex = function(element) {\n  return goog.dom.hasSpecifiedTabIndex_(element) &&\n      goog.dom.isTabIndexFocusable_(element);\n};\n\n\n/**\n * Enables or disables keyboard focus support on the element via its tab index.\n * Only elements for which {@link goog.dom.isFocusableTabIndex} returns true\n * (or elements that natively support keyboard focus, like form elements) can\n * receive keyboard focus.  See http://go/tabindex for more info.\n * @param {Element} element Element whose tab index is to be changed.\n * @param {boolean} enable Whether to set or remove a tab index on the element\n *     that supports keyboard focus.\n */\ngoog.dom.setFocusableTabIndex = function(element, enable) {\n  if (enable) {\n    element.tabIndex = 0;\n  } else {\n    // Set tabIndex to -1 first, then remove it. This is a workaround for\n    // Safari (confirmed in version 4 on Windows). When removing the attribute\n    // without setting it to -1 first, the element remains keyboard focusable\n    // despite not having a tabIndex attribute anymore.\n    element.tabIndex = -1;\n    element.removeAttribute('tabIndex');  // Must be camelCase!\n  }\n};\n\n\n/**\n * Returns true if the element can be focused, i.e. it has a tab index that\n * allows it to receive keyboard focus (tabIndex >= 0), or it is an element\n * that natively supports keyboard focus.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element allows keyboard focus.\n */\ngoog.dom.isFocusable = function(element) {\n  var focusable;\n  // Some elements can have unspecified tab index and still receive focus.\n  if (goog.dom.nativelySupportsFocus_(element)) {\n    // Make sure the element is not disabled ...\n    focusable = !element.disabled &&\n        // ... and if a tab index is specified, it allows focus.\n        (!goog.dom.hasSpecifiedTabIndex_(element) ||\n         goog.dom.isTabIndexFocusable_(element));\n  } else {\n    focusable = goog.dom.isFocusableTabIndex(element);\n  }\n\n  // IE requires elements to be visible in order to focus them.\n  return focusable && goog.userAgent.IE ?\n      goog.dom.hasNonZeroBoundingRect_(/** @type {!HTMLElement} */ (element)) :\n      focusable;\n};\n\n\n/**\n * Returns true if the element has a specified tab index.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element has a specified tab index.\n * @private\n */\ngoog.dom.hasSpecifiedTabIndex_ = function(element) {\n  // IE8 and below don't support hasAttribute(), instead check whether the\n  // 'tabindex' attributeNode is specified. Otherwise check hasAttribute().\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('9')) {\n    var attrNode = element.getAttributeNode('tabindex');  // Must be lowercase!\n    return goog.isDefAndNotNull(attrNode) && attrNode.specified;\n  } else {\n    return element.hasAttribute('tabindex');\n  }\n};\n\n\n/**\n * Returns true if the element's tab index allows the element to be focused.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element's tab index allows focus.\n * @private\n */\ngoog.dom.isTabIndexFocusable_ = function(element) {\n  var index = /** @type {!HTMLElement} */ (element).tabIndex;\n  // NOTE: IE9 puts tabIndex in 16-bit int, e.g. -2 is 65534.\n  return goog.isNumber(index) && index >= 0 && index < 32768;\n};\n\n\n/**\n * Returns true if the element is focusable even when tabIndex is not set.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element natively supports focus.\n * @private\n */\ngoog.dom.nativelySupportsFocus_ = function(element) {\n  return element.tagName == goog.dom.TagName.A ||\n      element.tagName == goog.dom.TagName.INPUT ||\n      element.tagName == goog.dom.TagName.TEXTAREA ||\n      element.tagName == goog.dom.TagName.SELECT ||\n      element.tagName == goog.dom.TagName.BUTTON;\n};\n\n\n/**\n * Returns true if the element has a bounding rectangle that would be visible\n * (i.e. its width and height are greater than zero).\n * @param {!HTMLElement} element Element to check.\n * @return {boolean} Whether the element has a non-zero bounding rectangle.\n * @private\n */\ngoog.dom.hasNonZeroBoundingRect_ = function(element) {\n  var rect;\n  if (!goog.isFunction(element['getBoundingClientRect']) ||\n      // In IE, getBoundingClientRect throws on detached nodes.\n      (goog.userAgent.IE && element.parentElement == null)) {\n    rect = {'height': element.offsetHeight, 'width': element.offsetWidth};\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;\n};\n\n\n/**\n * Returns the text content of the current node, without markup and invisible\n * symbols. New lines are stripped and whitespace is collapsed,\n * such that each character would be visible.\n *\n * In browsers that support it, innerText is used.  Other browsers attempt to\n * simulate it via node traversal.  Line breaks are canonicalized in IE.\n *\n * @param {Node} node The node from which we are getting content.\n * @return {string} The text content.\n */\ngoog.dom.getTextContent = function(node) {\n  var textContent;\n  // Note(arv): IE9, Opera, and Safari 3 support innerText but they include\n  // text nodes in script tags. So we revert to use a user agent test here.\n  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && node !== null &&\n      ('innerText' in node)) {\n    textContent = goog.string.canonicalizeNewlines(node.innerText);\n    // Unfortunately .innerText() returns text with &shy; symbols\n    // We need to filter it out and then remove duplicate whitespaces\n  } else {\n    var buf = [];\n    goog.dom.getTextContent_(node, buf, true);\n    textContent = buf.join('');\n  }\n\n  // Strip &shy; entities. goog.format.insertWordBreaks inserts them in Opera.\n  textContent = textContent.replace(/ \\xAD /g, ' ').replace(/\\xAD/g, '');\n  // Strip &#8203; entities. goog.format.insertWordBreaks inserts them in IE8.\n  textContent = textContent.replace(/\\u200B/g, '');\n\n  // Skip this replacement on old browsers with working innerText, which\n  // automatically turns &nbsp; into ' ' and / +/ into ' ' when reading\n  // innerText.\n  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {\n    textContent = textContent.replace(/ +/g, ' ');\n  }\n  if (textContent != ' ') {\n    textContent = textContent.replace(/^\\s*/, '');\n  }\n\n  return textContent;\n};\n\n\n/**\n * Returns the text content of the current node, without markup.\n *\n * Unlike `getTextContent` this method does not collapse whitespaces\n * or normalize lines breaks.\n *\n * @param {Node} node The node from which we are getting content.\n * @return {string} The raw text content.\n */\ngoog.dom.getRawTextContent = function(node) {\n  var buf = [];\n  goog.dom.getTextContent_(node, buf, false);\n\n  return buf.join('');\n};\n\n\n/**\n * Recursive support function for text content retrieval.\n *\n * @param {Node} node The node from which we are getting content.\n * @param {Array<string>} buf string buffer.\n * @param {boolean} normalizeWhitespace Whether to normalize whitespace.\n * @private\n */\ngoog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {\n  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {\n    // ignore certain tags\n  } else if (node.nodeType == goog.dom.NodeType.TEXT) {\n    if (normalizeWhitespace) {\n      buf.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      buf.push(node.nodeValue);\n    }\n  } else if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {\n    buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);\n  } else {\n    var child = node.firstChild;\n    while (child) {\n      goog.dom.getTextContent_(child, buf, normalizeWhitespace);\n      child = child.nextSibling;\n    }\n  }\n};\n\n\n/**\n * Returns the text length of the text contained in a node, without markup. This\n * is equivalent to the selection length if the node was selected, or the number\n * of cursor movements to traverse the node. Images & BRs take one space.  New\n * lines are ignored.\n *\n * @param {Node} node The node whose text content length is being calculated.\n * @return {number} The length of `node`'s text content.\n */\ngoog.dom.getNodeTextLength = function(node) {\n  return goog.dom.getTextContent(node).length;\n};\n\n\n/**\n * Returns the text offset of a node relative to one of its ancestors. The text\n * length is the same as the length calculated by goog.dom.getNodeTextLength.\n *\n * @param {Node} node The node whose offset is being calculated.\n * @param {Node=} opt_offsetParent The node relative to which the offset will\n *     be calculated. Defaults to the node's owner document's body.\n * @return {number} The text offset.\n */\ngoog.dom.getNodeTextOffset = function(node, opt_offsetParent) {\n  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;\n  var buf = [];\n  while (node && node != root) {\n    var cur = node;\n    while ((cur = cur.previousSibling)) {\n      buf.unshift(goog.dom.getTextContent(cur));\n    }\n    node = node.parentNode;\n  }\n  // Trim left to deal with FF cases when there might be line breaks and empty\n  // nodes at the front of the text\n  return goog.string.trimLeft(buf.join('')).replace(/ +/g, ' ').length;\n};\n\n\n/**\n * Returns the node at a given offset in a parent node.  If an object is\n * provided for the optional third parameter, the node and the remainder of the\n * offset will stored as properties of this object.\n * @param {Node} parent The parent node.\n * @param {number} offset The offset into the parent node.\n * @param {Object=} opt_result Object to be used to store the return value. The\n *     return value will be stored in the form {node: Node, remainder: number}\n *     if this object is provided.\n * @return {Node} The node at the given offset.\n */\ngoog.dom.getNodeAtOffset = function(parent, offset, opt_result) {\n  var stack = [parent], pos = 0, cur = null;\n  while (stack.length > 0 && pos < offset) {\n    cur = stack.pop();\n    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {\n      // ignore certain tags\n    } else if (cur.nodeType == goog.dom.NodeType.TEXT) {\n      var text = cur.nodeValue.replace(/(\\r\\n|\\r|\\n)/g, '').replace(/ +/g, ' ');\n      pos += text.length;\n    } else if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {\n      pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;\n    } else {\n      for (var i = cur.childNodes.length - 1; i >= 0; i--) {\n        stack.push(cur.childNodes[i]);\n      }\n    }\n  }\n  if (goog.isObject(opt_result)) {\n    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;\n    opt_result.node = cur;\n  }\n\n  return cur;\n};\n\n\n/**\n * Returns true if the object is a `NodeList`.  To qualify as a NodeList,\n * the object must have a numeric length property and an item function (which\n * has type 'string' on IE for some reason).\n * @param {Object} val Object to test.\n * @return {boolean} Whether the object is a NodeList.\n */\ngoog.dom.isNodeList = function(val) {\n  // TODO(attila): Now the isNodeList is part of goog.dom we can use\n  // goog.userAgent to make this simpler.\n  // A NodeList must have a length property of type 'number' on all platforms.\n  if (val && typeof val.length == 'number') {\n    // A NodeList is an object everywhere except Safari, where it's a function.\n    if (goog.isObject(val)) {\n      // A NodeList must have an item function (on non-IE platforms) or an item\n      // property of type 'string' (on IE).\n      return typeof val.item == 'function' || typeof val.item == 'string';\n    } else if (goog.isFunction(val)) {\n      // On Safari, a NodeList is a function with an item property that is also\n      // a function.\n      return typeof /** @type {?} */ (val.item) == 'function';\n    }\n  }\n\n  // Not a NodeList.\n  return false;\n};\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * tag name and/or class name. If the passed element matches the specified\n * criteria, the element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {?(goog.dom.TagName<T>|string)=} opt_tag The tag name to match (or\n *     null/undefined to match only based on class name).\n * @param {?string=} opt_class The class name to match (or null/undefined to\n *     match only based on tag name).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {?R} The first ancestor that matches the passed criteria, or\n *     null if no match is found. The return type is {?Element} if opt_tag is\n *     not a member of goog.dom.TagName or a more specific type if it is (e.g.\n *     {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getAncestorByTagNameAndClass = function(\n    element, opt_tag, opt_class, opt_maxSearchSteps) {\n  if (!opt_tag && !opt_class) {\n    return null;\n  }\n  var tagName = opt_tag ? String(opt_tag).toUpperCase() : null;\n  return /** @type {Element} */ (goog.dom.getAncestor(element, function(node) {\n    return (!tagName || node.nodeName == tagName) &&\n        (!opt_class ||\n         goog.isString(node.className) &&\n             goog.array.contains(node.className.split(/\\s+/), opt_class));\n  }, true, opt_maxSearchSteps));\n};\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * class name. If the passed element matches the specified criteria, the\n * element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {string} className The class name to match.\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Element} The first ancestor that matches the passed criteria, or\n *     null if none match.\n */\ngoog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {\n  return goog.dom.getAncestorByTagNameAndClass(\n      element, null, className, opt_maxSearchSteps);\n};\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that passes the\n * matcher function.\n * @param {Node} element The DOM node to start with.\n * @param {function(Node) : boolean} matcher A function that returns true if the\n *     passed node matches the desired criteria.\n * @param {boolean=} opt_includeNode If true, the node itself is included in\n *     the search (the first call to the matcher will pass startElement as\n *     the node to test).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Node} DOM node that matched the matcher, or null if there was\n *     no match.\n */\ngoog.dom.getAncestor = function(\n    element, matcher, opt_includeNode, opt_maxSearchSteps) {\n  if (element && !opt_includeNode) {\n    element = element.parentNode;\n  }\n  var steps = 0;\n  while (element &&\n         (opt_maxSearchSteps == null || steps <= opt_maxSearchSteps)) {\n    goog.asserts.assert(element.name != 'parentNode');\n    if (matcher(element)) {\n      return element;\n    }\n    element = element.parentNode;\n    steps++;\n  }\n  // Reached the root of the DOM without a match\n  return null;\n};\n\n\n/**\n * Determines the active element in the given document.\n * @param {Document} doc The document to look in.\n * @return {Element} The active element.\n */\ngoog.dom.getActiveElement = function(doc) {\n  // While in an iframe, IE9 will throw \"Unspecified error\" when accessing\n  // activeElement.\n  try {\n    var activeElement = doc && doc.activeElement;\n    // While not in an iframe, IE9-11 sometimes gives null.\n    // While in an iframe, IE11 sometimes returns an empty object.\n    return activeElement && activeElement.nodeName ? activeElement : null;\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * Gives the current devicePixelRatio.\n *\n * By default, this is the value of window.devicePixelRatio (which should be\n * preferred if present).\n *\n * If window.devicePixelRatio is not present, the ratio is calculated with\n * window.matchMedia, if present. Otherwise, gives 1.0.\n *\n * Some browsers (including Chrome) consider the browser zoom level in the pixel\n * ratio, so the value may change across multiple calls.\n *\n * @return {number} The number of actual pixels per virtual pixel.\n */\ngoog.dom.getPixelRatio = function() {\n  var win = goog.dom.getWindow();\n  if (goog.isDef(win.devicePixelRatio)) {\n    return win.devicePixelRatio;\n  } else if (win.matchMedia) {\n    // Should be for IE10 and FF6-17 (this basically clamps to lower)\n    // Note that the order of these statements is important\n    return goog.dom.matchesPixelRatio_(3) || goog.dom.matchesPixelRatio_(2) ||\n           goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(1) ||\n           .75;\n  }\n  return 1;\n};\n\n\n/**\n * Calculates a mediaQuery to check if the current device supports the\n * given actual to virtual pixel ratio.\n * @param {number} pixelRatio The ratio of actual pixels to virtual pixels.\n * @return {number} pixelRatio if applicable, otherwise 0.\n * @private\n */\ngoog.dom.matchesPixelRatio_ = function(pixelRatio) {\n  var win = goog.dom.getWindow();\n  /**\n   * Due to the 1:96 fixed ratio of CSS in to CSS px, 1dppx is equivalent to\n   * 96dpi.\n   * @const {number}\n   */\n  var dpiPerDppx = 96;\n  var query =\n      // FF16-17\n      '(min-resolution: ' + pixelRatio + 'dppx),' +\n      // FF6-15\n      '(min--moz-device-pixel-ratio: ' + pixelRatio + '),' +\n      // IE10 (this works for the two browsers above too but I don't want to\n      // trust the 1:96 fixed ratio magic)\n      '(min-resolution: ' + (pixelRatio * dpiPerDppx) + 'dpi)';\n  return win.matchMedia(query).matches ? pixelRatio : 0;\n};\n\n\n/**\n * Gets '2d' context of a canvas. Shortcut for canvas.getContext('2d') with a\n * type information.\n * @param {!HTMLCanvasElement} canvas\n * @return {!CanvasRenderingContext2D}\n */\ngoog.dom.getCanvasContext2D = function(canvas) {\n  return /** @type {!CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n};\n\n\n\n/**\n * Create an instance of a DOM helper with a new document object.\n * @param {Document=} opt_document Document object to associate with this\n *     DOM helper.\n * @constructor\n */\ngoog.dom.DomHelper = function(opt_document) {\n  /**\n   * Reference to the document object to use\n   * @type {!Document}\n   * @private\n   */\n  this.document_ = opt_document || goog.global.document || document;\n};\n\n\n/**\n * Gets the dom helper object for the document where the element resides.\n * @param {Node=} opt_node If present, gets the DomHelper for this node.\n * @return {!goog.dom.DomHelper} The DomHelper.\n */\ngoog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;\n\n\n/**\n * Sets the document object.\n * @param {!Document} document Document object.\n */\ngoog.dom.DomHelper.prototype.setDocument = function(document) {\n  this.document_ = document;\n};\n\n\n/**\n * Gets the document object being used by the dom library.\n * @return {!Document} Document object.\n */\ngoog.dom.DomHelper.prototype.getDocument = function() {\n  return this.document_;\n};\n\n\n/**\n * Alias for `getElementById`. If a DOM node is passed in then we just\n * return that.\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n */\ngoog.dom.DomHelper.prototype.getElement = function(element) {\n  return goog.dom.getElementHelper_(this.document_, element);\n};\n\n\n/**\n * Gets an element by id, asserting that the element is found.\n *\n * This is used when an element is expected to exist, and should fail with\n * an assertion error if it does not (if assertions are enabled).\n *\n * @param {string} id Element ID.\n * @return {!Element} The element with the given ID, if it exists.\n */\ngoog.dom.DomHelper.prototype.getRequiredElement = function(id) {\n  return goog.dom.getRequiredElementHelper_(this.document_, id);\n};\n\n\n/**\n * Alias for `getElement`.\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n * @deprecated Use {@link goog.dom.DomHelper.prototype.getElement} instead.\n */\ngoog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;\n\n\n/**\n * Gets elements by tag name.\n * @param {!goog.dom.TagName<T>} tagName\n * @param {(!Document|!Element)=} opt_parent Parent element or document where to\n *     look for elements. Defaults to document of this DomHelper.\n * @return {!NodeList<R>} List of elements. The members of the list are\n *     {!Element} if tagName is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getElementsByTagName =\n    function(tagName, opt_parent) {\n  var parent = opt_parent || this.document_;\n  return parent.getElementsByTagName(String(tagName));\n};\n\n\n/**\n * Looks up elements by both tag and class name, using browser native functions\n * (`querySelectorAll`, `getElementsByTagName` or\n * `getElementsByClassName`) where possible. The returned array is a live\n * NodeList or a static list depending on the code path taken.\n *\n * @see goog.dom.query\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name or * for all\n *     tags.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(\n    opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementsByTagNameAndClass_(\n      this.document_, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Gets the first element matching the tag and the class.\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {?R} Reference to a DOM node. The return type is {?Element} if\n *     tagName is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getElementByTagNameAndClass = function(\n    opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementByTagNameAndClass_(\n      this.document_, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Returns an array of all the elements with the provided className.\n * @see {goog.dom.query}\n * @param {string} className the name of the class to look for.\n * @param {Element|Document=} opt_el Optional element to look in.\n * @return {!IArrayLike<!Element>} The items found with the class name provided.\n */\ngoog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {\n  var doc = opt_el || this.document_;\n  return goog.dom.getElementsByClass(className, doc);\n};\n\n\n/**\n * Returns the first element we find matching the provided class name.\n * @see {goog.dom.query}\n * @param {string} className the name of the class to look for.\n * @param {(Element|Document)=} opt_el Optional element to look in.\n * @return {Element} The first item found with the class name provided.\n */\ngoog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {\n  var doc = opt_el || this.document_;\n  return goog.dom.getElementByClass(className, doc);\n};\n\n\n/**\n * Ensures an element with the given className exists, and then returns the\n * first element with the provided className.\n * @see {goog.dom.query}\n * @param {string} className the name of the class to look for.\n * @param {(!Element|!Document)=} opt_root Optional element or document to look\n *     in.\n * @return {!Element} The first item found with the class name provided.\n * @throws {goog.asserts.AssertionError} Thrown if no element is found.\n */\ngoog.dom.DomHelper.prototype.getRequiredElementByClass = function(\n    className, opt_root) {\n  var root = opt_root || this.document_;\n  return goog.dom.getRequiredElementByClass(className, root);\n};\n\n\n/**\n * Alias for `getElementsByTagNameAndClass`.\n * @deprecated Use DomHelper getElementsByTagNameAndClass.\n * @see goog.dom.query\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {Element=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is a string or more specific types if it is\n *     a member of goog.dom.TagName (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.$$ =\n    goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;\n\n\n/**\n * Sets a number of properties on a node.\n * @param {Element} element DOM node to set properties on.\n * @param {Object} properties Hash of property:value pairs.\n */\ngoog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;\n\n\n/**\n * Gets the dimensions of the viewport.\n * @param {Window=} opt_window Optional window element to test. Defaults to\n *     the window of the Dom Helper.\n * @return {!goog.math.Size} Object with values 'width' and 'height'.\n */\ngoog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {\n  // TODO(arv): This should not take an argument. That breaks the rule of a\n  // a DomHelper representing a single frame/window/document.\n  return goog.dom.getViewportSize(opt_window || this.getWindow());\n};\n\n\n/**\n * Calculates the height of the document.\n *\n * @return {number} The height of the document.\n */\ngoog.dom.DomHelper.prototype.getDocumentHeight = function() {\n  return goog.dom.getDocumentHeight_(this.getWindow());\n};\n\n\n/**\n * Typedef for use with goog.dom.createDom and goog.dom.append.\n * @typedef {Object|string|Array|NodeList}\n */\ngoog.dom.Appendable;\n\n\n/**\n * Returns a dom node with a set of attributes.  This function accepts varargs\n * for subsequent nodes to be added.  Subsequent nodes will be added to the\n * first node as childNodes.\n *\n * So:\n * <code>createDom(goog.dom.TagName.DIV, null, createDom(goog.dom.TagName.P),\n * createDom(goog.dom.TagName.P));</code> would return a div with two child\n * paragraphs\n *\n * An easy way to move all child nodes of an existing element to a new parent\n * element is:\n * <code>createDom(goog.dom.TagName.DIV, null, oldElement.childNodes);</code>\n * which will remove all child nodes from the old element and add them as\n * child nodes of the new DIV.\n *\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...goog.dom.Appendable} var_args Further DOM nodes or\n *     strings for text nodes. If one of the var_args is an array or\n *     NodeList, its elements will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.createDom = function(\n    tagName, opt_attributes, var_args) {\n  return goog.dom.createDom_(this.document_, arguments);\n};\n\n\n/**\n * Alias for `createDom`.\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...goog.dom.Appendable} var_args Further DOM nodes or strings for\n *     text nodes.  If one of the var_args is an array, its children will be\n *     added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @deprecated Use {@link goog.dom.DomHelper.prototype.createDom} instead.\n */\ngoog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;\n\n\n/**\n * Creates a new element.\n * @param {string|!goog.dom.TagName<T>} name Tag to create.\n * @return {R} The new element. The return type is {!Element} if name is\n *     a string or a more specific type if it is a member of goog.dom.TagName\n *     (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.createElement = function(name) {\n  return goog.dom.createElement_(this.document_, name);\n};\n\n\n/**\n * Creates a new text node.\n * @param {number|string} content Content.\n * @return {!Text} The new text node.\n */\ngoog.dom.DomHelper.prototype.createTextNode = function(content) {\n  return this.document_.createTextNode(String(content));\n};\n\n\n/**\n * Create a table.\n * @param {number} rows The number of rows in the table.  Must be >= 1.\n * @param {number} columns The number of columns in the table.  Must be >= 1.\n * @param {boolean=} opt_fillWithNbsp If true, fills table entries with\n *     `goog.string.Unicode.NBSP` characters.\n * @return {!HTMLElement} The created table.\n */\ngoog.dom.DomHelper.prototype.createTable = function(\n    rows, columns, opt_fillWithNbsp) {\n  return goog.dom.createTable_(\n      this.document_, rows, columns, !!opt_fillWithNbsp);\n};\n\n\n/**\n * Converts an HTML into a node or a document fragment. A single Node is used if\n * `html` only generates a single node. If `html` generates multiple\n * nodes then these are put inside a `DocumentFragment`. This is a safe\n * version of `goog.dom.DomHelper#htmlToDocumentFragment` which is now\n * deleted.\n * @param {!goog.html.SafeHtml} html The HTML markup to convert.\n * @return {!Node} The resulting node.\n */\ngoog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {\n  return goog.dom.safeHtmlToNode_(this.document_, html);\n};\n\n\n/**\n * Returns true if the browser is in \"CSS1-compatible\" (standards-compliant)\n * mode, false otherwise.\n * @return {boolean} True if in CSS1-compatible mode.\n */\ngoog.dom.DomHelper.prototype.isCss1CompatMode = function() {\n  return goog.dom.isCss1CompatMode_(this.document_);\n};\n\n\n/**\n * Gets the window object associated with the document.\n * @return {!Window} The window associated with the given document.\n */\ngoog.dom.DomHelper.prototype.getWindow = function() {\n  return goog.dom.getWindow_(this.document_);\n};\n\n\n/**\n * Gets the document scroll element.\n * @return {!Element} Scrolling element.\n */\ngoog.dom.DomHelper.prototype.getDocumentScrollElement = function() {\n  return goog.dom.getDocumentScrollElement_(this.document_);\n};\n\n\n/**\n * Gets the document scroll distance as a coordinate object.\n * @return {!goog.math.Coordinate} Object with properties 'x' and 'y'.\n */\ngoog.dom.DomHelper.prototype.getDocumentScroll = function() {\n  return goog.dom.getDocumentScroll_(this.document_);\n};\n\n\n/**\n * Determines the active element in the given document.\n * @param {Document=} opt_doc The document to look in.\n * @return {Element} The active element.\n */\ngoog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {\n  return goog.dom.getActiveElement(opt_doc || this.document_);\n};\n\n\n/**\n * Appends a child to a node.\n * @param {Node} parent Parent.\n * @param {Node} child Child.\n */\ngoog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;\n\n\n/**\n * Appends a node with text or other nodes.\n * @param {!Node} parent The node to append nodes to.\n * @param {...goog.dom.Appendable} var_args The things to append to the node.\n *     If this is a Node it is appended as is.\n *     If this is a string then a text node is appended.\n *     If this is an array like object then fields 0 to length - 1 are appended.\n */\ngoog.dom.DomHelper.prototype.append = goog.dom.append;\n\n\n/**\n * Determines if the given node can contain children, intended to be used for\n * HTML generation.\n *\n * @param {Node} node The node to check.\n * @return {boolean} Whether the node can contain children.\n */\ngoog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;\n\n\n/**\n * Removes all the child nodes on a DOM node.\n * @param {Node} node Node to remove children from.\n */\ngoog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;\n\n\n/**\n * Inserts a new node before an existing reference node (i.e., as the previous\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert before.\n */\ngoog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;\n\n\n/**\n * Inserts a new node after an existing reference node (i.e., as the next\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert after.\n */\ngoog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;\n\n\n/**\n * Insert a child at a given index. If index is larger than the number of child\n * nodes that the parent currently has, the node is inserted as the last child\n * node.\n * @param {Element} parent The element into which to insert the child.\n * @param {Node} child The element to insert.\n * @param {number} index The index at which to insert the new child node. Must\n *     not be negative.\n */\ngoog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;\n\n\n/**\n * Removes a node from its parent.\n * @param {Node} node The node to remove.\n * @return {Node} The node removed if removed; else, null.\n */\ngoog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;\n\n\n/**\n * Replaces a node in the DOM tree. Will do nothing if `oldNode` has no\n * parent.\n * @param {Node} newNode Node to insert.\n * @param {Node} oldNode Node to replace.\n */\ngoog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;\n\n\n/**\n * Flattens an element. That is, removes it and replace it with its children.\n * @param {Element} element The element to flatten.\n * @return {Element|undefined} The original element, detached from the document\n *     tree, sans children, or undefined if the element was already not in the\n *     document.\n */\ngoog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;\n\n\n/**\n * Returns an array containing just the element children of the given element.\n * @param {Element} element The element whose element children we want.\n * @return {!(Array<!Element>|NodeList<!Element>)} An array or array-like list\n *     of just the element children of the given element.\n */\ngoog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;\n\n\n/**\n * Returns the first child node that is an element.\n * @param {Node} node The node to get the first child element of.\n * @return {Element} The first child node of `node` that is an element.\n */\ngoog.dom.DomHelper.prototype.getFirstElementChild =\n    goog.dom.getFirstElementChild;\n\n\n/**\n * Returns the last child node that is an element.\n * @param {Node} node The node to get the last child element of.\n * @return {Element} The last child node of `node` that is an element.\n */\ngoog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;\n\n\n/**\n * Returns the first next sibling that is an element.\n * @param {Node} node The node to get the next sibling element of.\n * @return {Element} The next sibling of `node` that is an element.\n */\ngoog.dom.DomHelper.prototype.getNextElementSibling =\n    goog.dom.getNextElementSibling;\n\n\n/**\n * Returns the first previous sibling that is an element.\n * @param {Node} node The node to get the previous sibling element of.\n * @return {Element} The first previous sibling of `node` that is\n *     an element.\n */\ngoog.dom.DomHelper.prototype.getPreviousElementSibling =\n    goog.dom.getPreviousElementSibling;\n\n\n/**\n * Returns the next node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The next node in the DOM tree, or null if this was the last\n *     node.\n */\ngoog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;\n\n\n/**\n * Returns the previous node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The previous node in the DOM tree, or null if this was the\n *     first node.\n */\ngoog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;\n\n\n/**\n * Whether the object looks like a DOM node.\n * @param {?} obj The object being tested for node likeness.\n * @return {boolean} Whether the object looks like a DOM node.\n */\ngoog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;\n\n\n/**\n * Whether the object looks like an Element.\n * @param {?} obj The object being tested for Element likeness.\n * @return {boolean} Whether the object looks like an Element.\n */\ngoog.dom.DomHelper.prototype.isElement = goog.dom.isElement;\n\n\n/**\n * Returns true if the specified value is a Window object. This includes the\n * global window for HTML pages, and iframe windows.\n * @param {?} obj Variable to test.\n * @return {boolean} Whether the variable is a window.\n */\ngoog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;\n\n\n/**\n * Returns an element's parent, if it's an Element.\n * @param {Element} element The DOM element.\n * @return {Element} The parent, or null if not an Element.\n */\ngoog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;\n\n\n/**\n * Whether a node contains another node.\n * @param {Node} parent The node that should contain the other node.\n * @param {Node} descendant The node to test presence of.\n * @return {boolean} Whether the parent node contains the descendent node.\n */\ngoog.dom.DomHelper.prototype.contains = goog.dom.contains;\n\n\n/**\n * Compares the document order of two nodes, returning 0 if they are the same\n * node, a negative number if node1 is before node2, and a positive number if\n * node2 is before node1.  Note that we compare the order the tags appear in the\n * document so in the tree <b><i>text</i></b> the B node is considered to be\n * before the I node.\n *\n * @param {Node} node1 The first node to compare.\n * @param {Node} node2 The second node to compare.\n * @return {number} 0 if the nodes are the same node, a negative number if node1\n *     is before node2, and a positive number if node2 is before node1.\n */\ngoog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;\n\n\n/**\n * Find the deepest common ancestor of the given nodes.\n * @param {...Node} var_args The nodes to find a common ancestor of.\n * @return {Node} The common ancestor of the nodes, or null if there is none.\n *     null will only be returned if two or more of the nodes are from different\n *     documents.\n */\ngoog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;\n\n\n/**\n * Returns the owner document for a node.\n * @param {Node} node The node to get the document for.\n * @return {!Document} The document owning the node.\n */\ngoog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;\n\n\n/**\n * Cross browser function for getting the document element of an iframe.\n * @param {Element} iframe Iframe element.\n * @return {!Document} The frame content document.\n */\ngoog.dom.DomHelper.prototype.getFrameContentDocument =\n    goog.dom.getFrameContentDocument;\n\n\n/**\n * Cross browser function for getting the window of a frame or iframe.\n * @param {Element} frame Frame element.\n * @return {Window} The window associated with the given frame.\n */\ngoog.dom.DomHelper.prototype.getFrameContentWindow =\n    goog.dom.getFrameContentWindow;\n\n\n/**\n * Sets the text content of a node, with cross-browser support.\n * @param {Node} node The node to change the text content of.\n * @param {string|number} text The value that should replace the node's content.\n */\ngoog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;\n\n\n/**\n * Gets the outerHTML of a node, which islike innerHTML, except that it\n * actually contains the HTML of the node itself.\n * @param {Element} element The element to get the HTML of.\n * @return {string} The outerHTML of the given element.\n */\ngoog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;\n\n\n/**\n * Finds the first descendant node that matches the filter function. This does\n * a depth first search.\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {Node|undefined} The found node or undefined if none is found.\n */\ngoog.dom.DomHelper.prototype.findNode = goog.dom.findNode;\n\n\n/**\n * Finds all the descendant nodes that matches the filter function. This does a\n * depth first search.\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {Array<Node>} The found nodes or an empty array if none are found.\n */\ngoog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;\n\n\n/**\n * Returns true if the element has a tab index that allows it to receive\n * keyboard focus (tabIndex >= 0), false otherwise.  Note that some elements\n * natively support keyboard focus, even if they have no tab index.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element has a tab index that allows keyboard\n *     focus.\n */\ngoog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;\n\n\n/**\n * Enables or disables keyboard focus support on the element via its tab index.\n * Only elements for which {@link goog.dom.isFocusableTabIndex} returns true\n * (or elements that natively support keyboard focus, like form elements) can\n * receive keyboard focus.  See http://go/tabindex for more info.\n * @param {Element} element Element whose tab index is to be changed.\n * @param {boolean} enable Whether to set or remove a tab index on the element\n *     that supports keyboard focus.\n */\ngoog.dom.DomHelper.prototype.setFocusableTabIndex =\n    goog.dom.setFocusableTabIndex;\n\n\n/**\n * Returns true if the element can be focused, i.e. it has a tab index that\n * allows it to receive keyboard focus (tabIndex >= 0), or it is an element\n * that natively supports keyboard focus.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element allows keyboard focus.\n */\ngoog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;\n\n\n/**\n * Returns the text contents of the current node, without markup. New lines are\n * stripped and whitespace is collapsed, such that each character would be\n * visible.\n *\n * In browsers that support it, innerText is used.  Other browsers attempt to\n * simulate it via node traversal.  Line breaks are canonicalized in IE.\n *\n * @param {Node} node The node from which we are getting content.\n * @return {string} The text content.\n */\ngoog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;\n\n\n/**\n * Returns the text length of the text contained in a node, without markup. This\n * is equivalent to the selection length if the node was selected, or the number\n * of cursor movements to traverse the node. Images & BRs take one space.  New\n * lines are ignored.\n *\n * @param {Node} node The node whose text content length is being calculated.\n * @return {number} The length of `node`'s text content.\n */\ngoog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;\n\n\n/**\n * Returns the text offset of a node relative to one of its ancestors. The text\n * length is the same as the length calculated by\n * `goog.dom.getNodeTextLength`.\n *\n * @param {Node} node The node whose offset is being calculated.\n * @param {Node=} opt_offsetParent Defaults to the node's owner document's body.\n * @return {number} The text offset.\n */\ngoog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;\n\n\n/**\n * Returns the node at a given offset in a parent node.  If an object is\n * provided for the optional third parameter, the node and the remainder of the\n * offset will stored as properties of this object.\n * @param {Node} parent The parent node.\n * @param {number} offset The offset into the parent node.\n * @param {Object=} opt_result Object to be used to store the return value. The\n *     return value will be stored in the form {node: Node, remainder: number}\n *     if this object is provided.\n * @return {Node} The node at the given offset.\n */\ngoog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;\n\n\n/**\n * Returns true if the object is a `NodeList`.  To qualify as a NodeList,\n * the object must have a numeric length property and an item function (which\n * has type 'string' on IE for some reason).\n * @param {Object} val Object to test.\n * @return {boolean} Whether the object is a NodeList.\n */\ngoog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * tag name and/or class name. If the passed element matches the specified\n * criteria, the element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {?(goog.dom.TagName<T>|string)=} opt_tag The tag name to match (or\n *     null/undefined to match only based on class name).\n * @param {?string=} opt_class The class name to match (or null/undefined to\n *     match only based on tag name).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {?R} The first ancestor that matches the passed criteria, or\n *     null if no match is found. The return type is {?Element} if opt_tag is\n *     not a member of goog.dom.TagName or a more specific type if it is (e.g.\n *     {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getAncestorByTagNameAndClass =\n    goog.dom.getAncestorByTagNameAndClass;\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * class name. If the passed element matches the specified criteria, the\n * element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {string} class The class name to match.\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Element} The first ancestor that matches the passed criteria, or\n *     null if none match.\n */\ngoog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that passes the\n * matcher function.\n * @param {Node} element The DOM node to start with.\n * @param {function(Node) : boolean} matcher A function that returns true if the\n *     passed node matches the desired criteria.\n * @param {boolean=} opt_includeNode If true, the node itself is included in\n *     the search (the first call to the matcher will pass startElement as\n *     the node to test).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Node} DOM node that matched the matcher, or null if there was\n *     no match.\n */\ngoog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;\n\n\n/**\n * Gets '2d' context of a canvas. Shortcut for canvas.getContext('2d') with a\n * type information.\n * @param {!HTMLCanvasElement} canvas\n * @return {!CanvasRenderingContext2D}\n */\ngoog.dom.DomHelper.prototype.getCanvasContext2D = goog.dom.getCanvasContext2D;\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview JSON utility functions.\n * @author arv@google.com (Erik Arvidsson)\n */\n\n\ngoog.provide('goog.json');\ngoog.provide('goog.json.Replacer');\ngoog.provide('goog.json.Reviver');\ngoog.provide('goog.json.Serializer');\n\n\n/**\n * @define {boolean} If true, use the native JSON parsing API.\n * NOTE: The default `goog.json.parse` implementation is able to handle\n * invalid JSON. JSPB used to produce invalid JSON which is not the case\n * anymore so this is safe to enable for parsing JSPB. Using native JSON is\n * faster and safer than the default implementation using `eval`.\n */\ngoog.define('goog.json.USE_NATIVE_JSON', false);\n\n/**\n * @define {boolean} If true, try the native JSON parsing API first. If it\n * fails, log an error and use `eval` instead. This is useful when\n * transitioning to `goog.json.USE_NATIVE_JSON`. The error logger needs to\n * be set by `goog.json.setErrorLogger`. If it is not set then the error\n * is ignored.\n */\ngoog.define('goog.json.TRY_NATIVE_JSON', false);\n\n\n/**\n * Tests if a string is an invalid JSON string. This only ensures that we are\n * not using any invalid characters\n * @param {string} s The string to test.\n * @return {boolean} True if the input is a valid JSON string.\n */\ngoog.json.isValid = function(s) {\n  // All empty whitespace is not valid.\n  if (/^\\s*$/.test(s)) {\n    return false;\n  }\n\n  // This is taken from http://www.json.org/json2.js which is released to the\n  // public domain.\n  // Changes: We dissallow \\u2028 Line separator and \\u2029 Paragraph separator\n  // inside strings.  We also treat \\u2028 and \\u2029 as whitespace which they\n  // are in the RFC but IE and Safari does not match \\s to these so we need to\n  // include them in the reg exps in all places where whitespace is allowed.\n  // We allowed \\x7f inside strings because some tools don't escape it,\n  // e.g. http://www.json.org/java/org/json/JSONObject.java\n\n  // Parsing happens in three stages. In the first stage, we run the text\n  // against regular expressions that look for non-JSON patterns. We are\n  // especially concerned with '()' and 'new' because they can cause invocation,\n  // and '=' because it can cause mutation. But just to be safe, we want to\n  // reject all unexpected forms.\n\n  // We split the first stage into 4 regexp operations in order to work around\n  // crippling inefficiencies in IE's and Safari's regexp engines. First we\n  // replace all backslash pairs with '@' (a non-JSON character). Second, we\n  // replace all simple value tokens with ']' characters, but only when followed\n  // by a colon, comma, closing bracket or end of string. Third, we delete all\n  // open brackets that follow a colon or comma or that begin the text. Finally,\n  // we look to see that the remaining characters are only whitespace or ']' or\n  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n  // Don't make these static since they have the global flag.\n  var backslashesRe = /\\\\[\"\\\\\\/bfnrtu]/g;\n  var simpleValuesRe =\n      /(?:\"[^\"\\\\\\n\\r\\u2028\\u2029\\x00-\\x08\\x0a-\\x1f]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)[\\s\\u2028\\u2029]*(?=:|,|]|}|$)/g;\n  var openBracketsRe = /(?:^|:|,)(?:[\\s\\u2028\\u2029]*\\[)+/g;\n  var remainderRe = /^[\\],:{}\\s\\u2028\\u2029]*$/;\n\n  return remainderRe.test(\n      s.replace(backslashesRe, '@')\n          .replace(simpleValuesRe, ']')\n          .replace(openBracketsRe, ''));\n};\n\n/**\n * Logs a parsing error in `JSON.parse` solvable by using `eval`\n * if `goog.json.TRY_NATIVE_JSON` is enabled.\n * @private {function(string, !Error)} The first parameter is the error message,\n *     the second is the exception thrown by `JSON.parse`.\n */\ngoog.json.errorLogger_ = goog.nullFunction;\n\n\n/**\n * Sets an error logger to use if there's a recoverable parsing error and\n * `goog.json.TRY_NATIVE_JSON` is enabled.\n * @param {function(string, !Error)} errorLogger The first parameter is the\n *     error message, the second is the exception thrown by `JSON.parse`.\n */\ngoog.json.setErrorLogger = function(errorLogger) {\n  goog.json.errorLogger_ = errorLogger;\n};\n\n\n/**\n * Parses a JSON string and returns the result. This throws an exception if\n * the string is an invalid JSON string.\n *\n * Note that this is very slow on large strings. Use JSON.parse if possible.\n *\n * @param {*} s The JSON string to parse.\n * @throws Error if s is invalid JSON.\n * @return {Object} The object generated from the JSON string, or null.\n * @deprecated Use JSON.parse.\n */\ngoog.json.parse = goog.json.USE_NATIVE_JSON ?\n    /** @type {function(*):Object} */ (goog.global['JSON']['parse']) :\n    function(s) {\n      var error;\n      if (goog.json.TRY_NATIVE_JSON) {\n        try {\n          return goog.global['JSON']['parse'](s);\n        } catch (ex) {\n          error = ex;\n        }\n      }\n      var o = String(s);\n      if (goog.json.isValid(o)) {\n\n        try {\n          var result = /** @type {?Object} */ (eval('(' + o + ')'));\n          if (error) {\n            goog.json.errorLogger_('Invalid JSON: ' + o, error);\n          }\n          return result;\n        } catch (ex) {\n        }\n      }\n      throw new Error('Invalid JSON string: ' + o);\n    };\n\n\n/**\n * JSON replacer, as defined in Section 15.12.3 of the ES5 spec.\n * @see http://ecma-international.org/ecma-262/5.1/#sec-15.12.3\n *\n * TODO(nicksantos): Array should also be a valid replacer.\n *\n * @typedef {function(this:Object, string, *): *}\n */\ngoog.json.Replacer;\n\n\n/**\n * JSON reviver, as defined in Section 15.12.2 of the ES5 spec.\n * @see http://ecma-international.org/ecma-262/5.1/#sec-15.12.3\n *\n * @typedef {function(this:Object, string, *): *}\n */\ngoog.json.Reviver;\n\n\n/**\n * Serializes an object or a value to a JSON string.\n *\n * @param {*} object The object to serialize.\n * @param {?goog.json.Replacer=} opt_replacer A replacer function\n *     called for each (key, value) pair that determines how the value\n *     should be serialized. By defult, this just returns the value\n *     and allows default serialization to kick in.\n * @throws Error if there are loops in the object graph.\n * @return {string} A JSON string representation of the input.\n */\ngoog.json.serialize = goog.json.USE_NATIVE_JSON ?\n    /** @type {function(*, ?goog.json.Replacer=):string} */\n    (goog.global['JSON']['stringify']) :\n    function(object, opt_replacer) {\n      // NOTE(nicksantos): Currently, we never use JSON.stringify.\n      //\n      // The last time I evaluated this, JSON.stringify had subtle bugs and\n      // behavior differences on all browsers, and the performance win was not\n      // large enough to justify all the issues. This may change in the future\n      // as browser implementations get better.\n      //\n      // assertSerialize in json_test contains if branches for the cases\n      // that fail.\n      return new goog.json.Serializer(opt_replacer).serialize(object);\n    };\n\n\n\n/**\n * Class that is used to serialize JSON objects to a string.\n * @param {?goog.json.Replacer=} opt_replacer Replacer.\n * @constructor\n */\ngoog.json.Serializer = function(opt_replacer) {\n  /**\n   * @type {goog.json.Replacer|null|undefined}\n   * @private\n   */\n  this.replacer_ = opt_replacer;\n};\n\n\n/**\n * Serializes an object or a value to a JSON string.\n *\n * @param {*} object The object to serialize.\n * @throws Error if there are loops in the object graph.\n * @return {string} A JSON string representation of the input.\n */\ngoog.json.Serializer.prototype.serialize = function(object) {\n  var sb = [];\n  this.serializeInternal(object, sb);\n  return sb.join('');\n};\n\n\n/**\n * Serializes a generic value to a JSON string\n * @protected\n * @param {*} object The object to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n * @throws Error if there are loops in the object graph.\n */\ngoog.json.Serializer.prototype.serializeInternal = function(object, sb) {\n  if (object == null) {\n    // undefined == null so this branch covers undefined as well as null\n    sb.push('null');\n    return;\n  }\n\n  if (typeof object == 'object') {\n    if (goog.isArray(object)) {\n      this.serializeArray(object, sb);\n      return;\n    } else if (\n        object instanceof String || object instanceof Number ||\n        object instanceof Boolean) {\n      object = object.valueOf();\n      // Fall through to switch below.\n    } else {\n      this.serializeObject_(/** @type {!Object} */ (object), sb);\n      return;\n    }\n  }\n\n  switch (typeof object) {\n    case 'string':\n      this.serializeString_(object, sb);\n      break;\n    case 'number':\n      this.serializeNumber_(object, sb);\n      break;\n    case 'boolean':\n      sb.push(String(object));\n      break;\n    case 'function':\n      sb.push('null');\n      break;\n    default:\n      throw new Error('Unknown type: ' + typeof object);\n  }\n};\n\n\n/**\n * Character mappings used internally for goog.string.quote\n * @private\n * @type {!Object}\n */\ngoog.json.Serializer.charToJsonCharCache_ = {\n  '\\\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  '/': '\\\\/',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n\n  '\\x0B': '\\\\u000b'  // '\\v' is not supported in JScript\n};\n\n\n/**\n * Regular expression used to match characters that need to be replaced.\n * The S60 browser has a bug where unicode characters are not matched by\n * regular expressions. The condition below detects such behaviour and\n * adjusts the regular expression accordingly.\n * @private\n * @type {!RegExp}\n */\ngoog.json.Serializer.charsToReplace_ = /\\uffff/.test('\\uffff') ?\n    /[\\\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g :\n    /[\\\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\n\n\n/**\n * Serializes a string to a JSON string\n * @private\n * @param {string} s The string to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n */\ngoog.json.Serializer.prototype.serializeString_ = function(s, sb) {\n  // The official JSON implementation does not work with international\n  // characters.\n  sb.push('\"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {\n    // caching the result improves performance by a factor 2-3\n    var rv = goog.json.Serializer.charToJsonCharCache_[c];\n    if (!rv) {\n      rv = '\\\\u' + (c.charCodeAt(0) | 0x10000).toString(16).substr(1);\n      goog.json.Serializer.charToJsonCharCache_[c] = rv;\n    }\n    return rv;\n  }), '\"');\n};\n\n\n/**\n * Serializes a number to a JSON string\n * @private\n * @param {number} n The number to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n */\ngoog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {\n  sb.push(isFinite(n) && !isNaN(n) ? String(n) : 'null');\n};\n\n\n/**\n * Serializes an array to a JSON string\n * @param {Array<string>} arr The array to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n * @protected\n */\ngoog.json.Serializer.prototype.serializeArray = function(arr, sb) {\n  var l = arr.length;\n  sb.push('[');\n  var sep = '';\n  for (var i = 0; i < l; i++) {\n    sb.push(sep);\n\n    var value = arr[i];\n    this.serializeInternal(\n        this.replacer_ ? this.replacer_.call(arr, String(i), value) : value,\n        sb);\n\n    sep = ',';\n  }\n  sb.push(']');\n};\n\n\n/**\n * Serializes an object to a JSON string\n * @private\n * @param {!Object} obj The object to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n */\ngoog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {\n  sb.push('{');\n  var sep = '';\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var value = obj[key];\n      // Skip functions.\n      if (typeof value != 'function') {\n        sb.push(sep);\n        this.serializeString_(key, sb);\n        sb.push(':');\n\n        this.serializeInternal(\n            this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);\n\n        sep = ',';\n      }\n    }\n  }\n  sb.push('}');\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines utility and helper functions.\n */\n\ngoog.provide('fireauth.util');\n\ngoog.require('goog.Promise');\ngoog.require('goog.Timer');\ngoog.require('goog.Uri');\ngoog.require('goog.dom');\ngoog.require('goog.events');\ngoog.require('goog.events.EventType');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.json');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.userAgent');\ngoog.require('goog.window');\n\n\n/** @suppress {duplicate} Suppress variable 'angular' first declared. */\nvar angular;\n\n/**\n * Checks whether the user agent is IE11.\n * @return {boolean} True if it is IE11.\n */\nfireauth.util.isIe11 = function() {\n  return goog.userAgent.IE &&\n      !!goog.userAgent.DOCUMENT_MODE &&\n      goog.userAgent.DOCUMENT_MODE == 11;\n};\n\n\n/**\n * Checks whether the user agent is IE10.\n * @return {boolean} True if it is IE10.\n */\nfireauth.util.isIe10 = function() {\n  return goog.userAgent.IE &&\n      !!goog.userAgent.DOCUMENT_MODE &&\n      goog.userAgent.DOCUMENT_MODE == 10;\n};\n\n\n/**\n * Checks whether the user agent is Edge.\n * @param {string} userAgent The browser user agent string.\n * @return {boolean} True if it is Edge.\n */\nfireauth.util.isEdge = function(userAgent) {\n  return /Edge\\/\\d+/.test(userAgent);\n};\n\n\n/**\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {boolean} Whether local storage is not synchronized between an iframe\n *     and a popup of the same domain.\n */\nfireauth.util.isLocalStorageNotSynchronized = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  return fireauth.util.isIe11() || fireauth.util.isEdge(ua);\n};\n\n\n/** @return {string} The current URL. */\nfireauth.util.getCurrentUrl = function() {\n  return (goog.global['window'] && goog.global['window']['location']['href']) ||\n      // Check for worker environments.\n      (self && self['location'] && self['location']['href']) || '';\n};\n\n\n/**\n * @param {string} requestUri The request URI to send in verifyAssertion\n *     request.\n * @return {string} The sanitized URI, in this case it undoes the hashbang\n *     angularJs routing changes to request URI.\n */\nfireauth.util.sanitizeRequestUri = function(requestUri) {\n  // If AngularJS is included.\n  if (typeof angular != 'undefined') {\n    // Remove hashbang modifications from URL.\n    requestUri = requestUri.replace('#/', '#').replace('#!/', '#');\n  }\n  return requestUri;\n};\n\n\n/**\n * @param {?string} url The target URL. When !url, redirects to a blank page.\n * @param {!Window=} opt_window The optional window to redirect to target URL.\n * @param {boolean=} opt_bypassCheck Whether to bypass check. Used for custom\n *     scheme redirects.\n */\nfireauth.util.goTo = function(url, opt_window, opt_bypassCheck) {\n  var win = opt_window || goog.global['window'];\n  // No URL, redirect to blank page.\n  var finalUrl = 'about:blank';\n  // Popping up a window and then assigning its URL seems to cause some weird\n  // error. Fixed by setting win.location.href for now in IE browsers.\n  // Bug was detected in Edge and IE9.\n  if (url && !opt_bypassCheck) {\n    // We cannot use goog.dom.safe.setLocationHref since it tries to read\n    // popup.location from a different origin, which is an error in IE.\n    // (In Chrome, popup.location is just an empty Location object)\n    finalUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));\n  }\n  win.location.href = finalUrl;\n};\n\n\n/**\n * @param {string} url The target URL.\n * @param {!Window=} opt_window The optional window to replace with target URL.\n * @param {boolean=} opt_bypassCheck Whether to bypass check. Used for custom\n *     scheme redirects.\n */\nfireauth.util.replaceCurrentUrl = function(url, opt_window, opt_bypassCheck) {\n  var win = opt_window || goog.global['window'];\n  if (!opt_bypassCheck) {\n    win.location.replace(\n        goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url)));\n  } else {\n    win.location.replace(url);\n  }\n};\n\n\n/**\n * Deep comparison of two objects.\n * @param {!Object} a The first object.\n * @param {!Object} b The second object.\n * @return {!Array<string>} The list of keys that are different between both\n *     objects provided.\n */\nfireauth.util.getKeyDiff = function(a, b) {\n  var diff = [];\n  for (var k in a) {\n    if (!(k in b)) {\n      diff.push(k);\n    } else if (typeof a[k] != typeof b[k]) {\n      diff.push(k);\n    } else if (typeof a[k] == 'object' && a[k] != null && b[k] != null) {\n      if (fireauth.util.getKeyDiff(\n          a[k], b[k]).length > 0) {\n        diff.push(k);\n      }\n    } else if (a[k] !== b[k]) {\n      diff.push(k);\n    }\n  }\n  for (var k in b) {\n    if (!(k in a)) {\n      diff.push(k);\n    }\n  }\n  return diff;\n};\n\n\n/**\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {?number} The Chrome version, null if the user agent is not Chrome.\n */\nfireauth.util.getChromeVersion = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  var browserName = fireauth.util.getBrowserName(ua);\n  // Confirm current browser is Chrome.\n  if (browserName != fireauth.util.BrowserName.CHROME) {\n    return null;\n  }\n  var matches = ua.match(/\\sChrome\\/(\\d+)/i);\n  if (matches && matches.length == 2) {\n    return parseInt(matches[1], 10);\n  }\n  return null;\n};\n\n\n/**\n * Detects CORS support.\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {boolean} True if the browser supports CORS.\n */\nfireauth.util.supportsCors = function(opt_userAgent) {\n  // Chrome 7 has CORS issues, pick 30 as upper limit.\n  var chromeVersion = fireauth.util.getChromeVersion(opt_userAgent);\n  if (chromeVersion && chromeVersion < 30) {\n    return false;\n  }\n  // Among all other supported browsers, only IE8 and IE9 don't support CORS.\n  return !goog.userAgent.IE || // Not IE.\n      !goog.userAgent.DOCUMENT_MODE || // No document mode == IE Edge.\n      goog.userAgent.DOCUMENT_MODE > 9;\n};\n\n\n/**\n * Detects whether browser is running on a mobile device.\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {boolean} True if the browser is running on a mobile device.\n */\nfireauth.util.isMobileBrowser = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  var uaLower = ua.toLowerCase();\n  // TODO: implement getBrowserName equivalent for OS.\n  if (uaLower.match(/android/) ||\n      uaLower.match(/webos/) ||\n      uaLower.match(/iphone|ipad|ipod/) ||\n      uaLower.match(/blackberry/) ||\n      uaLower.match(/windows phone/) ||\n      uaLower.match(/iemobile/)) {\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Closes the provided window.\n * @param {?Window=} opt_window The optional window to close. The current window\n *     is used if none is provided.\n */\nfireauth.util.closeWindow = function(opt_window) {\n  var win = opt_window || goog.global['window'];\n  // In some browsers, in certain cases after the window closes, as seen in\n  // Samsung Galaxy S3 Android 4.4.2 stock browser, the win object here is an\n  // empty object {}. Try to catch the failure and ignore it.\n  try {\n    win.close();\n  } catch(e) {}\n};\n\n\n/**\n * Opens a popup window.\n * @param {?string=} opt_url initial URL of the popup window\n * @param {string=} opt_name title of the popup\n * @param {?number=} opt_width width of the popup\n * @param {?number=} opt_height height of the popup\n * @return {?Window} Returns the window object that was opened. This returns\n *                   null if a popup blocker prevented the window from being\n *                   opened.\n */\nfireauth.util.popup = function(opt_url, opt_name, opt_width, opt_height) {\n  var width = opt_width || 500;\n  var height = opt_height || 600;\n  var top = (window.screen.availHeight - height) / 2;\n  var left = (window.screen.availWidth - width) / 2;\n  var options = {\n    'width': width,\n    'height': height,\n    'top': top > 0 ? top : 0,\n    'left': left > 0 ? left : 0,\n    'location': true,\n    'resizable': true,\n    'statusbar': true,\n    'toolbar': false\n  };\n  // Chrome iOS 7 and 8 is returning an undefined popup win when target is\n  // specified, even though the popup is not necessarily blocked.\n  var ua = fireauth.util.getUserAgentString().toLowerCase();\n  if (opt_name) {\n    options['target'] = opt_name;\n    // This will force a new window on each call, achieving the same effect as\n    // passing a random name on each call.\n    if (goog.string.contains(ua, 'crios/')) {\n      options['target'] = '_blank';\n    }\n  }\n  var browserName = fireauth.util.getBrowserName(\n      fireauth.util.getUserAgentString());\n  if (browserName == fireauth.util.BrowserName.FIREFOX) {\n    // Firefox complains when invalid URLs are popped out. Hacky way to bypass.\n    opt_url = opt_url || 'http://localhost';\n    // Firefox disables by default scrolling on popup windows, which can create\n    // issues when the user has many Google accounts, for instance.\n    options['scrollbars'] = true;\n  }\n  // about:blank getting sanitized causing browsers like IE/Edge to display\n  // brief error message before redirecting to handler.\n  var newWin = goog.window.open(opt_url || '', options);\n  if (newWin) {\n    // Flaky on IE edge, encapsulate with a try and catch.\n    try {\n      newWin.focus();\n    } catch (e) {}\n  }\n  return newWin;\n};\n\n\n/**\n * The default value for the popup wait cycle in ms.\n * @const {number}\n * @private\n */\nfireauth.util.POPUP_WAIT_CYCLE_MS_ = 2000;\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether the popup requires a delay before closing itself.\n */\nfireauth.util.requiresPopupDelay = function(opt_userAgent) {\n  // TODO: remove this hack when CriOS behavior is fixed in iOS.\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  // Was observed in iOS 10.2 Chrome version 55.0.2883.79.\n  // Apply to Chrome 55+ iOS 10+ to ensure future Chrome versions or iOS 10\n  // minor updates do not suddenly resurface this bug. Revisit this check on\n  // next CriOS update.\n  var matches = ua.match(/OS (\\d+)_.*CriOS\\/(\\d+)\\./i);\n  if (matches && matches.length > 2) {\n    // iOS 10+ && chrome 55+.\n    return parseInt(matches[1], 10) >= 10 && parseInt(matches[2], 10) >= 55;\n  }\n  return false;\n};\n\n\n/**\n * @param {?Window} win The popup window to check.\n * @param {number=} opt_stepDuration The duration of each wait cycle before\n *     checking that window is closed.\n * @return {!goog.Promise<undefined>} The promise to resolve when window is\n *     closed.\n */\nfireauth.util.onPopupClose = function(win, opt_stepDuration) {\n  var stepDuration = opt_stepDuration || fireauth.util.POPUP_WAIT_CYCLE_MS_;\n  return new goog.Promise(function(resolve, reject) {\n    // Function to repeat each stepDuration.\n    var repeat = function() {\n      goog.Timer.promise(stepDuration).then(function() {\n        // After wait, check if window is closed.\n        if (!win || win.closed) {\n          // If so, resolve.\n          resolve();\n        } else {\n          // Call repeat again.\n          return repeat();\n        }\n      });\n    };\n    return repeat();\n  });\n};\n\n\n/**\n * @param {!Array<string>} authorizedDomains List of authorized domains.\n * @param {string} url The URL to check.\n * @return {boolean} Whether the passed domain is an authorized one.\n */\nfireauth.util.isAuthorizedDomain = function(authorizedDomains, url) {\n  var uri = goog.Uri.parse(url);\n  var scheme = uri.getScheme();\n  var domain = uri.getDomain();\n  for (var i = 0; i < authorizedDomains.length; i++) {\n    // Currently this corresponds to: domain.com = *://*.domain.com:* or\n    // exact domain match.\n    // In the case of Chrome extensions, the authorizedDomain will be formatted\n    // as 'chrome-extension://abcdefghijklmnopqrstuvwxyz123456'.\n    // The URL to check must have a chrome extension scheme and the domain\n    // must be an exact match domain == 'abcdefghijklmnopqrstuvwxyz123456'.\n    if (fireauth.util.matchDomain(authorizedDomains[i], domain, scheme)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Represents the dimensions of an entity (width and height).\n * @typedef {{\n *   width: number,\n *   height: number\n * }}\n */\nfireauth.util.Dimensions;\n\n\n/**\n * @param {?Window=} opt_window The optional window whose dimensions are to be\n *     returned. The current window is used if not found.\n * @return {?fireauth.util.Dimensions} The requested window dimensions if\n *     available.\n */\nfireauth.util.getWindowDimensions = function(opt_window) {\n  var win = opt_window || goog.global['window'];\n  if (win && win['innerWidth'] && win['innerHeight']) {\n    return {\n      'width': parseFloat(win['innerWidth']),\n      'height': parseFloat(win['innerHeight'])\n    };\n  }\n  return null;\n};\n\n\n/**\n * RegExp to detect if the domain given is an IP address. This is only used\n * for validating http and https schemes.\n *\n * It does not strictly validate if the IP is a real IP address, but as the\n * matchDomain method tests against a set of valid domains (extracted from the\n * window's current URL), it is sufficient.\n *\n * @const {!RegExp}\n * @private\n */\nfireauth.util.IP_ADDRESS_REGEXP_ = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\n\n\n/**\n * @param {string} domainPattern The domain pattern to match.\n * @param {string} domain The domain to check. It is assumed that it is a valid\n *     domain, not a user provided one.\n * @param {string} scheme The scheme of the domain to check.\n * @return {boolean} Whether the provided domain matches the domain pattern.\n */\nfireauth.util.matchDomain = function(domainPattern, domain, scheme) {\n  // Chrome extension matching.\n  if (domainPattern.indexOf('chrome-extension://') == 0) {\n    var chromeExtUri = goog.Uri.parse(domainPattern);\n    // Domain must match and the current scheme must be a Chrome extension.\n    return chromeExtUri.getDomain() == domain && scheme == 'chrome-extension';\n  } else if (scheme != 'http' && scheme != 'https') {\n    // Any other scheme that is not http or https cannot be whitelisted.\n    return false;\n  } else {\n    // domainPattern must not contain a scheme and the current scheme must be\n    // either http or https.\n    // Check if authorized domain pattern is an IP address.\n    if (fireauth.util.IP_ADDRESS_REGEXP_.test(domainPattern)) {\n      // The domain has to be exactly equal to the pattern, as an IP domain will\n      // only contain the IP, no extra character.\n      return domain == domainPattern;\n    }\n    // Dots in pattern should be escaped.\n    var escapedDomainPattern = domainPattern.split('.').join('\\\\.');\n    // Non ip address domains.\n    // domain.com = *.domain.com OR domain.com\n    var re = new RegExp(\n        '^(.+\\\\.' + escapedDomainPattern + '|' +\n        escapedDomainPattern + ')$', 'i');\n    return re.test(domain);\n  }\n};\n\n\n/**\n * RegExp to detect if the email address given is valid.\n * @const {!RegExp}\n * @private\n */\nfireauth.util.EMAIL_ADDRESS_REGEXP_ = /^[^@]+@[^@]+$/;\n\n\n/**\n * Determines if it is a valid email address.\n * @param {*} email The email address.\n * @return {boolean} Whether the email address is valid.\n */\nfireauth.util.isValidEmailAddress = function(email) {\n  return goog.isString(email) &&\n      fireauth.util.EMAIL_ADDRESS_REGEXP_.test(email);\n};\n\n\n/**\n * @return {!goog.Promise<void>} A promise that resolves when DOM is ready.\n */\nfireauth.util.onDomReady = function() {\n  var resolver = null;\n  return new goog.Promise(function(resolve, reject) {\n    var doc = goog.global.document;\n    // If document already loaded, resolve immediately.\n    if (doc.readyState == 'complete') {\n      resolve();\n    } else {\n      // Document not ready, wait for load before resolving.\n      // Save resolver, so we can remove listener in case it was externally\n      // cancelled.\n      resolver = function() {\n        resolve();\n      };\n      goog.events.listenOnce(window, goog.events.EventType.LOAD, resolver);\n    }\n  }).thenCatch(function(error) {\n    // In case this promise was cancelled, make sure it unlistens to load.\n    goog.events.unlisten(window, goog.events.EventType.LOAD, resolver);\n    throw error;\n  });\n};\n\n\n/** @return {boolean} Whether environment supports DOM. */\nfireauth.util.isDOMSupported = function() {\n  return !!goog.global.document;\n};\n\n\n/**\n * The default ondeviceready Cordova timeout in ms.\n * @const {number}\n * @private\n */\nfireauth.util.CORDOVA_ONDEVICEREADY_TIMEOUT_MS_ = 1000;\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @param {number=} opt_timeout The optional timeout in ms for deviceready\n *     event to resolve.\n * @return {!goog.Promise} A promise that resolves if the current environment is\n *     a Cordova environment.\n */\nfireauth.util.checkIfCordova = function(opt_userAgent, opt_timeout) {\n  // Errors generated are internal and should be converted if needed to\n  // developer facing Firebase errors.\n  // Only supported in Android/iOS environment.\n  if (fireauth.util.isAndroidOrIosFileEnvironment(opt_userAgent)) {\n    return fireauth.util.onDomReady().then(function() {\n      return new goog.Promise(function(resolve, reject) {\n        var doc = goog.global.document;\n        var timeoutId = setTimeout(function() {\n          reject(new Error('Cordova framework is not ready.'));\n        }, opt_timeout || fireauth.util.CORDOVA_ONDEVICEREADY_TIMEOUT_MS_);\n        // This should resolve immediately after DOM ready.\n        doc.addEventListener('deviceready', function() {\n          clearTimeout(timeoutId);\n          resolve();\n        }, false);\n      });\n    });\n  }\n  return goog.Promise.reject(\n      new Error('Cordova must run in an Android or iOS file scheme.'));\n};\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android file\n *     environment.\n */\nfireauth.util.isAndroidOrIosFileEnvironment = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  return !!(fireauth.util.getCurrentScheme() === 'file:' &&\n            ua.toLowerCase().match(/iphone|ipad|ipod|android/));\n};\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether the app is rendered in a mobile iOS 7 or 8 browser.\n */\nfireauth.util.isIOS7Or8 = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  return !!(ua.match(/(iPad|iPhone|iPod).*OS 7_\\d/i) ||\n            ua.match(/(iPad|iPhone|iPod).*OS 8_\\d/i));\n};\n\n\n/**\n * @return {boolean} Whether browser is Safari or an iOS browser and page is\n *     embedded in an iframe. Local Storage does not synchronize with an iframe\n *     embedded on a page in a different domain but will still trigger storage\n *     event with storage changes.\n */\nfireauth.util.isSafariLocalStorageNotSynced = function() {\n  var ua = fireauth.util.getUserAgentString();\n  // Safari or iOS browser and embedded in an iframe.\n  if (!fireauth.util.iframeCanSyncWebStorage(ua) && fireauth.util.isIframe()) {\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {?Window=} opt_win Optional window to check whether it is an iframe.\n *     If not provided, the current window is checked.\n * @return {boolean} Whether web page is running in an iframe.\n */\nfireauth.util.isIframe = function(opt_win) {\n  var win = opt_win || goog.global['window'];\n  try {\n    // Check that the current window is not the top window.\n    // If so, return true.\n    return !!(win && win != win['top']);\n  } catch (e) {\n    return false;\n  }\n};\n\n\n/**\n * @param {?Window=} opt_win Optional window to check whether it has an opener\n *     that is an iframe.\n * @return {boolean} Whether the web page was opened from an iframe.\n */\nfireauth.util.isOpenerAnIframe = function(opt_win) {\n  var win = opt_win || goog.global['window'];\n  try {\n    // Get the opener if available.\n    var opener = win && win['opener'];\n    // Check if the opener is an iframe. If so, return true.\n    // Confirm opener is available, otherwise the current window is checked\n    // instead.\n    return !!(opener && fireauth.util.isIframe(opener));\n  } catch (e) {\n    return false;\n  }\n};\n\n\n/**\n * @param {?Object=} opt_global The optional global scope.\n * @return {boolean} Whether current environment is a worker.\n */\nfireauth.util.isWorker = function(opt_global) {\n  var scope = opt_global || goog.global;\n  return typeof scope['window'] !== 'object' &&\n         typeof scope['importScripts'] === 'function';\n};\n\n\n/**\n * @param {?Object=} opt_global The optional global scope.\n * @return {boolean} Whether current environment supports fetch API and other\n *     APIs it depends on.\n */\nfireauth.util.isFetchSupported = function(opt_global) {\n  // Required by fetch API calls.\n  var scope = opt_global || goog.global;\n  return typeof scope['fetch'] !== 'undefined' &&\n         typeof scope['Headers'] !== 'undefined' &&\n         typeof scope['Request'] !== 'undefined';\n};\n\n\n/**\n * Enum for the runtime environment.\n * @enum {string}\n */\nfireauth.util.Env = {\n  BROWSER: 'Browser',\n  NODE: 'Node',\n  REACT_NATIVE: 'ReactNative',\n  WORKER: 'Worker'\n};\n\n\n/**\n * @return {!fireauth.util.Env} The current runtime environment.\n */\nfireauth.util.getEnvironment = function() {\n  if (firebase.INTERNAL.hasOwnProperty('reactNative')) {\n    return fireauth.util.Env.REACT_NATIVE;\n  } else if (firebase.INTERNAL.hasOwnProperty('node')) {\n    // browserify seems to keep the process property in some cases even though\n    // the library is browser only. Use this check instead to reliably detect\n    // a Node.js environment.\n    return fireauth.util.Env.NODE;\n  } else if (fireauth.util.isWorker()) {\n    // Worker environment.\n    return fireauth.util.Env.WORKER;\n  }\n  // The default is a browser environment.\n  return fireauth.util.Env.BROWSER;\n};\n\n\n/**\n * @return {boolean} Whether the environment is a native environment, where\n *     CORS checks do not apply.\n */\nfireauth.util.isNativeEnvironment = function() {\n  var environment = fireauth.util.getEnvironment();\n  return environment === fireauth.util.Env.REACT_NATIVE ||\n      environment === fireauth.util.Env.NODE;\n};\n\n\n/**\n * The separator for storage keys to concatenate App name and API key.\n * @const {string}\n * @private\n */\nfireauth.util.STORAGE_KEY_SEPARATOR_ = ':';\n\n\n/**\n * @param {string} apiKey The API Key of the app.\n * @param {string} appName The App name.\n * @return {string} The key used for identifying the app owner of the user.\n */\nfireauth.util.createStorageKey = function(apiKey, appName) {\n  return apiKey + fireauth.util.STORAGE_KEY_SEPARATOR_ + appName;\n};\n\n\n/** @return {string} a long random character string. */\nfireauth.util.generateRandomString = function() {\n  return Math.floor(Math.random() * 1000000000).toString();\n};\n\n\n/**\n * Generates a random alpha numeric string.\n * @param {number} numOfChars The number of random characters within the string.\n * @return {string} A string with a specific number of random characters.\n */\nfireauth.util.generateRandomAlphaNumericString = function(numOfChars) {\n  var chars = [];\n  var allowedChars =\n      '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  while (numOfChars > 0) {\n    chars.push(\n        allowedChars.charAt(\n            Math.floor(Math.random() * allowedChars.length)));\n    numOfChars--;\n  }\n  return chars.join('');\n};\n\n\n/**\n * Enums for Browser name.\n * @enum {string}\n */\nfireauth.util.BrowserName = {\n  ANDROID: 'Android',\n  BLACKBERRY: 'Blackberry',\n  EDGE: 'Edge',\n  FIREFOX: 'Firefox',\n  IE: 'IE',\n  IEMOBILE: 'IEMobile',\n  OPERA: 'Opera',\n  OTHER: 'Other',\n  CHROME: 'Chrome',\n  SAFARI: 'Safari',\n  SILK: 'Silk',\n  WEBOS: 'Webos'\n};\n\n\n/**\n * @param {string} userAgent The navigator user agent string.\n * @return {string} The browser name, eg Safari, Firefox, etc.\n */\nfireauth.util.getBrowserName = function(userAgent) {\n  var ua = userAgent.toLowerCase();\n  if (goog.string.contains(ua, 'opera/') ||\n      goog.string.contains(ua, 'opr/') ||\n      goog.string.contains(ua, 'opios/')) {\n    return fireauth.util.BrowserName.OPERA;\n  } else if (goog.string.contains(ua, 'iemobile')) {\n    // Windows phone IEMobile browser.\n    return fireauth.util.BrowserName.IEMOBILE;\n  } else if (goog.string.contains(ua, 'msie') ||\n             goog.string.contains(ua, 'trident/')) {\n    return fireauth.util.BrowserName.IE;\n  } else if (goog.string.contains(ua, 'edge/')) {\n    return fireauth.util.BrowserName.EDGE;\n  } else if (goog.string.contains(ua, 'firefox/')) {\n    return fireauth.util.BrowserName.FIREFOX;\n  } else if (goog.string.contains(ua, 'silk/')) {\n    return fireauth.util.BrowserName.SILK;\n  } else if (goog.string.contains(ua, 'blackberry')) {\n    // Blackberry browser.\n    return fireauth.util.BrowserName.BLACKBERRY;\n  } else if (goog.string.contains(ua, 'webos')) {\n    // WebOS default browser.\n    return fireauth.util.BrowserName.WEBOS;\n  } else if (goog.string.contains(ua, 'safari/') &&\n             !goog.string.contains(ua, 'chrome/') &&\n             !goog.string.contains(ua, 'crios/') &&\n             !goog.string.contains(ua, 'android')) {\n    return fireauth.util.BrowserName.SAFARI;\n  } else if ((goog.string.contains(ua, 'chrome/') ||\n              goog.string.contains(ua, 'crios/')) &&\n             !goog.string.contains(ua, 'edge/')) {\n    return fireauth.util.BrowserName.CHROME;\n  } else if (goog.string.contains(ua, 'android')) {\n    // Android stock browser.\n    return fireauth.util.BrowserName.ANDROID;\n  } else {\n    // Most modern browsers have name/version at end of user agent string.\n    var re = new RegExp('([a-zA-Z\\\\d\\\\.]+)\\/[a-zA-Z\\\\d\\\\.]*$');\n    var matches = userAgent.match(re);\n    if (matches && matches.length == 2) {\n      return matches[1];\n    }\n  }\n  return fireauth.util.BrowserName.OTHER;\n};\n\n\n/**\n * Enums for client implementation name.\n * @enum {string}\n */\nfireauth.util.ClientImplementation = {\n  JSCORE: 'JsCore',\n  OAUTH_HANDLER: 'Handler',\n  OAUTH_IFRAME: 'Iframe'\n};\n\n\n/**\n * Enums for the framework ID to be logged in RPC header.\n * Future frameworks to possibly add: angularfire, polymerfire, reactfire, etc.\n * @enum {string}.\n */\nfireauth.util.Framework = {\n  // No other framework used.\n  DEFAULT: 'FirebaseCore-web',\n  // Firebase Auth used with FirebaseUI-web.\n  FIREBASEUI: 'FirebaseUI-web'\n};\n\n\n/**\n * @param {!Array<string>} providedFrameworks List of framework ID strings.\n * @return {!Array<!fireauth.util.Framework>} List of supported framework IDs\n *     with no duplicates.\n */\nfireauth.util.getFrameworkIds = function(providedFrameworks) {\n  var frameworkVersion = [];\n  var frameworkSet = {};\n  for (var key in fireauth.util.Framework) {\n    frameworkSet[fireauth.util.Framework[key]] = true;\n  }\n  for (var i = 0; i < providedFrameworks.length; i++) {\n    if (typeof frameworkSet[providedFrameworks[i]] !== 'undefined') {\n      // Delete it from set to prevent duplications.\n      delete frameworkSet[providedFrameworks[i]];\n      frameworkVersion.push(providedFrameworks[i]);\n    }\n  }\n  // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\n  // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\n  frameworkVersion.sort();\n  return frameworkVersion;\n};\n\n\n/**\n * @param {!fireauth.util.ClientImplementation} clientImplementation The client\n *     implementation.\n * @param {string} clientVersion The client version.\n * @param {?Array<string>=} opt_frameworkVersion The framework version.\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {string} The full client SDK version.\n */\nfireauth.util.getClientVersion = function(clientImplementation, clientVersion,\n    opt_frameworkVersion, opt_userAgent) {\n  var frameworkVersion = fireauth.util.getFrameworkIds(\n      opt_frameworkVersion || []);\n  if (!frameworkVersion.length) {\n    frameworkVersion = [fireauth.util.Framework.DEFAULT];\n  }\n  var environment = fireauth.util.getEnvironment();\n  var reportedEnvironment = '';\n  if (environment === fireauth.util.Env.BROWSER) {\n    // In a browser environment, report the browser name.\n    var userAgent = opt_userAgent || fireauth.util.getUserAgentString();\n    reportedEnvironment = fireauth.util.getBrowserName(userAgent);\n  } else if (environment === fireauth.util.Env.WORKER) {\n    // Technically a worker runs from a browser but we need to differentiate a\n    // worker from a browser.\n    // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\n    var userAgent = opt_userAgent || fireauth.util.getUserAgentString();\n    reportedEnvironment = fireauth.util.getBrowserName(userAgent) + '-' +\n        environment;\n  } else {\n    // Otherwise, just report the environment name.\n    reportedEnvironment = environment;\n  }\n  // The format to be followed:\n  // ${browserName}/${clientImplementation}/${clientVersion}/${frameworkVersion}\n  // As multiple Firebase frameworks/libraries can be used, join their IDs with\n  // a comma.\n  return reportedEnvironment + '/' + clientImplementation +\n      '/' + clientVersion + '/' + frameworkVersion.join(',');\n};\n\n\n/**\n * @return {string} The user agent string reported by the environment, or the\n *     empty string if not available.\n */\nfireauth.util.getUserAgentString = function() {\n  return (goog.global['navigator'] && goog.global['navigator']['userAgent']) ||\n      '';\n};\n\n\n/**\n * @param {string} varStrName The variable string name.\n * @param {?Object=} opt_scope The optional scope where to look in. The default\n *     is window.\n * @return {*} The reference if found.\n */\nfireauth.util.getObjectRef = function(varStrName, opt_scope) {\n  var pieces = varStrName.split('.');\n  var last = opt_scope || goog.global;\n  for (var i = 0;\n       i < pieces.length && typeof last == 'object' && last != null;\n       i++) {\n    last = last[pieces[i]];\n  }\n  // Last hasn't reached the end yet, return undefined.\n  if (i != pieces.length) {\n    last = undefined;\n  }\n  return last;\n};\n\n\n/** @return {boolean} Whether web storage is supported. */\nfireauth.util.isWebStorageSupported = function() {\n  try {\n    var storage = goog.global['localStorage'];\n    var key = fireauth.util.generateEventId();\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n      // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n      if (fireauth.util.isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return !!goog.global['indexedDB'];\n      }\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return fireauth.util.isWorker() && !!goog.global['indexedDB'];\n  }\n  return false;\n};\n\n\n/**\n * This guards against leaking Cordova support before official launch.\n * This field will be removed or updated to return true when the new feature is\n * ready for launch.\n * @return {boolean} Whether Cordova OAuth support is enabled.\n */\nfireauth.util.isCordovaOAuthEnabled = function() {\n  return false;\n};\n\n\n/**\n * @return {boolean} Whether popup and redirect operations are supported in the\n *     current environment.\n */\nfireauth.util.isPopupRedirectSupported = function() {\n  // Popup and redirect are supported in an environment where the container\n  // origin can be securely whitelisted.\n  return (fireauth.util.isHttpOrHttps() ||\n          fireauth.util.isChromeExtension() ||\n          fireauth.util.isAndroidOrIosFileEnvironment()) &&\n         // React Native with remote debugging reports its location.protocol as\n         // http.\n         !fireauth.util.isNativeEnvironment() &&\n         // Local storage has to be supported for browser popup and redirect\n         // operations to work.\n         fireauth.util.isWebStorageSupported() &&\n         // DOM, popups and redirects are not supported within a worker.\n         !fireauth.util.isWorker();\n};\n\n\n/**\n * @return {boolean} Whether the current environment is http or https.\n */\nfireauth.util.isHttpOrHttps = function() {\n  return fireauth.util.getCurrentScheme() === 'http:' ||\n       fireauth.util.getCurrentScheme() === 'https:';\n};\n\n\n/** @return {?string} The current URL scheme. */\nfireauth.util.getCurrentScheme = function() {\n  return (goog.global['location'] && goog.global['location']['protocol']) ||\n      null;\n};\n\n\n/**\n * Checks whether the current page is a Chrome extension.\n * @return {boolean} Whether the current page is a Chrome extension.\n */\nfireauth.util.isChromeExtension = function() {\n  return fireauth.util.getCurrentScheme() === 'chrome-extension:';\n};\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether the current browser is running in an iOS\n *     environment.\n */\nfireauth.util.isIOS = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  return !!ua.toLowerCase().match(/iphone|ipad|ipod/);\n};\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether the current browser is running in an Android\n *     environment.\n */\nfireauth.util.isAndroid = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  return !!ua.toLowerCase().match(/android/);\n};\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether the opener of a popup cannot communicate with the\n *     popup while it is in the foreground.\n */\nfireauth.util.runsInBackground = function(opt_userAgent) {\n  // TODO: split this check into 2, one check that opener can access\n  // popup, another check that storage synchronizes between popup and opener.\n  // Popup events fail in iOS version 7 (lowest version we currently support)\n  // browsers. When the popup is triggered, the opener is unable to redirect\n  // the popup url, close the popup and in some cases will miss the storage\n  // event triggered when localStorage is changed.\n  // Extend this to all mobile devices. This behavior is more likely to work\n  // cross mobile platforms.\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  if (fireauth.util.isMobileBrowser(ua)) {\n    return false;\n  } else if (fireauth.util.getBrowserName(ua) ==\n             fireauth.util.BrowserName.FIREFOX) {\n    // Latest version of Firefox 47.0 does not allow you to access properties on\n    // the popup window from the opener.\n    return false;\n  }\n  return true;\n};\n\n\n/**\n * Stringifies an object, retuning null if the object is not defined.\n * @param {*} obj The raw object.\n * @return {?string} The JSON-serialized object.\n */\nfireauth.util.stringifyJSON = function(obj) {\n  if (typeof obj === 'undefined') {\n    return null;\n  }\n  return goog.json.serialize(obj);\n};\n\n\n/**\n * @param {!Object} obj The original object.\n * @return {!Object} A copy of the original object with all entries that are\n *     null or undefined removed.\n */\nfireauth.util.copyWithoutNullsOrUndefined = function(obj) {\n  // The processed copy to return.\n  var trimmedObj = {};\n  // Remove all empty fields from data, allow zero and false booleans.\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key) &&\n        obj[key] !== null &&\n        obj[key] !== undefined) {\n      trimmedObj[key] = obj[key];\n    }\n  }\n  return trimmedObj;\n};\n\n\n/**\n * Removes all key/pairs with the specified keys from the given object.\n * @param {!Object} obj The object to process.\n * @param {!Array<string>} keys The list of keys to remove.\n * @return {!Object} The object with the keys removed.\n */\nfireauth.util.removeEntriesWithKeys = function(obj, keys) {\n  // Clone object.\n  var copy = goog.object.clone(obj);\n  // Traverse keys.\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    // If key found in object, remove it.\n    if (key in copy) {\n      delete copy[key];\n    }\n  }\n  // Returned filtered copy.\n  return copy;\n};\n\n\n/**\n * Parses a JSON string, returning undefined if null is passed.\n * @param {?string} json The JSON-serialized object.\n * @return {*} The raw object.\n */\nfireauth.util.parseJSON = function(json) {\n  if (goog.isNull(json)) {\n    return undefined;\n  }\n\n  // Do not use goog.json.parse since it uses eval underneath to support old\n  // browsers that do not provide JSON.parse. The recommended Content Security\n  // Policy does not allow unsafe-eval in some environments like Chrome\n  // extensions. Usage of eval is not recommend in Chrome in general.\n  // Use native parsing instead via JSON.parse. This is provided in our list\n  // of supported browsers.\n  return JSON.parse(json);\n};\n\n\n/**\n * @param {?string=} opt_prefix An optional prefix string to prepend to ID.\n * @return {string} The generated event ID used to identify a generic event.\n */\nfireauth.util.generateEventId = function(opt_prefix) {\n  return opt_prefix ? opt_prefix : '' +\n      Math.floor(Math.random() * 1000000000).toString();\n};\n\n\n/**\n * @param {?string=} opt_userAgent The optional user agent.\n * @return {boolean} Whether an embedded iframe can sync to web storage changes.\n *     Web storage sync fails in Safari desktop browsers and iOS mobile\n *     browsers.\n */\nfireauth.util.iframeCanSyncWebStorage = function(opt_userAgent) {\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  if (fireauth.util.getBrowserName(ua) == fireauth.util.BrowserName.SAFARI ||\n      ua.toLowerCase().match(/iphone|ipad|ipod/)) {\n    return false;\n  }\n  return true;\n};\n\n\n/**\n * Reset unlaoded GApi modules. If gapi.load fails due to a network error,\n * it will stop working after a retrial. This is a hack to fix this issue.\n */\nfireauth.util.resetUnloadedGapiModules = function() {\n  // Clear last failed gapi.load state to force next gapi.load to first\n  // load the failed gapi.iframes module.\n  // Get gapix.beacon context.\n  var beacon = goog.global['___jsl'];\n  // Get current hint.\n  if (beacon && beacon['H']) {\n    // Get gapi hint.\n    for (var hint in beacon['H']) {\n      // Requested modules.\n      beacon['H'][hint]['r'] = beacon['H'][hint]['r'] || [];\n      // Loaded modules.\n      beacon['H'][hint]['L'] = beacon['H'][hint]['L'] || [];\n      // Set requested modules to a copy of the loaded modules.\n      beacon['H'][hint]['r'] = beacon['H'][hint]['L'].concat();\n      // Clear pending callbacks.\n      if (beacon['CP']) {\n        for (var i = 0; i < beacon['CP'].length; i++) {\n          // Remove all failed pending callbacks.\n          beacon['CP'][i] = null;\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Returns whether the current device is a mobile device. Mobile browsers and\n * React-Native environments are considered mobile devices.\n * @param {?string=} opt_userAgent The optional navigator user agent.\n * @param {?fireauth.util.Env=} opt_env The optional environment.\n * @return {boolean} Whether the current device is a mobile device or not.\n */\nfireauth.util.isMobileDevice = function(opt_userAgent, opt_env) {\n  // Get user agent.\n  var ua = opt_userAgent || fireauth.util.getUserAgentString();\n  // Get environment.\n  var environment = opt_env || fireauth.util.getEnvironment();\n  return fireauth.util.isMobileBrowser(ua) ||\n      environment === fireauth.util.Env.REACT_NATIVE;\n};\n\n\n/**\n * @param {?Object=} opt_navigator The optional navigator object typically used\n *     for testing.\n * @return {boolean} Whether the app is currently online. If offline, false is\n *     returned. If this cannot be determined, true is returned.\n */\nfireauth.util.isOnline = function(opt_navigator) {\n  var navigator = opt_navigator || goog.global['navigator'];\n  if (navigator &&\n      typeof navigator['onLine'] === 'boolean' &&\n      // Apply only for traditional web apps and Chrome extensions.\n      // This is especially true for Cordova apps which have unreliable\n      // navigator.onLine behavior unless cordova-plugin-network-information is\n      // installed which overwrites the native navigator.onLine value and\n      // defines navigator.connection.\n      (fireauth.util.isHttpOrHttps() ||\n       fireauth.util.isChromeExtension() ||\n       typeof navigator['connection'] !== 'undefined')) {\n    return navigator['onLine'];\n  }\n  // If we can't determine the state, assume it is online.\n  return true;\n};\n\n\n/**\n * @param {?Object=} opt_navigator The object with navigator data, defaulting\n *     to window.navigator if unspecified.\n * @return {?string} The user's preferred language. Returns null if\n */\nfireauth.util.getUserLanguage = function(opt_navigator) {\n  var navigator = opt_navigator || goog.global['navigator'];\n  if (!navigator) {\n    return null;\n  }\n  return (\n      // Most reliable, but only supported in Chrome/Firefox.\n      navigator['languages'] && navigator['languages'][0] ||\n      // Supported in most browsers, but returns the language of the browser\n      // UI, not the language set in browser settings.\n      navigator['language'] ||\n      // IE <= 10.\n      navigator['userLanguage'] ||\n      // Couldn't determine language.\n      null\n  );\n};\n\n\n/**\n * A structure to help pick between a range of long and short delay durations\n * depending on the current environment. In general, the long delay is used for\n * mobile environments whereas short delays are used for desktop environments.\n * @param {number} shortDelay The short delay duration.\n * @param {number} longDelay The long delay duration.\n * @param {?string=} opt_userAgent The optional navigator user agent.\n * @param {?fireauth.util.Env=} opt_env The optional environment.\n * @constructor\n */\nfireauth.util.Delay = function(shortDelay, longDelay, opt_userAgent, opt_env) {\n  // Internal error when improperly initialized.\n  if (shortDelay > longDelay) {\n    throw new Error('Short delay should be less than long delay!');\n  }\n  /**\n   * @private @const {number} The short duration delay used for desktop\n   *     environments.\n   */\n  this.shortDelay_ = shortDelay;\n  /**\n   * @private @const {number} The long duration delay used for mobile\n   *     environments.\n   */\n  this.longDelay_ = longDelay;\n  /** @private @const {boolean} Whether the environment is a mobile one. */\n  this.isMobile_ = fireauth.util.isMobileDevice(opt_userAgent, opt_env);\n};\n\n\n/**\n * The default value for the offline delay timeout in ms.\n * @const {number}\n * @private\n */\nfireauth.util.Delay.OFFLINE_DELAY_MS_ = 5000;\n\n\n/**\n * @return {number} The delay that matches with the current environment.\n */\nfireauth.util.Delay.prototype.get = function() {\n  // navigator.onLine is unreliable in some cases.\n  // Failing hard in those cases may make it impossible to recover for end user.\n  // Waiting for the regular full duration when there is no network can result\n  // in a bad experience.\n  // Instead return a short timeout duration. If there is no network connection,\n  // the user would wait 5 seconds to detect that. If there is a connection\n  // (false alert case), the user still has the ability to try to send the\n  // request. If it fails (timeout too short), they can still retry.\n  if (!fireauth.util.isOnline()) {\n    // Pick the shorter timeout.\n    return Math.min(fireauth.util.Delay.OFFLINE_DELAY_MS_, this.shortDelay_);\n  }\n  // If running in a mobile environment, return the long delay, otherwise\n  // return the short delay.\n  // This could be improved in the future to dynamically change based on other\n  // variables instead of just reading the current environment.\n  return this.isMobile_ ? this.longDelay_ : this.shortDelay_;\n};\n\n\n/**\n * @return {boolean} Whether the app is visible in the foreground. This uses\n *     document.visibilityState. For browsers that do not support it, this is\n *     always true.\n */\nfireauth.util.isAppVisible = function() {\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilityState\n  var doc = goog.global.document;\n  // Check if supported.\n  if (doc && typeof doc['visibilityState'] !== 'undefined') {\n    // Check if visible.\n    return doc['visibilityState'] == 'visible';\n  }\n  // API not supported in current browser, default to true.\n  return true;\n};\n\n\n/**\n * @return {!goog.Promise} A promise that resolves when the app is visible in\n *     the foreground.\n */\nfireauth.util.onAppVisible = function() {\n  var doc = goog.global.document;\n  // Visibility change listener reference.\n  var onVisibilityChange = null;\n  if (fireauth.util.isAppVisible() || !doc) {\n    // Visible or non browser environment.\n    return goog.Promise.resolve();\n  } else {\n    // Invisible and in browser environment.\n    return new goog.Promise(function(resolve, reject) {\n      // On visibility change listener.\n      onVisibilityChange = function(event) {\n        // App is visible.\n        if (fireauth.util.isAppVisible()) {\n          // Unregister event listener.\n          doc.removeEventListener(\n              'visibilitychange', onVisibilityChange, false);\n          // Resolve promise.\n          resolve();\n        }\n      };\n      // Listen to visibility change.\n      doc.addEventListener('visibilitychange', onVisibilityChange, false);\n    }).thenCatch(function(error) {\n      // In case this promise was cancelled, make sure it unlistens to\n      // visibilitychange event.\n      doc.removeEventListener('visibilitychange', onVisibilityChange, false);\n      // Rethrow the same error.\n      throw error;\n    });\n  }\n};\n\n\n/**\n * Logs a warning message to the console, if the console is available.\n * @param {string} message\n */\nfireauth.util.consoleWarn = function(message) {\n  if (typeof console !== 'undefined' && typeof console.warn === 'function') {\n    console.warn(message);\n  }\n};\n\n\n/**\n * Parses a UTC time stamp string or number and returns the corresponding UTC\n * date string if valid. Otherwise, returns null.\n * @param {?string|number} utcTimestamp The UTC timestamp number or string.\n * @return {?string} The corresponding UTC date string. Null if invalid.\n */\nfireauth.util.utcTimestampToDateString = function(utcTimestamp) {\n  try {\n    // Convert to date object.\n    var date = new Date(parseInt(utcTimestamp, 10));\n    // Test date is valid.\n    if (!isNaN(date.getTime()) &&\n        // Confirm that utcTimestamp is numeric.\n        goog.string.isNumeric(utcTimestamp)) {\n      // Convert to UTC date string.\n      return date.toUTCString();\n    }\n  } catch (e) {\n    // Do nothing. null will be returned.\n  }\n  return null;\n};\n\n\n/** @return {boolean} Whether indexedDB is available. */\nfireauth.util.isIndexedDBAvailable = function() {\n  return !!goog.global['indexedDB'];\n};\n\n\n/** @return {boolean} Whether current mode is Auth handler or iframe. */\nfireauth.util.isAuthHandlerOrIframe = function() {\n  return !!(fireauth.util.getObjectRef('fireauth.oauthhelper', goog.global) ||\n            fireauth.util.getObjectRef('fireauth.iframe', goog.global));\n};\n\n\n/** @return {boolean} Whether indexedDB is used to persist storage. */\nfireauth.util.persistsStorageWithIndexedDB = function() {\n  // This will cover:\n  // IE11, Edge when indexedDB is available (this is unavailable in InPrivate\n  // mode). (SDK, OAuth handler and iframe)\n  // Any environment where indexedDB is available (SDK only).\n\n  // In a browser environment, when an iframe and a popup web storage are not\n  // synchronized, use the indexedDB fireauth.storage.Storage implementation.\n  return (fireauth.util.isLocalStorageNotSynchronized() ||\n          !fireauth.util.isAuthHandlerOrIframe()) &&\n         fireauth.util.isIndexedDBAvailable();\n};\n\n\n/** Sets the no-referrer meta tag in the document head if applicable. */\nfireauth.util.setNoReferrer = function() {\n  var doc = goog.global.document;\n  if (doc) {\n    try {\n      var meta = goog.dom.createDom(goog.dom.TagName.META, {\n        'name': 'referrer',\n        'content': 'no-referrer'\n      });\n      var headCollection = goog.dom.getElementsByTagName(goog.dom.TagName.HEAD);\n      // Append meta tag to head.\n      if (headCollection.length) {\n        headCollection[0].appendChild(meta);\n      }\n    } catch (e) {\n      // Best effort approach.\n    }\n  }\n};\n\n\n/** @return {?ServiceWorker} The servicerWorker controller if available. */\nfireauth.util.getServiceWorkerController = function() {\n  var navigator = goog.global['navigator'];\n  return (navigator &&\n          navigator.serviceWorker &&\n          navigator.serviceWorker.controller) || null;\n};\n\n\n/** @return {?WorkerGlobalScope} The worker global scope if available. */\nfireauth.util.getWorkerGlobalScope = function() {\n  return fireauth.util.isWorker() ? /** @type {!WorkerGlobalScope} */ (self) :\n      null;\n};\n\n/**\n * @return {!goog.Promise<?ServiceWorker>} A promise that resolves with the\n *     service worker. This will resolve only when a service worker becomes\n *     available. If no service worker is supported, it will resolve with null.\n */\nfireauth.util.getActiveServiceWorker = function() {\n  var navigator = goog.global['navigator'];\n  if (navigator && navigator.serviceWorker) {\n    return goog.Promise.resolve()\n        .then(function() {\n          return navigator.serviceWorker.ready;\n        })\n        .then(function(registration) {\n          return /** @type {?ServiceWorker} */ (registration.active || null);\n        })\n        .thenCatch(function(error) {\n          return null;\n        });\n  }\n  return goog.Promise.resolve(/** @type {?ServiceWorker} */ (null));\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for window manipulation.\n */\n\n\ngoog.provide('goog.window');\n\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.safe');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.html.uncheckedconversions');\ngoog.require('goog.labs.userAgent.platform');\ngoog.require('goog.string');\ngoog.require('goog.string.Const');\ngoog.require('goog.userAgent');\n\n\n/**\n * Default height for popup windows\n * @type {number}\n */\ngoog.window.DEFAULT_POPUP_HEIGHT = 500;\n\n\n/**\n * Default width for popup windows\n * @type {number}\n */\ngoog.window.DEFAULT_POPUP_WIDTH = 690;\n\n\n/**\n * Default target for popup windows\n * @type {string}\n */\ngoog.window.DEFAULT_POPUP_TARGET = 'google_popup';\n\n\n/**\n * @return {!Window}\n * @suppress {checkTypes}\n * @private\n */\ngoog.window.createFakeWindow_ = function() {\n  return /** @type {!Window} */ ({});\n};\n\n/**\n * Opens a new window.\n *\n * @param {goog.html.SafeUrl|string|Object|null} linkRef If an Object with an 'href'\n *     attribute (such as HTMLAnchorElement) is passed then the value of 'href'\n *     is used, otherwise its toString method is called. Note that if a\n *     string|Object is used, it will be sanitized with SafeUrl.sanitize().\n *\n * @param {?Object=} opt_options supports the following options:\n *  'target': (string) target (window name). If null, linkRef.target will\n *          be used.\n *  'width': (number) window width.\n *  'height': (number) window height.\n *  'top': (number) distance from top of screen\n *  'left': (number) distance from left of screen\n *  'toolbar': (boolean) show toolbar\n *  'scrollbars': (boolean) show scrollbars\n *  'location': (boolean) show location\n *  'statusbar': (boolean) show statusbar\n *  'menubar': (boolean) show menubar\n *  'resizable': (boolean) resizable\n *  'noreferrer': (boolean) whether to attempt to remove the referrer header\n *      from the request headers. Does this by opening a blank window that\n *      then redirects to the target url, so users may see some flickering.\n *\n * @param {?Window=} opt_parentWin Parent window that should be used to open the\n *                 new window.\n *\n * @return {?Window} Returns the window object that was opened. This returns\n *                  null if a popup blocker prevented the window from being\n *                  opened. In case when a new window is opened in a different\n *                  browser sandbox (such as iOS standalone mode), the returned\n *                  object is a emulated Window object that functions as if\n *                  a cross-origin window has been opened.\n */\ngoog.window.open = function(linkRef, opt_options, opt_parentWin) {\n  if (!opt_options) {\n    opt_options = {};\n  }\n  var parentWin = opt_parentWin || window;\n\n  /** @type {!goog.html.SafeUrl} */\n  var safeLinkRef;\n\n  if (linkRef instanceof goog.html.SafeUrl) {\n    safeLinkRef = linkRef;\n  } else {\n    // HTMLAnchorElement has a toString() method with the same behavior as\n    // goog.Uri in all browsers except for Safari, which returns\n    // '[object HTMLAnchorElement]'.  We check for the href first, then\n    // assume that it's a goog.Uri or String otherwise.\n    /**\n     * @type {string|!goog.string.TypedString}\n     * @suppress {missingProperties}\n     */\n    var url =\n        typeof linkRef.href != 'undefined' ? linkRef.href : String(linkRef);\n    safeLinkRef = goog.html.SafeUrl.sanitize(url);\n  }\n\n\n  var target = opt_options.target || linkRef.target;\n\n  var sb = [];\n  for (var option in opt_options) {\n    switch (option) {\n      case 'width':\n      case 'height':\n      case 'top':\n      case 'left':\n        sb.push(option + '=' + opt_options[option]);\n        break;\n      case 'target':\n      case 'noopener':\n      case 'noreferrer':\n        break;\n      default:\n        sb.push(option + '=' + (opt_options[option] ? 1 : 0));\n    }\n  }\n  var optionString = sb.join(',');\n\n  var newWin;\n  if (goog.labs.userAgent.platform.isIos() && parentWin.navigator &&\n      parentWin.navigator['standalone'] && target && target != '_self') {\n    // iOS in standalone mode disregards \"target\" in window.open and always\n    // opens new URL in the same window. The workaround is to create an \"A\"\n    // element and send a click event to it.\n    // Notice that the \"A\" tag does NOT have to be added to the DOM.\n\n    var a = /** @type {!HTMLAnchorElement} */\n        (parentWin.document.createElement(String(goog.dom.TagName.A)));\n    goog.dom.safe.setAnchorHref(a, safeLinkRef);\n\n    a.setAttribute('target', target);\n    if (opt_options['noreferrer']) {\n      a.setAttribute('rel', 'noreferrer');\n    }\n    var click = document.createEvent('MouseEvent');\n    click.initMouseEvent(\n        'click',\n        true,  // canBubble\n        true,  // cancelable\n        parentWin,\n        1);  // detail = mousebutton\n    a.dispatchEvent(click);\n    // New window is not available in this case. Instead, a fake Window object\n    // is returned. In particular, it will have window.document undefined. In\n    // general, it will appear to most of clients as a Window for a different\n    // origin. Since iOS standalone web apps are run in their own sandbox, this\n    // is the most appropriate return value.\n    newWin = goog.window.createFakeWindow_();\n  } else if (opt_options['noreferrer']) {\n    // Use a meta-refresh to stop the referrer from being included in the\n    // request headers. This seems to be the only cross-browser way to\n    // remove the referrer. It also allows for the opener to be set to null\n    // in the new window, thus disallowing the opened window from navigating\n    // its opener.\n    //\n    // Detecting user agent and then using a different strategy per browser\n    // would allow the referrer to leak in case of an incorrect/missing user\n    // agent.\n    //\n    // Also note that we can't use goog.dom.safe.openInWindow here, as it\n    // requires a goog.string.Const 'name' parameter, while we're using plain\n    // strings here for target.\n    newWin = parentWin.open('', target, optionString);\n\n    var sanitizedLinkRef = goog.html.SafeUrl.unwrap(safeLinkRef);\n    if (newWin) {\n      if (goog.userAgent.EDGE_OR_IE) {\n        // IE/EDGE can't parse the content attribute if the url contains\n        // a semicolon. We can fix this by adding quotes around the url, but\n        // then we can't parse quotes in the URL correctly. We take a\n        // best-effort approach.\n        //\n        // If the URL has semicolons, wrap it in single quotes to protect\n        // the semicolons.\n        // If the URL has semicolons and single quotes, url-encode the single\n        // quotes as well.\n        //\n        // This is imperfect. Notice that both ' and ; are reserved characters\n        // in URIs, so this could do the wrong thing, but at least it will\n        // do the wrong thing in only rare cases.\n        // ugh.\n        if (goog.string.contains(sanitizedLinkRef, ';')) {\n          sanitizedLinkRef = \"'\" + sanitizedLinkRef.replace(/'/g, '%27') + \"'\";\n        }\n      }\n      newWin.opener = null;\n\n      // TODO(rjamet): Building proper SafeHtml with SafeHtml.createMetaRefresh\n      // pulls in a lot of compiled code, which is composed of various unneeded\n      // goog.html parts such as SafeStyle.create among others. So, for now,\n      // keep the unchecked conversion until we figure out how to make the\n      // dependencies of createSafeHtmlTagSecurityPrivateDoNotAccessOrElse less\n      // heavy.\n      var safeHtml =\n          goog.html.uncheckedconversions\n              .safeHtmlFromStringKnownToSatisfyTypeContract(\n                  goog.string.Const.from(\n                      'b/12014412, meta tag with sanitized URL'),\n                  // The referrer policy meta tag below works around a bug in\n                  // Chrome where the meta-refresh alone fails to clear the\n                  // the referrer under certain circumstances\n                  // (crbug.com/791216).\n                  '<meta name=\"referrer\" content=\"no-referrer\">' +\n                      '<meta http-equiv=\"refresh\" content=\"0; url=' +\n                      goog.string.htmlEscape(sanitizedLinkRef) + '\">');\n      goog.dom.safe.documentWrite(newWin.document, safeHtml);\n      newWin.document.close();\n    }\n  } else {\n    newWin = parentWin.open(\n        goog.html.SafeUrl.unwrap(safeLinkRef), target, optionString);\n    // Passing in 'noopener' into the 'windowFeatures' param of window.open(...)\n    // will yield a feature-deprived browser. This is an known issue, tracked\n    // here: https://github.com/whatwg/html/issues/1902\n    if (newWin && opt_options['noopener']) {\n      newWin.opener = null;\n    }\n  }\n  // newWin is null if a popup blocker prevented the window open.\n  return newWin;\n};\n\n\n/**\n * Opens a new window without any real content in it.\n *\n * This can be used to get around popup blockers if you need to open a window\n * in response to a user event, but need to do asynchronous work to determine\n * the URL to open, and then set the URL later.\n *\n * Example usage:\n *\n * var newWin = goog.window.openBlank('Loading...');\n * setTimeout(\n *     function() {\n *       newWin.location.href = 'http://www.google.com';\n *     }, 100);\n *\n * @param {string=} opt_message String to show in the new window. This string\n *     will be HTML-escaped to avoid XSS issues.\n * @param {?Object=} opt_options Options to open window with.\n *     {@see goog.window.open for exact option semantics}.\n * @param {?Window=} opt_parentWin Parent window that should be used to open the\n *                 new window.\n * @return {?Window} Returns the window object that was opened. This returns\n *                  null if a popup blocker prevented the window from being\n *                  opened.\n */\ngoog.window.openBlank = function(opt_message, opt_options, opt_parentWin) {\n  // Open up a window with the loading message and nothing else.\n  // This will be interpreted as HTML content type with a missing doctype\n  // and html/body tags, but is otherwise acceptable.\n  //\n  // IMPORTANT: The order of escaping is crucial here in order to avoid XSS.\n  // First, HTML-escaping is needed because the result of the JS expression\n  // is evaluated as HTML. Second, JS-string escaping is needed; this avoids\n  // \\u escaping from inserting HTML tags and \\ from escaping the final \".\n  // Finally, URL percent-encoding is done with encodeURI(); this\n  // avoids percent-encoding from bypassing HTML and JS escaping.\n  //\n  // Note: There are other ways the same result could be achieved but the\n  // current behavior was preserved when this code was refactored to use\n  // SafeUrl, in order to avoid breakage.\n  var loadingMessage;\n  if (!opt_message) {\n    loadingMessage = '';\n  } else {\n    loadingMessage =\n        goog.string.escapeString(goog.string.htmlEscape(opt_message));\n  }\n  var url = goog.html.uncheckedconversions\n                .safeUrlFromStringKnownToSatisfyTypeContract(\n                    goog.string.Const.from(\n                        'b/12014412, encoded string in javascript: URL'),\n                    'javascript:\"' + encodeURI(loadingMessage) + '\"');\n  return /** @type {?Window} */ (\n      goog.window.open(url, opt_options, opt_parentWin));\n};\n\n\n/**\n * Raise a help popup window, defaulting to \"Google standard\" size and name.\n *\n * (If your project is using GXPs, consider using {@link PopUpLink.gxp}.)\n *\n* @param {?goog.html.SafeUrl|string|?Object} linkRef If an Object with an 'href'\n *     attribute (such as HTMLAnchorElement) is passed then the value of 'href'\n *     is used, otherwise  otherwise its toString method is called. Note that\n *     if a string|Object is used, it will be sanitized with SafeUrl.sanitize().\n *\n * @param {?Object=} opt_options Options to open window with.\n *     {@see goog.window.open for exact option semantics}\n *     Additional wrinkles to the options:\n *     - if 'target' field is null, linkRef.target will be used. If *that's*\n *     null, the default is \"google_popup\".\n *     - if 'width' field is not specified, the default is 690.\n *     - if 'height' field is not specified, the default is 500.\n *\n * @return {boolean} true if the window was not popped up, false if it was.\n */\ngoog.window.popup = function(linkRef, opt_options) {\n  if (!opt_options) {\n    opt_options = {};\n  }\n\n  // set default properties\n  opt_options['target'] = opt_options['target'] || linkRef['target'] ||\n      goog.window.DEFAULT_POPUP_TARGET;\n  opt_options['width'] =\n      opt_options['width'] || goog.window.DEFAULT_POPUP_WIDTH;\n  opt_options['height'] =\n      opt_options['height'] || goog.window.DEFAULT_POPUP_HEIGHT;\n\n  var newWin = goog.window.open(linkRef, opt_options);\n  if (!newWin) {\n    return true;\n  }\n  newWin.focus();\n\n  return false;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Closure user agent platform detection.\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For more information on browser brand, rendering engine, or device see the\n * other sub-namespaces in goog.labs.userAgent (browser, engine, and device\n * respectively).\n *\n */\n\ngoog.provide('goog.labs.userAgent.platform');\n\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.string');\n\n\n/**\n * @return {boolean} Whether the platform is Android.\n */\ngoog.labs.userAgent.platform.isAndroid = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Android');\n};\n\n\n/**\n * @return {boolean} Whether the platform is iPod.\n */\ngoog.labs.userAgent.platform.isIpod = function() {\n  return goog.labs.userAgent.util.matchUserAgent('iPod');\n};\n\n\n/**\n * @return {boolean} Whether the platform is iPhone.\n */\ngoog.labs.userAgent.platform.isIphone = function() {\n  return goog.labs.userAgent.util.matchUserAgent('iPhone') &&\n      !goog.labs.userAgent.util.matchUserAgent('iPod') &&\n      !goog.labs.userAgent.util.matchUserAgent('iPad');\n};\n\n\n/**\n * @return {boolean} Whether the platform is iPad.\n */\ngoog.labs.userAgent.platform.isIpad = function() {\n  return goog.labs.userAgent.util.matchUserAgent('iPad');\n};\n\n\n/**\n * @return {boolean} Whether the platform is iOS.\n */\ngoog.labs.userAgent.platform.isIos = function() {\n  return goog.labs.userAgent.platform.isIphone() ||\n      goog.labs.userAgent.platform.isIpad() ||\n      goog.labs.userAgent.platform.isIpod();\n};\n\n\n/**\n * @return {boolean} Whether the platform is Mac.\n */\ngoog.labs.userAgent.platform.isMacintosh = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Macintosh');\n};\n\n\n/**\n * Note: ChromeOS is not considered to be Linux as it does not report itself\n * as Linux in the user agent string.\n * @return {boolean} Whether the platform is Linux.\n */\ngoog.labs.userAgent.platform.isLinux = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Linux');\n};\n\n\n/**\n * @return {boolean} Whether the platform is Windows.\n */\ngoog.labs.userAgent.platform.isWindows = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Windows');\n};\n\n\n/**\n * @return {boolean} Whether the platform is ChromeOS.\n */\ngoog.labs.userAgent.platform.isChromeOS = function() {\n  return goog.labs.userAgent.util.matchUserAgent('CrOS');\n};\n\n/**\n * @return {boolean} Whether the platform is Chromecast.\n */\ngoog.labs.userAgent.platform.isChromecast = function() {\n  return goog.labs.userAgent.util.matchUserAgent('CrKey');\n};\n\n/**\n * The version of the platform. We only determine the version for Windows,\n * Mac, and Chrome OS. It doesn't make much sense on Linux. For Windows, we only\n * look at the NT version. Non-NT-based versions (e.g. 95, 98, etc.) are given\n * version 0.0.\n *\n * @return {string} The platform version or empty string if version cannot be\n *     determined.\n */\ngoog.labs.userAgent.platform.getVersion = function() {\n  var userAgentString = goog.labs.userAgent.util.getUserAgent();\n  var version = '', re;\n  if (goog.labs.userAgent.platform.isWindows()) {\n    re = /Windows (?:NT|Phone) ([0-9.]+)/;\n    var match = re.exec(userAgentString);\n    if (match) {\n      version = match[1];\n    } else {\n      version = '0.0';\n    }\n  } else if (goog.labs.userAgent.platform.isIos()) {\n    re = /(?:iPhone|iPod|iPad|CPU)\\s+OS\\s+(\\S+)/;\n    var match = re.exec(userAgentString);\n    // Report the version as x.y.z and not x_y_z\n    version = match && match[1].replace(/_/g, '.');\n  } else if (goog.labs.userAgent.platform.isMacintosh()) {\n    re = /Mac OS X ([0-9_.]+)/;\n    var match = re.exec(userAgentString);\n    // Note: some old versions of Camino do not report an OSX version.\n    // Default to 10.\n    version = match ? match[1].replace(/_/g, '.') : '10';\n  } else if (goog.labs.userAgent.platform.isAndroid()) {\n    re = /Android\\s+([^\\);]+)(\\)|;)/;\n    var match = re.exec(userAgentString);\n    version = match && match[1];\n  } else if (goog.labs.userAgent.platform.isChromeOS()) {\n    re = /(?:CrOS\\s+(?:i686|x86_64)\\s+([0-9.]+))/;\n    var match = re.exec(userAgentString);\n    version = match && match[1];\n  }\n  return version || '';\n};\n\n\n/**\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the browser version is higher or the same as the\n *     given version.\n */\ngoog.labs.userAgent.platform.isVersionOrHigher = function(version) {\n  return goog.string.compareVersions(\n             goog.labs.userAgent.platform.getVersion(), version) >= 0;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Type-safe wrappers for unsafe DOM APIs.\n *\n * This file provides type-safe wrappers for DOM APIs that can result in\n * cross-site scripting (XSS) vulnerabilities, if the API is supplied with\n * untrusted (attacker-controlled) input.  Instead of plain strings, the type\n * safe wrappers consume values of types from the goog.html package whose\n * contract promises that values are safe to use in the corresponding context.\n *\n * Hence, a program that exclusively uses the wrappers in this file (i.e., whose\n * only reference to security-sensitive raw DOM APIs are in this file) is\n * guaranteed to be free of XSS due to incorrect use of such DOM APIs (modulo\n * correctness of code that produces values of the respective goog.html types,\n * and absent code that violates type safety).\n *\n * For example, assigning to an element's .innerHTML property a string that is\n * derived (even partially) from untrusted input typically results in an XSS\n * vulnerability. The type-safe wrapper goog.dom.safe.setInnerHtml consumes a\n * value of type goog.html.SafeHtml, whose contract states that using its values\n * in a HTML context will not result in XSS. Hence a program that is free of\n * direct assignments to any element's innerHTML property (with the exception of\n * the assignment to .innerHTML in this file) is guaranteed to be free of XSS\n * due to assignment of untrusted strings to the innerHTML property.\n */\n\ngoog.provide('goog.dom.safe');\ngoog.provide('goog.dom.safe.InsertAdjacentHtmlPosition');\n\ngoog.require('goog.asserts');\ngoog.require('goog.dom.asserts');\ngoog.require('goog.html.SafeHtml');\ngoog.require('goog.html.SafeScript');\ngoog.require('goog.html.SafeStyle');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.string');\ngoog.require('goog.string.Const');\n\n\n/** @enum {string} */\ngoog.dom.safe.InsertAdjacentHtmlPosition = {\n  AFTERBEGIN: 'afterbegin',\n  AFTEREND: 'afterend',\n  BEFOREBEGIN: 'beforebegin',\n  BEFOREEND: 'beforeend'\n};\n\n\n/**\n * Inserts known-safe HTML into a Node, at the specified position.\n * @param {!Node} node The node on which to call insertAdjacentHTML.\n * @param {!goog.dom.safe.InsertAdjacentHtmlPosition} position Position where\n *     to insert the HTML.\n * @param {!goog.html.SafeHtml} html The known-safe HTML to insert.\n */\ngoog.dom.safe.insertAdjacentHtml = function(node, position, html) {\n  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrap(html));\n};\n\n\n/**\n * Tags not allowed in goog.dom.safe.setInnerHtml.\n * @private @const {!Object<string, boolean>}\n */\ngoog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = {\n  'MATH': true,\n  'SCRIPT': true,\n  'STYLE': true,\n  'SVG': true,\n  'TEMPLATE': true\n};\n\n\n/**\n * Assigns known-safe HTML to an element's innerHTML property.\n * @param {!Element} elem The element whose innerHTML is to be assigned to.\n * @param {!goog.html.SafeHtml} html The known-safe HTML to assign.\n * @throws {Error} If called with one of these tags: math, script, style, svg,\n *     template.\n */\ngoog.dom.safe.setInnerHtml = function(elem, html) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    var tagName = elem.tagName.toUpperCase();\n    if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[tagName]) {\n      throw new Error(\n          'goog.dom.safe.setInnerHtml cannot be used to set content of ' +\n          elem.tagName + '.');\n    }\n  }\n  elem.innerHTML = goog.html.SafeHtml.unwrap(html);\n};\n\n\n/**\n * Assigns known-safe HTML to an element's outerHTML property.\n * @param {!Element} elem The element whose outerHTML is to be assigned to.\n * @param {!goog.html.SafeHtml} html The known-safe HTML to assign.\n */\ngoog.dom.safe.setOuterHtml = function(elem, html) {\n  elem.outerHTML = goog.html.SafeHtml.unwrap(html);\n};\n\n\n/**\n * Safely assigns a URL a form element's action property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * anchor's href property.  If url is of type string however, it is first\n * sanitized using goog.html.SafeUrl.sanitize.\n *\n * Example usage:\n *   goog.dom.safe.setFormElementAction(formEl, url);\n * which is a safe alternative to\n *   formEl.action = url;\n * The latter can result in XSS vulnerabilities if url is a\n * user-/attacker-controlled value.\n *\n * @param {!Element} form The form element whose action property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setFormElementAction = function(form, url) {\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  goog.dom.asserts.assertIsHTMLFormElement(form).action =\n      goog.html.SafeUrl.unwrap(safeUrl);\n};\n\n/**\n * Safely assigns a URL to a button element's formaction property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * anchor's href property.  If url is of type string however, it is first\n * sanitized using goog.html.SafeUrl.sanitize.\n *\n * Example usage:\n *   goog.dom.safe.setButtonFormAction(buttonEl, url);\n * which is a safe alternative to\n *   buttonEl.action = url;\n * The latter can result in XSS vulnerabilities if url is a\n * user-/attacker-controlled value.\n *\n * @param {!Element} button The button element whose action property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setButtonFormAction = function(button, url) {\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  goog.dom.asserts.assertIsHTMLButtonElement(button).formAction =\n      goog.html.SafeUrl.unwrap(safeUrl);\n};\n/**\n * Safely assigns a URL to an input element's formaction property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * anchor's href property.  If url is of type string however, it is first\n * sanitized using goog.html.SafeUrl.sanitize.\n *\n * Example usage:\n *   goog.dom.safe.setInputFormAction(inputEl, url);\n * which is a safe alternative to\n *   inputEl.action = url;\n * The latter can result in XSS vulnerabilities if url is a\n * user-/attacker-controlled value.\n *\n * @param {!Element} input The input element whose action property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setInputFormAction = function(input, url) {\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  goog.dom.asserts.assertIsHTMLInputElement(input).formAction =\n      goog.html.SafeUrl.unwrap(safeUrl);\n};\n\n/**\n * Sets the given element's style property to the contents of the provided\n * SafeStyle object.\n * @param {!Element} elem\n * @param {!goog.html.SafeStyle} style\n */\ngoog.dom.safe.setStyle = function(elem, style) {\n  elem.style.cssText = goog.html.SafeStyle.unwrap(style);\n};\n\n\n/**\n * Writes known-safe HTML to a document.\n * @param {!Document} doc The document to be written to.\n * @param {!goog.html.SafeHtml} html The known-safe HTML to assign.\n */\ngoog.dom.safe.documentWrite = function(doc, html) {\n  doc.write(goog.html.SafeHtml.unwrap(html));\n};\n\n\n/**\n * Safely assigns a URL to an anchor element's href property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * anchor's href property.  If url is of type string however, it is first\n * sanitized using goog.html.SafeUrl.sanitize.\n *\n * Example usage:\n *   goog.dom.safe.setAnchorHref(anchorEl, url);\n * which is a safe alternative to\n *   anchorEl.href = url;\n * The latter can result in XSS vulnerabilities if url is a\n * user-/attacker-controlled value.\n *\n * @param {!HTMLAnchorElement} anchor The anchor element whose href property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setAnchorHref = function(anchor, url) {\n  goog.dom.asserts.assertIsHTMLAnchorElement(anchor);\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);\n};\n\n\n/**\n * Safely assigns a URL to an image element's src property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * image's src property.  If url is of type string however, it is first\n * sanitized using goog.html.SafeUrl.sanitize.\n *\n * @param {!HTMLImageElement} imageElement The image element whose src property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setImageSrc = function(imageElement, url) {\n  goog.dom.asserts.assertIsHTMLImageElement(imageElement);\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  imageElement.src = goog.html.SafeUrl.unwrap(safeUrl);\n};\n\n/**\n * Safely assigns a URL to a video element's src property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * video's src property.  If url is of type string however, it is first\n * sanitized using goog.html.SafeUrl.sanitize.\n *\n * @param {!HTMLVideoElement} videoElement The video element whose src property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setVideoSrc = function(videoElement, url) {\n  goog.dom.asserts.assertIsHTMLVideoElement(videoElement);\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  videoElement.src = goog.html.SafeUrl.unwrap(safeUrl);\n};\n\n/**\n * Safely assigns a URL to an embed element's src property.\n *\n * Example usage:\n *   goog.dom.safe.setEmbedSrc(embedEl, url);\n * which is a safe alternative to\n *   embedEl.src = url;\n * The latter can result in loading untrusted code unless it is ensured that\n * the URL refers to a trustworthy resource.\n *\n * @param {!HTMLEmbedElement} embed The embed element whose src property\n *     is to be assigned to.\n * @param {!goog.html.TrustedResourceUrl} url The URL to assign.\n */\ngoog.dom.safe.setEmbedSrc = function(embed, url) {\n  goog.dom.asserts.assertIsHTMLEmbedElement(embed);\n  embed.src = goog.html.TrustedResourceUrl.unwrap(url);\n};\n\n\n/**\n * Safely assigns a URL to a frame element's src property.\n *\n * Example usage:\n *   goog.dom.safe.setFrameSrc(frameEl, url);\n * which is a safe alternative to\n *   frameEl.src = url;\n * The latter can result in loading untrusted code unless it is ensured that\n * the URL refers to a trustworthy resource.\n *\n * @param {!HTMLFrameElement} frame The frame element whose src property\n *     is to be assigned to.\n * @param {!goog.html.TrustedResourceUrl} url The URL to assign.\n */\ngoog.dom.safe.setFrameSrc = function(frame, url) {\n  goog.dom.asserts.assertIsHTMLFrameElement(frame);\n  frame.src = goog.html.TrustedResourceUrl.unwrap(url);\n};\n\n\n/**\n * Safely assigns a URL to an iframe element's src property.\n *\n * Example usage:\n *   goog.dom.safe.setIframeSrc(iframeEl, url);\n * which is a safe alternative to\n *   iframeEl.src = url;\n * The latter can result in loading untrusted code unless it is ensured that\n * the URL refers to a trustworthy resource.\n *\n * @param {!HTMLIFrameElement} iframe The iframe element whose src property\n *     is to be assigned to.\n * @param {!goog.html.TrustedResourceUrl} url The URL to assign.\n */\ngoog.dom.safe.setIframeSrc = function(iframe, url) {\n  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);\n  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);\n};\n\n\n/**\n * Safely assigns HTML to an iframe element's srcdoc property.\n *\n * Example usage:\n *   goog.dom.safe.setIframeSrcdoc(iframeEl, safeHtml);\n * which is a safe alternative to\n *   iframeEl.srcdoc = html;\n * The latter can result in loading untrusted code.\n *\n * @param {!HTMLIFrameElement} iframe The iframe element whose srcdoc property\n *     is to be assigned to.\n * @param {!goog.html.SafeHtml} html The HTML to assign.\n */\ngoog.dom.safe.setIframeSrcdoc = function(iframe, html) {\n  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);\n  iframe.srcdoc = goog.html.SafeHtml.unwrap(html);\n};\n\n\n/**\n * Safely sets a link element's href and rel properties. Whether or not\n * the URL assigned to href has to be a goog.html.TrustedResourceUrl\n * depends on the value of the rel property. If rel contains \"stylesheet\"\n * then a TrustedResourceUrl is required.\n *\n * Example usage:\n *   goog.dom.safe.setLinkHrefAndRel(linkEl, url, 'stylesheet');\n * which is a safe alternative to\n *   linkEl.rel = 'stylesheet';\n *   linkEl.href = url;\n * The latter can result in loading untrusted code unless it is ensured that\n * the URL refers to a trustworthy resource.\n *\n * @param {!HTMLLinkElement} link The link element whose href property\n *     is to be assigned to.\n * @param {string|!goog.html.SafeUrl|!goog.html.TrustedResourceUrl} url The URL\n *     to assign to the href property. Must be a TrustedResourceUrl if the\n *     value assigned to rel contains \"stylesheet\". A string value is\n *     sanitized with goog.html.SafeUrl.sanitize.\n * @param {string} rel The value to assign to the rel property.\n * @throws {Error} if rel contains \"stylesheet\" and url is not a\n *     TrustedResourceUrl\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {\n  goog.dom.asserts.assertIsHTMLLinkElement(link);\n  link.rel = rel;\n  if (goog.string.caseInsensitiveContains(rel, 'stylesheet')) {\n    goog.asserts.assert(\n        url instanceof goog.html.TrustedResourceUrl,\n        'URL must be TrustedResourceUrl because \"rel\" contains \"stylesheet\"');\n    link.href = goog.html.TrustedResourceUrl.unwrap(url);\n  } else if (url instanceof goog.html.TrustedResourceUrl) {\n    link.href = goog.html.TrustedResourceUrl.unwrap(url);\n  } else if (url instanceof goog.html.SafeUrl) {\n    link.href = goog.html.SafeUrl.unwrap(url);\n  } else {  // string\n    // SafeUrl.sanitize must return legitimate SafeUrl when passed a string.\n    link.href =\n        goog.html.SafeUrl.sanitizeAssertUnchanged(url).getTypedStringValue();\n  }\n};\n\n\n/**\n * Safely assigns a URL to an object element's data property.\n *\n * Example usage:\n *   goog.dom.safe.setObjectData(objectEl, url);\n * which is a safe alternative to\n *   objectEl.data = url;\n * The latter can result in loading untrusted code unless setit is ensured that\n * the URL refers to a trustworthy resource.\n *\n * @param {!HTMLObjectElement} object The object element whose data property\n *     is to be assigned to.\n * @param {!goog.html.TrustedResourceUrl} url The URL to assign.\n */\ngoog.dom.safe.setObjectData = function(object, url) {\n  goog.dom.asserts.assertIsHTMLObjectElement(object);\n  object.data = goog.html.TrustedResourceUrl.unwrap(url);\n};\n\n\n/**\n * Safely assigns a URL to a script element's src property.\n *\n * Example usage:\n *   goog.dom.safe.setScriptSrc(scriptEl, url);\n * which is a safe alternative to\n *   scriptEl.src = url;\n * The latter can result in loading untrusted code unless it is ensured that\n * the URL refers to a trustworthy resource.\n *\n * @param {!HTMLScriptElement} script The script element whose src property\n *     is to be assigned to.\n * @param {!goog.html.TrustedResourceUrl} url The URL to assign.\n */\ngoog.dom.safe.setScriptSrc = function(script, url) {\n  goog.dom.asserts.assertIsHTMLScriptElement(script);\n  script.src = goog.html.TrustedResourceUrl.unwrap(url);\n};\n\n\n/**\n * Safely assigns a value to a script element's content.\n *\n * Example usage:\n *   goog.dom.safe.setScriptContent(scriptEl, content);\n * which is a safe alternative to\n *   scriptEl.text = content;\n * The latter can result in executing untrusted code unless it is ensured that\n * the code is loaded from a trustworthy resource.\n *\n * @param {!HTMLScriptElement} script The script element whose content is being\n *     set.\n * @param {!goog.html.SafeScript} content The content to assign.\n */\ngoog.dom.safe.setScriptContent = function(script, content) {\n  goog.dom.asserts.assertIsHTMLScriptElement(script);\n  script.text = goog.html.SafeScript.unwrap(content);\n};\n\n\n/**\n * Safely assigns a URL to a Location object's href property.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and assigned to\n * loc's href property.  If url is of type string however, it is first sanitized\n * using goog.html.SafeUrl.sanitize.\n *\n * Example usage:\n *   goog.dom.safe.setLocationHref(document.location, redirectUrl);\n * which is a safe alternative to\n *   document.location.href = redirectUrl;\n * The latter can result in XSS vulnerabilities if redirectUrl is a\n * user-/attacker-controlled value.\n *\n * @param {!Location} loc The Location object whose href property is to be\n *     assigned to.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.setLocationHref = function(loc, url) {\n  goog.dom.asserts.assertIsLocation(loc);\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  loc.href = goog.html.SafeUrl.unwrap(safeUrl);\n};\n\n\n/**\n * Safely replaces the URL of a Location object.\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and\n * passed to Location#replace. If url is of type string however, it is\n * first sanitized using goog.html.SafeUrl.sanitize.\n *\n * Example usage:\n *   goog.dom.safe.replaceHref(document.location, newUrl);\n * which is a safe alternative to\n *   document.location.replace(newUrl);\n * The latter can result in XSS vulnerabilities if newUrl is a\n * user-/attacker-controlled value.\n *\n * @param {!Location} loc The Location object which is to be replaced.\n * @param {string|!goog.html.SafeUrl} url The URL to assign.\n * @see goog.html.SafeUrl#sanitize\n */\ngoog.dom.safe.replaceLocation = function(loc, url) {\n  goog.dom.asserts.assertIsLocation(loc);\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  loc.replace(goog.html.SafeUrl.unwrap(safeUrl));\n};\n\n\n/**\n * Safely opens a URL in a new window (via window.open).\n *\n * If url is of type goog.html.SafeUrl, its value is unwrapped and passed in to\n * window.open.  If url is of type string however, it is first sanitized\n * using goog.html.SafeUrl.sanitize.\n *\n * Note that this function does not prevent leakages via the referer that is\n * sent by window.open. It is advised to only use this to open 1st party URLs.\n *\n * Example usage:\n *   goog.dom.safe.openInWindow(url);\n * which is a safe alternative to\n *   window.open(url);\n * The latter can result in XSS vulnerabilities if redirectUrl is a\n * user-/attacker-controlled value.\n *\n * @param {string|!goog.html.SafeUrl} url The URL to open.\n * @param {Window=} opt_openerWin Window of which to call the .open() method.\n *     Defaults to the global window.\n * @param {!goog.string.Const=} opt_name Name of the window to open in. Can be\n *     _top, etc as allowed by window.open().\n * @param {string=} opt_specs Comma-separated list of specifications, same as\n *     in window.open().\n * @param {boolean=} opt_replace Whether to replace the current entry in browser\n *     history, same as in window.open().\n * @return {Window} Window the url was opened in.\n */\ngoog.dom.safe.openInWindow = function(\n    url, opt_openerWin, opt_name, opt_specs, opt_replace) {\n  /** @type {!goog.html.SafeUrl} */\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl = url;\n  } else {\n    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  var win = opt_openerWin || window;\n  return win.open(\n      goog.html.SafeUrl.unwrap(safeUrl),\n      // If opt_name is undefined, simply passing that in to open() causes IE to\n      // reuse the current window instead of opening a new one. Thus we pass ''\n      // in instead, which according to spec opens a new window. See\n      // https://html.spec.whatwg.org/multipage/browsers.html#dom-open .\n      opt_name ? goog.string.Const.unwrap(opt_name) : '', opt_specs,\n      opt_replace);\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Unchecked conversions to create values of goog.html types from\n * plain strings.  Use of these functions could potentially result in instances\n * of goog.html types that violate their type contracts, and hence result in\n * security vulnerabilties.\n *\n * Therefore, all uses of the methods herein must be carefully security\n * reviewed.  Avoid use of the methods in this file whenever possible; instead\n * prefer to create instances of goog.html types using inherently safe builders\n * or template systems.\n */\n\n\ngoog.provide('goog.html.uncheckedconversions');\n\ngoog.require('goog.asserts');\ngoog.require('goog.html.SafeHtml');\ngoog.require('goog.html.SafeScript');\ngoog.require('goog.html.SafeStyle');\ngoog.require('goog.html.SafeStyleSheet');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.string');\ngoog.require('goog.string.Const');\n\n\n/**\n * Performs an \"unchecked conversion\" to SafeHtml from a plain string that is\n * known to satisfy the SafeHtml type contract.\n *\n * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\n * that the value of `html` satisfies the SafeHtml type contract in all\n * possible program states.\n *\n *\n * @param {!goog.string.Const} justification A constant string explaining why\n *     this use of this method is safe. May include a security review ticket\n *     number.\n * @param {string} html A string that is claimed to adhere to the SafeHtml\n *     contract.\n * @param {?goog.i18n.bidi.Dir=} opt_dir The optional directionality of the\n *     SafeHtml to be constructed. A null or undefined value signifies an\n *     unknown directionality.\n * @return {!goog.html.SafeHtml} The value of html, wrapped in a SafeHtml\n *     object.\n */\ngoog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract =\n    function(justification, html, opt_dir) {\n  // unwrap() called inside an assert so that justification can be optimized\n  // away in production code.\n  goog.asserts.assertString(\n      goog.string.Const.unwrap(justification), 'must provide justification');\n  goog.asserts.assert(\n      !goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),\n      'must provide non-empty justification');\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      html, opt_dir || null);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" to SafeScript from a plain string that is\n * known to satisfy the SafeScript type contract.\n *\n * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\n * that the value of `script` satisfies the SafeScript type contract in\n * all possible program states.\n *\n *\n * @param {!goog.string.Const} justification A constant string explaining why\n *     this use of this method is safe. May include a security review ticket\n *     number.\n * @param {string} script The string to wrap as a SafeScript.\n * @return {!goog.html.SafeScript} The value of `script`, wrapped in a\n *     SafeScript object.\n */\ngoog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract =\n    function(justification, script) {\n  // unwrap() called inside an assert so that justification can be optimized\n  // away in production code.\n  goog.asserts.assertString(\n      goog.string.Const.unwrap(justification), 'must provide justification');\n  goog.asserts.assert(\n      !goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),\n      'must provide non-empty justification');\n  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(\n      script);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" to SafeStyle from a plain string that is\n * known to satisfy the SafeStyle type contract.\n *\n * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\n * that the value of `style` satisfies the SafeStyle type contract in all\n * possible program states.\n *\n *\n * @param {!goog.string.Const} justification A constant string explaining why\n *     this use of this method is safe. May include a security review ticket\n *     number.\n * @param {string} style The string to wrap as a SafeStyle.\n * @return {!goog.html.SafeStyle} The value of `style`, wrapped in a\n *     SafeStyle object.\n */\ngoog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract =\n    function(justification, style) {\n  // unwrap() called inside an assert so that justification can be optimized\n  // away in production code.\n  goog.asserts.assertString(\n      goog.string.Const.unwrap(justification), 'must provide justification');\n  goog.asserts.assert(\n      !goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),\n      'must provide non-empty justification');\n  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(\n      style);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" to SafeStyleSheet from a plain string\n * that is known to satisfy the SafeStyleSheet type contract.\n *\n * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\n * that the value of `styleSheet` satisfies the SafeStyleSheet type\n * contract in all possible program states.\n *\n *\n * @param {!goog.string.Const} justification A constant string explaining why\n *     this use of this method is safe. May include a security review ticket\n *     number.\n * @param {string} styleSheet The string to wrap as a SafeStyleSheet.\n * @return {!goog.html.SafeStyleSheet} The value of `styleSheet`, wrapped\n *     in a SafeStyleSheet object.\n */\ngoog.html.uncheckedconversions\n    .safeStyleSheetFromStringKnownToSatisfyTypeContract = function(\n    justification, styleSheet) {\n  // unwrap() called inside an assert so that justification can be optimized\n  // away in production code.\n  goog.asserts.assertString(\n      goog.string.Const.unwrap(justification), 'must provide justification');\n  goog.asserts.assert(\n      !goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),\n      'must provide non-empty justification');\n  return goog.html.SafeStyleSheet\n      .createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" to SafeUrl from a plain string that is\n * known to satisfy the SafeUrl type contract.\n *\n * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\n * that the value of `url` satisfies the SafeUrl type contract in all\n * possible program states.\n *\n *\n * @param {!goog.string.Const} justification A constant string explaining why\n *     this use of this method is safe. May include a security review ticket\n *     number.\n * @param {string} url The string to wrap as a SafeUrl.\n * @return {!goog.html.SafeUrl} The value of `url`, wrapped in a SafeUrl\n *     object.\n */\ngoog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract =\n    function(justification, url) {\n  // unwrap() called inside an assert so that justification can be optimized\n  // away in production code.\n  goog.asserts.assertString(\n      goog.string.Const.unwrap(justification), 'must provide justification');\n  goog.asserts.assert(\n      !goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),\n      'must provide non-empty justification');\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" to TrustedResourceUrl from a plain string\n * that is known to satisfy the TrustedResourceUrl type contract.\n *\n * IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\n * that the value of `url` satisfies the TrustedResourceUrl type contract\n * in all possible program states.\n *\n *\n * @param {!goog.string.Const} justification A constant string explaining why\n *     this use of this method is safe. May include a security review ticket\n *     number.\n * @param {string} url The string to wrap as a TrustedResourceUrl.\n * @return {!goog.html.TrustedResourceUrl} The value of `url`, wrapped in\n *     a TrustedResourceUrl object.\n */\ngoog.html.uncheckedconversions\n    .trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(\n    justification, url) {\n  // unwrap() called inside an assert so that justification can be optimized\n  // away in production code.\n  goog.asserts.assertString(\n      goog.string.Const.unwrap(justification), 'must provide justification');\n  goog.asserts.assert(\n      !goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),\n      'must provide non-empty justification');\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * @fileoverview Defines the mock grecaptcha utilities used for development\n * testing.\n */\ngoog.provide('fireauth.GRecaptchaMockFactory');\ngoog.provide('fireauth.RecaptchaMock');\n\ngoog.require('fireauth.grecaptcha');\ngoog.require('fireauth.util');\ngoog.require('goog.dom');\ngoog.require('goog.events');\ngoog.require('goog.events.EventType');\n\n\n/**\n * The mock grecaptcha factory.\n * @constructor\n * @implements {fireauth.grecaptcha}\n */\nfireauth.GRecaptchaMockFactory = function() {\n  /**\n   * @const @private {!Object<string, !fireauth.RecaptchaMock>} The hash map\n   *     that stores the widget ID to mock reCAPTCHA instances.\n   */\n  this.map_ = {};\n  /**\n   * @private {number} The current widget ID counter, incremented each time\n   *     a new mock reCAPTCHA is created.\n   */\n  this.counter_ = fireauth.GRecaptchaMockFactory.START_INSTANCE_ID;\n};\n\n\n/**\n * @const {number} The start ID of the first created mock reCAPTCHA.\n */\nfireauth.GRecaptchaMockFactory.START_INSTANCE_ID = 1000000000000;\n\n\n/** @const {number} The reCAPTCHA expiration time in milliseconds. */\nfireauth.GRecaptchaMockFactory.EXPIRATION_TIME_MS = 60000;\n\n\n/** @const {number} The reCAPTCHA auto solving time in milliseconds. */\nfireauth.GRecaptchaMockFactory.SOLVE_TIME_MS = 500;\n\n\n/**\n * @private {?fireauth.GRecaptchaMockFactory} The singleton instance\n *     for grecaptcha mock object.\n */\nfireauth.GRecaptchaMockFactory.instance_ = null;\n\n\n/**\n * @return {!fireauth.GRecaptchaMockFactory} The singleton grecaptcha mock\n *     instance.\n */\nfireauth.GRecaptchaMockFactory.getInstance = function() {\n  // Check if there is an existing instance. Otherwise, create one and cache it.\n  if (!fireauth.GRecaptchaMockFactory.instance_) {\n    fireauth.GRecaptchaMockFactory.instance_ =\n        new fireauth.GRecaptchaMockFactory();\n  }\n  return fireauth.GRecaptchaMockFactory.instance_;\n};\n\n\n/**\n * Creates a new instance of the mock reCAPTCHA widget.\n *\n * @param {(!Element|string)} elementOrId Element or element ID for the\n *     placeholder to render the reCAPTCHA client.\n * @param {!Object} params Parameters for the reCAPTCHA client.\n * @return {number} The client ID.\n * @override\n */\nfireauth.GRecaptchaMockFactory.prototype.render =\n    function(elementOrId, params) {\n  this.map_[this.counter_.toString()] =\n      new fireauth.RecaptchaMock(elementOrId, params);\n  return this.counter_++;\n};\n\n\n/**\n * Resets a reCAPTCHA with the given ID. If an ID is not provided, resets the\n * first instance.\n *\n * @param {number=} opt_id The id of the reCAPTCHA client. Defaults to the first\n *     widget created if unspecified.\n * @override\n */\nfireauth.GRecaptchaMockFactory.prototype.reset = function(opt_id) {\n  var mock = this.getMock_(opt_id);\n  var id = this.getId_(opt_id);\n  if (mock && id) {\n    mock.delete();\n    delete this.map_[/** @type {string} */ (id)];\n  }\n};\n\n\n/**\n * Gets the response for the client with the given ID. If an ID is not\n * provided, gets the response for the default client.\n *\n * @param {number=} opt_id The ID of the reCAPTCHA widget. Defaults to the first\n *     widget created if unspecified.\n * @return {?string}\n * @override\n */\nfireauth.GRecaptchaMockFactory.prototype.getResponse = function(opt_id) {\n  var mock = this.getMock_(opt_id);\n  return mock ? mock.getResponse() : null;\n};\n\n\n/**\n * Programmatically triggers the invisible reCAPTCHA.\n *\n * @param {number=} opt_id The ID of the recaptcha client. Defaults to the first\n *     widget created if unspecified.\n * @override\n */\nfireauth.GRecaptchaMockFactory.prototype.execute = function(opt_id) {\n  var mock = this.getMock_(opt_id);\n  if (mock) {\n    mock.execute();\n  }\n};\n\n\n/**\n * @param {number=} opt_id The optional ID to lookup.\n * @return {?fireauth.RecaptchaMock} The corresponding reCAPTCHA mock if found.\n * @private\n */\nfireauth.GRecaptchaMockFactory.prototype.getMock_ = function(opt_id) {\n  var id = this.getId_(opt_id);\n  return id ? this.map_[id] || null : null;\n};\n\n\n/**\n * @param {number=} opt_id The optional ID to lookup.\n * @return {?string} The corresponding reCAPTCHA mock ID if found.\n * @private\n */\nfireauth.GRecaptchaMockFactory.prototype.getId_ = function(opt_id) {\n  var id = typeof opt_id === 'undefined' ?\n      fireauth.GRecaptchaMockFactory.START_INSTANCE_ID : opt_id;\n  return id ? id.toString() : null;\n};\n\n\n/**\n * Mock single reCAPTCHA instance.\n * @param {(!Element|string)} elementOrId Element or element ID for the\n *     placeholder to render the reCAPTCHA client.\n * @param {!Object} params Parameters for the reCAPTCHA client.\n * @constructor\n */\nfireauth.RecaptchaMock = function(elementOrId, params) {\n  /** @private {boolean} Whether the instance was deleted. */\n  this.deleted_ = false;\n  /** @const @private {!Object} The reCAPTCHA parameters. */\n  this.params_ = params;\n  /** @private {?string} The simulated response token if available. */\n  this.responseToken_ = null;\n  /**\n   * @private {?number} The timer ID for response callback/expiration callback\n   *     to trigger.\n   */\n  this.timerId_ = null;\n  /** @const @private {boolean} Whether the reCAPTCHA is visible or not. */\n  this.isVisible_ = this.params_['size'] !== 'invisible';\n  /**\n   * @const @private {?Element} The container or button trigger of the\n   *     reCAPTCHA.\n   */\n  this.element_ = goog.dom.getElement(elementOrId);\n  var self = this;\n  /** @private {function(?)} The on click handler for invisible reCAPTCHAs. */\n  this.onClickHandler_ = function(event) {\n    self.execute();\n  };\n  if (this.isVisible_) {\n    // For a visible reCAPTCHA, simulate reCAPTCHA continuously solved\n    // and then expired.\n    this.execute();\n  } else {\n    // Trigger on button click on when execute is directly called.\n    goog.events.listen(\n        this.element_,\n        goog.events.EventType.CLICK,\n        this.onClickHandler_);\n  }\n};\n\n\n/** @return {?string} The current reCAPTCHA response. */\nfireauth.RecaptchaMock.prototype.getResponse = function() {\n  this.checkIfDeleted_();\n  return this.responseToken_;\n};\n\n\n/** Starts the reCAPTCHA mock solving/expiration cycle. */\nfireauth.RecaptchaMock.prototype.execute = function() {\n  this.checkIfDeleted_();\n  var self = this;\n  if (this.timerId_) {\n    return;\n  }\n  // Wait for expected delay before auto-solving.\n  this.timerId_ = setTimeout(function() {\n    // Generate random string as reCAPTCHA response token.\n    self.responseToken_ = fireauth.util.generateRandomAlphaNumericString(50);\n    // Trigger developer's callbacks.\n    var callback = self.params_['callback'];\n    var expirationCallback = self.params_['expired-callback'];\n    if (callback) {\n      try {\n        callback(self.responseToken_);\n      } catch (e) {}\n    }\n    // Wait for token to expire before triggering expiration callback and\n    // resetting token response.\n    self.timerId_ = setTimeout(function() {\n      self.timerId_ = null;\n      self.responseToken_ = null;\n      if (expirationCallback) {\n        try {\n          expirationCallback();\n        } catch (e) {}\n      }\n      if (self.isVisible_) {\n        self.execute();\n      }\n    }, fireauth.GRecaptchaMockFactory.EXPIRATION_TIME_MS);\n  }, fireauth.GRecaptchaMockFactory.SOLVE_TIME_MS);\n};\n\n\n/** Deletes the current mock instance. */\nfireauth.RecaptchaMock.prototype.delete = function() {\n  this.checkIfDeleted_();\n  this.deleted_ = true;\n  clearTimeout(this.timerId_);\n  this.timerId_ = null;\n  goog.events.unlisten(\n      this.element_,\n      goog.events.EventType.CLICK,\n      this.onClickHandler_);\n};\n\n\n/**\n * Checks whether the instance was deleted.\n * @private\n */\nfireauth.RecaptchaMock.prototype.checkIfDeleted_ = function() {\n  // This error should never be thrown externally.\n  // GRecaptchaMockFactory will ensure that a deleted instance is removed.\n  if (this.deleted_) {\n    throw new Error('reCAPTCHA mock was already deleted!');\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides utilities for displaying deprecation notices.\n */\ngoog.provide('fireauth.deprecation');\ngoog.provide('fireauth.deprecation.Deprecations');\ngoog.require('fireauth.util');\n\n\n/**\n * An enum of valid notices to display. All deprecation notices must be in this\n * enum. Deprecation messages should be unique and provide the full context\n * of what is deprecated (e.g. the fully qualified path to a method).\n * @enum {string}\n */\nfireauth.deprecation.Deprecations = {\n  CREATE_USER_WITH_EMAIL_AND_PASSWORD: 'firebase.auth.Auth.prototype.createUs' +\n      'erAndRetrieveDataWithEmailAndPassword is deprecated. Please use fireba' +\n      'se.auth.Auth.prototype.createUserWithEmailAndPassword instead.',\n  FETCH_PROVIDERS_FOR_EMAIL: 'firebase.auth.Auth.prototype.fetchProvidersForE' +\n      'mail is deprecated. Please use firebase.auth.Auth.prototype.fetchSignI' +\n      'nMethodsForEmail instead.',\n  LINK_WITH_CREDENTIAL: 'firebase.User.prototype.linkWithCredential is deprec' +\n      'ated. Please use firebase.User.prototype.linkAndRetrieveDataWithCreden' +\n      'tial instead.',\n  REAUTH_WITH_CREDENTIAL: 'firebase.User.prototype.reauthenticateWithCredenti' +\n      'al is deprecated. Please use firebase.User.prototype.reauthenticateAnd' +\n      'RetrieveDataWithCredential instead.',\n  SIGN_IN_ANONYMOUSLY: 'firebase.auth.Auth.prototype.signInAnonymouslyAndRetr' +\n      'ieveData is deprecated. Please use firebase.auth.Auth.prototype.signIn' +\n      'Anonymously instead.',\n  SIGN_IN_WITH_CREDENTIAL: 'firebase.auth.Auth.prototype.signInWithCredential' +\n      ' is deprecated. Please use firebase.auth.Auth.prototype.signInAndRetri' +\n      'eveDataWithCredential instead.',\n  SIGN_IN_WITH_CUSTOM_TOKEN: 'firebase.auth.Auth.prototype.signInAndRetrieveD' +\n      'ataWithCustomToken is deprecated. Please use firebase.auth.Auth.protot' +\n      'ype.signInWithCustomToken instead.',\n  SIGN_IN_WITH_EMAIL_AND_PASSWORD: 'firebase.auth.Auth.prototype.signInAndRet' +\n      'rieveDataWithEmailAndPassword is deprecated. Please use firebase.auth.' +\n      'Auth.prototype.signInWithEmailAndPassword instead.'\n};\n\n\n/**\n * Keeps track of notices that were already displayed.\n * @type {!Object<fireauth.deprecation.Deprecations, boolean>}\n * @private\n */\nfireauth.deprecation.shownMessages_ = {};\n\n\n/**\n * Logs a deprecation notice to the developer.\n * @param {!fireauth.deprecation.Deprecations} message\n */\nfireauth.deprecation.log = function(message) {\n  if (fireauth.deprecation.shownMessages_[message]) {\n    return;\n  }\n  fireauth.deprecation.shownMessages_[message] = true;\n  fireauth.util.consoleWarn(message);\n};\n\n\n/**\n * Resets the displayed deprecation notices.\n */\nfireauth.deprecation.resetForTesting = function() {\n  fireauth.deprecation.shownMessages_ =\n      /** @type {!Object<fireauth.deprecation.Deprecations, boolean>} */ ({});\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods for manipulating objects.\n */\n\ngoog.provide('fireauth.object');\n\ngoog.require('fireauth.deprecation');\ngoog.require('fireauth.deprecation.Deprecations');\n\n\n/**\n * Checks whether the defineProperty method allows to change the value of\n * the property.\n * @return {boolean} Whether the defineProperty method allows to change the\n *    value of the property.\n * @private\n */\nfireauth.object.isReadonlyConfigurable_ = function() {\n  // Android 2.3 stock browser doesn't allow to change the value of\n  // a read-only property once defined.\n  try {\n    var obj = {};\n    Object.defineProperty(obj, 'abcd', {\n      configurable: true,\n      enumerable: true,\n      value: 1\n    });\n    Object.defineProperty(obj, 'abcd', {\n      configurable: true,\n      enumerable: true,\n      value: 2\n    });\n    return obj['abcd'] == 2;\n  } catch (e) {\n    return false;\n  }\n};\n\n\n/**\n * @private {boolean} Whether the defineProperty method allows to change the\n *     value of the property.\n */\nfireauth.object.readonlyConfigurable_ =\n    fireauth.object.isReadonlyConfigurable_();\n\n\n/**\n * Defines a property on an object that is not writable by clients. However, the\n * property can be overwritten within the Firebase library through subsequent\n * calls to setReadonlyProperty.\n *\n * In browsers that do not support read-only properties (notably IE8 and below),\n * fall back to writable properties.\n *\n * @param {!Object} obj The object to which we add the property.\n * @param {string} key The name of the property.\n * @param {*} value The desired value.\n */\nfireauth.object.setReadonlyProperty = function(obj, key, value) {\n  if (fireauth.object.readonlyConfigurable_) {\n    Object.defineProperty(obj, key, {\n      configurable: true,\n      enumerable: true,\n      value: value\n    });\n  } else {\n    obj[key] = value;\n  }\n};\n\n\n/**\n * Defines a deprecated property, which emits a warning if the developer tries\n * to use it.\n *\n * In browsers that do not support getters, we fall back to a normal property\n * with no message.\n *\n * @param {!Object} obj The object to which we add the property.\n * @param {string} key The name of the deprecated property.\n * @param {*} value The desired value.\n * @param {!fireauth.deprecation.Deprecations} deprecationMessage The\n *     deprecation warning to display.\n */\nfireauth.object.setDeprecatedReadonlyProperty = function(obj, key, value,\n    deprecationMessage) {\n  if (fireauth.object.readonlyConfigurable_) {\n    Object.defineProperty(obj, key, {\n      configurable: true,\n      enumerable: true,\n      get: function() {\n        fireauth.deprecation.log(deprecationMessage);\n        return value;\n      }\n    });\n  } else {\n    obj[key] = value;\n  }\n};\n\n\n/**\n * Defines properties on an object that are not writable by clients, equivalent\n * to many calls to setReadonlyProperty.\n * @param {!Object} obj The object to which we add the properties.\n * @param {?Object<string, *>} props An object that maps the keys and values\n *     that we wish to add.\n */\nfireauth.object.setReadonlyProperties = function(obj, props) {\n  if (!props) {\n    return;\n  }\n\n  for (var key in props) {\n    if (props.hasOwnProperty(key)) {\n      fireauth.object.setReadonlyProperty(obj, key, props[key]);\n    }\n  }\n};\n\n\n/**\n * Makes a shallow read-only copy of an object. The writability of any child\n * objects will not be affected.\n * @param {?Object} obj The object that we wish to copy.\n * @return {!Object}\n */\nfireauth.object.makeReadonlyCopy = function(obj) {\n  var output = {};\n  fireauth.object.setReadonlyProperties(output, obj);\n  return output;\n};\n\n\n/**\n * Makes a shallow writable copy of a read-only object. The writability of any\n * child objects will not be affected.\n * @param {?Object} obj The object that we wish to copy.\n * @return {!Object}\n */\nfireauth.object.makeWritableCopy = function(obj) {\n  var output = {};\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      output[key] = obj[key];\n    }\n  }\n  return output;\n};\n\n\n/**\n * Returns true if the all the specified fields are present in obj and are not\n * null, undefined, or the empty string. If the field list is empty, returns\n * true regardless of the value of obj.\n * @param {?Object=} opt_obj The object.\n * @param {?Array<string>=} opt_fields The desired fields of the object.\n * @return {boolean} True if obj has all the specified fields.\n */\nfireauth.object.hasNonEmptyFields = function(opt_obj, opt_fields) {\n  if (!opt_fields || !opt_fields.length) {\n    return true;\n  }\n  if (!opt_obj) {\n    return false;\n  }\n  for (var i = 0; i < opt_fields.length; i++) {\n    var field = opt_obj[opt_fields[i]];\n    if (field === undefined || field === null || field === '') {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * Traverses the specified object and creates a read-only deep copy of it.\n * This will fail when circular references are contained within the object.\n * @param {*} obj The object to make a read-only copy from.\n * @return {*} A Read-only copy of the obj specified.\n */\nfireauth.object.unsafeCreateReadOnlyCopy = function(obj) {\n  var copy = obj;\n  if (typeof obj == 'object' && obj != null) {\n    // Make the right type of copy.\n    copy = 'length' in obj ? [] : {};\n    // Make a deep copy.\n    for (var key in obj) {\n      fireauth.object.setReadonlyProperty(\n          copy, key, fireauth.object.unsafeCreateReadOnlyCopy(obj[key]));\n    }\n  }\n  // Return the copy.\n  return copy;\n};\n\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the firebase.auth.ActionCodeInfo class that is returned\n * when calling checkActionCode API and is populated from the server response\n * directly.\n */\n\ngoog.provide('fireauth.ActionCodeInfo');\n\ngoog.require('fireauth.object');\n\n\n/**\n * Constructs the action code info object which provides metadata corresponding\n * to action codes. This includes the type of operation (RESET_PASSWORD,\n * VERIFY_EMAIL and RECOVER_EMAIL), the email corresponding to the operation\n * and in case of the recover email flow, the old and new email.\n * @param {!Object} response The server response for checkActionCode.\n * @constructor\n */\nfireauth.ActionCodeInfo = function(response) {\n  var data = {};\n  // Original email for email change revocation.\n  var email = response[fireauth.ActionCodeInfo.ServerFieldName.EMAIL];\n  // The new email.\n  var newEmail = response[fireauth.ActionCodeInfo.ServerFieldName.NEW_EMAIL];\n  var operation =\n      response[fireauth.ActionCodeInfo.ServerFieldName.REQUEST_TYPE];\n  // Email could be empty only if the request type is EMAIL_SIGNIN.\n  if (!operation ||\n      (operation != fireauth.ActionCodeInfo.RequestType.EMAIL_SIGNIN &&\n      !email)) {\n    // This is internal only.\n    throw new Error('Invalid provider user info!');\n  }\n  data[fireauth.ActionCodeInfo.DataField.FROM_EMAIL] = newEmail || null;\n  data[fireauth.ActionCodeInfo.DataField.EMAIL] = email || null;\n  fireauth.object.setReadonlyProperty(\n      this,\n      fireauth.ActionCodeInfo.PropertyName.OPERATION,\n      operation);\n  fireauth.object.setReadonlyProperty(\n      this,\n      fireauth.ActionCodeInfo.PropertyName.DATA,\n      fireauth.object.unsafeCreateReadOnlyCopy(data));\n};\n\n\n/**\n * Firebase Auth Action Code Info requestType possible values.\n * @enum {string}\n */\nfireauth.ActionCodeInfo.RequestType = {\n  PASSWORD_RESET: 'PASSWORD_RESET',\n  RECOVER_EMAIL: 'RECOVER_EMAIL',\n  EMAIL_SIGNIN: 'EMAIL_SIGNIN',\n  VERIFY_EMAIL: 'VERIFY_EMAIL'\n};\n\n\n/**\n * The checkActionCode endpoint server response field names.\n * @enum {string}\n */\nfireauth.ActionCodeInfo.ServerFieldName = {\n  // This is the current email of the account and in email recovery, the email\n  // to revert to.\n  EMAIL: 'email',\n  // For email recovery, this is the new email.\n  NEW_EMAIL: 'newEmail',\n  // The action code request type.\n  REQUEST_TYPE: 'requestType'\n};\n\n\n/**\n * The ActionCodeInfo data object field names.\n * @enum {string}\n */\nfireauth.ActionCodeInfo.DataField = {\n  EMAIL: 'email',\n  FROM_EMAIL: 'fromEmail'\n};\n\n\n/**\n * The ActionCodeInfo main property names\n * @enum {string}\n */\nfireauth.ActionCodeInfo.PropertyName = {\n  DATA: 'data',\n  OPERATION: 'operation'\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines developer-visible errors for Firebase Auth APIs.\n */\n\n\ngoog.provide('fireauth.AuthError');\ngoog.provide('fireauth.authenum');\ngoog.provide('fireauth.authenum.Error');\n\n\n\n/**\n * Error that can be returned to the developer.\n * @param {!fireauth.authenum.Error} code The short error code.\n * @param {?string=} opt_message The human-readable message.\n * @constructor\n * @extends {Error}\n */\nfireauth.AuthError = function(code, opt_message) {\n  this['code'] = fireauth.AuthError.ERROR_CODE_PREFIX + code;\n  this.message = opt_message || fireauth.AuthError.MESSAGES_[code] || '';\n};\ngoog.inherits(fireauth.AuthError, Error);\n\n\n/**\n * @return {!Object} The plain object form of the error.\n */\nfireauth.AuthError.prototype.toPlainObject = function() {\n  return {\n    'code': this['code'],\n    'message': this.message\n  };\n};\n\n\n/**\n * @return {!Object} The plain object form of the error. This is used by\n *     JSON.toStringify() to return the stringified representation of the error;\n * @override\n */\nfireauth.AuthError.prototype.toJSON = function() {\n  // Return the plain object representation in case JSON.stringify is called on\n  // an auth error instance.\n  return this.toPlainObject();\n};\n\n\n/**\n * @param {?Object|undefined} response The object response to convert to a\n *     fireauth.AuthError.\n * @return {?fireauth.AuthError} The error representation of the response.\n */\nfireauth.AuthError.fromPlainObject = function(response) {\n  var fullCode = response && response['code'];\n  if (fullCode) {\n    // Remove prefix from name.\n    var code = fullCode.substring(\n        fireauth.AuthError.ERROR_CODE_PREFIX.length);\n    return new fireauth.AuthError(\n        /** @type {fireauth.authenum.Error} */ (code), response['message']);\n  }\n  return null;\n};\n\n\n/**\n * Takes in an error and translates a specific error code to another one if\n * found in the current error.\n * @param {*} error The error thrown.\n * @param {!fireauth.authenum.Error} fromCode The error code to translate from.\n * @param {!fireauth.authenum.Error} toCode The error code to translate to.\n * @return {*} The mapped error message.\n */\nfireauth.AuthError.translateError = function(error, fromCode, toCode) {\n  if (error &&\n      error['code'] &&\n      error['code'] == fireauth.AuthError.ERROR_CODE_PREFIX + fromCode) {\n    // Translate the error to the new one.\n    return new fireauth.AuthError(toCode);\n  }\n  // Return the same error if the fromCode is not found.\n  return error;\n};\n\n\n/**\n * The error prefix for fireauth.Auth errors.\n * @protected {string}\n */\nfireauth.AuthError.ERROR_CODE_PREFIX = 'auth/';\n\n\n/**\n * Developer facing Firebase Auth error codes.\n * @enum {string}\n */\nfireauth.authenum.Error = {\n  ARGUMENT_ERROR: 'argument-error',\n  APP_NOT_AUTHORIZED: 'app-not-authorized',\n  APP_NOT_INSTALLED: 'app-not-installed',\n  CAPTCHA_CHECK_FAILED: 'captcha-check-failed',\n  CODE_EXPIRED: 'code-expired',\n  CORDOVA_NOT_READY: 'cordova-not-ready',\n  CORS_UNSUPPORTED: 'cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE: 'credential-already-in-use',\n  CREDENTIAL_MISMATCH: 'custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'requires-recent-login',\n  DYNAMIC_LINK_NOT_ACTIVATED: 'dynamic-link-not-activated',\n  EMAIL_EXISTS: 'email-already-in-use',\n  EXPIRED_OOB_CODE: 'expired-action-code',\n  EXPIRED_POPUP_REQUEST: 'cancelled-popup-request',\n  INTERNAL_ERROR: 'internal-error',\n  INVALID_API_KEY: 'invalid-api-key',\n  INVALID_APP_CREDENTIAL: 'invalid-app-credential',\n  INVALID_APP_ID: 'invalid-app-id',\n  INVALID_AUTH: 'invalid-user-token',\n  INVALID_AUTH_EVENT: 'invalid-auth-event',\n  INVALID_CERT_HASH: 'invalid-cert-hash',\n  INVALID_CODE: 'invalid-verification-code',\n  INVALID_CONTINUE_URI: 'invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION: 'invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN: 'invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN: 'invalid-dynamic-link-domain',\n  INVALID_EMAIL: 'invalid-email',\n  INVALID_IDP_RESPONSE: 'invalid-credential',\n  INVALID_MESSAGE_PAYLOAD: 'invalid-message-payload',\n  INVALID_OAUTH_CLIENT_ID: 'invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER: 'invalid-oauth-provider',\n  INVALID_OOB_CODE: 'invalid-action-code',\n  INVALID_ORIGIN: 'unauthorized-domain',\n  INVALID_PASSWORD: 'wrong-password',\n  INVALID_PERSISTENCE: 'invalid-persistence-type',\n  INVALID_PHONE_NUMBER: 'invalid-phone-number',\n  INVALID_PROVIDER_ID: 'invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL: 'invalid-recipient-email',\n  INVALID_SENDER: 'invalid-sender',\n  INVALID_SESSION_INFO: 'invalid-verification-id',\n  MISSING_ANDROID_PACKAGE_NAME: 'missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL: 'missing-app-credential',\n  MISSING_AUTH_DOMAIN: 'auth-domain-config-required',\n  MISSING_CODE: 'missing-verification-code',\n  MISSING_CONTINUE_URI: 'missing-continue-uri',\n  MISSING_IFRAME_START: 'missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID: 'missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE: 'missing-or-invalid-nonce',\n  MISSING_PHONE_NUMBER: 'missing-phone-number',\n  MISSING_SESSION_INFO: 'missing-verification-id',\n  MODULE_DESTROYED: 'app-deleted',\n  NEED_CONFIRMATION: 'account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED: 'network-request-failed',\n  NULL_USER: 'null-user',\n  NO_AUTH_EVENT: 'no-auth-event',\n  NO_SUCH_PROVIDER: 'no-such-provider',\n  OPERATION_NOT_ALLOWED: 'operation-not-allowed',\n  OPERATION_NOT_SUPPORTED: 'operation-not-supported-in-this-environment',\n  POPUP_BLOCKED: 'popup-blocked',\n  POPUP_CLOSED_BY_USER: 'popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED: 'provider-already-linked',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER: 'redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING: 'redirect-operation-pending',\n  REJECTED_CREDENTIAL: 'rejected-credential',\n  TIMEOUT: 'timeout',\n  TOKEN_EXPIRED: 'user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'too-many-requests',\n  UNAUTHORIZED_DOMAIN: 'unauthorized-continue-uri',\n  UNSUPPORTED_PERSISTENCE: 'unsupported-persistence-type',\n  USER_CANCELLED: 'user-cancelled',\n  USER_DELETED: 'user-not-found',\n  USER_DISABLED: 'user-disabled',\n  USER_MISMATCH: 'user-mismatch',\n  USER_SIGNED_OUT: 'user-signed-out',\n  WEAK_PASSWORD: 'weak-password',\n  WEB_STORAGE_UNSUPPORTED: 'web-storage-unsupported'\n};\n\n\n/**\n * Map from developer error codes to human-readable error messages.\n * @private {!Object<string, string>}\n */\nfireauth.AuthError.MESSAGES_ = {};\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.ARGUMENT_ERROR] = '';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.APP_NOT_AUTHORIZED] =\n    'This app, identified by the domain where it\\'s hosted, is not ' +\n    'authorized to use Firebase Authentication with the provided API key. ' +\n    'Review your key configuration in the Google API console.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.APP_NOT_INSTALLED] =\n    'The requested mobile application corresponding to the identifier (' +\n    'Android package name or iOS bundle ID) provided is not installed on ' +\n    'this device.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CAPTCHA_CHECK_FAILED] =\n    'The reCAPTCHA response token provided is either invalid, expired, ' +\n    'already used or the domain associated with it does not match the list ' +\n    'of whitelisted domains.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CODE_EXPIRED] =\n    'The SMS code has expired. Please re-send the verification code to try ' +\n    'again.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CORDOVA_NOT_READY] =\n    'Cordova framework is not ready.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CORS_UNSUPPORTED] =\n    'This browser is not supported.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.CREDENTIAL_ALREADY_IN_USE] =\n    'This credential is already associated with a different user account.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CREDENTIAL_MISMATCH] =\n    'The custom token corresponds to a different audience.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.CREDENTIAL_TOO_OLD_LOGIN_AGAIN] =\n    'This operation is sensitive and requires recent authentication. Log in ' +\n    'again before retrying this request.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.DYNAMIC_LINK_NOT_ACTIVATED] = 'Please activate ' +\n    'Dynamic Links in the Firebase Console and agree to the terms and ' +\n    'conditions.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.EMAIL_EXISTS] =\n    'The email address is already in use by another account.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.EXPIRED_OOB_CODE] =\n    'The action code has expired. ';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.EXPIRED_POPUP_REQUEST] =\n    'This operation has been cancelled due to another conflicting popup ' +\n    'being opened.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INTERNAL_ERROR] =\n    'An internal error has occurred.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_APP_CREDENTIAL] =\n    'The phone verification request contains an invalid application verifier.' +\n    ' The reCAPTCHA token response is either invalid or expired.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_APP_ID] =\n    'The mobile app identifier is not registed for the current project.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_AUTH] =\n    'This user\\'s credential isn\\'t valid for this project. This can happen ' +\n    'if the user\\'s token has been tampered with, or if the user isn\\'t for ' +\n    'the project associated with this API key.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_AUTH_EVENT] =\n    'An internal error has occurred.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_CODE] =\n    'The SMS verification code used to create the phone auth credential is ' +\n    'invalid. Please resend the verification code sms and be sure use the ' +\n    'verification code provided by the user.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_CONTINUE_URI] =\n    'The continue URL provided in the request is invalid.';\nfireauth.AuthError.MESSAGES_[\n     fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION] = 'The following' +\n    ' Cordova plugins must be installed to enable OAuth sign-in: ' +\n    'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\n    'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\n    'cordova-plugin-customurlscheme.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_CUSTOM_TOKEN] =\n    'The custom token format is incorrect. Please check the documentation.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.INVALID_DYNAMIC_LINK_DOMAIN] = 'The provided ' +\n    'dynamic link domain is not configured or authorized for the current ' +\n    'project.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_EMAIL] =\n    'The email address is badly formatted.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_API_KEY] =\n    'Your API key is invalid, please check you have copied it correctly.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_CERT_HASH] =\n    'The SHA-1 certificate hash provided is invalid.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_IDP_RESPONSE] =\n    'The supplied auth credential is malformed or has expired.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_PERSISTENCE] =\n    'The specified persistence type is invalid. It can only be local, ' +\n    'session or none.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_MESSAGE_PAYLOAD] =\n    'The email template corresponding to this action contains invalid charac' +\n    'ters in its message. Please fix by going to the Auth email templates se' +\n    'ction in the Firebase Console.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_OAUTH_PROVIDER] =\n    'EmailAuthProvider is not supported for this operation. This operation ' +\n    'only supports OAuth providers.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_OAUTH_CLIENT_ID] =\n    'The OAuth client ID provided is either invalid or does not match the ' +\n    'specified API key.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_ORIGIN] =\n    'This domain is not authorized for OAuth operations for your Firebase ' +\n    'project. Edit the list of authorized domains from the Firebase console.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_OOB_CODE] =\n    'The action code is invalid. This can happen if the code is malformed, ' +\n    'expired, or has already been used.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_PASSWORD] =\n    'The password is invalid or the user does not have a password.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_PHONE_NUMBER] =\n    'The format of the phone number provided is incorrect. Please enter the ' +\n    'phone number in a format that can be parsed into E.164 format. E.164 ' +\n    'phone numbers are written in the format [+][country code][subscriber ' +\n    'number including area code].';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_PROVIDER_ID] =\n    'The specified provider ID is invalid.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_RECIPIENT_EMAIL] =\n    'The email corresponding to this action failed to send as the provided ' +\n    'recipient email address is invalid.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_SENDER] =\n    'The email template corresponding to this action contains an invalid sen' +\n    'der email or name. Please fix by going to the Auth email templates sect' +\n    'ion in the Firebase Console.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_SESSION_INFO] =\n    'The verification ID used to create the phone auth credential is invalid.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.MISSING_ANDROID_PACKAGE_NAME] = 'An Android ' +\n    'Package Name must be provided if the Android App is required to be ' +\n    'installed.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_AUTH_DOMAIN] =\n    'Be sure to include authDomain when calling firebase.initializeApp(), ' +\n    'by following the instructions in the Firebase console.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_APP_CREDENTIAL] =\n    'The phone verification request is missing an application verifier ' +\n    'assertion. A reCAPTCHA response token needs to be provided.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_CODE] =\n    'The phone auth credential was created with an empty SMS verification ' +\n    'code.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_CONTINUE_URI] =\n    'A continue URL must be provided in the request.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_IFRAME_START] =\n    'An internal error has occurred.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_IOS_BUNDLE_ID] =\n    'An iOS Bundle ID must be provided if an App Store ID is provided.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_OR_INVALID_NONCE] =\n    'The OIDC ID token requires a valid unhashed nonce.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_PHONE_NUMBER] =\n    'To send verification codes, provide a phone number for the recipient.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_SESSION_INFO] =\n    'The phone auth credential was created with an empty verification ID.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MODULE_DESTROYED] =\n    'This instance of FirebaseApp has been deleted.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NEED_CONFIRMATION] =\n    'An account already exists with the same email address but different ' +\n    'sign-in credentials. Sign in using a provider associated with this ' +\n    'email address.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NETWORK_REQUEST_FAILED] =\n    'A network error (such as timeout, interrupted connection or ' +\n    'unreachable host) has occurred.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NO_AUTH_EVENT] =\n    'An internal error has occurred.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NO_SUCH_PROVIDER] =\n    'User was not linked to an account with the given provider.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NULL_USER] =\n    'A null user object was provided as the argument for an operation which ' +\n    'requires a non-null user object.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.OPERATION_NOT_ALLOWED] =\n    'The given sign-in provider is disabled for this Firebase project. ' +\n    'Enable it in the Firebase console, under the sign-in method tab of the ' +\n    'Auth section.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.OPERATION_NOT_SUPPORTED] =\n    'This operation is not supported in the environment this application is ' +\n    'running on. \"location.protocol\" must be http, https or chrome-extension' +\n    ' and web storage must be enabled.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.POPUP_BLOCKED] =\n    'Unable to establish a connection with the popup. It may have been ' +\n    'blocked by the browser.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.POPUP_CLOSED_BY_USER] =\n    'The popup has been closed by the user before finalizing the operation.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.PROVIDER_ALREADY_LINKED] =\n    'User can only be linked to one identity for the given provider.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.QUOTA_EXCEEDED] =\n    'The project\\'s quota for this operation has been exceeded.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.REDIRECT_CANCELLED_BY_USER] =\n    'The redirect operation has been cancelled by the user before finalizing.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.REDIRECT_OPERATION_PENDING] =\n    'A redirect sign-in operation is already pending.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.REJECTED_CREDENTIAL] =\n    'The request contains malformed or mismatching credentials.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.TIMEOUT] =\n    'The operation has timed out.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.TOKEN_EXPIRED] =\n    'The user\\'s credential is no longer valid. The user must sign in again.';\nfireauth.AuthError.MESSAGES_[\n    fireauth.authenum.Error.TOO_MANY_ATTEMPTS_TRY_LATER] =\n    'We have blocked all requests from this device due to unusual activity. ' +\n    'Try again later.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.UNAUTHORIZED_DOMAIN] =\n    'The domain of the continue URL is not whitelisted.  Please whitelist ' +\n    'the domain in the Firebase console.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.UNSUPPORTED_PERSISTENCE] =\n    'The current environment does not support the specified persistence type.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_CANCELLED] =\n    'User did not grant your application the permissions it requested.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_DELETED] =\n    'There is no user record corresponding to this identifier. The user may ' +\n    'have been deleted.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_DISABLED] =\n    'The user account has been disabled by an administrator.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_MISMATCH] =\n    'The supplied credentials do not correspond to the previously signed in ' +\n    'user.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_SIGNED_OUT] = '';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.WEAK_PASSWORD] =\n    'The password must be 6 characters long or more.';\nfireauth.AuthError.MESSAGES_[fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED] =\n    'This browser is not supported or 3rd party cookies and data may be ' +\n    'disabled.';\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility for firebase.auth.ActionCodeSettings and its helper\n * functions.\n */\n\ngoog.provide('fireauth.ActionCodeSettings');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\n\n\n/**\n * Defines the action code settings structure used to specify how email action\n * links are handled.\n * @param {!Object} settingsObj The action code settings object used to\n *     construct the action code link.\n * @constructor @struct @final\n */\nfireauth.ActionCodeSettings = function(settingsObj) {\n  // Validate the settings object passed.\n  this.initialize_(settingsObj);\n};\n\n\n/**\n * Validate the action code settings object.\n * @param {!Object} settingsObj The action code settings object to validate.\n * @private\n */\nfireauth.ActionCodeSettings.prototype.initialize_ = function(settingsObj) {\n  // URL should be required.\n  var continueUrl = settingsObj[fireauth.ActionCodeSettings.RawField.URL];\n  if (typeof continueUrl === 'undefined') {\n    throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_CONTINUE_URI);\n  } else if (typeof continueUrl !== 'string' ||\n             (typeof continueUrl === 'string' && !continueUrl.length)) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_CONTINUE_URI);\n  }\n  /** @const @private {string} The continue URL. */\n  this.continueUrl_ = /** @type {string} */ (continueUrl);\n\n  // Validate Android parameters.\n  /** @private {?string} The Android package name. */\n  this.apn_ = null;\n  /** @private {?string} The Android minimum version. */\n  this.amv_ = null;\n  /** @private {boolean} Whether to install the Android app. */\n  this.installApp_ = false;\n  var androidSettings =\n      settingsObj[fireauth.ActionCodeSettings.RawField.ANDROID];\n  if (androidSettings && typeof androidSettings === 'object') {\n    var apn = androidSettings[\n      fireauth.ActionCodeSettings.AndroidRawField.PACKAGE_NAME];\n    var installApp = androidSettings[\n      fireauth.ActionCodeSettings.AndroidRawField.INSTALL_APP];\n    var amv = androidSettings[\n      fireauth.ActionCodeSettings.AndroidRawField.MINIMUM_VERSION];\n    if (typeof apn === 'string' && apn.length) {\n      this.apn_ = /** @type {string} */ (apn);\n      if (typeof installApp !== 'undefined' &&\n          typeof installApp !== 'boolean') {\n        throw new fireauth.AuthError(\n            fireauth.authenum.Error.ARGUMENT_ERROR,\n            fireauth.ActionCodeSettings.AndroidRawField.INSTALL_APP +\n            ' property must be a boolean when specified.');\n      }\n      this.installApp_ = !!installApp;\n      if (typeof amv !== 'undefined' &&\n          (typeof amv !== 'string' ||\n           (typeof amv === 'string' && !amv.length))) {\n        throw new fireauth.AuthError(\n            fireauth.authenum.Error.ARGUMENT_ERROR,\n            fireauth.ActionCodeSettings.AndroidRawField.MINIMUM_VERSION +\n            ' property must be a non empty string when specified.');\n      }\n      this.amv_ = /** @type {?string}*/ (amv || null);\n    } else if (typeof apn !== 'undefined') {\n      throw new fireauth.AuthError(\n          fireauth.authenum.Error.ARGUMENT_ERROR,\n          fireauth.ActionCodeSettings.AndroidRawField.PACKAGE_NAME +\n          ' property must be a non empty string when specified.');\n    } else if (typeof installApp !== 'undefined' ||\n               typeof amv !== 'undefined') {\n      // If installApp or amv specified with no valid APN, fail quickly.\n      throw new fireauth.AuthError(\n          fireauth.authenum.Error.MISSING_ANDROID_PACKAGE_NAME);\n    }\n  } else if (typeof androidSettings !== 'undefined') {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        fireauth.ActionCodeSettings.RawField.ANDROID +\n        ' property must be a non null object when specified.');\n  }\n\n  // Validate iOS parameters.\n  /** @private {?string} The iOS bundle ID. */\n  this.ibi_ = null;\n  var iosSettings = settingsObj[fireauth.ActionCodeSettings.RawField.IOS];\n  if (iosSettings && typeof iosSettings === 'object') {\n    var ibi = iosSettings[\n      fireauth.ActionCodeSettings.IosRawField.BUNDLE_ID];\n    if (typeof ibi === 'string' && ibi.length) {\n      this.ibi_ = /** @type {string}*/ (ibi);\n    } else if (typeof ibi !== 'undefined') {\n      throw new fireauth.AuthError(\n          fireauth.authenum.Error.ARGUMENT_ERROR,\n          fireauth.ActionCodeSettings.IosRawField.BUNDLE_ID +\n          ' property must be a non empty string when specified.');\n    }\n  } else if (typeof iosSettings !== 'undefined') {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        fireauth.ActionCodeSettings.RawField.IOS +\n        ' property must be a non null object when specified.');\n  }\n\n  // Validate canHandleCodeInApp.\n  var canHandleCodeInApp =\n      settingsObj[fireauth.ActionCodeSettings.RawField.HANDLE_CODE_IN_APP];\n  if (typeof canHandleCodeInApp !== 'undefined' &&\n      typeof canHandleCodeInApp !== 'boolean') {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        fireauth.ActionCodeSettings.RawField.HANDLE_CODE_IN_APP +\n        ' property must be a boolean when specified.');\n  }\n  /** @const @private {boolean} Whether the code can be handled in app. */\n  this.canHandleCodeInApp_ = !!canHandleCodeInApp;\n\n  // Validate dynamicLinkDomain.\n  var dynamicLinkDomain = settingsObj[\n      fireauth.ActionCodeSettings.RawField.DYNAMIC_LINK_DOMAIN];\n  if (typeof dynamicLinkDomain !== 'undefined' &&\n      (typeof dynamicLinkDomain !== 'string' ||\n       (typeof dynamicLinkDomain === 'string' &&\n        !dynamicLinkDomain.length))) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        fireauth.ActionCodeSettings.RawField.DYNAMIC_LINK_DOMAIN +\n        ' property must be a non empty string when specified.');\n  }\n  /** @const @private {?string} The FDL domain. */\n  this.dynamicLinkDomain_ = dynamicLinkDomain || null;\n};\n\n\n/**\n * Action code settings backend request field names.\n * @enum {string}\n */\nfireauth.ActionCodeSettings.RequestField = {\n  ANDROID_INSTALL_APP: 'androidInstallApp',\n  ANDROID_MINIMUM_VERSION: 'androidMinimumVersion',\n  ANDROID_PACKAGE_NAME: 'androidPackageName',\n  CAN_HANDLE_CODE_IN_APP: 'canHandleCodeInApp',\n  CONTINUE_URL: 'continueUrl',\n  DYNAMIC_LINK_DOMAIN: 'dynamicLinkDomain',\n  IOS_BUNDLE_ID: 'iOSBundleId'\n};\n\n\n/**\n * Action code settings raw field names.\n * @enum {string}\n */\nfireauth.ActionCodeSettings.RawField = {\n  ANDROID: 'android',\n  DYNAMIC_LINK_DOMAIN: 'dynamicLinkDomain',\n  HANDLE_CODE_IN_APP: 'handleCodeInApp',\n  IOS: 'iOS',\n  URL: 'url'\n};\n\n\n/**\n * Action code settings raw Android raw field names.\n * @enum {string}\n */\nfireauth.ActionCodeSettings.AndroidRawField = {\n  INSTALL_APP: 'installApp',\n  MINIMUM_VERSION: 'minimumVersion',\n  PACKAGE_NAME: 'packageName'\n};\n\n\n/**\n * Action code settings raw iOS raw field names.\n * @enum {string}\n */\nfireauth.ActionCodeSettings.IosRawField = {\n  BUNDLE_ID: 'bundleId'\n};\n\n\n/**\n * Builds and returns the backend request for the passed action code settings.\n * @return {!Object} The constructed backend request populated with the action\n *     code settings parameters.\n */\nfireauth.ActionCodeSettings.prototype.buildRequest = function() {\n  // Construct backend request.\n  var request = {};\n  request[fireauth.ActionCodeSettings.RequestField.CONTINUE_URL] =\n      this.continueUrl_;\n  request[fireauth.ActionCodeSettings.RequestField.CAN_HANDLE_CODE_IN_APP] =\n      this.canHandleCodeInApp_;\n  request[fireauth.ActionCodeSettings.RequestField.ANDROID_PACKAGE_NAME] =\n      this.apn_;\n  if (this.apn_) {\n    request[fireauth.ActionCodeSettings.RequestField.ANDROID_MINIMUM_VERSION] =\n        this.amv_;\n    request[fireauth.ActionCodeSettings.RequestField.ANDROID_INSTALL_APP] =\n        this.installApp_;\n  }\n  request[fireauth.ActionCodeSettings.RequestField.IOS_BUNDLE_ID] = this.ibi_;\n  request[fireauth.ActionCodeSettings.RequestField.DYNAMIC_LINK_DOMAIN] =\n      this.dynamicLinkDomain_;\n  // Remove null fields.\n  for (var key in request) {\n    if (request[key] === null) {\n      delete request[key];\n    }\n  }\n  return request;\n};\n\n\n/**\n * Returns the canHandleCodeInApp setting of ActionCodeSettings.\n * @return {boolean} Whether the code can be handled in app.\n */\nfireauth.ActionCodeSettings.prototype.canHandleCodeInApp = function() {\n  return this.canHandleCodeInApp_;\n};\n","// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Namespace with crypto related helper functions.\n */\n\ngoog.provide('goog.crypt');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\n\n\n/**\n * Turns a string into an array of bytes; a \"byte\" being a JS number in the\n * range 0-255. Multi-byte characters are written as little-endian.\n * @param {string} str String value to arrify.\n * @return {!Array<number>} Array of numbers corresponding to the\n *     UCS character codes of each character in str.\n */\ngoog.crypt.stringToByteArray = function(str) {\n  var output = [], p = 0;\n  for (var i = 0; i < str.length; i++) {\n    var c = str.charCodeAt(i);\n    // NOTE: c <= 0xffff since JavaScript strings are UTF-16.\n    if (c > 0xff) {\n      output[p++] = c & 0xff;\n      c >>= 8;\n    }\n    output[p++] = c;\n  }\n  return output;\n};\n\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param {!Uint8Array|!Array<number>} bytes Array of numbers representing\n *     characters.\n * @return {string} Stringification of the array.\n */\ngoog.crypt.byteArrayToString = function(bytes) {\n  var CHUNK_SIZE = 8192;\n\n  // Special-case the simple case for speed's sake.\n  if (bytes.length <= CHUNK_SIZE) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n\n  // The remaining logic splits conversion by chunks since\n  // Function#apply() has a maximum parameter count.\n  // See discussion: http://goo.gl/LrWmZ9\n\n  var str = '';\n  for (var i = 0; i < bytes.length; i += CHUNK_SIZE) {\n    var chunk = goog.array.slice(bytes, i, i + CHUNK_SIZE);\n    str += String.fromCharCode.apply(null, chunk);\n  }\n  return str;\n};\n\n\n/**\n * Turns an array of numbers into the hex string given by the concatenation of\n * the hex values to which the numbers correspond.\n * @param {Uint8Array|Array<number>} array Array of numbers representing\n *     characters.\n * @param {string=} opt_separator Optional separator between values\n * @return {string} Hex string.\n */\ngoog.crypt.byteArrayToHex = function(array, opt_separator) {\n  return goog.array\n      .map(\n          array,\n          function(numByte) {\n            var hexByte = numByte.toString(16);\n            return hexByte.length > 1 ? hexByte : '0' + hexByte;\n          })\n      .join(opt_separator || '');\n};\n\n\n/**\n * Converts a hex string into an integer array.\n * @param {string} hexString Hex string of 16-bit integers (two characters\n *     per integer).\n * @return {!Array<number>} Array of {0,255} integers for the given string.\n */\ngoog.crypt.hexToByteArray = function(hexString) {\n  goog.asserts.assert(\n      hexString.length % 2 == 0, 'Key string length must be multiple of 2');\n  var arr = [];\n  for (var i = 0; i < hexString.length; i += 2) {\n    arr.push(parseInt(hexString.substring(i, i + 2), 16));\n  }\n  return arr;\n};\n\n\n/**\n * Converts a JS string to a UTF-8 \"byte\" array.\n * @param {string} str 16-bit unicode string.\n * @return {!Array<number>} UTF-8 byte array.\n */\ngoog.crypt.stringToUtf8ByteArray = function(str) {\n  // TODO(user): Use native implementations if/when available\n  var out = [], p = 0;\n  for (var i = 0; i < str.length; i++) {\n    var c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n        ((c & 0xFC00) == 0xD800) && (i + 1) < str.length &&\n        ((str.charCodeAt(i + 1) & 0xFC00) == 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n\n/**\n * Converts a UTF-8 byte array to JavaScript's 16-bit Unicode.\n * @param {Uint8Array|Array<number>} bytes UTF-8 byte array.\n * @return {string} 16-bit Unicode string.\n */\ngoog.crypt.utf8ByteArrayToString = function(bytes) {\n  // TODO(user): Use native implementations if/when available\n  var out = [], pos = 0, c = 0;\n  while (pos < bytes.length) {\n    var c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      var c2 = bytes[pos++];\n      out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      var c2 = bytes[pos++];\n      var c3 = bytes[pos++];\n      var c4 = bytes[pos++];\n      var u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) -\n          0x10000;\n      out[c++] = String.fromCharCode(0xD800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xDC00 + (u & 1023));\n    } else {\n      var c2 = bytes[pos++];\n      var c3 = bytes[pos++];\n      out[c++] =\n          String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n    }\n  }\n  return out.join('');\n};\n\n\n/**\n * XOR two byte arrays.\n * @param {!Uint8Array|!Int8Array|!Array<number>} bytes1 Byte array 1.\n * @param {!Uint8Array|!Int8Array|!Array<number>} bytes2 Byte array 2.\n * @return {!Array<number>} Resulting XOR of the two byte arrays.\n */\ngoog.crypt.xorByteArray = function(bytes1, bytes2) {\n  goog.asserts.assert(\n      bytes1.length == bytes2.length, 'XOR array lengths must match');\n\n  var result = [];\n  for (var i = 0; i < bytes1.length; i++) {\n    result.push(bytes1[i] ^ bytes2[i]);\n  }\n  return result;\n};\n","// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Base64 en/decoding. Not much to say here except that we\n * work with decoded values in arrays of bytes. By \"byte\" I mean a number\n * in [0, 255].\n *\n * @author doughtie@google.com (Gavin Doughtie)\n */\n\ngoog.provide('goog.crypt.base64');\n\ngoog.require('goog.asserts');\ngoog.require('goog.crypt');\ngoog.require('goog.string');\ngoog.require('goog.userAgent');\ngoog.require('goog.userAgent.product');\n\n// Static lookup maps, lazily populated by init_()\n\n\n/**\n * Maps bytes to characters.\n * @type {Object}\n * @private\n */\ngoog.crypt.base64.byteToCharMap_ = null;\n\n\n/**\n * Maps characters to bytes. Used for normal and websafe characters.\n * @type {Object}\n * @private\n */\ngoog.crypt.base64.charToByteMap_ = null;\n\n\n/**\n * Maps bytes to websafe characters.\n * @type {Object}\n * @private\n */\ngoog.crypt.base64.byteToCharMapWebSafe_ = null;\n\n\n/**\n * Our default alphabet, shared between\n * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n * @type {string}\n */\ngoog.crypt.base64.ENCODED_VALS_BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n    'abcdefghijklmnopqrstuvwxyz' +\n    '0123456789';\n\n\n/**\n * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n * @type {string}\n */\ngoog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + '+/=';\n\n\n/**\n * Our websafe alphabet.\n * @type {string}\n */\ngoog.crypt.base64.ENCODED_VALS_WEBSAFE =\n    goog.crypt.base64.ENCODED_VALS_BASE + '-_.';\n\n\n/**\n * White list of implementations with known-good native atob and btoa functions.\n * Listing these explicitly (via the ASSUME_* wrappers) benefits dead-code\n * removal in per-browser compilations.\n * @private {boolean}\n */\ngoog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO ||\n    (goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI) ||\n    goog.userAgent.OPERA;\n\n\n/**\n * Does this browser have a working btoa function?\n * @private {boolean}\n */\ngoog.crypt.base64.HAS_NATIVE_ENCODE_ =\n    goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ ||\n    typeof(goog.global.btoa) == 'function';\n\n\n/**\n * Does this browser have a working atob function?\n * We blacklist known-bad implementations:\n *  - IE (10+) added atob() but it does not tolerate whitespace on the input.\n * @private {boolean}\n */\ngoog.crypt.base64.HAS_NATIVE_DECODE_ =\n    goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ ||\n    (!goog.userAgent.product.SAFARI && !goog.userAgent.IE &&\n     typeof(goog.global.atob) == 'function');\n\n\n/**\n * Base64-encode an array of bytes.\n *\n * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\n *     value in [0, 255]) to encode.\n * @param {boolean=} opt_webSafe True indicates we should use the alternative\n *     alphabet, which does not require escaping for use in URLs.\n * @return {string} The base64 encoded string.\n */\ngoog.crypt.base64.encodeByteArray = function(input, opt_webSafe) {\n  // Assert avoids runtime dependency on goog.isArrayLike, which helps reduce\n  // size of jscompiler output, and which yields slight performance increase.\n  goog.asserts.assert(\n      goog.isArrayLike(input), 'encodeByteArray takes an array as a parameter');\n\n  goog.crypt.base64.init_();\n\n  var byteToCharMap = opt_webSafe ? goog.crypt.base64.byteToCharMapWebSafe_ :\n                                    goog.crypt.base64.byteToCharMap_;\n\n  var output = [];\n\n  for (var i = 0; i < input.length; i += 3) {\n    var byte1 = input[i];\n    var haveByte2 = i + 1 < input.length;\n    var byte2 = haveByte2 ? input[i + 1] : 0;\n    var haveByte3 = i + 2 < input.length;\n    var byte3 = haveByte3 ? input[i + 2] : 0;\n\n    var outByte1 = byte1 >> 2;\n    var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n    var outByte3 = ((byte2 & 0x0F) << 2) | (byte3 >> 6);\n    var outByte4 = byte3 & 0x3F;\n\n    if (!haveByte3) {\n      outByte4 = 64;\n\n      if (!haveByte2) {\n        outByte3 = 64;\n      }\n    }\n\n    output.push(\n        byteToCharMap[outByte1], byteToCharMap[outByte2],\n        byteToCharMap[outByte3], byteToCharMap[outByte4]);\n  }\n\n  return output.join('');\n};\n\n\n/**\n * Base64-encode a string.\n *\n * @param {string} input A string to encode.\n * @param {boolean=} opt_webSafe True indicates we should use the alternative\n *     alphabet, which does not require escaping for use in URLs.\n * @return {string} The base64 encoded string.\n */\ngoog.crypt.base64.encodeString = function(input, opt_webSafe) {\n  // Shortcut for browsers that implement\n  // a native base64 encoder in the form of \"btoa/atob\"\n  if (goog.crypt.base64.HAS_NATIVE_ENCODE_ && !opt_webSafe) {\n    return goog.global.btoa(input);\n  }\n  return goog.crypt.base64.encodeByteArray(\n      goog.crypt.stringToByteArray(input), opt_webSafe);\n};\n\n\n/**\n * Base64-decode a string.\n *\n * @param {string} input Input to decode. Any whitespace is ignored, and the\n *     input maybe encoded with either supported alphabet (or a mix thereof).\n * @param {boolean=} opt_webSafe True indicates we should use the alternative\n *     alphabet, which does not require escaping for use in URLs. Note that\n *     passing false may also still allow webSafe input decoding, when the\n *     fallback decoder is used on browsers without native support.\n * @return {string} string representing the decoded value.\n */\ngoog.crypt.base64.decodeString = function(input, opt_webSafe) {\n  // Shortcut for browsers that implement\n  // a native base64 encoder in the form of \"btoa/atob\"\n  if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !opt_webSafe) {\n    return goog.global.atob(input);\n  }\n  var output = '';\n  function pushByte(b) { output += String.fromCharCode(b); }\n\n  goog.crypt.base64.decodeStringInternal_(input, pushByte);\n\n  return output;\n};\n\n\n/**\n * Base64-decode a string to an Array of numbers.\n *\n * In base-64 decoding, groups of four characters are converted into three\n * bytes.  If the encoder did not apply padding, the input length may not\n * be a multiple of 4.\n *\n * In this case, the last group will have fewer than 4 characters, and\n * padding will be inferred.  If the group has one or two characters, it decodes\n * to one byte.  If the group has three characters, it decodes to two bytes.\n *\n * @param {string} input Input to decode. Any whitespace is ignored, and the\n *     input maybe encoded with either supported alphabet (or a mix thereof).\n * @param {boolean=} opt_ignored Unused parameter, retained for compatibility.\n * @return {!Array<number>} bytes representing the decoded value.\n */\ngoog.crypt.base64.decodeStringToByteArray = function(input, opt_ignored) {\n  var output = [];\n  function pushByte(b) { output.push(b); }\n\n  goog.crypt.base64.decodeStringInternal_(input, pushByte);\n\n  return output;\n};\n\n\n/**\n * Base64-decode a string to a Uint8Array.\n *\n * Note that Uint8Array is not supported on older browsers, e.g. IE < 10.\n * @see http://caniuse.com/uint8array\n *\n * In base-64 decoding, groups of four characters are converted into three\n * bytes.  If the encoder did not apply padding, the input length may not\n * be a multiple of 4.\n *\n * In this case, the last group will have fewer than 4 characters, and\n * padding will be inferred.  If the group has one or two characters, it decodes\n * to one byte.  If the group has three characters, it decodes to two bytes.\n *\n * @param {string} input Input to decode. Any whitespace is ignored, and the\n *     input maybe encoded with either supported alphabet (or a mix thereof).\n * @return {!Uint8Array} bytes representing the decoded value.\n */\ngoog.crypt.base64.decodeStringToUint8Array = function(input) {\n  goog.asserts.assert(\n      !goog.userAgent.IE || goog.userAgent.isVersionOrHigher('10'),\n      'Browser does not support typed arrays');\n  var len = input.length;\n  // Check if there are trailing '=' as padding in the b64 string.\n  var placeholders = 0;\n  if (input[len - 2] === '=') {\n    placeholders = 2;\n  } else if (input[len - 1] === '=') {\n    placeholders = 1;\n  }\n  var output = new Uint8Array(Math.ceil(len * 3 / 4) - placeholders);\n  var outLen = 0;\n  function pushByte(b) {\n    output[outLen++] = b;\n  }\n\n  goog.crypt.base64.decodeStringInternal_(input, pushByte);\n\n  return output.subarray(0, outLen);\n};\n\n\n/**\n * @param {string} input Input to decode.\n * @param {function(number):void} pushByte result accumulator.\n * @private\n */\ngoog.crypt.base64.decodeStringInternal_ = function(input, pushByte) {\n  goog.crypt.base64.init_();\n\n  var nextCharIndex = 0;\n  /**\n   * @param {number} default_val Used for end-of-input.\n   * @return {number} The next 6-bit value, or the default for end-of-input.\n   */\n  function getByte(default_val) {\n    while (nextCharIndex < input.length) {\n      var ch = input.charAt(nextCharIndex++);\n      var b = goog.crypt.base64.charToByteMap_[ch];\n      if (b != null) {\n        return b;  // Common case: decoded the char.\n      }\n      if (!goog.string.isEmptyOrWhitespace(ch)) {\n        throw new Error('Unknown base64 encoding at char: ' + ch);\n      }\n      // We encountered whitespace: loop around to the next input char.\n    }\n    return default_val;  // No more input remaining.\n  }\n\n  while (true) {\n    var byte1 = getByte(-1);\n    var byte2 = getByte(0);\n    var byte3 = getByte(64);\n    var byte4 = getByte(64);\n\n    // The common case is that all four bytes are present, so if we have byte4\n    // we can skip over the truncated input special case handling.\n    if (byte4 === 64) {\n      if (byte1 === -1) {\n        return;  // Terminal case: no input left to decode.\n      }\n      // Here we know an intermediate number of bytes are missing.\n      // The defaults for byte2, byte3 and byte4 apply the inferred padding\n      // rules per the public API documentation. i.e: 1 byte\n      // missing should yield 2 bytes of output, but 2 or 3 missing bytes yield\n      // a single byte of output. (Recall that 64 corresponds the padding char).\n    }\n\n    var outByte1 = (byte1 << 2) | (byte2 >> 4);\n    pushByte(outByte1);\n\n    if (byte3 != 64) {\n      var outByte2 = ((byte2 << 4) & 0xF0) | (byte3 >> 2);\n      pushByte(outByte2);\n\n      if (byte4 != 64) {\n        var outByte3 = ((byte3 << 6) & 0xC0) | byte4;\n        pushByte(outByte3);\n      }\n    }\n  }\n};\n\n\n/**\n * Lazy static initialization function. Called before\n * accessing any of the static map variables.\n * @private\n */\ngoog.crypt.base64.init_ = function() {\n  if (!goog.crypt.base64.byteToCharMap_) {\n    goog.crypt.base64.byteToCharMap_ = {};\n    goog.crypt.base64.charToByteMap_ = {};\n    goog.crypt.base64.byteToCharMapWebSafe_ = {};\n\n    // We want quick mappings back and forth, so we precompute two maps.\n    for (var i = 0; i < goog.crypt.base64.ENCODED_VALS.length; i++) {\n      goog.crypt.base64.byteToCharMap_[i] =\n          goog.crypt.base64.ENCODED_VALS.charAt(i);\n      goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[i]] = i;\n      goog.crypt.base64.byteToCharMapWebSafe_[i] =\n          goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i);\n\n      // Be forgiving when decoding and correctly decode both encodings.\n      if (i >= goog.crypt.base64.ENCODED_VALS_BASE.length) {\n        goog.crypt.base64\n            .charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i)] =\n            i;\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility functions to handle Firebase Auth ID tokens.\n */\n\ngoog.provide('fireauth.IdToken');\n\ngoog.require('goog.crypt.base64');\n\n\n/**\n * Parses the token string into a {@code Token} object.\n * @param {!fireauth.IdToken.JsonToken} token The parsed JSON token.\n * @constructor\n */\nfireauth.IdToken = function(token) {\n  /** @private {string} The issuer of the token. */\n  this.iss_ = token['iss'];\n  /** @private {string} The audience of the token. */\n  this.aud_ = token['aud'];\n  /** @private {number} The expire time in seconds of the token. */\n  this.exp_ = token['exp'];\n  /** @private {string} The local user ID of the token. */\n  this.localId_ = token['sub'];\n  var now = goog.now() / 1000;\n  /** @private {number} The issue time in seconds of the token. */\n  this.iat_ = token['iat'] || (now > this.exp_ ? this.exp_ : now);\n  /** @private {?string} The email address of the token. */\n  this.email_ = token['email'] || null;\n  /** @private {boolean} Whether the user is verified. */\n  this.verified_ = !!token['verified'];\n  /** @private {?string} The provider ID of the token. */\n  this.providerId_ = token['provider_id'] ||\n      (token['firebase'] && token['firebase']['sign_in_provider']) ||\n      null;\n  /** @private {boolean} Whether the user is anonymous. */\n  this.anonymous_ = !!token['is_anonymous'] || this.providerId_ == 'anonymous';\n  /** @private {?string} The federated ID of the token. */\n  this.federatedId_ = token['federated_id'] || null;\n  /** @private {?string} The display name of the token. */\n  this.displayName_ = token['display_name'] || null;\n  /** @private {?string} The photo URL of the token. */\n  this.photoURL_ = token['photo_url'] || null;\n  /**\n   * @private {?string} The phone number of the user identified by the token.\n   */\n  this.phoneNumber_ = token['phone_number'] || null;\n};\n\n\n/**\n * @typedef {{\n *   identities: (?Object|undefined),\n *   sign_in_provider: (?string|undefined)\n * }}\n */\nfireauth.IdToken.Firebase;\n\n\n/**\n * @typedef {{\n *   iss: string,\n *   aud: string,\n *   exp: number,\n *   sub: string,\n *   iat: (?number|undefined),\n *   email: (?string|undefined),\n *   verified: (?boolean|undefined),\n *   provider_id: (?string|undefined),\n *   is_anonymous: (?boolean|undefined),\n *   federated_id: (?string|undefined),\n *   display_name: (?string|undefined),\n *   photo_url: (?string|undefined),\n *   phone_number: (?string|undefined),\n *   firebase: (?fireauth.IdToken.Firebase|undefined)\n * }}\n */\nfireauth.IdToken.JsonToken;\n\n\n/** @return {?string} The email address of the account. */\nfireauth.IdToken.prototype.getEmail = function() {\n  return this.email_;\n};\n\n\n/** @return {number} The expire time in seconds. */\nfireauth.IdToken.prototype.getExp = function() {\n  return this.exp_;\n};\n\n\n/** @return {?string} The ID of the identity provider. */\nfireauth.IdToken.prototype.getProviderId = function() {\n  return this.providerId_;\n};\n\n\n/** @return {?string} The display name of the account. */\nfireauth.IdToken.prototype.getDisplayName = function() {\n  return this.displayName_;\n};\n\n\n/** @return {?string} The photo URL of the account. */\nfireauth.IdToken.prototype.getPhotoUrl = function() {\n  return this.photoURL_;\n};\n\n\n/** @return {string} The user ID of the account. */\nfireauth.IdToken.prototype.getLocalId = function() {\n  return this.localId_;\n};\n\n\n/** @return {?string} The federated ID of the account. */\nfireauth.IdToken.prototype.getFederatedId = function() {\n  return this.federatedId_;\n};\n\n\n/** @return {boolean} Whether the user is anonymous. */\nfireauth.IdToken.prototype.isAnonymous = function() {\n  return this.anonymous_;\n};\n\n\n/** @return {boolean} Whether the user email is verified. */\nfireauth.IdToken.prototype.isVerified = function() {\n  return this.verified_;\n};\n\n\n/** @return {boolean} Whether token is expired. */\nfireauth.IdToken.prototype.isExpired = function() {\n  var now = Math.floor(goog.now() / 1000);\n  // It is expired if token expiration time is less than current time.\n  return this.getExp() <= now;\n};\n\n\n/** @return {string} The issuer of the token. */\nfireauth.IdToken.prototype.getIssuer = function() {\n  return this.iss_;\n};\n\n\n/** @return {?string} The phone number of the account. */\nfireauth.IdToken.prototype.getPhoneNumber = function() {\n  return this.phoneNumber_;\n};\n\n\n/**\n * Parses the JWT token and extracts the information part without verifying the\n * token signature.\n * @param {string} tokenString The JWT token.\n * @return {?fireauth.IdToken} The decoded token.\n */\nfireauth.IdToken.parse = function(tokenString) {\n  var token = fireauth.IdToken.parseIdTokenClaims(tokenString);\n  if (token && token['sub'] && token['iss'] && token['aud'] && token['exp']) {\n    return new fireauth.IdToken(\n        /** @type {!fireauth.IdToken.JsonToken} */ (token));\n  }\n  return null;\n};\n\n/**\n * Converts the information part of JWT token to plain object format.\n * @param {?string} tokenString The JWT token.\n * @return {?Object}\n */\nfireauth.IdToken.parseIdTokenClaims = function(tokenString) {\n  if (!tokenString) {\n    return null;\n  }\n  // Token format is <algorithm>.<info>.<sig>\n  var fields = tokenString.split('.');\n  if (fields.length != 3) {\n    return null;\n  }\n  var jsonInfo = fields[1];\n  // Google base64 library does not handle padding.\n  var padLen = (4 - jsonInfo.length % 4) % 4;\n  for (var i = 0; i < padLen; i++) {\n    jsonInfo += '.';\n  }\n  try {\n    var token = JSON.parse(goog.crypt.base64.decodeString(jsonInfo, true));\n    return /** @type {?Object} */ (token);\n  } catch (e) {}\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines all common constants and enums used by firebase-auth.\n */\n\ngoog.provide('fireauth.constants');\ngoog.provide('fireauth.constants.AuthEventType');\n\n\n/**\n * Enums for authentication operation types.\n * @enum {string}\n */\nfireauth.constants.OperationType = {\n  LINK: 'link',\n  REAUTHENTICATE: 'reauthenticate',\n  SIGN_IN: 'signIn'\n};\n\n\n/**\n * Events dispatched firebase.auth.Auth.\n * @enum {string}\n */\nfireauth.constants.AuthEventType = {\n  /** Dispatched when Firebase framework is changed. */\n  FRAMEWORK_CHANGED: 'frameworkChanged',\n  /** Dispatched when language code is changed. */\n  LANGUAGE_CODE_CHANGED: 'languageCodeChanged'\n};\n\n\n/**\n * The settings of an Auth endpoint. The fields are:\n * <ul>\n * <li>firebaseAuthEndpoint: defines the Firebase Auth backend endpoint for\n *     specified endpoint type.</li>\n * <li>secureTokenEndpoint: defines the secure token backend endpoint for\n *     specified endpoint type.</li>\n * <li>id: defines the endpoint identifier.</li>\n * </ul>\n * @typedef {{\n *   firebaseAuthEndpoint: string,\n *   secureTokenEndpoint: string,\n *   id: string\n * }}\n */\nfireauth.constants.EndpointSettings;\n\n\n/**\n * The different endpoints for Firebase Auth backend.\n * @enum {!fireauth.constants.EndpointSettings}\n */\nfireauth.constants.Endpoint = {\n  PRODUCTION: {\n    firebaseAuthEndpoint: 'https://www.googleapis.com/identitytoolkit/v3/' +\n        'relyingparty/',\n    secureTokenEndpoint: 'https://securetoken.googleapis.com/v1/token',\n    id: 'p'\n  },\n  STAGING: {\n    firebaseAuthEndpoint: 'https://staging-www.sandbox.googleapis.com/' +\n        'identitytoolkit/v3/relyingparty/',\n    secureTokenEndpoint: 'https://staging-securetoken.sandbox.googleapis.com' +\n        '/v1/token',\n    id: 's'\n  },\n  TEST: {\n    firebaseAuthEndpoint: 'https://www-googleapis-test.sandbox.google.com/' +\n        'identitytoolkit/v3/relyingparty/',\n    secureTokenEndpoint: 'https://test-securetoken.sandbox.googleapis.com/v1' +\n        '/token',\n    id: 't'\n  }\n};\n\n\n/**\n * Returns the endpoint specific RpcHandler configuration.\n * @param {?string=} opt_id The identifier of the endpoint type if available.\n * @return {?Object|undefined} The RpcHandler endpoint configuration object.\n */\nfireauth.constants.getEndpointConfig = function(opt_id) {\n  for (var endpointKey in fireauth.constants.Endpoint) {\n    if (fireauth.constants.Endpoint[endpointKey].id === opt_id) {\n      var endpoint = fireauth.constants.Endpoint[endpointKey];\n      return {\n        'firebaseEndpoint': endpoint.firebaseAuthEndpoint,\n        'secureTokenEndpoint': endpoint.secureTokenEndpoint\n      };\n    }\n  }\n  return null;\n};\n\n\n/**\n * Returns the validated endpoint identifier. Undefined if the provided one is\n * invalid.\n * @param {?string=} opt_id The identifier of the endpoint type if available.\n * @return {string|undefined} The validated endpoint ID. If not valid,\n *     undefined.\n */\nfireauth.constants.getEndpointId = function(opt_id) {\n  if (opt_id && fireauth.constants.getEndpointConfig(opt_id)) {\n    return opt_id;\n  }\n  return undefined;\n};\n\n\n/** @const {string|undefined} The current client endpoint. */\nfireauth.constants.clientEndpoint = fireauth.constants.getEndpointId('__EID__');\n\n\n/** @const {string} The required SAML provider ID prefix. */\nfireauth.constants.SAML_PREFIX = 'saml.';\n\n\n/** @const {string} The required OIDC provider ID prefix. */\nfireauth.constants.OIDC_PREFIX = 'oidc.';\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the IdP provider IDs and related settings.\n */\n\ngoog.provide('fireauth.idp');\ngoog.provide('fireauth.idp.IdpSettings');\ngoog.provide('fireauth.idp.ProviderId');\ngoog.provide('fireauth.idp.Settings');\ngoog.provide('fireauth.idp.SignInMethod');\n\ngoog.require('fireauth.constants');\n\n\n/**\n * Enums for supported provider IDs. These provider IDs correspond to the\n * sign_in_provider in the Firebase ID token and do not correspond to the\n * supported client exposed firebase.auth.AuthProviders.\n * @enum {string}\n */\nfireauth.idp.ProviderId = {\n  ANONYMOUS: 'anonymous',\n  CUSTOM: 'custom',\n  FACEBOOK: 'facebook.com',\n  FIREBASE: 'firebase',\n  GITHUB: 'github.com',\n  GOOGLE: 'google.com',\n  PASSWORD: 'password',\n  PHONE: 'phone',\n  TWITTER: 'twitter.com'\n};\n\n\n/**\n * Enums for supported sign in methods.\n * @enum {string}\n */\nfireauth.idp.SignInMethod = {\n  EMAIL_LINK: 'emailLink',\n  EMAIL_PASSWORD: 'password',\n  FACEBOOK: 'facebook.com',\n  GITHUB: 'github.com',\n  GOOGLE: 'google.com',\n  PHONE: 'phone',\n  TWITTER: 'twitter.com'\n};\n\n\n/**\n * The settings of an identity provider. The fields are:\n * <ul>\n * <li>languageParam: defines the custom OAuth language parameter.\n * <li>popupWidth: defines the popup recommended width.\n * <li>popupHeight: defines the popup recommended height.\n * <li>providerId: defines the provider ID.\n * <li>reservedOAuthParameters: defines the list of reserved OAuth parameters.\n * </ul>\n * @typedef {{\n *   languageParam: (?string|undefined),\n *   popupWidth: (?number|undefined),\n *   popupHeight: (?number|undefined),\n *   providerId: !fireauth.idp.ProviderId,\n *   reservedOAuthParameters: !Array<string>\n * }}\n */\nfireauth.idp.IdpSettings;\n\n\n/**\n * The list of reserved OAuth 1.0 parameters.\n * @const {!Array<string>}\n */\nfireauth.idp.RESERVED_OAUTH1_PARAMS =\n    ['oauth_consumer_key', 'oauth_nonce', 'oauth_signature',\n     'oauth_signature_method', 'oauth_timestamp', 'oauth_token',\n     'oauth_version'];\n\n\n/**\n * The list of reserved OAuth 2.0 parameters.\n * @const {!Array<string>}\n */\nfireauth.idp.RESERVED_OAUTH2_PARAMS =\n    ['client_id', 'response_type', 'scope', 'redirect_uri', 'state'];\n\n\n/**\n * The recommendations for the different IdP display settings.\n * @enum {!fireauth.idp.IdpSettings}\n */\nfireauth.idp.Settings = {\n  FACEBOOK: {\n    languageParam: 'locale',\n    popupWidth: 500,\n    popupHeight: 600,\n    providerId: fireauth.idp.ProviderId.FACEBOOK,\n    reservedOAuthParameters: fireauth.idp.RESERVED_OAUTH2_PARAMS\n  },\n  GITHUB: {\n    languageParam: null,\n    popupWidth: 500,\n    popupHeight: 620,\n    providerId: fireauth.idp.ProviderId.GITHUB,\n    reservedOAuthParameters: fireauth.idp.RESERVED_OAUTH2_PARAMS\n  },\n  GOOGLE: {\n    languageParam: 'hl',\n    popupWidth: 515,\n    popupHeight: 680,\n    providerId: fireauth.idp.ProviderId.GOOGLE,\n    reservedOAuthParameters: fireauth.idp.RESERVED_OAUTH2_PARAMS\n  },\n  TWITTER: {\n    languageParam: 'lang',\n    popupWidth: 485,\n    popupHeight: 705,\n    providerId: fireauth.idp.ProviderId.TWITTER,\n    reservedOAuthParameters: fireauth.idp.RESERVED_OAUTH1_PARAMS\n  }\n};\n\n\n/**\n * @param {!fireauth.idp.ProviderId} providerId The requested provider ID.\n * @return {?fireauth.idp.Settings} The settings for the requested provider ID.\n */\nfireauth.idp.getIdpSettings = function(providerId) {\n  for (var key in fireauth.idp.Settings) {\n    if (fireauth.idp.Settings[key].providerId == providerId) {\n      return fireauth.idp.Settings[key];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {!fireauth.idp.ProviderId} providerId The requested provider ID.\n * @return {!Array<string>} The list of reserved OAuth parameters.\n */\nfireauth.idp.getReservedOAuthParams = function(providerId) {\n  var settings = fireauth.idp.getIdpSettings(providerId);\n  return (settings && settings.reservedOAuthParameters) || [];\n};\n\n\n/**\n * @param {?string|undefined} identifier The provider identifier.\n * @return {boolean} Whether the identifier provided is a SAML provider ID.\n */\nfireauth.idp.isSaml = function(identifier) {\n   return typeof identifier === 'string' &&\n     identifier.indexOf(fireauth.constants.SAML_PREFIX) == 0;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines all the fireauth additional user info interfaces,\n * implementations and subclasses.\n */\n\ngoog.provide('fireauth.AdditionalUserInfo');\ngoog.provide('fireauth.FacebookAdditionalUserInfo');\ngoog.provide('fireauth.FederatedAdditionalUserInfo');\ngoog.provide('fireauth.GenericAdditionalUserInfo');\ngoog.provide('fireauth.GithubAdditionalUserInfo');\ngoog.provide('fireauth.GoogleAdditionalUserInfo');\ngoog.provide('fireauth.TwitterAdditionalUserInfo');\n\ngoog.require('fireauth.IdToken');\ngoog.require('fireauth.idp');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\n\n\n/**\n * The interface that represents additional user info.\n * @interface\n */\nfireauth.AdditionalUserInfo = function() {};\n\n\n/**\n * Constructs the corresponding additional user info for the backend\n * verifyAssertion response.\n * @param {?Object|undefined} resp The backend verifyAssertion,\n *     verifyPhoneNumber or verifyPassword/setAccountInfo response.\n * @return {?fireauth.AdditionalUserInfo} The fireauth.AdditionalUserInfo\n *     instance.\n */\nfireauth.AdditionalUserInfo.fromPlainObject = function(resp) {\n  var factory = {};\n  factory[fireauth.idp.ProviderId.FACEBOOK] =\n      fireauth.FacebookAdditionalUserInfo;\n  factory[fireauth.idp.ProviderId.GOOGLE] =\n      fireauth.GoogleAdditionalUserInfo;\n  factory[fireauth.idp.ProviderId.GITHUB] =\n      fireauth.GithubAdditionalUserInfo;\n  factory[fireauth.idp.ProviderId.TWITTER] =\n      fireauth.TwitterAdditionalUserInfo;\n  // Provider ID and UID are required.\n  var providerId =\n      resp &&\n      resp[fireauth.AdditionalUserInfo.VerifyAssertionField.PROVIDER_ID];\n  try {\n    // Provider ID already present.\n    if (providerId) {\n      if (factory[providerId]) {\n        // 1st class supported federated providers.\n        return new factory[providerId](resp);\n      } else {\n        // Generic federated providers.\n        return new fireauth.FederatedAdditionalUserInfo(\n            /** @type {!Object} */ (resp));\n      }\n    } else if (typeof resp[fireauth.AdditionalUserInfo.VerifyAssertionField\n                           .ID_TOKEN] !== 'undefined') {\n      // For all other ID token responses with no providerId, get the required\n      // providerId from the ID token itself.\n      return new fireauth.GenericAdditionalUserInfo(\n          /** @type {!Object} */ (resp));\n    }\n  } catch (e) {\n    // Do nothing, null will be returned.\n  }\n  return null;\n};\n\n\n\n/**\n * verifyAssertion response additional user info fields.\n * @enum {string}\n */\nfireauth.AdditionalUserInfo.VerifyAssertionField = {\n  ID_TOKEN: 'idToken',\n  IS_NEW_USER: 'isNewUser',\n  KIND: 'kind',\n  PROVIDER_ID: 'providerId',\n  RAW_USER_INFO: 'rawUserInfo',\n  SCREEN_NAME: 'screenName'\n};\n\n\n/**\n * Constructs a generic additional user info object from the backend\n * verifyPhoneNumber and verifyPassword provider response.\n * @param {!Object} info The verifyPhoneNumber/verifyPassword/setAccountInfo\n *     response data object.\n * @constructor\n * @implements {fireauth.AdditionalUserInfo}\n */\nfireauth.GenericAdditionalUserInfo = function(info) {\n  // Federated provider profile data.\n  var providerId =\n      info[fireauth.AdditionalUserInfo.VerifyAssertionField.PROVIDER_ID];\n  // Try to get providerId from the ID token if available.\n  if (!providerId &&\n      info[fireauth.AdditionalUserInfo.VerifyAssertionField.ID_TOKEN]) {\n    // verifyPassword/setAccountInfo and verifyPhoneNumber return an ID token\n    // but no providerId. Get providerId from the token itself.\n    // isNewUser will be returned for verifyPhoneNumber.\n    var idToken = fireauth.IdToken.parse(\n        info[fireauth.AdditionalUserInfo.VerifyAssertionField.ID_TOKEN]);\n    if (idToken && idToken.getProviderId()) {\n      providerId = idToken.getProviderId();\n    }\n  }\n  if (!providerId) {\n    // This is internal only.\n    throw new Error('Invalid additional user info!');\n  }\n  // For custom token and anonymous token, set provider ID to null.\n  if (providerId == fireauth.idp.ProviderId.ANONYMOUS ||\n      providerId == fireauth.idp.ProviderId.CUSTOM) {\n      providerId = null;\n  }\n  // Check whether user is new. Temporary Solution since backend does not return\n  // isNewUser field for SignupNewUserResponse.\n  var isNewUser = false;\n  if (typeof info[fireauth.AdditionalUserInfo.VerifyAssertionField.IS_NEW_USER]\n      !== 'undefined') {\n    isNewUser =\n        !!info[fireauth.AdditionalUserInfo.VerifyAssertionField.IS_NEW_USER];\n  } else if (info[fireauth.AdditionalUserInfo.VerifyAssertionField.KIND]\n             === 'identitytoolkit#SignupNewUserResponse') {\n    //For SignupNewUserResponse, always set isNewUser to true.\n    isNewUser = true;\n  }\n  // Set required providerId.\n  fireauth.object.setReadonlyProperty(this, 'providerId', providerId);\n  // Set read-only isNewUser property.\n  fireauth.object.setReadonlyProperty(this, 'isNewUser', isNewUser);\n};\n\n\n/**\n * Constructs a federated additional user info object from the backend\n * verifyAssertion federated provider response.\n * @param {!Object} info The verifyAssertion response data object.\n * @constructor\n * @extends {fireauth.GenericAdditionalUserInfo}\n */\nfireauth.FederatedAdditionalUserInfo = function(info) {\n  fireauth.FederatedAdditionalUserInfo.base(this, 'constructor', info);\n  // Federated provider profile data.\n  // This structure will also be used for generic IdPs.\n  var profile = fireauth.util.parseJSON(\n      info[fireauth.AdditionalUserInfo.VerifyAssertionField.RAW_USER_INFO] ||\n      '{}');\n  // Set read-only profile property.\n  fireauth.object.setReadonlyProperty(\n      this,\n      'profile',\n      fireauth.object.unsafeCreateReadOnlyCopy(profile || {}));\n};\ngoog.inherits(\n    fireauth.FederatedAdditionalUserInfo, fireauth.GenericAdditionalUserInfo);\n\n\n/**\n * Constructs a Facebook additional user info object from the backend\n * verifyAssertion Facebook provider response.\n * @param {!Object} info The verifyAssertion response data object.\n * @constructor\n * @extends {fireauth.FederatedAdditionalUserInfo}\n */\nfireauth.FacebookAdditionalUserInfo = function(info) {\n  fireauth.FacebookAdditionalUserInfo.base(this, 'constructor', info);\n  // This should not happen as this object is initialized via fromPlainObject.\n  if (this['providerId'] != fireauth.idp.ProviderId.FACEBOOK) {\n    throw new Error('Invalid provider ID!');\n  }\n};\ngoog.inherits(\n    fireauth.FacebookAdditionalUserInfo, fireauth.FederatedAdditionalUserInfo);\n\n\n\n/**\n * Constructs a GitHub additional user info object from the backend\n * verifyAssertion GitHub provider response.\n * @param {!Object} info The verifyAssertion response data object.\n * @constructor\n * @extends {fireauth.FederatedAdditionalUserInfo}\n */\nfireauth.GithubAdditionalUserInfo = function(info) {\n  fireauth.GithubAdditionalUserInfo.base(this, 'constructor', info);\n  // This should not happen as this object is initialized via fromPlainObject.\n  if (this['providerId'] != fireauth.idp.ProviderId.GITHUB) {\n    throw new Error('Invalid provider ID!');\n  }\n  // GitHub username.\n  fireauth.object.setReadonlyProperty(\n      this,\n      'username',\n      (this['profile'] && this['profile']['login']) || null);\n};\ngoog.inherits(\n    fireauth.GithubAdditionalUserInfo, fireauth.FederatedAdditionalUserInfo);\n\n\n\n/**\n * Constructs a Google additional user info object from the backend\n * verifyAssertion Google provider response.\n * @param {!Object} info The verifyAssertion response data object.\n * @constructor\n * @extends {fireauth.FederatedAdditionalUserInfo}\n */\nfireauth.GoogleAdditionalUserInfo = function(info) {\n  fireauth.GoogleAdditionalUserInfo.base(this, 'constructor', info);\n  // This should not happen as this object is initialized via fromPlainObject.\n  if (this['providerId'] != fireauth.idp.ProviderId.GOOGLE) {\n    throw new Error('Invalid provider ID!');\n  }\n};\ngoog.inherits(\n    fireauth.GoogleAdditionalUserInfo, fireauth.FederatedAdditionalUserInfo);\n\n\n\n/**\n * Constructs a Twitter additional user info object from the backend\n * verifyAssertion Twitter provider response.\n * @param {!Object} info The verifyAssertion response data object.\n * @constructor\n * @extends {fireauth.FederatedAdditionalUserInfo}\n */\nfireauth.TwitterAdditionalUserInfo = function(info) {\n  fireauth.TwitterAdditionalUserInfo.base(this, 'constructor', info);\n  // This should not happen as this object is initialized via fromPlainObject.\n  if (this['providerId'] != fireauth.idp.ProviderId.TWITTER) {\n    throw new Error('Invalid provider ID!');\n  }\n  // Twitter user name.\n  fireauth.object.setReadonlyProperty(\n      this,\n      'username',\n      info[fireauth.AdditionalUserInfo.VerifyAssertionField.SCREEN_NAME] ||\n      null);\n};\ngoog.inherits(\n    fireauth.TwitterAdditionalUserInfo, fireauth.FederatedAdditionalUserInfo);\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines firebase.auth.ActionCodeUrl class which is the utility\n * to parse action code URLs.\n */\n\ngoog.provide('fireauth.ActionCodeUrl');\n\ngoog.require('goog.Uri');\n\n\n/**\n * The utility class to help parse action code URLs used for out of band email\n * flows such as password reset, email verification, email link sign in, etc.\n * @param {string} actionCodeUrl The action code URL.\n * @constructor\n */\nfireauth.ActionCodeUrl = function(actionCodeUrl) {\n   /** @private {!goog.Uri} The action code URL components.*/\n  this.uri_ = goog.Uri.parse(actionCodeUrl);\n};\n\n\n/**\n * Enums for fields in URL query string.\n * @enum {string}\n */\nfireauth.ActionCodeUrl.QueryField = {\n  API_KEY: 'apiKey',\n  CODE: 'oobCode',\n  MODE: 'mode'\n};\n\n\n/**\n * Enums for action code modes.\n * @enum {string}\n */\nfireauth.ActionCodeUrl.Mode = {\n  RESET_PASSWORD: 'resetPassword',\n  REVOKE_EMAIL: 'recoverEmail',\n  SIGN_IN: 'signIn',\n  VERIFY_EMAIL: 'verifyEmail'\n};\n\n\n/**\n * Returns the API key parameter of action code URL.\n * @return {?string} The first API key value in action code URL or\n *     undefined if apiKey does not appear in the URL.\n */\nfireauth.ActionCodeUrl.prototype.getApiKey = function() {\n  return this.uri_.getParameterValue(\n      fireauth.ActionCodeUrl.QueryField.API_KEY) || null;\n};\n\n\n/**\n * Returns the action code parameter of action code URL.\n * @return {?string} The first oobCode value in action code URL or\n *     undefined if oobCode does not appear in the URL.\n */\nfireauth.ActionCodeUrl.prototype.getCode = function() {\n  return this.uri_.getParameterValue(\n      fireauth.ActionCodeUrl.QueryField.CODE) || null;\n};\n\n\n/**\n * Returns the mode parameter of action code URL.\n * @return {?string} The first mode value in action code URL or\n *     undefined if mode does not appear in the URL.\n */\nfireauth.ActionCodeUrl.prototype.getMode = function() {\n  return this.uri_.getParameterValue(\n      fireauth.ActionCodeUrl.QueryField.MODE) || null;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase dynamic link constructor.\n */\n\ngoog.provide('fireauth.DynamicLink');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\ngoog.require('goog.Uri');\n\n\n/**\n * Dynamic link builder used to help build the FDL link to redirect to an app\n * while passing some payload or error.\n * @param {?string} fdlDomain The FDL domain. If none is available, custom\n *     scheme redirects are used.\n * @param {!fireauth.DynamicLink.Platform} platform The FDL supported\n *     platform (Android or iOS).\n * @param {string} appIdentifier The app identifier (iOS bundle ID or Android\n *     package name).\n * @param {string} authDomain The Firebase application authDomain.\n * @param {string} payload The FDL deep link content.\n * @param {?string=} opt_clientId The optional OAuth client ID.\n * @constructor\n */\nfireauth.DynamicLink = function(fdlDomain, platform, appIdentifier, authDomain,\n    payload, opt_clientId) {\n  // The fallback error when the app is not installed on the device.\n  var defaultError =\n      new fireauth.AuthError(fireauth.authenum.Error.APP_NOT_INSTALLED);\n  /** @private {string} The fallback URL when the app is not installed. */\n  this.fallbackUrl_ = 'https://' + authDomain + '/__/auth/handler?' +\n      'firebaseError=' + encodeURIComponent(/** @type {string} */ (\n          fireauth.util.stringifyJSON(defaultError.toPlainObject())));\n  fireauth.object.setReadonlyProperty(this, 'fallbackUrl', this.fallbackUrl_);\n  /** @private {?string} The FDL domain if available. */\n  this.fdlDomain_ = fdlDomain;\n  fireauth.object.setReadonlyProperty(this, 'fdlDomain', fdlDomain);\n  /** @private {!fireauth.DynamicLink.Platform} The FDL link platform. */\n  this.platform_ = platform;\n  fireauth.object.setReadonlyProperty(this, 'platform', platform);\n  /** @private {string} The app identifier. */\n  this.appIdentifier_ = appIdentifier;\n  fireauth.object.setReadonlyProperty(this, 'appIdentifier', appIdentifier);\n  /** @private {string} The Firebase application authDomain. */\n  this.authDomain_ = authDomain;\n  fireauth.object.setReadonlyProperty(this, 'authDomain', authDomain);\n  /** @private {string} The FDL deep link content. */\n  this.link_ = payload;\n  fireauth.object.setReadonlyProperty(this, 'payload', payload);\n  /** @private {?string} The application display name. */\n  this.appName_ = null;\n  fireauth.object.setReadonlyProperty(this, 'appName', null);\n  /** @private {?string} The client ID if available. */\n  this.clientId_ = opt_clientId || null;\n  fireauth.object.setReadonlyProperty(this, 'clientId', this.clientId_);\n};\n\n\n/**\n * Sets the app name for the current dynamic link.\n * @param {?string|undefined} appName The app name typically displayed in an FDL\n *     button.\n */\nfireauth.DynamicLink.prototype.setAppName = function(appName) {\n  this.appName_ = appName || null;\n  fireauth.object.setReadonlyProperty(this, 'appName', appName);\n};\n\n\n/**\n * Sets the dynamic link fallback URL overriding the default one.\n * @param {string} fallbackUrl The dynamic link fallback URL.\n */\nfireauth.DynamicLink.prototype.setFallbackUrl = function(fallbackUrl) {\n  this.fallbackUrl_ = fallbackUrl;\n  fireauth.object.setReadonlyProperty(this, 'fallbackUrl', fallbackUrl);\n};\n\n\n/**\n * Parses a dynamic link object from an automatic FDL redirect link.\n * @param {string} url The URL string to parse and convert to a dynamic link.\n * @return {?fireauth.DynamicLink} The corresponding dynamic link if applicable.\n */\nfireauth.DynamicLink.fromURL = function(url) {\n  // This constructs the Dynamic link from the URL provided.\n  var uri = goog.Uri.parse(url);\n  var fdlDomain = uri.getParameterValue('fdlDomain');\n  var platform = uri.getParameterValue('platform');\n  var appIdentifier = uri.getParameterValue('appIdentifier');\n  var authDomain = uri.getParameterValue('authDomain');\n  var payload = uri.getParameterValue('link');\n  var appName = uri.getParameterValue('appName');\n  if (fdlDomain && platform && appIdentifier && authDomain && payload &&\n      appName) {\n    var dl = new fireauth.DynamicLink(\n        /** @type {string} */ (fdlDomain),\n        /** @type {!fireauth.DynamicLink.Platform} */ (platform),\n        /** @type {string} */ (appIdentifier),\n        /** @type {string} */ (authDomain),\n        /** @type {string} */ (payload));\n    dl.setAppName(appName);\n    return dl;\n  }\n  return null;\n};\n\n\n/**\n * @param {string} url The dynamic link URL.\n * @return {string} The deep link embedded within the dynamic link.\n */\nfireauth.DynamicLink.parseDeepLink = function(url) {\n  var uri = goog.Uri.parse(url);\n  var link = uri.getParameterValue('link');\n  // Double link case (automatic redirect).\n  var doubleDeepLink = goog.Uri.parse(link).getParameterValue('link');\n  // iOS custom scheme links.\n  var iOSdeepLink = uri.getParameterValue('deep_link_id');\n  var iOSDoubledeepLink = goog.Uri.parse(iOSdeepLink).getParameterValue('link');\n  var callbackUrl =\n      iOSDoubledeepLink || iOSdeepLink || doubleDeepLink || link || url;\n  return callbackUrl;\n};\n\n\n/**\n * The supported FDL platforms.\n * @enum {string}\n */\nfireauth.DynamicLink.Platform = {\n  ANDROID: 'android',\n  IOS: 'ios'\n};\n\n\n/**\n * Constructs the common FDL link base used for building the button link or the\n * automatic redirect link.\n * @param {string} fallbackUrl The fallback URL to use.\n * @return {!goog.Uri} The partial URI of the FDL link used to build the final\n *     button link or the automatic redirect link.\n * @private\n */\nfireauth.DynamicLink.prototype.constructFdlBase_ = function(fallbackUrl) {\n  var uri = goog.Uri.create(\n      'https',\n      null,\n      this.fdlDomain_,\n      null,\n      '/');\n  if (this.platform_ == fireauth.DynamicLink.Platform.ANDROID) {\n    uri.setParameterValue('apn', this.appIdentifier_);\n    uri.setParameterValue('afl', fallbackUrl);\n  } else if (this.platform_ == fireauth.DynamicLink.Platform.IOS) {\n    uri.setParameterValue('ibi', this.appIdentifier_);\n    uri.setParameterValue('ifl', fallbackUrl);\n  }\n  return uri;\n};\n\n\n/**\n * Constructs the custom scheme URL. This is used when no FDL domain is\n * available.\n * @return {!goog.Uri} The uri of the dynamic link used to build the final\n *      button link or the automatic redirect link.\n * @private\n */\nfireauth.DynamicLink.prototype.constructCustomSchemeUrl_ = function() {\n  // This mimics the FDL custom scheme URL format.\n  var uri = goog.Uri.create(\n      this.clientId_ ? this.clientId_.split('.').reverse().join('.') :\n          this.appIdentifier_,\n      null,\n      // 'firebaseauth' is used in the app verification flow.\n      // 'google' is used for the Cordova iOS flow.\n      this.clientId_ ? 'firebaseauth' : 'google',\n      null,\n      '/link');\n  uri.setParameterValue('deep_link_id', this.link_);\n  return uri;\n};\n\n\n/**\n * @param {boolean=} opt_isAutoRedirect Whether the link is an auto redirect\n *     link.\n * @return {string} The generated dynamic link string.\n * @override\n */\nfireauth.DynamicLink.prototype.toString = function(opt_isAutoRedirect) {\n  // When FDL domain is not available, always returns the custom scheme URL.\n  if (!this.fdlDomain_) {\n    return this.constructCustomSchemeUrl_().toString();\n  }\n  if (!!opt_isAutoRedirect) {\n    return this.generateAutomaticRedirectLink_();\n  }\n  return this.generateButtonLink_();\n};\n\n\n/**\n * @return {string} The final FDL button link.\n * @private\n */\nfireauth.DynamicLink.prototype.generateButtonLink_ = function() {\n  var fdlLink = this.constructFdlBase_(this.fallbackUrl_);\n  fdlLink.setParameterValue('link', this.link_);\n  return fdlLink.toString();\n};\n\n\n/**\n * @return {string} The final FDL automatic redirect link.\n * @private\n */\nfireauth.DynamicLink.prototype.generateAutomaticRedirectLink_ =\n    function() {\n  var doubleDeeplink = goog.Uri.create(\n      'https',\n      null,\n      this.authDomain_,\n      null,\n      '/__/auth/callback');\n  doubleDeeplink.setParameterValue('fdlDomain', this.fdlDomain_);\n  doubleDeeplink.setParameterValue('platform', this.platform_);\n  doubleDeeplink.setParameterValue('appIdentifier', this.appIdentifier_);\n  doubleDeeplink.setParameterValue('authDomain', this.authDomain_);\n  doubleDeeplink.setParameterValue('link', this.link_);\n  doubleDeeplink.setParameterValue('appName', this.appName_ || '');\n  // The fallback URL is the deep link itself.\n  // This is in case the link fails to be intercepted by the app, FDL will\n  // redirect to the fallback URL.\n  var fdlLink = this.constructFdlBase_(doubleDeeplink.toString());\n  fdlLink.setParameterValue('link', doubleDeeplink.toString());\n  return fdlLink.toString();\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines Auth credentials used for signInWithCredential.\n */\n\ngoog.provide('fireauth.AuthCredential');\ngoog.provide('fireauth.AuthProvider');\ngoog.provide('fireauth.EmailAuthCredential');\ngoog.provide('fireauth.EmailAuthProvider');\ngoog.provide('fireauth.FacebookAuthProvider');\ngoog.provide('fireauth.FederatedProvider');\ngoog.provide('fireauth.GithubAuthProvider');\ngoog.provide('fireauth.GoogleAuthProvider');\ngoog.provide('fireauth.OAuthCredential');\ngoog.provide('fireauth.OAuthProvider');\ngoog.provide('fireauth.OAuthResponse');\ngoog.provide('fireauth.PhoneAuthCredential');\ngoog.provide('fireauth.PhoneAuthProvider');\ngoog.provide('fireauth.SAMLAuthCredential');\ngoog.provide('fireauth.SAMLAuthProvider');\ngoog.provide('fireauth.TwitterAuthProvider');\n\ngoog.require('fireauth.ActionCodeUrl');\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.DynamicLink');\ngoog.require('fireauth.IdToken');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.constants');\ngoog.require('fireauth.idp');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Uri');\ngoog.require('goog.array');\ngoog.require('goog.object');\n\ngoog.forwardDeclare('fireauth.RpcHandler');\n\n\n\n/**\n * The interface that represents Auth credential. It provides the underlying\n * implementation for retrieving the ID token depending on the type of\n * credential.\n * @interface\n */\nfireauth.AuthCredential = function() {};\n\n\n/**\n * Returns a promise to retrieve ID token using the underlying RPC handler API\n * for the current credential.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @return {!goog.Promise<!Object, !fireauth.AuthError>}\n *     idTokenPromise The RPC handler method that returns a promise which\n *     resolves with an ID token.\n */\nfireauth.AuthCredential.prototype.getIdTokenProvider;\n\n\n/**\n * Links the credential to an existing account, identified by an ID token.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} idToken The ID token of the existing account.\n * @return {!goog.Promise<!Object>} A Promise that resolves when the accounts\n *     are linked.\n */\nfireauth.AuthCredential.prototype.linkToIdToken;\n\n\n/**\n * Tries to match the credential's idToken with the provided UID.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} uid The UID of the user to reauthenticate.\n * @return {!goog.Promise<!Object>} A Promise that resolves when\n *     idToken UID match succeeds and returns the server response.\n */\nfireauth.AuthCredential.prototype.matchIdTokenWithUid;\n\n\n/**\n * @return {!Object} The plain object representation of an Auth credential. This\n *     will be exposed as toJSON() externally.\n */\nfireauth.AuthCredential.prototype.toPlainObject;\n\n\n/**\n * @param {!goog.Promise<!Object>} idTokenResolver A promise that resolves with\n *     the ID token response.\n * @param {string} uid The UID to match in the token response.\n * @return {!goog.Promise<!Object>} A promise that resolves with the same\n *     response if the UID matches.\n */\nfireauth.AuthCredential.verifyTokenResponseUid =\n    function(idTokenResolver, uid) {\n  return idTokenResolver.then(function(response) {\n    // This should not happen as rpcHandler verifyAssertion and verifyPassword\n    // always guarantee an ID token is available.\n    if (response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]) {\n      // Parse the token object.\n      var parsedIdToken = fireauth.IdToken.parse(\n          response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]);\n      // Confirm token localId matches the provided UID. If not, throw the user\n      // mismatch error.\n      if (!parsedIdToken || uid != parsedIdToken.getLocalId()) {\n        throw new fireauth.AuthError(fireauth.authenum.Error.USER_MISMATCH);\n      }\n      return response;\n    }\n    throw new fireauth.AuthError(fireauth.authenum.Error.USER_MISMATCH);\n  })\n  .thenCatch(function(error) {\n    // Translate auth/user-not-found error directly to auth/user-mismatch.\n    throw fireauth.AuthError.translateError(\n        error,\n        fireauth.authenum.Error.USER_DELETED,\n        fireauth.authenum.Error.USER_MISMATCH);\n  });\n};\n\n\n\n/**\n * The interface that represents the Auth provider.\n * @interface\n */\nfireauth.AuthProvider = function() {};\n\n\n/**\n * @param {...*} var_args The credential data.\n * @return {!fireauth.AuthCredential} The Auth provider credential.\n */\nfireauth.AuthProvider.credential;\n\n\n/**\n * @typedef {{\n *   accessToken: (?string|undefined),\n *   idToken: (?string|undefined),\n *   nonce: (?string|undefined),\n *   oauthToken: (?string|undefined),\n *   oauthTokenSecret: (?string|undefined),\n *   pendingToken: (?string|undefined)\n * }}\n */\nfireauth.OAuthResponse;\n\n\n/**\n * The SAML Auth credential class. The Constructor is not publicly visible.\n * This is constructed by the SDK on successful or failure after SAML sign-in\n * and returned to developer.\n * @param {!fireauth.idp.ProviderId} providerId The provider ID.\n * @param {string} pendingToken The SAML response pending token.\n * @constructor\n * @implements {fireauth.AuthCredential}\n */\nfireauth.SAMLAuthCredential = function(providerId, pendingToken) {\n  if (pendingToken) {\n    /** @private {string} The pending token where SAML response is encrypted. */\n    this.pendingToken_ = pendingToken;\n  } else {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n        'failed to construct a credential');\n  }\n\n  fireauth.object.setReadonlyProperty(this, 'providerId', providerId);\n  fireauth.object.setReadonlyProperty(this, 'signInMethod', providerId);\n};\n\n\n/**\n * Returns a promise to retrieve ID token using the underlying RPC handler API\n * for the current credential.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @return {!goog.Promise<!Object, !fireauth.AuthError>}\n *     idTokenPromise The RPC handler method that returns a promise which\n *     resolves with an ID token.\n * @override\n */\nfireauth.SAMLAuthCredential.prototype.getIdTokenProvider =\n    function(rpcHandler) {\n  return rpcHandler.verifyAssertion(\n      /** @type {!fireauth.RpcHandler.VerifyAssertionData} */ (\n      this.makeVerifyAssertionRequest_()));\n};\n\n\n/**\n * Links the credential to an existing account, identified by an ID token.\n * @param {!fireauth.RpcHandler} rpcHandler The rpc handler.\n * @param {string} idToken The ID token of the existing account.\n * @return {!goog.Promise<!Object>} A Promise that resolves when the accounts\n *     are linked, returning the backend response.\n * @override\n */\nfireauth.SAMLAuthCredential.prototype.linkToIdToken =\n    function(rpcHandler, idToken) {\n  var request = this.makeVerifyAssertionRequest_();\n  request['idToken'] = idToken;\n  return rpcHandler.verifyAssertionForLinking(\n      /** @type {!fireauth.RpcHandler.VerifyAssertionData} */ (request));\n};\n\n\n/**\n * Tries to match the credential's idToken with the provided UID.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} uid The UID of the user to reauthenticate.\n * @return {!goog.Promise<!Object>} A Promise that resolves when\n *     idToken UID match succeeds and returns the server response.\n * @override\n */\nfireauth.SAMLAuthCredential.prototype.matchIdTokenWithUid =\n    function(rpcHandler, uid) {\n  var request = this.makeVerifyAssertionRequest_();\n  // Do not create a new account if the user doesn't exist.\n  return fireauth.AuthCredential.verifyTokenResponseUid(\n      rpcHandler.verifyAssertionForExisting(\n          /** @type {!fireauth.RpcHandler.VerifyAssertionData} */ (request)),\n      uid);\n};\n\n\n/**\n * @return {!Object} A request to the VerifyAssertion endpoint, populated with\n *     the assertion data from this credential.\n * @private\n */\nfireauth.SAMLAuthCredential.prototype.makeVerifyAssertionRequest_ =\n    function() {\n  return {\n    'pendingToken': this.pendingToken_,\n    // Always use http://localhost.\n    'requestUri': 'http://localhost'\n  };\n};\n\n\n/**\n * @return {!Object} The plain object representation of an Auth credential.\n * @override\n */\nfireauth.SAMLAuthCredential.prototype.toPlainObject = function() {\n  return {\n    'providerId': this['providerId'],\n    'signInMethod': this['signInMethod'],\n    'pendingToken': this.pendingToken_\n  };\n};\n\n\n/**\n * @param {?Object|undefined} json The plain object representation of a\n *     SAMLAuthCredential.\n * @return {?fireauth.SAMLAuthCredential} The SAML credential if the object\n *     is a JSON representation of a SAMLAuthCredential, null otherwise.\n */\nfireauth.SAMLAuthCredential.fromJSON = function(json) {\n  if (json &&\n      json['providerId'] &&\n      json['signInMethod'] &&\n      json['providerId'].indexOf(fireauth.constants.SAML_PREFIX) == 0 &&\n      json['pendingToken']) {\n    try {\n      return new fireauth.SAMLAuthCredential(\n          json['providerId'], json['pendingToken']);\n    } catch (e) {\n      return null;\n    }\n  }\n  return null;\n};\n\n\n/**\n * The OAuth credential class.\n * @param {!fireauth.idp.ProviderId} providerId The provider ID.\n * @param {!fireauth.OAuthResponse} oauthResponse The OAuth\n *     response object containing token information.\n * @param {!fireauth.idp.SignInMethod} signInMethod The sign in method.\n * @constructor\n * @implements {fireauth.AuthCredential}\n */\nfireauth.OAuthCredential = function(providerId, oauthResponse, signInMethod) {\n  /**\n   * @private {?string} The pending token where the IdP response is encrypted.\n   */\n  this.pendingToken_ = null;\n  if (oauthResponse['idToken'] || oauthResponse['accessToken']) {\n    // OAuth 2 and either ID token or access token.\n    if (oauthResponse['idToken']) {\n      fireauth.object.setReadonlyProperty(\n          this, 'idToken', oauthResponse['idToken']);\n    }\n    if (oauthResponse['accessToken']) {\n      fireauth.object.setReadonlyProperty(\n          this, 'accessToken', oauthResponse['accessToken']);\n    }\n    // Add nonce if available and no pendingToken is present.\n    if (oauthResponse['nonce'] && !oauthResponse['pendingToken']) {\n      fireauth.object.setReadonlyProperty(\n          this, 'nonce', oauthResponse['nonce']);\n    }\n    if (oauthResponse['pendingToken']) {\n      this.pendingToken_ = oauthResponse['pendingToken'];\n    }\n  } else if (oauthResponse['oauthToken'] &&\n             oauthResponse['oauthTokenSecret'])  {\n    // OAuth 1 and OAuth token with OAuth token secret.\n    fireauth.object.setReadonlyProperty(\n        this, 'accessToken', oauthResponse['oauthToken']);\n    fireauth.object.setReadonlyProperty(\n        this, 'secret', oauthResponse['oauthTokenSecret']);\n  } else {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n        'failed to construct a credential');\n  }\n\n  fireauth.object.setReadonlyProperty(this, 'providerId', providerId);\n  fireauth.object.setReadonlyProperty(this, 'signInMethod', signInMethod);\n};\n\n\n/**\n * Returns a promise to retrieve ID token using the underlying RPC handler API\n * for the current credential.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @return {!goog.Promise<!Object, !fireauth.AuthError>}\n *     idTokenPromise The RPC handler method that returns a promise which\n *     resolves with an ID token.\n * @override\n */\nfireauth.OAuthCredential.prototype.getIdTokenProvider = function(rpcHandler) {\n  return rpcHandler.verifyAssertion(\n      /** @type {!fireauth.RpcHandler.VerifyAssertionData} */ (\n      this.makeVerifyAssertionRequest_()));\n};\n\n\n/**\n * Links the credential to an existing account, identified by an ID token.\n * @param {!fireauth.RpcHandler} rpcHandler The rpc handler.\n * @param {string} idToken The ID token of the existing account.\n * @return {!goog.Promise<!Object>} A Promise that resolves when the accounts\n *     are linked, returning the backend response.\n * @override\n */\nfireauth.OAuthCredential.prototype.linkToIdToken =\n    function(rpcHandler, idToken) {\n  var request = this.makeVerifyAssertionRequest_();\n  request['idToken'] = idToken;\n  return rpcHandler.verifyAssertionForLinking(\n      /** @type {!fireauth.RpcHandler.VerifyAssertionData} */ (request));\n};\n\n\n/**\n * Tries to match the credential's idToken with the provided UID.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} uid The UID of the user to reauthenticate.\n * @return {!goog.Promise<!Object>} A Promise that resolves when\n *     idToken UID match succeeds and returns the server response.\n * @override\n */\nfireauth.OAuthCredential.prototype.matchIdTokenWithUid =\n    function(rpcHandler, uid) {\n  var request = this.makeVerifyAssertionRequest_();\n  // Do not create a new account if the user doesn't exist.\n  return fireauth.AuthCredential.verifyTokenResponseUid(\n      rpcHandler.verifyAssertionForExisting(\n          /** @type {!fireauth.RpcHandler.VerifyAssertionData} */ (request)),\n      uid);\n};\n\n\n/**\n * @return {!Object} A request to the VerifyAssertion endpoint, populated with\n *     the OAuth data from this credential.\n * @private\n */\nfireauth.OAuthCredential.prototype.makeVerifyAssertionRequest_ = function() {\n  var postBody = {};\n  if (this['idToken']) {\n    postBody['id_token'] = this['idToken'];\n  }\n  if (this['accessToken']) {\n    postBody['access_token'] = this['accessToken'];\n  }\n  if (this['secret']) {\n    postBody['oauth_token_secret'] = this['secret'];\n  }\n  postBody['providerId'] = this['providerId'];\n  // Pass nonce in postBody if available.\n  if (this['nonce'] && !this.pendingToken_) {\n    postBody['nonce'] = this['nonce'];\n  }\n  var request = {\n    'postBody': goog.Uri.QueryData.createFromMap(postBody).toString(),\n    // Always use http://localhost.\n    'requestUri': 'http://localhost'\n  };\n  if (this.pendingToken_) {\n    // For pendingToken, just pass it through and drop postBody.\n    delete request['postBody'];\n    request['pendingToken'] = this.pendingToken_;\n  }\n  return request;\n};\n\n\n/**\n * @return {!Object} The plain object representation of an Auth credential.\n * @override\n */\nfireauth.OAuthCredential.prototype.toPlainObject = function() {\n  var obj = {\n    'providerId': this['providerId'],\n    'signInMethod': this['signInMethod']\n  };\n  if (this['idToken']) {\n    obj['oauthIdToken'] = this['idToken'];\n  }\n  if (this['accessToken']) {\n    obj['oauthAccessToken'] = this['accessToken'];\n  }\n  if (this['secret']) {\n    obj['oauthTokenSecret'] = this['secret'];\n  }\n  if (this['nonce']) {\n    obj['nonce'] = this['nonce'];\n  }\n  if (this.pendingToken_) {\n    obj['pendingToken'] = this.pendingToken_;\n  }\n  return obj;\n};\n\n\n/**\n * @param {?Object|undefined} json The plain object representation of an\n *     OAuthCredential.\n * @return {?fireauth.OAuthCredential} The OAuth/OIDC credential if the object\n *     is a JSON representation of an OAuthCredential, null otherwise.\n */\nfireauth.OAuthCredential.fromJSON = function(json) {\n  if (json &&\n      json['providerId'] &&\n      json['signInMethod']) {\n    // Convert to OAuthResponse format.\n    var oauthResponse = {\n      // OIDC && google.com.\n      'idToken': json['oauthIdToken'],\n      // OAuth 2.0 providers.\n      'accessToken': json['oauthTokenSecret'] ? null : json['oauthAccessToken'],\n      // OAuth 1.0 provider, eg. Twitter.\n      'oauthTokenSecret': json['oauthTokenSecret'],\n      'oauthToken': json['oauthTokenSecret'] && json['oauthAccessToken'],\n      'nonce': json['nonce'],\n      'pendingToken': json['pendingToken']\n    };\n    try {\n      // Constructor will validate the OAuthResponse.\n      return new fireauth.OAuthCredential(\n          json['providerId'], oauthResponse, json['signInMethod']);\n    } catch (e) {\n      return null;\n    }\n  }\n  return null;\n};\n\n\n/**\n * A generic OAuth provider (OAuth1 or OAuth2).\n * @param {string} providerId The IdP provider ID (e.g. google.com,\n *     facebook.com) registered with the backend.\n * @param {?Array<string>=} opt_reservedParams The backlist of parameters that\n *     cannot be set through setCustomParameters.\n * @constructor\n */\nfireauth.FederatedProvider = function(providerId, opt_reservedParams) {\n  /** @private {!Array<string>} */\n  this.reservedParams_ = opt_reservedParams || [];\n\n  // Set read only instance providerId property.\n  // Set read only instance isOAuthProvider property.\n  fireauth.object.setReadonlyProperties(this, {\n    'providerId': providerId,\n    'isOAuthProvider': true\n  });\n\n  /** @private {!Object} The OAuth custom parameters for current provider. */\n  this.customParameters_ = {};\n  /** @protected {?string} The custom OAuth language parameter. */\n  this.languageParameter =\n      (fireauth.idp.getIdpSettings(/** @type {!fireauth.idp.ProviderId} */ (\n          providerId)) || {}).languageParam || null;\n  /** @protected {?string} The default language. */\n  this.defaultLanguageCode = null;\n};\n\n/**\n * @param {!Object} customParameters The custom OAuth parameters to pass\n *     in OAuth request.\n * @return {!fireauth.FederatedProvider} The FederatedProvider instance, for\n *     chaining method calls.\n */\nfireauth.FederatedProvider.prototype.setCustomParameters =\n    function(customParameters) {\n  this.customParameters_ = goog.object.clone(customParameters);\n  return this;\n};\n\n\n/**\n * Set the default language code on the provider instance.\n * @param {?string} languageCode The default language code to set if not already\n *     provided in the custom parameters.\n */\nfireauth.FederatedProvider.prototype.setDefaultLanguage =\n    function(languageCode) {\n  this.defaultLanguageCode = languageCode;\n};\n\n\n/**\n * @return {!Object} The custom OAuth parameters to pass in OAuth request.\n */\nfireauth.FederatedProvider.prototype.getCustomParameters = function() {\n  // The backend already checks for these values and makes sure no reserved\n  // fields like client ID, redirect URI, state are overwritten by these\n  // fields.\n  var params =\n      fireauth.util.copyWithoutNullsOrUndefined(this.customParameters_);\n  // Convert to strings.\n  for (var key in params) {\n    params[key] = params[key].toString();\n  }\n  // Remove blacklisted OAuth custom parameters.\n  var customParams =\n      fireauth.util.removeEntriesWithKeys(params, this.reservedParams_);\n  // If language param supported and not already provided, use default language.\n  if (this.languageParameter &&\n      this.defaultLanguageCode &&\n      !customParams[this.languageParameter]) {\n    customParams[this.languageParameter] = this.defaultLanguageCode;\n  }\n  return customParams;\n};\n\n\n/**\n * Generic SAML auth provider.\n * @param {string} providerId The SAML IdP provider ID (e.g. saml.saml2rp)\n *     registered with the backend.\n * @constructor\n * @extends {fireauth.FederatedProvider}\n * @implements {fireauth.AuthProvider}\n */\nfireauth.SAMLAuthProvider = function(providerId) {\n  // SAML provider IDs must be prefixed with the SAML_PREFIX.\n  if (!fireauth.idp.isSaml(providerId)) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        'SAML provider IDs must be prefixed with \"' +\n        fireauth.constants.SAML_PREFIX + '\"');\n  }\n  // isOAuthProvider is true even though this is not an OAuth provider.\n  // This can be confusing as this is a SAML provider. However, this property\n  // is needed to allow signInWithPopup/Redirect. We should rename it to\n  // something more accurate: isFederatedProvider.\n  fireauth.SAMLAuthProvider.base(this, 'constructor', providerId, []);\n};\ngoog.inherits(fireauth.SAMLAuthProvider, fireauth.FederatedProvider);\n\n\n/**\n * Generic OAuth2 Auth provider.\n * @param {string} providerId The IdP provider ID (e.g. google.com,\n *     facebook.com) registered with the backend.\n * @constructor\n * @extends {fireauth.FederatedProvider}\n * @implements {fireauth.AuthProvider}\n */\nfireauth.OAuthProvider = function(providerId) {\n  fireauth.OAuthProvider.base(this, 'constructor', providerId,\n      fireauth.idp.RESERVED_OAUTH2_PARAMS);\n\n  /** @private {!Array<string>} The list of OAuth2 scopes to request. */\n  this.scopes_ = [];\n};\ngoog.inherits(fireauth.OAuthProvider, fireauth.FederatedProvider);\n\n\n/**\n * @param {string} scope The OAuth scope to request.\n * @return {!fireauth.OAuthProvider} The OAuthProvider instance, for chaining\n *     method calls.\n */\nfireauth.OAuthProvider.prototype.addScope = function(scope) {\n  // If not already added, add scope to list.\n  if (!goog.array.contains(this.scopes_, scope)) {\n    this.scopes_.push(scope);\n  }\n  return this;\n};\n\n\n/** @return {!Array<string>} The Auth provider's list of scopes. */\nfireauth.OAuthProvider.prototype.getScopes = function() {\n  return goog.array.clone(this.scopes_);\n};\n\n\n/**\n * Initializes an OAuth AuthCredential. At least one of ID token or access token\n * must be defined. When providing an OIDC ID token with a nonce encoded, the\n * raw nonce must also be provided.\n * @param {?string=} opt_idToken The optional OAuth ID token.\n * @param {?string=} opt_accessToken The optional OAuth access token.\n * @param {?string=} opt_rawNonce The optional raw nonce.\n * @return {!fireauth.AuthCredential} The Auth credential object.\n */\nfireauth.OAuthProvider.prototype.credential = function(opt_idToken,\n    opt_accessToken, opt_rawNonce) {\n  if (!opt_idToken && !opt_accessToken) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n        'credential failed: must provide the ID token and/or the access ' +\n        'token.');\n  }\n  var oauthResponse = {\n    'idToken': opt_idToken || null,\n    'accessToken': opt_accessToken || null,\n    'nonce': opt_rawNonce || null\n  };\n  // For OAuthCredential, sign in method is same as providerId.\n  return new fireauth.OAuthCredential(this['providerId'],\n                                      oauthResponse,\n                                      this['providerId']);\n};\n\n\n/**\n * Facebook Auth provider.\n * @constructor\n * @extends {fireauth.OAuthProvider}\n * @implements {fireauth.AuthProvider}\n */\nfireauth.FacebookAuthProvider = function() {\n  fireauth.FacebookAuthProvider.base(this, 'constructor',\n      fireauth.idp.ProviderId.FACEBOOK);\n};\ngoog.inherits(fireauth.FacebookAuthProvider, fireauth.OAuthProvider);\n\nfireauth.object.setReadonlyProperty(fireauth.FacebookAuthProvider,\n    'PROVIDER_ID', fireauth.idp.ProviderId.FACEBOOK);\n\nfireauth.object.setReadonlyProperty(fireauth.FacebookAuthProvider,\n    'FACEBOOK_SIGN_IN_METHOD', fireauth.idp.SignInMethod.FACEBOOK);\n\n\n/**\n * Initializes a Facebook AuthCredential.\n * @param {string} accessTokenOrObject The Facebook access token, or object\n *     containing the token for FirebaseUI backwards compatibility.\n * @return {!fireauth.AuthCredential} The Auth credential object.\n * @override\n */\nfireauth.FacebookAuthProvider.credential = function(accessTokenOrObject) {\n  if (!accessTokenOrObject) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n        'credential failed: expected 1 argument (the OAuth access token).');\n  }\n  var accessToken = accessTokenOrObject;\n  if (goog.isObject(accessTokenOrObject)) {\n    accessToken = accessTokenOrObject['accessToken'];\n  }\n  return new fireauth.FacebookAuthProvider().credential(null,\n      /** @type {string} */ (accessToken));\n};\n\n\n/**\n * GitHub Auth provider.\n * @constructor\n * @extends {fireauth.OAuthProvider}\n * @implements {fireauth.AuthProvider}\n */\nfireauth.GithubAuthProvider = function() {\n  fireauth.GithubAuthProvider.base(this, 'constructor',\n      fireauth.idp.ProviderId.GITHUB);\n};\ngoog.inherits(fireauth.GithubAuthProvider, fireauth.OAuthProvider);\n\nfireauth.object.setReadonlyProperty(fireauth.GithubAuthProvider,\n    'PROVIDER_ID', fireauth.idp.ProviderId.GITHUB);\n\nfireauth.object.setReadonlyProperty(fireauth.GithubAuthProvider,\n    'GITHUB_SIGN_IN_METHOD', fireauth.idp.SignInMethod.GITHUB);\n\n\n/**\n * Initializes a GitHub AuthCredential.\n * @param {string} accessTokenOrObject The GitHub access token, or object\n *     containing the token for FirebaseUI backwards compatibility.\n * @return {!fireauth.AuthCredential} The Auth credential object.\n * @override\n */\nfireauth.GithubAuthProvider.credential = function(accessTokenOrObject) {\n  if (!accessTokenOrObject) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n        'credential failed: expected 1 argument (the OAuth access token).');\n  }\n  var accessToken = accessTokenOrObject;\n  if (goog.isObject(accessTokenOrObject)) {\n    accessToken = accessTokenOrObject['accessToken'];\n  }\n  return new fireauth.GithubAuthProvider().credential(null,\n      /** @type {string} */ (accessToken));\n};\n\n\n/**\n * Google Auth provider.\n * @constructor\n * @extends {fireauth.OAuthProvider}\n * @implements {fireauth.AuthProvider}\n */\nfireauth.GoogleAuthProvider = function() {\n  fireauth.GoogleAuthProvider.base(this, 'constructor',\n      fireauth.idp.ProviderId.GOOGLE);\n\n  // Add profile scope to Google Auth provider as default scope.\n  // This is to ensure profile info is populated in current user.\n  this.addScope('profile');\n};\ngoog.inherits(fireauth.GoogleAuthProvider, fireauth.OAuthProvider);\n\nfireauth.object.setReadonlyProperty(fireauth.GoogleAuthProvider,\n    'PROVIDER_ID', fireauth.idp.ProviderId.GOOGLE);\n\nfireauth.object.setReadonlyProperty(fireauth.GoogleAuthProvider,\n    'GOOGLE_SIGN_IN_METHOD', fireauth.idp.SignInMethod.GOOGLE);\n\n\n/**\n * Initializes a Google AuthCredential.\n * @param {?string=} idTokenOrObject The Google ID token. If null or undefined,\n *     we expect the access token to be passed. It can also be an object\n *     containing the tokens for FirebaseUI backwards compatibility.\n * @param {?string=} accessToken The Google access token. If null or\n *     undefined, we expect the ID token to have been passed.\n * @return {!fireauth.AuthCredential} The Auth credential object.\n * @override\n */\nfireauth.GoogleAuthProvider.credential =\n    function(idTokenOrObject, accessToken) {\n  var idToken = idTokenOrObject;\n  if (goog.isObject(idTokenOrObject)) {\n    idToken = idTokenOrObject['idToken'];\n    accessToken = idTokenOrObject['accessToken'];\n  }\n  return new fireauth.GoogleAuthProvider().credential(\n      /** @type {string} */ (idToken), /** @type {string} */ (accessToken));\n};\n\n\n/**\n * Twitter Auth provider.\n * @constructor\n * @extends {fireauth.FederatedProvider}\n * @implements {fireauth.AuthProvider}\n */\nfireauth.TwitterAuthProvider = function() {\n  fireauth.TwitterAuthProvider.base(this, 'constructor',\n      fireauth.idp.ProviderId.TWITTER,\n      fireauth.idp.RESERVED_OAUTH1_PARAMS);\n};\ngoog.inherits(fireauth.TwitterAuthProvider, fireauth.FederatedProvider);\n\nfireauth.object.setReadonlyProperty(fireauth.TwitterAuthProvider,\n    'PROVIDER_ID', fireauth.idp.ProviderId.TWITTER);\n\nfireauth.object.setReadonlyProperty(fireauth.TwitterAuthProvider,\n    'TWITTER_SIGN_IN_METHOD', fireauth.idp.SignInMethod.TWITTER);\n\n\n/**\n * Initializes a Twitter AuthCredential.\n * @param {string} tokenOrObject The Twitter access token, or object\n *     containing the token for FirebaseUI backwards compatibility.\n * @param {string} secret The Twitter secret.\n * @return {!fireauth.AuthCredential} The Auth credential object.\n * @override\n */\nfireauth.TwitterAuthProvider.credential = function(tokenOrObject, secret) {\n  var tokenObject = tokenOrObject;\n  if (!goog.isObject(tokenObject)) {\n    tokenObject = {\n      'oauthToken': tokenOrObject,\n      'oauthTokenSecret': secret\n    };\n  }\n\n  if (!tokenObject['oauthToken'] || !tokenObject['oauthTokenSecret']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n        'credential failed: expected 2 arguments (the OAuth access token ' +\n        'and secret).');\n  }\n\n  return new fireauth.OAuthCredential(fireauth.idp.ProviderId.TWITTER,\n      /** @type {!fireauth.OAuthResponse} */ (tokenObject),\n      fireauth.idp.SignInMethod.TWITTER);\n};\n\n\n/**\n * The email and password credential class.\n * @param {string} email The credential email.\n * @param {string} password The credential password.\n * @param {string=} opt_signInMethod The credential sign in method can be either\n *     'password' or 'emailLink'\n * @constructor\n * @implements {fireauth.AuthCredential}\n */\nfireauth.EmailAuthCredential = function(email, password, opt_signInMethod) {\n  this.email_ = email;\n  this.password_ = password;\n  fireauth.object.setReadonlyProperty(this, 'providerId',\n      fireauth.idp.ProviderId.PASSWORD);\n  var signInMethod = opt_signInMethod ===\n      fireauth.EmailAuthProvider['EMAIL_LINK_SIGN_IN_METHOD'] ?\n      fireauth.EmailAuthProvider['EMAIL_LINK_SIGN_IN_METHOD'] :\n      fireauth.EmailAuthProvider['EMAIL_PASSWORD_SIGN_IN_METHOD'];\n  fireauth.object.setReadonlyProperty(this, 'signInMethod', signInMethod);\n};\n\n\n/**\n * Returns a promise to retrieve ID token using the underlying RPC handler API\n * for the current credential.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @return {!goog.Promise<!Object, !fireauth.AuthError>}\n *     idTokenPromise The RPC handler method that returns a promise which\n *     resolves with an ID token.\n * @override\n */\nfireauth.EmailAuthCredential.prototype.getIdTokenProvider =\n    function(rpcHandler) {\n  if (this['signInMethod'] ==\n      fireauth.EmailAuthProvider['EMAIL_LINK_SIGN_IN_METHOD']) {\n    return rpcHandler.emailLinkSignIn(this.email_, this.password_);\n  }\n  return rpcHandler.verifyPassword(this.email_, this.password_);\n};\n\n\n/**\n * Adds an email and password account to an existing account, identified by an\n * ID token.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} idToken The ID token of the existing account.\n * @return {!goog.Promise<!Object>} A Promise that resolves when the accounts\n *     are linked, returning the backend response.\n * @override\n */\nfireauth.EmailAuthCredential.prototype.linkToIdToken =\n    function(rpcHandler, idToken) {\n  if (this['signInMethod'] ==\n      fireauth.EmailAuthProvider['EMAIL_LINK_SIGN_IN_METHOD']) {\n    return rpcHandler.emailLinkSignInForLinking(\n        idToken, this.email_, this.password_);\n  }\n  return rpcHandler.updateEmailAndPassword(\n      idToken, this.email_, this.password_);\n};\n\n\n/**\n * Tries to match the credential's idToken with the provided UID.\n * @param {!fireauth.RpcHandler} rpcHandler The rpc handler.\n * @param {string} uid The UID of the user to reauthenticate.\n * @return {!goog.Promise<!Object>} A Promise that resolves when\n *     reauthentication succeeds.\n * @override\n */\nfireauth.EmailAuthCredential.prototype.matchIdTokenWithUid =\n    function(rpcHandler, uid) {\n  // Do not create a new account if the user doesn't exist.\n  return fireauth.AuthCredential.verifyTokenResponseUid(\n      // This shouldn't create a new email/password account.\n      this.getIdTokenProvider(rpcHandler),\n      uid);\n};\n\n\n/**\n * @return {!Object} The plain object representation of an Auth credential.\n * @override\n */\nfireauth.EmailAuthCredential.prototype.toPlainObject = function() {\n  return {\n    'email': this.email_,\n    'password': this.password_,\n    'signInMethod': this['signInMethod']\n  };\n};\n\n\n/**\n * @param {?Object|undefined} json The plain object representation of a\n *     EmailAuthCredential.\n * @return {?fireauth.EmailAuthCredential} The email credential if the object\n *     is a JSON representation of an EmailAuthCredential, null otherwise.\n */\nfireauth.EmailAuthCredential.fromJSON = function(json) {\n  if (json && json['email'] && json['password']) {\n    return new fireauth.EmailAuthCredential(\n        json['email'],\n        json['password'],\n        json['signInMethod']);\n  }\n  return null;\n};\n\n\n/**\n * Email password Auth provider implementation.\n * @constructor\n * @implements {fireauth.AuthProvider}\n */\nfireauth.EmailAuthProvider = function() {\n  // Set read-only instance providerId and isOAuthProvider property.\n  fireauth.object.setReadonlyProperties(this, {\n    'providerId': fireauth.idp.ProviderId.PASSWORD,\n    'isOAuthProvider': false\n  });\n};\n\n\n/**\n * Initializes an instance of an email/password Auth credential.\n * @param {string} email The credential email.\n * @param {string} password The credential password.\n * @return {!fireauth.EmailAuthCredential} The Auth credential object.\n * @override\n */\nfireauth.EmailAuthProvider.credential = function(email, password) {\n  return new fireauth.EmailAuthCredential(email, password);\n};\n\n\n/**\n * @param {string} email The credential email.\n * @param {string} emailLink The credential email link.\n * @return {!fireauth.EmailAuthCredential} The Auth credential object.\n */\nfireauth.EmailAuthProvider.credentialWithLink = function(email, emailLink) {\n  var code = fireauth.EmailAuthProvider\n      .getActionCodeFromSignInEmailLink(emailLink);\n  if (!code) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR, 'Invalid email link!');\n  }\n  return new fireauth.EmailAuthCredential(email, code,\n      fireauth.EmailAuthProvider['EMAIL_LINK_SIGN_IN_METHOD']);\n};\n\n\n/**\n * @param {string} emailLink The sign in email link to be validated.\n * @return {?string} Action code if the email link is valid, otherwise null.\n */\nfireauth.EmailAuthProvider.getActionCodeFromSignInEmailLink =\n    function(emailLink) {\n  emailLink = fireauth.DynamicLink.parseDeepLink(emailLink);\n  var actionCodeUrl = new fireauth.ActionCodeUrl(emailLink);\n  var code = actionCodeUrl.getCode();\n  if (actionCodeUrl.getMode() === fireauth.ActionCodeUrl.Mode.SIGN_IN && code) {\n    return code;\n  }\n  return null;\n};\n\n\n// Set read only PROVIDER_ID property.\nfireauth.object.setReadonlyProperties(fireauth.EmailAuthProvider, {\n  'PROVIDER_ID': fireauth.idp.ProviderId.PASSWORD\n});\n\n// Set read only EMAIL_LINK_SIGN_IN_METHOD property.\nfireauth.object.setReadonlyProperties(fireauth.EmailAuthProvider, {\n  'EMAIL_LINK_SIGN_IN_METHOD': fireauth.idp.SignInMethod.EMAIL_LINK\n});\n\n// Set read only EMAIL_PASSWORD_SIGN_IN_METHOD property.\nfireauth.object.setReadonlyProperties(fireauth.EmailAuthProvider, {\n  'EMAIL_PASSWORD_SIGN_IN_METHOD': fireauth.idp.SignInMethod.EMAIL_PASSWORD\n});\n\n\n/**\n * A credential for phone number sign-in.\n * @param {!fireauth.PhoneAuthCredential.Parameters_} params The credential\n *     parameters that prove the user owns the claimed phone number.\n * @constructor\n * @implements {fireauth.AuthCredential}\n */\nfireauth.PhoneAuthCredential = function(params) {\n  // Either verification ID and code, or phone number temporary proof must be\n  // provided.\n  if (!(params.verificationId && params.verificationCode) &&\n      !(params.temporaryProof && params.phoneNumber)) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n\n  /**\n   * The phone Auth parameters that prove ownership of a phone number, either\n   * through completion of a phone verification flow, or by referencing a\n   * previously completed verification flow (\"temporaryProof\").\n   * @private {!fireauth.PhoneAuthCredential.Parameters_}\n   */\n  this.params_ = params;\n\n  fireauth.object.setReadonlyProperty(this, 'providerId',\n      fireauth.idp.ProviderId.PHONE);\n\n  fireauth.object.setReadonlyProperty(\n      this, 'signInMethod', fireauth.idp.SignInMethod.PHONE);\n};\n\n\n/**\n * Parameters that prove ownership of a phone number via a ID \"verificationId\"\n * of a request to send a code to the phone number, with the code\n * \"verificationCode\" that the user received on their phone.\n * @private\n * @typedef {{\n *   verificationId: string,\n *   verificationCode: string\n * }}\n */\nfireauth.PhoneAuthCredential.VerificationParameters_;\n\n\n/**\n * Parameters that prove ownership of a phone number by referencing a previously\n * completed phone Auth flow.\n * @private\n * @typedef {{\n *   temporaryProof: string,\n *   phoneNumber: string\n * }}\n */\nfireauth.PhoneAuthCredential.TemporaryProofParameters_;\n\n\n/**\n * @private\n * @typedef {\n *   !fireauth.PhoneAuthCredential.VerificationParameters_|\n *   !fireauth.PhoneAuthCredential.TemporaryProofParameters_\n * }\n */\nfireauth.PhoneAuthCredential.Parameters_;\n\n\n/**\n * Retrieves an ID token from the backend given the current credential.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @return {!goog.Promise<!Object>} A Promise that resolves with the\n *     backend response.\n * @override\n */\nfireauth.PhoneAuthCredential.prototype.getIdTokenProvider =\n    function(rpcHandler) {\n  return rpcHandler.verifyPhoneNumber(this.makeVerifyPhoneNumberRequest_());\n};\n\n\n/**\n * Adds a phone credential to an existing account identified by an ID token.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} idToken The ID token of the existing account.\n * @return {!goog.Promise<!Object>} A Promise that resolves when the accounts\n *     are linked, returning the backend response.\n * @override\n */\nfireauth.PhoneAuthCredential.prototype.linkToIdToken =\n    function(rpcHandler, idToken) {\n  var request = this.makeVerifyPhoneNumberRequest_();\n  request['idToken'] = idToken;\n  return rpcHandler.verifyPhoneNumberForLinking(request);\n};\n\n\n/**\n * Tries to match the credential's idToken with the provided UID.\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler.\n * @param {string} uid The UID of the user to reauthenticate.\n * @return {!goog.Promise<!Object>} A Promise that resolves when\n *     reauthentication succeeds.\n * @override\n */\nfireauth.PhoneAuthCredential.prototype.matchIdTokenWithUid =\n    function(rpcHandler, uid) {\n  var request = this.makeVerifyPhoneNumberRequest_();\n  return fireauth.AuthCredential.verifyTokenResponseUid(\n      rpcHandler.verifyPhoneNumberForExisting(request),\n      uid);\n};\n\n\n/**\n * Converts a PhoneAuthCredential to a plain object.\n * @return {!Object}\n * @override\n */\nfireauth.PhoneAuthCredential.prototype.toPlainObject = function() {\n  var obj =  {\n    'providerId': fireauth.idp.ProviderId.PHONE\n  };\n  if (this.params_.verificationId) {\n    obj['verificationId'] = this.params_.verificationId;\n  }\n  if (this.params_.verificationCode) {\n    obj['verificationCode'] = this.params_.verificationCode;\n  }\n  if (this.params_.temporaryProof) {\n    obj['temporaryProof'] = this.params_.temporaryProof;\n  }\n  if (this.params_.phoneNumber) {\n    obj['phoneNumber'] = this.params_.phoneNumber;\n  }\n  return obj;\n};\n\n\n/**\n * @param {?Object|undefined} json The plain object representation of a\n *     PhoneAuthCredential.\n * @return {?fireauth.PhoneAuthCredential} The phone credential if the object\n *     is a JSON representation of an PhoneAuthCredential, null otherwise.\n */\nfireauth.PhoneAuthCredential.fromJSON = function(json) {\n  if (json &&\n      json['providerId'] === fireauth.idp.ProviderId.PHONE &&\n      ((json['verificationId'] && json['verificationCode']) ||\n       (json['temporaryProof'] && json['phoneNumber']))) {\n    var params = {};\n    var allowedKeys = [\n      'verificationId', 'verificationCode', 'temporaryProof', 'phoneNumber'\n    ];\n    goog.array.forEach(allowedKeys, function(key) {\n      if (json[key]) {\n        params[key] = json[key];\n      }\n    });\n    return new fireauth.PhoneAuthCredential(\n        /** @type {!fireauth.PhoneAuthCredential.Parameters_} */ (params));\n  }\n  return null;\n};\n\n\n/**\n * @return {!Object} A request to the verifyPhoneNumber endpoint based on the\n *     current state of the object.\n * @private\n */\nfireauth.PhoneAuthCredential.prototype.makeVerifyPhoneNumberRequest_ =\n    function() {\n  if (this.params_.temporaryProof && this.params_.phoneNumber) {\n    return {\n      'temporaryProof': this.params_.temporaryProof,\n      'phoneNumber': this.params_.phoneNumber\n    };\n  }\n\n  return {\n    'sessionInfo': this.params_.verificationId,\n    'code': this.params_.verificationCode\n  };\n};\n\n\n/**\n * Phone Auth provider implementation.\n * @param {?fireauth.Auth=} opt_auth The Firebase Auth instance.\n * @constructor\n * @implements {fireauth.AuthProvider}\n */\nfireauth.PhoneAuthProvider = function(opt_auth) {\n  try {\n    /** @private {!fireauth.Auth} */\n    this.auth_ = opt_auth || firebase['auth']();\n  } catch (e) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n        'Either an instance of firebase.auth.Auth must be passed as an ' +\n        'argument to the firebase.auth.PhoneAuthProvider constructor, or the ' +\n        'default firebase App instance must be initialized via ' +\n        'firebase.initializeApp().');\n  }\n  fireauth.object.setReadonlyProperties(this, {\n    'providerId': fireauth.idp.ProviderId.PHONE,\n    'isOAuthProvider': false\n  });\n};\n\n\n/**\n * Initiates a phone number confirmation flow.\n * @param {string} phoneNumber The user's phone number.\n * @param {!firebase.auth.ApplicationVerifier} applicationVerifier The\n *     application verifier for anti-abuse purposes.\n * @return {!goog.Promise<string>} A Promise that resolves with the\n *     verificationId of the phone number confirmation flow.\n */\nfireauth.PhoneAuthProvider.prototype.verifyPhoneNumber =\n    function(phoneNumber, applicationVerifier) {\n  var rpcHandler = this.auth_.getRpcHandler();\n\n  // Convert the promise into a goog.Promise. If the applicationVerifier throws\n  // an error, just propagate it to the client. Reset the reCAPTCHA widget every\n  // time after sending the token to the server.\n  return goog.Promise.resolve(applicationVerifier['verify']())\n      .then(function(assertion) {\n        if (!goog.isString(assertion)) {\n          throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n              'An implementation of firebase.auth.ApplicationVerifier' +\n              '.prototype.verify() must return a firebase.Promise ' +\n              'that resolves with a string.');\n        }\n\n        switch (applicationVerifier['type']) {\n          case 'recaptcha':\n            return rpcHandler\n                .sendVerificationCode(\n                    {'phoneNumber': phoneNumber, 'recaptchaToken': assertion})\n                .then(\n                    function(verificationId) {\n                      if (typeof applicationVerifier.reset === 'function') {\n                        applicationVerifier.reset();\n                      }\n                      return verificationId;\n                    },\n                    function(error) {\n                      if (typeof applicationVerifier.reset === 'function') {\n                        applicationVerifier.reset();\n                      }\n                      throw error;\n                    });\n          default:\n            throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n                'Only firebase.auth.ApplicationVerifiers with ' +\n                'type=\"recaptcha\" are currently supported.');\n        }\n      });\n};\n\n\n/**\n * Creates a PhoneAuthCredential.\n * @param {string} verificationId The ID of the phone number flow, to correlate\n *     this request with a previous call to\n *     PhoneAuthProvider.prototype.verifyPhoneNumber.\n * @param {string} verificationCode The verification code that was sent to the\n *     user's phone.\n * @return {!fireauth.PhoneAuthCredential}\n * @override\n */\nfireauth.PhoneAuthProvider.credential =\n    function(verificationId, verificationCode) {\n  if (!verificationId) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_SESSION_INFO);\n  }\n  if (!verificationCode) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_CODE);\n  }\n  return new fireauth.PhoneAuthCredential({\n    verificationId: verificationId,\n    verificationCode: verificationCode\n  });\n};\n\n\n// Set read only PROVIDER_ID property.\nfireauth.object.setReadonlyProperties(fireauth.PhoneAuthProvider, {\n  'PROVIDER_ID': fireauth.idp.ProviderId.PHONE\n});\n\n\n// Set read only PHONE_SIGN_IN_METHOD property.\nfireauth.object.setReadonlyProperties(fireauth.PhoneAuthProvider, {\n  'PHONE_SIGN_IN_METHOD': fireauth.idp.SignInMethod.PHONE\n});\n\n\n/**\n * Constructs an Auth credential from a backend response.\n * Note, unlike fromJSON which constructs the AuthCredential from a toJSON()\n * response, this helper constructs the credential from the server response.\n * @param {?Object} response The backend response to build a credential from.\n * @return {?fireauth.AuthCredential} The corresponding AuthCredential.\n */\nfireauth.AuthProvider.getCredentialFromResponse = function(response) {\n  // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId).\n  if (response['temporaryProof'] && response['phoneNumber']) {\n    return new fireauth.PhoneAuthCredential({\n      temporaryProof: response['temporaryProof'],\n      phoneNumber: response['phoneNumber']\n    });\n  }\n\n  // Get all OAuth response parameters from response.\n  var providerId = response && response['providerId'];\n\n  // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n  if (!providerId || providerId === fireauth.idp.ProviderId.PASSWORD) {\n    return null;\n  }\n\n  var accessToken = response && response['oauthAccessToken'];\n  var accessTokenSecret = response && response['oauthTokenSecret'];\n  // Note this is not actually returned by the backend. It is introduced in\n  // rpcHandler.\n  var rawNonce = response && response['nonce'];\n  // Google Id Token returned when no additional scopes provided.\n  var idToken = response && response['oauthIdToken'];\n  // Pending token for SAML and OAuth/OIDC providers.\n  var pendingToken = response && response['pendingToken'];\n  try {\n    switch (providerId) {\n      case fireauth.idp.ProviderId.GOOGLE:\n        return fireauth.GoogleAuthProvider.credential(\n            idToken, accessToken);\n\n      case fireauth.idp.ProviderId.FACEBOOK:\n        return fireauth.FacebookAuthProvider.credential(\n            accessToken);\n\n      case fireauth.idp.ProviderId.GITHUB:\n        return fireauth.GithubAuthProvider.credential(\n            accessToken);\n\n      case fireauth.idp.ProviderId.TWITTER:\n        return fireauth.TwitterAuthProvider.credential(\n            accessToken, accessTokenSecret);\n\n      default:\n        if (!accessToken && !accessTokenSecret && !idToken && !pendingToken) {\n          return null;\n        }\n        if (pendingToken) {\n          if (providerId.indexOf(fireauth.constants.SAML_PREFIX) == 0) {\n            return new fireauth.SAMLAuthCredential(providerId, pendingToken);\n          } else {\n            // OIDC and non-default providers excluding Twitter.\n            return new fireauth.OAuthCredential(\n                providerId,\n                {\n                  'pendingToken': pendingToken,\n                  'idToken': response['oauthIdToken'],\n                  'accessToken': response['oauthAccessToken']\n                },\n                providerId);\n          }\n        }\n        return new fireauth.OAuthProvider(providerId).credential(\n            idToken, accessToken, rawNonce);\n    }\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * Constructs an Auth credential from a JSON representation.\n * Note, unlike getCredentialFromResponse which constructs the AuthCredential\n * from a server response, this helper constructs credential from the toJSON()\n * result.\n * @param {?Object} json The JSON representation to construct credential from.\n * @return {?fireauth.AuthCredential} The corresponding AuthCredential.\n */\nfireauth.AuthProvider.getCredentialFromJSON = function(json) {\n  var credential;\n  var fromJSON = [\n    fireauth.OAuthCredential.fromJSON,\n    fireauth.EmailAuthCredential.fromJSON,\n    fireauth.PhoneAuthCredential.fromJSON,\n    fireauth.SAMLAuthCredential.fromJSON\n  ];\n  for (var i = 0; i < fromJSON.length; i++) {\n    credential = fromJSON[i](json);\n    if (credential) {\n      return credential;\n    }\n  }\n  return null;\n};\n\n\n/**\n * Constructs an Auth credential from a JSON representation.\n * @param {?Object} json The JSON representation to construct credential from.\n * @return {?fireauth.AuthCredential} The corresponding AuthCredential.\n */\nfireauth.AuthCredential.fromPlainObject =\n    fireauth.AuthProvider.getCredentialFromJSON;\n\n\n/**\n * Checks if OAuth is supported by provider, if not throws an error.\n * @param {!fireauth.AuthProvider} provider The provider to check.\n */\nfireauth.AuthProvider.checkIfOAuthSupported =\n    function(provider) {\n  if (!provider['isOAuthProvider']) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.INVALID_OAUTH_PROVIDER);\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility for handling RPC requests to server.\n */\ngoog.provide('fireauth.RpcHandler');\ngoog.provide('fireauth.RpcHandler.ApiMethodHandler');\ngoog.provide('fireauth.RpcHandler.VerifyAssertionData');\ngoog.provide('fireauth.XmlHttpFactory');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthErrorWithCredential');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.idp');\ngoog.require('fireauth.idp.ProviderId');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Uri');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.json');\ngoog.require('goog.net.CorsXmlHttpFactory');\ngoog.require('goog.net.EventType');\ngoog.require('goog.net.FetchXmlHttpFactory');\ngoog.require('goog.net.XhrIo');\ngoog.require('goog.net.XmlHttpFactory');\ngoog.require('goog.net.jsloader');\ngoog.require('goog.object');\ngoog.require('goog.string.Const');\n\n\n\n/**\n * Firebase Auth XmlHttpRequest factory. This is useful for environments like\n * Node.js where XMLHttpRequest does not exist. XmlHttpFactory would be\n * initialized using the polyfill XMLHttpRequest module.\n * @param {function(new:XMLHttpRequest)} xmlHttpRequest The xmlHttpRequest\n *     constructor.\n * @constructor\n * @extends {goog.net.XmlHttpFactory}\n * @final\n */\nfireauth.XmlHttpFactory = function(xmlHttpRequest) {\n  /**\n   * @private {function(new:XMLHttpRequest)} The underlying XHR reference.\n   */\n  this.xmlHttpRequest_ = xmlHttpRequest;\n  fireauth.XmlHttpFactory.base(this, 'constructor');\n};\ngoog.inherits(fireauth.XmlHttpFactory, goog.net.XmlHttpFactory);\n\n\n/**\n * @return {!goog.net.XhrLike|!XMLHttpRequest} A new XhrLike instance.\n * @override\n */\nfireauth.XmlHttpFactory.prototype.createInstance = function() {\n  return new this.xmlHttpRequest_();\n};\n\n\n/**\n * @return {!Object} Options describing how XHR objects obtained from this\n *     factory should be used.\n * @override\n */\nfireauth.XmlHttpFactory.prototype.internalGetOptions = function() {\n  return {};\n};\n\n\n\n/**\n * Creates an RPC request handler for the project specified by the API key.\n *\n * @param {string} apiKey The API key.\n * @param {?Object=} opt_config The RPC request processor configuration.\n * @param {?string=} opt_firebaseClientVersion The optional Firebase client\n *     version to log with requests to Firebase Auth server.\n * @constructor\n */\nfireauth.RpcHandler = function(apiKey, opt_config, opt_firebaseClientVersion) {\n  this.apiKey_ = apiKey;\n  var config = opt_config || {};\n  this.secureTokenEndpoint_ = config['secureTokenEndpoint'] ||\n      fireauth.RpcHandler.SECURE_TOKEN_ENDPOINT_;\n  /**\n   * @private @const {!fireauth.util.Delay} The delay for secure token endpoint\n   *     network timeout.\n   */\n  this.secureTokenTimeout_ = config['secureTokenTimeout'] ||\n      fireauth.RpcHandler.DEFAULT_SECURE_TOKEN_TIMEOUT_;\n  this.secureTokenHeaders_ = goog.object.clone(\n      config['secureTokenHeaders'] ||\n      fireauth.RpcHandler.DEFAULT_SECURE_TOKEN_HEADERS_);\n  this.firebaseEndpoint_ = config['firebaseEndpoint'] ||\n      fireauth.RpcHandler.FIREBASE_ENDPOINT_;\n  /**\n   * @private @const {!fireauth.util.Delay} The delay for Firebase Auth endpoint\n   *     network timeout.\n   */\n  this.firebaseTimeout_ = config['firebaseTimeout'] ||\n      fireauth.RpcHandler.DEFAULT_FIREBASE_TIMEOUT_;\n  this.firebaseHeaders_ = goog.object.clone(\n      config['firebaseHeaders'] ||\n      fireauth.RpcHandler.DEFAULT_FIREBASE_HEADERS_);\n  // If Firebase client version needs to be logged too.\n  if (opt_firebaseClientVersion) {\n    // Log client version for Firebase Auth server.\n    this.firebaseHeaders_['X-Client-Version'] = opt_firebaseClientVersion;\n    // Log client version for securetoken server.\n    this.secureTokenHeaders_['X-Client-Version'] = opt_firebaseClientVersion;\n  }\n  \n  // Get XMLHttpRequest reference.\n  var XMLHttpRequest = fireauth.RpcHandler.getXMLHttpRequest();\n  if (!XMLHttpRequest && !fireauth.util.isWorker()) {\n    // In a Node.js environment, xmlhttprequest module needs to be required.\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n        'The XMLHttpRequest compatibility library was not found.');\n  }\n  /** @private {!goog.net.XmlHttpFactory|undefined} The XHR factory. */\n  this.rpcHandlerXhrFactory_ = undefined;\n  // Initialize XHR factory. CORS does not apply in native environments or\n  // workers so don't use CorsXmlHttpFactory in those cases.\n  if (fireauth.util.isWorker()) {\n    // For worker environment use FetchXmlHttpFactory.\n    this.rpcHandlerXhrFactory_ = new goog.net.FetchXmlHttpFactory(\n        /** @type {!WorkerGlobalScope} */ (self));\n  } else if (fireauth.util.isNativeEnvironment()) {\n    // For Node.js, this is the polyfill library. For other environments,\n    // this is the native global XMLHttpRequest.\n    this.rpcHandlerXhrFactory_ = new fireauth.XmlHttpFactory(\n        /** @type {function(new:XMLHttpRequest)} */ (XMLHttpRequest));\n  } else {\n    // CORS Browser environment.\n    this.rpcHandlerXhrFactory_ = new goog.net.CorsXmlHttpFactory();\n  }\n};\n\n\n/**\n * @return {?function(new:XMLHttpRequest)|undefined} The current environment\n *     XMLHttpRequest. This is undefined for worker environment.\n */\nfireauth.RpcHandler.getXMLHttpRequest = function() {\n  // In Node.js XMLHttpRequest is polyfilled.\n  var isNode = fireauth.util.getEnvironment() == fireauth.util.Env.NODE;\n  var XMLHttpRequest = goog.global['XMLHttpRequest'] ||\n      (isNode &&\n       firebase.INTERNAL['node'] &&\n       firebase.INTERNAL['node']['XMLHttpRequest']);\n  return XMLHttpRequest;\n};\n\n\n/**\n * Enums for HTTP request methods.\n * @enum {string}\n */\nfireauth.RpcHandler.HttpMethod = {\n  POST: 'POST',\n  GET: 'GET'\n};\n\n\n/**\n * Firebase Auth server error codes.\n * @enum {string}\n */\nfireauth.RpcHandler.ServerError = {\n  CAPTCHA_CHECK_FAILED: 'CAPTCHA_CHECK_FAILED',\n  CORS_UNSUPPORTED: 'CORS_UNSUPPORTED',\n  CREDENTIAL_MISMATCH: 'CREDENTIAL_MISMATCH',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'CREDENTIAL_TOO_OLD_LOGIN_AGAIN',\n  DYNAMIC_LINK_NOT_ACTIVATED: 'DYNAMIC_LINK_NOT_ACTIVATED',\n  EMAIL_EXISTS: 'EMAIL_EXISTS',\n  EMAIL_NOT_FOUND: 'EMAIL_NOT_FOUND',\n  EXPIRED_OOB_CODE: 'EXPIRED_OOB_CODE',\n  FEDERATED_USER_ID_ALREADY_LINKED: 'FEDERATED_USER_ID_ALREADY_LINKED',\n  INVALID_APP_CREDENTIAL: 'INVALID_APP_CREDENTIAL',\n  INVALID_APP_ID: 'INVALID_APP_ID',\n  INVALID_CERT_HASH: 'INVALID_CERT_HASH',\n  INVALID_CODE: 'INVALID_CODE',\n  INVALID_CONTINUE_URI: 'INVALID_CONTINUE_URI',\n  INVALID_CUSTOM_TOKEN: 'INVALID_CUSTOM_TOKEN',\n  INVALID_DYNAMIC_LINK_DOMAIN: 'INVALID_DYNAMIC_LINK_DOMAIN',\n  INVALID_EMAIL: 'INVALID_EMAIL',\n  INVALID_ID_TOKEN: 'INVALID_ID_TOKEN',\n  INVALID_IDP_RESPONSE: 'INVALID_IDP_RESPONSE',\n  INVALID_IDENTIFIER: 'INVALID_IDENTIFIER',\n  INVALID_MESSAGE_PAYLOAD: 'INVALID_MESSAGE_PAYLOAD',\n  INVALID_OAUTH_CLIENT_ID: 'INVALID_OAUTH_CLIENT_ID',\n  INVALID_OOB_CODE: 'INVALID_OOB_CODE',\n  INVALID_PASSWORD: 'INVALID_PASSWORD',\n  INVALID_PENDING_TOKEN: 'INVALID_PENDING_TOKEN',\n  INVALID_PHONE_NUMBER: 'INVALID_PHONE_NUMBER',\n  INVALID_PROVIDER_ID: 'INVALID_PROVIDER_ID',\n  INVALID_RECIPIENT_EMAIL: 'INVALID_RECIPIENT_EMAIL',\n  INVALID_SENDER: 'INVALID_SENDER',\n  INVALID_SESSION_INFO: 'INVALID_SESSION_INFO',\n  INVALID_TEMPORARY_PROOF: 'INVALID_TEMPORARY_PROOF',\n  MISSING_ANDROID_PACKAGE_NAME: 'MISSING_ANDROID_PACKAGE_NAME',\n  MISSING_APP_CREDENTIAL: 'MISSING_APP_CREDENTIAL',\n  MISSING_CODE: 'MISSING_CODE',\n  MISSING_CONTINUE_URI: 'MISSING_CONTINUE_URI',\n  MISSING_CUSTOM_TOKEN: 'MISSING_CUSTOM_TOKEN',\n  MISSING_IOS_BUNDLE_ID: 'MISSING_IOS_BUNDLE_ID',\n  MISSING_OOB_CODE: 'MISSING_OOB_CODE',\n  MISSING_OR_INVALID_NONCE: 'MISSING_OR_INVALID_NONCE',\n  MISSING_PASSWORD: 'MISSING_PASSWORD',\n  MISSING_PHONE_NUMBER: 'MISSING_PHONE_NUMBER',\n  MISSING_SESSION_INFO: 'MISSING_SESSION_INFO',\n  OPERATION_NOT_ALLOWED: 'OPERATION_NOT_ALLOWED',\n  PASSWORD_LOGIN_DISABLED: 'PASSWORD_LOGIN_DISABLED',\n  QUOTA_EXCEEDED: 'QUOTA_EXCEEDED',\n  RESET_PASSWORD_EXCEED_LIMIT: 'RESET_PASSWORD_EXCEED_LIMIT',\n  REJECTED_CREDENTIAL: 'REJECTED_CREDENTIAL',\n  SESSION_EXPIRED: 'SESSION_EXPIRED',\n  TOKEN_EXPIRED: 'TOKEN_EXPIRED',\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'TOO_MANY_ATTEMPTS_TRY_LATER',\n  UNAUTHORIZED_DOMAIN: 'UNAUTHORIZED_DOMAIN',\n  USER_CANCELLED: 'USER_CANCELLED',\n  USER_DISABLED: 'USER_DISABLED',\n  USER_NOT_FOUND: 'USER_NOT_FOUND',\n  WEAK_PASSWORD: 'WEAK_PASSWORD'\n};\n\n\n/**\n * A map of server error codes to client errors.\n * @typedef {!Object<\n *     !fireauth.RpcHandler.ServerError, !fireauth.authenum.Error>}\n */\nfireauth.RpcHandler.ServerErrorMap;\n\n\n/**\n * Firebase Auth response field names.\n * @enum {string}\n */\nfireauth.RpcHandler.AuthServerField = {\n  ALL_PROVIDERS: 'allProviders',\n  AUTH_URI: 'authUri',\n  AUTHORIZED_DOMAINS: 'authorizedDomains',\n  DYNAMIC_LINKS_DOMAIN: 'dynamicLinksDomain',\n  EMAIL: 'email',\n  ERROR_MESSAGE: 'errorMessage',\n  EXPIRES_IN: 'expiresIn',\n  ID_TOKEN: 'idToken',\n  NEED_CONFIRMATION: 'needConfirmation',\n  OAUTH_ID_TOKEN: 'oauthIdToken',\n  PENDING_TOKEN: 'pendingToken',\n  POST_BODY: 'postBody',\n  PROVIDER_ID: 'providerId',\n  RECAPTCHA_SITE_KEY: 'recaptchaSiteKey',\n  REQUEST_URI: 'requestUri',\n  REFRESH_TOKEN: 'refreshToken',\n  SESSION_ID: 'sessionId',\n  SESSION_INFO: 'sessionInfo',\n  SIGNIN_METHODS: 'signinMethods',\n  TEMPORARY_PROOF: 'temporaryProof'\n};\n\n\n/**\n * Firebase Auth response injected fields.\n * @enum {string}\n */\nfireauth.RpcHandler.InjectedResponseField = {\n  NONCE: 'nonce'\n};\n\n\n/**\n * Firebase Auth getOobConfirmationCode requestType possible values.\n * @enum {string}\n */\nfireauth.RpcHandler.GetOobCodeRequestType = {\n  EMAIL_SIGNIN: 'EMAIL_SIGNIN',\n  NEW_EMAIL_ACCEPT: 'NEW_EMAIL_ACCEPT',\n  PASSWORD_RESET: 'PASSWORD_RESET',\n  VERIFY_EMAIL: 'VERIFY_EMAIL'\n};\n\n\n/**\n * Firebase Auth response field names.\n * @enum {string}\n */\nfireauth.RpcHandler.StsServerField = {\n  ACCESS_TOKEN: 'access_token',\n  EXPIRES_IN: 'expires_in',\n  REFRESH_TOKEN: 'refresh_token'\n};\n\n\n/**\n * @return {string} The API key.\n */\nfireauth.RpcHandler.prototype.getApiKey = function() {\n  return this.apiKey_;\n};\n\n\n/**\n * The Firebase custom locale header.\n * @const {string}\n * @private\n */\nfireauth.RpcHandler.FIREBASE_LOCALE_KEY_ = 'X-Firebase-Locale';\n\n\n/**\n * The secure token endpoint.\n * @const {string}\n * @private\n */\nfireauth.RpcHandler.SECURE_TOKEN_ENDPOINT_ =\n    'https://securetoken.googleapis.com/v1/token';\n\n\n/**\n * The default timeout delay (units in milliseconds) for requests sending to\n *     STS token endpoint.\n * @const {!fireauth.util.Delay}\n * @private\n */\nfireauth.RpcHandler.DEFAULT_SECURE_TOKEN_TIMEOUT_ =\n    new fireauth.util.Delay(30000, 60000);\n\n\n/**\n * The STS token RPC content headers.\n * @const {!Object}\n * @private\n */\nfireauth.RpcHandler.DEFAULT_SECURE_TOKEN_HEADERS_ = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\n\n/**\n * The Firebase endpoint.\n * @const {string}\n * @private\n */\nfireauth.RpcHandler.FIREBASE_ENDPOINT_ =\n    'https://www.googleapis.com/identitytoolkit/v3/relyingparty/';\n\n\n/**\n * The default timeout delay (units in milliseconds) for requests sending to\n *     Firebase endpoint.\n * @const {!fireauth.util.Delay}\n * @private\n */\nfireauth.RpcHandler.DEFAULT_FIREBASE_TIMEOUT_ =\n    new fireauth.util.Delay(30000, 60000);\n\n\n/**\n * The Firebase RPC content headers.\n * @const {!Object}\n * @private\n */\nfireauth.RpcHandler.DEFAULT_FIREBASE_HEADERS_ = {\n  'Content-Type': 'application/json'\n};\n\n\n/**\n * Updates the custom locale header.\n * @param {?string} languageCode The new languageCode.\n */\nfireauth.RpcHandler.prototype.updateCustomLocaleHeader =\n    function(languageCode) {\n  if (languageCode) {\n    // If a language code is provided, add it to the header.\n    this.firebaseHeaders_[fireauth.RpcHandler.FIREBASE_LOCALE_KEY_] =\n        languageCode;\n  } else {\n    // Otherwise remove the custom locale header.\n    delete this.firebaseHeaders_[fireauth.RpcHandler.FIREBASE_LOCALE_KEY_];\n  }\n};\n\n\n/**\n * Updates the X-Client-Version in the header.\n * @param {?string} clientVersion The new client version.\n */\nfireauth.RpcHandler.prototype.updateClientVersion = function(clientVersion) {\n  if (clientVersion) {\n    // Update client version for Firebase Auth server.\n    this.firebaseHeaders_['X-Client-Version'] = clientVersion;\n    // Update client version for securetoken server.\n    this.secureTokenHeaders_['X-Client-Version'] = clientVersion;\n  } else {\n    // Remove client version from header.\n    delete this.firebaseHeaders_['X-Client-Version'];\n    delete this.secureTokenHeaders_['X-Client-Version'];\n  }\n};\n\n\n/**\n * Sends XhrIo request using goog.net.XhrIo.\n * @param {string} url The URL to make a request to.\n * @param {function(?Object)=} opt_callback The callback to run on completion.\n * @param {fireauth.RpcHandler.HttpMethod=} opt_httpMethod The HTTP send method.\n * @param {?ArrayBuffer|?ArrayBufferView|?Blob|?Document|?FormData|string=}\n *     opt_data The request content.\n * @param {?Object=} opt_headers The request content headers.\n * @param {number=} opt_timeout The request timeout.\n * @private\n */\nfireauth.RpcHandler.prototype.sendXhr_ = function(\n    url,\n    opt_callback,\n    opt_httpMethod,\n    opt_data,\n    opt_headers,\n    opt_timeout) {\n  var sendXhr;\n  if (fireauth.util.supportsCors() || fireauth.util.isWorker()) {\n    // If supports CORS use goog.net.XhrIo.\n    sendXhr = goog.bind(this.sendXhrUsingXhrIo_, this);\n  } else {\n    // Load gapi.client.request and gapi.auth dependency dynamically.\n    if (!fireauth.RpcHandler.loadGApi_) {\n      fireauth.RpcHandler.loadGApi_ =\n          new goog.Promise(function(resolve, reject) {\n            // On load, resolve.\n            fireauth.RpcHandler.loadGApiJs_(resolve, reject);\n          });\n    }\n    // If does not support CORS, use gapi.client.request.\n    sendXhr = goog.bind(this.sendXhrUsingGApiClient_, this);\n  }\n  sendXhr(\n      url, opt_callback, opt_httpMethod, opt_data, opt_headers, opt_timeout);\n};\n\n\n/**\n * Sends XhrIo request using goog.net.XhrIo.\n * @param {string} url The URL to make a request to.\n * @param {function(?Object)=} opt_callback The callback to run on completion.\n * @param {fireauth.RpcHandler.HttpMethod=} opt_httpMethod The HTTP send method.\n * @param {?ArrayBuffer|?ArrayBufferView|?Blob|?Document|?FormData|string=}\n *     opt_data The request content.\n * @param {?Object=} opt_headers The request content headers.\n * @param {number=} opt_timeout The request timeout.\n * @private\n */\nfireauth.RpcHandler.prototype.sendXhrUsingXhrIo_ = function(\n    url,\n    opt_callback,\n    opt_httpMethod,\n    opt_data,\n    opt_headers,\n    opt_timeout) {\n  if (fireauth.util.isWorker() && !fireauth.util.isFetchSupported()) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED,\n        'fetch, Headers and Request native APIs or equivalent Polyfills ' +\n        'must be available to support HTTP requests from a Worker ' +\n        'environment.');\n  }\n  var xhrIo = new goog.net.XhrIo(this.rpcHandlerXhrFactory_);\n\n  // xhrIo.setTimeoutInterval not working in IE10 and IE11, handle manually.\n  var requestTimeout;\n  if (opt_timeout) {\n    xhrIo.setTimeoutInterval(opt_timeout);\n    requestTimeout = setTimeout(function() {\n      xhrIo.dispatchEvent(goog.net.EventType.TIMEOUT);\n    }, opt_timeout);\n  }\n  // Run callback function on completion.\n  xhrIo.listen(\n      goog.net.EventType.COMPLETE,\n      /** @this {goog.net.XhrIo} */\n      function() {\n        // Clear timeout timer.\n        if (requestTimeout) {\n          clearTimeout(requestTimeout);\n        }\n        // Response assumed to be in json format. If not, catch, log error and\n        // pass null to callback.\n        var response = null;\n        try {\n          // Do not use this.responseJson() as it uses goog.json.parse\n          // underneath. Internal goog.json.parse parsing uses eval and since\n          // recommended Content Security Policy does not allow unsafe-eval,\n          // this is failing and throwing an error in chrome extensions and\n          // warnings else where. Use native parsing instead via JSON.parse.\n          response = JSON.parse(this.getResponseText()) || null;\n        } catch (e) {\n          response = null;\n        }\n        if (opt_callback) {\n          opt_callback(/** @type {?Object} */ (response));\n        }\n      });\n  // Dispose xhrIo on ready.\n  xhrIo.listenOnce(\n      goog.net.EventType.READY,\n      /** @this {goog.net.XhrIo} */\n      function() {\n        // Clear timeout timer.\n        if (requestTimeout) {\n          clearTimeout(requestTimeout);\n        }\n        // Dispose xhrIo.\n        this.dispose();\n      });\n  // Listen to timeout error.\n  // This should work when request is aborted too.\n  xhrIo.listenOnce(\n      goog.net.EventType.TIMEOUT,\n      /** @this {goog.net.XhrIo} */\n      function() {\n        // Clear timeout timer.\n        if (requestTimeout) {\n          clearTimeout(requestTimeout);\n        }\n        // Dispose xhrIo.\n        this.dispose();\n        // The request timed out.\n        if (opt_callback) {\n          opt_callback(null);\n        }\n      });\n  xhrIo.send(url, opt_httpMethod, opt_data, opt_headers);\n};\n\n\n/**\n * @const {!goog.string.Const} The GApi client library URL.\n * @private\n */\nfireauth.RpcHandler.GAPI_SRC_ = goog.string.Const.from(\n    'https://apis.google.com/js/client.js?onload=%{onload}');\n\n\n/**\n * @const {string}\n * @private\n */\nfireauth.RpcHandler.GAPI_CALLBACK_NAME_ =\n    '__fcb' + Math.floor(Math.random() * 1000000).toString();\n\n\n/**\n * Loads the GApi client library if it is not loaded.\n * @param {function()} callback The callback to invoke once it's loaded.\n * @param {function(?Object)} errback The error callback.\n * @private\n */\nfireauth.RpcHandler.loadGApiJs_ = function(callback, errback) {\n  // If gapi.client.request not available, load it dynamically.\n  if (!((window['gapi'] || {})['client'] || {})['request']) {\n    goog.global[fireauth.RpcHandler.GAPI_CALLBACK_NAME_] = function() {\n      // Callback will be called by GApi, test properly loaded here instead of\n      // after jsloader resolves.\n      if (!((window['gapi'] || {})['client'] || {})['request']) {\n        errback(new Error(fireauth.RpcHandler.ServerError.CORS_UNSUPPORTED));\n      } else {\n        callback();\n      }\n    };\n    var url = goog.html.TrustedResourceUrl.format(\n        fireauth.RpcHandler.GAPI_SRC_,\n        {'onload': fireauth.RpcHandler.GAPI_CALLBACK_NAME_});\n    // TODO: replace goog.net.jsloader with our own script includer.\n    var result = goog.net.jsloader.safeLoad(url);\n    result.addErrback(function() {\n      // In case file fails to load.\n      errback(new Error(fireauth.RpcHandler.ServerError.CORS_UNSUPPORTED));\n    });\n  } else {\n    callback();\n  }\n};\n\n\n/**\n * Sends XhrIo request using gapi.client.\n * @param {string} url The URL to make a request to.\n * @param {function(?Object)=} opt_callback The callback to run on completion.\n * @param {fireauth.RpcHandler.HttpMethod=} opt_httpMethod The HTTP send method.\n * @param {?ArrayBuffer|?ArrayBufferView|?Blob|?Document|?FormData|string=}\n *     opt_data The request content.\n * @param {?Object=} opt_headers The request content headers.\n * @param {number=} opt_timeout The request timeout.\n * @private\n */\nfireauth.RpcHandler.prototype.sendXhrUsingGApiClient_ = function(\n    url,\n    opt_callback,\n    opt_httpMethod,\n    opt_data,\n    opt_headers,\n    opt_timeout) {\n  var self = this;\n  // Wait for GApi dependency to load.\n  fireauth.RpcHandler.loadGApi_.then(function() {\n    window['gapi']['client']['setApiKey'](self.getApiKey());\n    // GApi maintains the Auth result and automatically append the Auth token to\n    // all outgoing requests. Firebase Auth requests will be rejected if there\n    // are others scopes (e.g. google plus) for the Auth token. Need to empty\n    // the token before call gitkit api. Restored in callback.\n    var oauth2Token = window['gapi']['auth']['getToken']();\n    window['gapi']['auth']['setToken'](null);\n    window['gapi']['client']['request']({\n      'path': url,\n      'method': opt_httpMethod,\n      'body': opt_data,\n      'headers': opt_headers,\n      // This needs to be set to none, otherwise the access token will be passed\n      // in the header field causing apiary to complain.\n      'authType': 'none',\n      'callback': function(response) {\n        window['gapi']['auth']['setToken'](oauth2Token);\n        if (opt_callback) {\n          opt_callback(response);\n        }\n      }\n    });\n  }).thenCatch(function(error) {\n    // Catches failure to support CORS and propagates it.\n    if (opt_callback) {\n      // Simulate backend server error to be caught by upper layer.\n      opt_callback({\n        'error': {\n          'message': (error && error['message']) ||\n              fireauth.RpcHandler.ServerError.CORS_UNSUPPORTED\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Validates the request for the STS access token.\n *\n * @param {?Object} data The STS token request body.\n * @return {boolean} Whether the request is valid.\n * @private\n */\nfireauth.RpcHandler.prototype.validateStsTokenRequest_ = function(data) {\n  if (data['grant_type'] == 'refresh_token' && data['refresh_token']) {\n    // Exchange refresh token.\n    return true;\n  } else if (data['grant_type'] == 'authorization_code' && data['code']) {\n    // Exchange ID token.\n    return true;\n  } else {\n    // Invalid.\n    return false;\n  }\n};\n\n\n/**\n * Handles the request for the STS access token.\n *\n * @param {!Object} data The STS token request body.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.requestStsToken = function(data) {\n  var self = this;\n  return new goog.Promise(function(resolve, reject) {\n    if (self.validateStsTokenRequest_(data)) {\n      self.sendXhr_(\n          self.secureTokenEndpoint_ + '?key=' +\n          encodeURIComponent(self.getApiKey()),\n          function(response) {\n            if (!response) {\n              // An unparseable response from the XHR most likely indicates some\n              // problem with the network.\n              reject(new fireauth.AuthError(\n                  fireauth.authenum.Error.NETWORK_REQUEST_FAILED));\n            } else if (fireauth.RpcHandler.hasError_(response)) {\n              reject(fireauth.RpcHandler.getDeveloperError_(response));\n            } else if (\n                !response[fireauth.RpcHandler.StsServerField.ACCESS_TOKEN] ||\n                !response[fireauth.RpcHandler.StsServerField.REFRESH_TOKEN]) {\n              reject(new fireauth.AuthError(\n                  fireauth.authenum.Error.INTERNAL_ERROR));\n            } else {\n              resolve(response);\n            }\n          },\n          fireauth.RpcHandler.HttpMethod.POST,\n          goog.Uri.QueryData.createFromMap(data).toString(),\n          self.secureTokenHeaders_,\n          self.secureTokenTimeout_.get());\n    } else {\n      reject(new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR));\n    }\n  });\n};\n\n\n/**\n * @param {!Object} data The object to serialize.\n * @return {string} The serialized object with null, undefined and empty string\n *     values removed.\n * @private\n */\nfireauth.RpcHandler.serialize_ = function(data) {\n  // goog.json.serialize converts undefined values to null.\n  // This helper removes all empty strings, nulls and undefined from serialized\n  // object.\n  // Serialize trimmed data.\n  return goog.json.serialize(fireauth.util.copyWithoutNullsOrUndefined(data));\n};\n\n\n/**\n * Creates and executes a request for the given API method.\n * @param {string} method The API method.\n * @param {!fireauth.RpcHandler.HttpMethod} httpMethod The http request method.\n * @param {!Object} data The data for the API request. In the case of a GET\n *     request, the contents of this object will be form encoded and appended\n *     to the query string of the URL. No post body is sent in that case. If an\n *     object value is specified, it will be converted to a string:\n *     encodeURIComponent(String(value)).\n * @param {?fireauth.RpcHandler.ServerErrorMap=} opt_customErrorMap A map\n *     of server error codes to client errors to override default error\n *     handling.\n * @param {boolean=} opt_cachebuster Whether to append a unique string to\n *     request to force backend to return an uncached response to request.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.requestFirebaseEndpoint = function(\n    method, httpMethod, data, opt_customErrorMap, opt_cachebuster) {\n  var self = this;\n  // Construct endpoint URL.\n  var uri = goog.Uri.parse(this.firebaseEndpoint_ + method);\n  uri.setParameterValue('key', this.getApiKey());\n  // Check whether to append cachebuster to request.\n  if (opt_cachebuster) {\n    uri.setParameterValue('cb', goog.now().toString());\n  }\n  // Firebase allows GET endpoints.\n  var isGet = httpMethod == fireauth.RpcHandler.HttpMethod.GET;\n  if (isGet) {\n    // For GET HTTP method, append data to query string.\n    for (var key in data) {\n      if (data.hasOwnProperty(key)) {\n        uri.setParameterValue(key, data[key]);\n      }\n    }\n  }\n  return new goog.Promise(function(resolve, reject) {\n    self.sendXhr_(\n        uri.toString(),\n        function(response) {\n          if (!response) {\n            // An unparseable response from the XHR most likely indicates some\n            // problem with the network.\n            reject(new fireauth.AuthError(\n                fireauth.authenum.Error.NETWORK_REQUEST_FAILED));\n          } else if (fireauth.RpcHandler.hasError_(response)) {\n            reject(fireauth.RpcHandler.getDeveloperError_(response,\n                opt_customErrorMap || {}));\n          } else {\n            resolve(response);\n          }\n        },\n        httpMethod,\n        // No post body data in GET requests.\n        isGet ? undefined : fireauth.RpcHandler.serialize_(data),\n        self.firebaseHeaders_,\n        self.firebaseTimeout_.get());\n  });\n};\n\n\n/**\n * Verifies that the request has a valid email set.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateRequestHasEmail_ = function(request) {\n  if (!fireauth.util.isValidEmailAddress(request['email'])) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_EMAIL);\n  }\n};\n\n\n/**\n * Verifies that the response has a valid email set.\n * @param {!Object} response\n * @private\n */\nfireauth.RpcHandler.validateResponseHasEmail_ = function(response) {\n  if (!fireauth.util.isValidEmailAddress(response['email'])) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Verifies that the an email is valid, if it is there.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateEmailIfPresent_ = function(request) {\n  if ('email' in request) {\n    fireauth.RpcHandler.validateRequestHasEmail_(request);\n  }\n};\n\n\n/**\n * @param {string} providerId The provider ID.\n * @param {?Array<string>=} opt_additionalScopes The list of scope strings.\n * @return {?string} The IDP and its comma separated scope strings serialized.\n * @private\n */\nfireauth.RpcHandler.getAdditionalScopes_ =\n    function(providerId, opt_additionalScopes) {\n  var scopes = {};\n  if (opt_additionalScopes && opt_additionalScopes.length) {\n    scopes[providerId] = opt_additionalScopes.join(',');\n    // Return stringified scopes.\n    return goog.json.serialize(scopes);\n  }\n  return null;\n};\n\n\n/**\n * Validates a response from getAuthUri.\n * @param {?Object} response The getAuthUri response data.\n * @private\n */\nfireauth.RpcHandler.validateGetAuthResponse_ = function(response) {\n  if (!response[fireauth.RpcHandler.AuthServerField.AUTH_URI]) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n        'Unable to determine the authorization endpoint for the specified '+\n        'provider. This may be an issue in the provider configuration.');\n  } else if ( !response[fireauth.RpcHandler.AuthServerField.SESSION_ID]) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Requests createAuthUri endpoint to retrieve the authUri and session ID for\n * the start of an OAuth handshake.\n * @param {string} providerId The provider ID.\n * @param {string} continueUri The IdP callback URL.\n * @param {?Object=} opt_customParameters The optional OAuth custom parameters\n *     plain object.\n * @param {?Array<string>=} opt_additionalScopes The list of scope strings.\n * @param {?string=} opt_email The optional email.\n * @param {?string=} opt_sessionId The optional session ID.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.getAuthUri = function(\n    providerId,\n    continueUri,\n    opt_customParameters,\n    opt_additionalScopes,\n    opt_email,\n    opt_sessionId) {\n  // SAML provider request is constructed differently than OAuth requests.\n  var isSaml = fireauth.idp.isSaml(providerId);\n  var request = {\n    'identifier': opt_email,\n    'providerId': providerId,\n    'continueUri': continueUri,\n    'customParameter': opt_customParameters || {},\n    'oauthScope': fireauth.RpcHandler.getAdditionalScopes_(\n        providerId, opt_additionalScopes),\n    'sessionId': opt_sessionId\n  };\n  // Custom parameters and OAuth scopes should be ignored.\n  if (isSaml) {\n    delete request['customParameter'];\n    delete request['oauthScope'];\n  }\n  // When sessionId is provided, mobile flow (Cordova) is being used, force\n  // code flow and not implicit flow. All other providers use code flow by\n  // default.\n  if (opt_sessionId && providerId == fireauth.idp.ProviderId.GOOGLE) {\n    request['authFlowType'] = 'CODE_FLOW';\n  }\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_AUTH_URI,\n      request);\n};\n\n\n/**\n * Gets the list of IDPs that can be used to log in for the given identifier.\n * @param {string} identifier The identifier, such as an email address.\n * @return {!goog.Promise<!Array<string>>}\n */\nfireauth.RpcHandler.prototype.fetchProvidersForIdentifier =\n    function(identifier) {\n  // createAuthUri returns an error if continue URI is not http or https.\n  // For environments like Cordova, Chrome extensions, native frameworks, file\n  // systems, etc, use http://localhost as continue URL.\n  var continueUri = fireauth.util.isHttpOrHttps() ?\n      fireauth.util.getCurrentUrl() : 'http://localhost';\n  var request = {\n    'identifier': identifier,\n    'continueUri': continueUri\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.CREATE_AUTH_URI, request)\n      .then(function(response) {\n        return response[fireauth.RpcHandler.AuthServerField.ALL_PROVIDERS] ||\n            [];\n      });\n};\n\n\n/**\n * Returns the list of sign in methods for the given identifier.\n * @param {string} identifier The identifier, such as an email address.\n * @return {!goog.Promise<!Array<string>>}\n */\nfireauth.RpcHandler.prototype.fetchSignInMethodsForIdentifier = function(\n    identifier) {\n  // createAuthUri returns an error if continue URI is not http or https.\n  // For environments like Cordova, Chrome extensions, native frameworks, file\n  // systems, etc, use http://localhost as continue URL.\n  var continueUri = fireauth.util.isHttpOrHttps() ?\n      fireauth.util.getCurrentUrl() :\n      'http://localhost';\n  var request = {\n    'identifier': identifier,\n    'continueUri': continueUri\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.CREATE_AUTH_URI, request)\n      .then(function(response) {\n        return response[fireauth.RpcHandler.AuthServerField.SIGNIN_METHODS] ||\n            [];\n      });\n};\n\n\n/**\n * Gets the list of authorized domains for the specified project.\n * @return {!goog.Promise<!Array<string>>}\n */\nfireauth.RpcHandler.prototype.getAuthorizedDomains = function() {\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG, {})\n      .then(function(response) {\n        return response[\n           fireauth.RpcHandler.AuthServerField.AUTHORIZED_DOMAINS] || [];\n      });\n};\n\n\n/**\n * Gets the reCAPTCHA parameters needed to render the project's provisioned\n * reCAPTCHA.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.getRecaptchaParam = function() {\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_RECAPTCHA_PARAM, {});\n};\n\n\n/**\n * Gets the list of authorized domains for the specified project.\n * @return {!goog.Promise<string>}\n */\nfireauth.RpcHandler.prototype.getDynamicLinkDomain = function() {\n  var request = {\n    'returnDynamicLink': true\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.RETURN_DYNAMIC_LINK, request);\n};\n\n\n/**\n * Checks if the provided iOS bundle ID belongs to the project as specified by\n * the API key.\n * @param {string} iosBundleId  The iOS bundle ID to check.\n * @return {!goog.Promise<void>}\n */\nfireauth.RpcHandler.prototype.isIosBundleIdValid = function(iosBundleId) {\n  var request = {\n    'iosBundleId': iosBundleId\n  };\n  // This will either resolve if the identifier is valid or throw INVALID_APP_ID\n  // if not.\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG, request)\n      .then(function(result) {\n        // Do not return anything.\n      });\n};\n\n\n/**\n * Checks if the provided Android package name belongs to the project as\n * specified by the API key.\n * @param {string} androidPackageName  The iOS bundle ID to check.\n * @param {?string=} opt_sha1Cert The optional SHA-1 Android cert to check.\n * @return {!goog.Promise<void>}\n */\nfireauth.RpcHandler.prototype.isAndroidPackageNameValid =\n    function(androidPackageName, opt_sha1Cert) {\n  var request = {\n    'androidPackageName': androidPackageName\n  };\n  // This is relevant for the native Android SDK flow.\n  // This will redirect to an FDL domain owned by GMScore instead of\n  // the developer's FDL domain as is done for Cordova apps.\n  if (!!opt_sha1Cert) {\n    request['sha1Cert'] = opt_sha1Cert;\n  }\n  // When no sha1Cert is passed, this will either resolve if the identifier is\n  // valid or throw INVALID_APP_ID if not.\n  // When sha1Cert is also passed, this will either resolve or fail with an\n  // INVALID_CERT_HASH error.\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG, request)\n      .then(function(result) {\n        // Do not return anything.\n      });\n};\n\n\n/**\n * Checks if the provided OAuth client ID belongs to the project as specified by\n * the API key.\n * @param {string} clientId The OAuth client ID to check.\n * @return {!goog.Promise<void>}\n */\nfireauth.RpcHandler.prototype.isOAuthClientIdValid = function(clientId) {\n  var request = {\n    'clientId': clientId\n  };\n  // This will either resolve if the client ID is valid or throw\n  // INVALID_OAUTH_CLIENT_ID if not.\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG, request)\n      .then(function(result) {\n        // Do not return anything.\n      });\n};\n\n\n/**\n * Requests getAccountInfo endpoint using an ID token.\n * @param {string} idToken The ID token.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.getAccountInfoByIdToken = function(idToken) {\n  var request = {'idToken': idToken};\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_ACCOUNT_INFO,\n      request);\n};\n\n\n/**\n * Validates a request to sign in with email and password.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateVerifyCustomTokenRequest_ = function(request) {\n  if (!request['token']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_CUSTOM_TOKEN);\n  }\n};\n\n\n/**\n * Verifies a custom token and returns a Promise that resolves with the ID\n * token.\n * @param {string} token The custom token.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyCustomToken = function(token) {\n  var request = {'token': token};\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.VERIFY_CUSTOM_TOKEN,\n      request);\n};\n\n\n/**\n * Validates a request to sign in with email and password.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateVerifyPasswordRequest_ = function(request) {\n  fireauth.RpcHandler.validateRequestHasEmail_(request);\n  if (!request['password']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_PASSWORD);\n  }\n};\n\n\n/**\n * Verifies a password and returns a Promise that resolves with the ID\n * token.\n * @param {string} email The email address.\n * @param {string} password The entered password.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyPassword = function(email, password) {\n  var request = {\n    'email': email,\n    'password': password\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.VERIFY_PASSWORD,\n      request);\n};\n\n\n/**\n * Verifies an email link OTP for sign-in and returns a Promise that resolves\n * with the ID token.\n * @param {string} email The email address.\n * @param {string} oobCode The email action OTP.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.emailLinkSignIn = function(email, oobCode) {\n  var request = {\n    'email': email,\n    'oobCode': oobCode\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.EMAIL_LINK_SIGNIN, request);\n};\n\n\n/**\n * Verifies an email link OTP for linking and returns a Promise that resolves\n * with the ID token.\n * @param {string} idToken The ID token.\n * @param {string} email The email address.\n * @param {string} oobCode The email action OTP.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.emailLinkSignInForLinking =\n    function(idToken, email, oobCode) {\n  var request = {\n    'idToken': idToken,\n    'email': email,\n    'oobCode': oobCode\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.EMAIL_LINK_SIGNIN_FOR_LINKING,\n      request);\n};\n\n\n/**\n * Validates a response that should contain an ID token.\n * @param {?Object} response The server response data.\n * @private\n */\nfireauth.RpcHandler.validateIdTokenResponse_ = function(response) {\n  if (!response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Validates a getRecaptchaParam response.\n * @param {?Object} response The server response data.\n * @private\n */\nfireauth.RpcHandler.validateGetRecaptchaParamResponse_ = function(response) {\n  // Both are required. This could change though.\n  if (!response[fireauth.RpcHandler.AuthServerField.RECAPTCHA_SITE_KEY]) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Validates a request that sends the verification ID and code for a sign in/up\n * phone Auth flow.\n * @param {!Object} request The server request object.\n * @private\n */\nfireauth.RpcHandler.validateVerifyPhoneNumberRequest_ = function(request) {\n  // There are 2 cases here:\n  // case 1: sessionInfo and code\n  // case 2: phoneNumber and temporaryProof\n  if (request['phoneNumber'] || request['temporaryProof']) {\n    // Case 2. Both phoneNumber and temporaryProof should be set.\n    if (!request['phoneNumber'] || !request['temporaryProof']) {\n      throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n    }\n  } else {\n    // Otherwise it's case 1, so we expect sessionInfo and code.\n    if (!request['sessionInfo']) {\n      throw new fireauth.AuthError(\n          fireauth.authenum.Error.MISSING_SESSION_INFO);\n    }\n    if (!request['code']) {\n      throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_CODE);\n    }\n  }\n};\n\n\n/**\n * Validates a request that sends the verification ID and code for a link/update\n * phone Auth flow.\n * @param {!Object} request The server request object.\n * @private\n */\nfireauth.RpcHandler.validateVerifyPhoneNumberLinkRequest_ = function(request) {\n  // idToken should be required here.\n  if (!request['idToken']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n  // The other request parameters match the sign in flow.\n  fireauth.RpcHandler.validateVerifyPhoneNumberRequest_(request);\n};\n\n\n/**\n * Validates a request to create an email and password account.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateCreateAccountRequest_ = function(request) {\n  fireauth.RpcHandler.validateRequestHasEmail_(request);\n  if (!request['password']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.WEAK_PASSWORD);\n  }\n};\n\n\n/**\n * Validates a request to createAuthUri.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateGetAuthUriRequest_ = function(request) {\n  if (!request['continueUri']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_CONTINUE_URI);\n  }\n  // Either a SAML or non SAML providerId must be provided.\n  if (!request['providerId']) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.INTERNAL_ERROR,\n        'A provider ID must be provided in the request.');\n  }\n};\n\n\n/**\n * Creates an email/password account. Returns a Promise that resolves with the\n * ID token.\n * @param {string} email The email address of the account.\n * @param {string} password The password.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.createAccount = function(email, password) {\n  var request = {\n    'email': email,\n    'password': password\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.CREATE_ACCOUNT,\n      request);\n};\n\n\n/**\n * Signs in a user as anonymous. Returns a Promise that resolves with the\n * ID token.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.signInAnonymously = function() {\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.SIGN_IN_ANONYMOUSLY, {});\n};\n\n\n/**\n * Deletes the user's account corresponding to the idToken given.\n * @param {string} idToken The idToken of the user.\n * @return {!goog.Promise<undefined>}\n */\nfireauth.RpcHandler.prototype.deleteAccount = function(idToken) {\n  var request = {\n    'idToken': idToken\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.DELETE_ACCOUNT,\n      request);\n};\n\n\n/**\n * Requests setAccountInfo endpoint for updateEmail operation.\n * @param {string} idToken The ID token.\n * @param {string} newEmail The new email.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.updateEmail = function(idToken, newEmail) {\n  var request = {\n    'idToken': idToken,\n    'email': newEmail\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO,\n      request);\n};\n\n\n/**\n * Validates a setAccountInfo request that updates the password.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateSetAccountInfoSensitive_ = function(request) {\n  fireauth.RpcHandler.validateEmailIfPresent_(request);\n  if (!request['password']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.WEAK_PASSWORD);\n  }\n};\n\n\n/**\n * Requests setAccountInfo endpoint for updatePassword operation.\n * @param {string} idToken The ID token.\n * @param {string} newPassword The new password.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.updatePassword = function(idToken, newPassword) {\n  var request = {\n    'idToken': idToken,\n    'password': newPassword\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO_SENSITIVE, request);\n};\n\n\n/**\n * Requests setAccountInfo endpoint to set the email and password. This can be\n * used to link an existing account to a new email and password account.\n * @param {string} idToken The ID token.\n * @param {string} newEmail The new email.\n * @param {string} newPassword The new password.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.updateEmailAndPassword = function(idToken,\n    newEmail, newPassword) {\n  var request = {\n    'idToken': idToken,\n    'email': newEmail,\n    'password': newPassword\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO_SENSITIVE, request);\n};\n\n\n/**\n * Maps the name of a field in the account info object to the backend enum\n * value, for deletion of profile fields.\n * @private {!Object<string, string>}\n */\nfireauth.RpcHandler.PROFILE_FIELD_TO_ENUM_NAME_ = {\n  'displayName': 'DISPLAY_NAME',\n  'photoUrl': 'PHOTO_URL'\n};\n\n\n/**\n * Updates the profile of the user. When resolved, promise returns a response\n * similar to that of getAccountInfo.\n * @param {string} idToken The ID token of the user whose profile is changing.\n * @param {!Object} profileData The new profile data.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.updateProfile = function(idToken, profileData) {\n  var data = {\n    'idToken': idToken\n  };\n  var fieldsToDelete = [];\n\n  // Copy over the relevant fields from profileData, or explicitly flag a field\n  // for deletion if null is passed as the value. Note that this currently only\n  // checks profileData to the first level.\n  goog.object.forEach(fireauth.RpcHandler.PROFILE_FIELD_TO_ENUM_NAME_,\n      function(enumName, fieldName) {\n        var fieldValue = profileData[fieldName];\n        if (fieldValue === null) {\n          // If null is explicitly provided, delete the field.\n          fieldsToDelete.push(enumName);\n        } else if (fieldName in profileData) {\n          // If the field is explicitly set, send it to the backend.\n          data[fieldName] = fieldValue;\n        }\n      });\n  if (fieldsToDelete.length) {\n    data['deleteAttribute'] = fieldsToDelete;\n  }\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO, data);\n};\n\n\n/**\n * Validates a request for an email action code for password reset.\n * @param {!Object} request The getOobCode request data for password reset.\n * @private\n */\nfireauth.RpcHandler.validateOobCodeRequest_ = function(request) {\n  if (request['requestType'] !=\n          fireauth.RpcHandler.GetOobCodeRequestType.PASSWORD_RESET) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n  fireauth.RpcHandler.validateRequestHasEmail_(request);\n};\n\n\n/**\n * Validates a request for an email action for passwordless email sign-in.\n * @param {!Object} request The getOobCode request data for email sign-in.\n * @private\n */\nfireauth.RpcHandler.validateEmailSignInCodeRequest_ = function(request) {\n  if (request['requestType'] !=\n      fireauth.RpcHandler.GetOobCodeRequestType.EMAIL_SIGNIN) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n  fireauth.RpcHandler.validateRequestHasEmail_(request);\n};\n\n\n/**\n * Validates a request for an email action for email verification.\n * @param {!Object} request The getOobCode request data for email verification.\n * @private\n */\nfireauth.RpcHandler.validateEmailVerificationCodeRequest_ = function(request) {\n  if (request['requestType'] !=\n          fireauth.RpcHandler.GetOobCodeRequestType.VERIFY_EMAIL) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Requests getOobCode endpoint for password reset, returns promise that\n * resolves with user's email.\n * @param {string} email The email account with the password to be reset.\n * @param {!Object} additionalRequestData Additional data to add to the request.\n * @return {!goog.Promise<string>}\n */\nfireauth.RpcHandler.prototype.sendPasswordResetEmail =\n    function(email, additionalRequestData) {\n  var request = {\n    'requestType': fireauth.RpcHandler.GetOobCodeRequestType.PASSWORD_RESET,\n    'email': email\n  };\n  // Extend the original request with the additional data.\n  goog.object.extend(request, additionalRequestData);\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_OOB_CODE, request);\n};\n\n\n/**\n * Requests getOobCode endpoint for passwordless email sign-in, returns promise\n * that resolves with user's email.\n * @param {string} email The email account to sign in with.\n * @param {!Object} additionalRequestData Additional data to add to the request.\n * @return {!goog.Promise<string>}\n */\nfireauth.RpcHandler.prototype.sendSignInLinkToEmail = function(\n    email, additionalRequestData) {\n  var request = {\n    'requestType': fireauth.RpcHandler.GetOobCodeRequestType.EMAIL_SIGNIN,\n    'email': email\n  };\n  // Extend the original request with the additional data.\n  goog.object.extend(request, additionalRequestData);\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.GET_EMAIL_SIGNIN_CODE, request);\n};\n\n\n/**\n * Requests getOobCode endpoint for email verification, returns promise that\n * resolves with user's email.\n * @param {string} idToken The idToken of the user confirming his email.\n * @param {!Object} additionalRequestData Additional data to add to the request.\n * @return {!goog.Promise<string>}\n */\nfireauth.RpcHandler.prototype.sendEmailVerification =\n    function(idToken, additionalRequestData) {\n  var request = {\n    'requestType': fireauth.RpcHandler.GetOobCodeRequestType.VERIFY_EMAIL,\n    'idToken': idToken\n  };\n  // Extend the original request with the additional data.\n  goog.object.extend(request, additionalRequestData);\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.GET_EMAIL_VERIFICATION_CODE, request);\n};\n\n\n/**\n * Requests sendVerificationCode endpoint for verifying the user's ownership of\n * a phone number. It resolves with a sessionInfo (verificationId).\n * @param {!Object} request The verification request which contains a phone\n *     number and an assertion.\n * @return {!goog.Promise<string>}\n */\nfireauth.RpcHandler.prototype.sendVerificationCode = function(request) {\n  // In the future, we could support other types of assertions so for now,\n  // we are keeping the request an object.\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.SEND_VERIFICATION_CODE, request);\n};\n\n\n/**\n * Requests verifyPhoneNumber endpoint for sign in/sign up phone number\n * authentication flow and resolves with the STS token response.\n * @param {!Object} request The phone number ID and code to exchange for a\n *     Firebase Auth session.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyPhoneNumber = function(request) {\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER, request);\n};\n\n\n/**\n * Requests verifyPhoneNumber endpoint for link/update phone number\n * authentication flow and resolves with the STS token response.\n * @param {!Object} request The phone number ID and code to exchange for a\n *     Firebase Auth session.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyPhoneNumberForLinking = function(request) {\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER_FOR_LINKING, request);\n};\n\n\n/**\n * Validates a response to a phone number linking request.\n * @param {?Object} response The server response data.\n * @private\n */\nfireauth.RpcHandler.validateVerifyPhoneNumberForLinkingResponse_ =\n    function(response) {\n  if (response[fireauth.RpcHandler.AuthServerField.TEMPORARY_PROOF]) {\n    response['code'] = fireauth.authenum.Error.CREDENTIAL_ALREADY_IN_USE;\n    throw fireauth.AuthErrorWithCredential.fromPlainObject(response);\n  }\n\n  // If there's no temporary proof, then we expect the request to have\n  // succeeded and returned an ID token.\n  fireauth.RpcHandler.validateIdTokenResponse_(response);\n};\n\n\n/**\n * Requests verifyPhoneNumber endpoint for reauthenticating with a phone number\n * and resolves with the STS token response.\n * @param {!Object} request The phone number ID, code, and current ID token to\n *     exchange for a refreshed Firebase Auth session.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyPhoneNumberForExisting = function(request) {\n  request['operation'] = 'REAUTH';\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER_FOR_EXISTING,\n      request);\n};\n\n\n/**\n * The custom error map for reauth with verifyPhoneNumber.\n * @private {!fireauth.RpcHandler.ServerErrorMap}\n */\nfireauth.RpcHandler.verifyPhoneNumberForExistingErrorMap_ = {};\n\n// For most RPCs, the backend error USER_NOT_FOUND means that the sent STS\n// token is invalid. However, for this specific case, USER_NOT_FOUND actually\n// means that the sent credential is invalid.\nfireauth.RpcHandler.verifyPhoneNumberForExistingErrorMap_[\n  fireauth.RpcHandler.ServerError.USER_NOT_FOUND] =\n    fireauth.authenum.Error.USER_DELETED;\n\n\n/**\n * Validates a request to deleteLinkedAccounts.\n * @param {?Object} request\n * @private\n */\nfireauth.RpcHandler.validateDeleteLinkedAccountsRequest_ = function(request) {\n  if (!goog.isArray(request['deleteProvider'])) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Updates the providers for the account associated with the idToken.\n * @param {string} idToken The ID token.\n * @param {!Array<string>} providersToDelete The array of providers to delete.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.deleteLinkedAccounts =\n    function(idToken, providersToDelete) {\n  var request = {\n    'idToken': idToken,\n    'deleteProvider': providersToDelete\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.DELETE_LINKED_ACCOUNTS,\n      request);\n};\n\n\n/**\n * Validates a verifyAssertion request.\n * @param {?Object} request The verifyAssertion request data.\n * @private\n */\nfireauth.RpcHandler.validateVerifyAssertionRequest_ = function(request) {\n  // Either (requestUri and sessionId), (requestUri and postBody) or\n  // (requestUri and pendingToken) are required.\n  if (!request[fireauth.RpcHandler.AuthServerField.REQUEST_URI] ||\n      (!request[fireauth.RpcHandler.AuthServerField.SESSION_ID] &&\n       !request[fireauth.RpcHandler.AuthServerField.POST_BODY] &&\n       !request[fireauth.RpcHandler.AuthServerField.PENDING_TOKEN])) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Processes the verifyAssertion response and injects the same raw nonce\n * if available in request.\n * @param {!Object} request The verifyAssertion request data.\n * @param {!Object} response The original verifyAssertion response data.\n * @return {!Object} The modified verifyAssertion response.\n * @private\n */\nfireauth.RpcHandler.processVerifyAssertionResponse_ =\n    function(request, response) {\n  // This makes it possible for OIDC providers to:\n  // 1. Initialize an OIDC Auth credential on successful response.\n  // 2. Initialize an OIDC Auth credential within the recovery error.\n\n  // When request has sessionId and response has OIDC ID token and no pending\n  // token, a credential with raw nonce and OIDC ID token needs to be returned.\n  if (response[fireauth.RpcHandler.AuthServerField.OAUTH_ID_TOKEN] &&\n      response[fireauth.RpcHandler.AuthServerField.PROVIDER_ID] &&\n      response[fireauth.RpcHandler.AuthServerField.PROVIDER_ID]\n          .indexOf(fireauth.constants.OIDC_PREFIX) == 0 &&\n      // Use pendingToken instead of idToken and rawNonce when available.\n      !response[fireauth.RpcHandler.AuthServerField.PENDING_TOKEN]) {\n    if (request[fireauth.RpcHandler.AuthServerField.SESSION_ID]) {\n      // For full OAuth flow, the nonce is in the session ID.\n      response[fireauth.RpcHandler.InjectedResponseField.NONCE] =\n          request[fireauth.RpcHandler.AuthServerField.SESSION_ID];\n    } else if (request[fireauth.RpcHandler.AuthServerField.POST_BODY]) {\n      // For credential flow, the nonce is in the postBody nonce field.\n      var queryData = new goog.Uri.QueryData(\n          request[fireauth.RpcHandler.AuthServerField.POST_BODY]);\n      if (queryData.containsKey(\n              fireauth.RpcHandler.InjectedResponseField.NONCE)) {\n        response[fireauth.RpcHandler.InjectedResponseField.NONCE] =\n            queryData.get(fireauth.RpcHandler.InjectedResponseField.NONCE);\n      }\n    }\n  }\n  return response;\n};\n\n\n/**\n * Validates a response from verifyAssertionForExisting.\n * @param {?Object} response The verifyAssertionForExisting response data.\n * @private\n */\nfireauth.RpcHandler.validateVerifyAssertionForExistingResponse_ =\n    function(response) {\n  // When returnIdpCredential is set to true and the account is new, no error\n  // is thrown but an errorMessage is added to the response. No idToken is\n  // passed.\n  if (response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE] &&\n      response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE] ==\n          fireauth.RpcHandler.ServerError.USER_NOT_FOUND) {\n    // This corresponds to user-not-found.\n    throw new fireauth.AuthError(fireauth.authenum.Error.USER_DELETED);\n  } else if (response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]) {\n    // Construct developer facing error message from server code in errorMessage\n    // field.\n    throw fireauth.RpcHandler.getDeveloperErrorFromCode_(\n        response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]);\n  }\n  // Need confirmation should not be returned when do not create new user flag\n  // is set.\n  // If no error found and ID token is missing, throw an internal error.\n  if (!response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Validates a response from verifyAssertion.\n * @param {?Object} response The verifyAssertion response data.\n * @private\n */\nfireauth.RpcHandler.validateVerifyAssertionResponse_ = function(response) {\n  var error = null;\n  if (response[fireauth.RpcHandler.AuthServerField.NEED_CONFIRMATION]) {\n    // Account linking required, previously logged in to another account\n    // with same email. User must authenticate they are owners of the\n    // first account.\n    // If enough info for Auth linking error, throw an instance of Auth linking\n    // error. This will be used by developer after reauthenticating with email\n    // provided by error to link using the credentials in Auth linking error.\n    // If missing information, return regular Auth error.\n    response['code'] = fireauth.authenum.Error.NEED_CONFIRMATION;\n    error = fireauth.AuthErrorWithCredential.fromPlainObject(response);\n  } else if (response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE] ==\n             fireauth.RpcHandler.ServerError.FEDERATED_USER_ID_ALREADY_LINKED) {\n    // When FEDERATED_USER_ID_ALREADY_LINKED returned in error message, auth\n    // credential and email will also be returned, throw relevant error in that\n    // case.\n    // In this case the developer needs to signInWithCredential to the returned\n    // credentials.\n    response['code'] = fireauth.authenum.Error.CREDENTIAL_ALREADY_IN_USE;\n    error = fireauth.AuthErrorWithCredential.fromPlainObject(response);\n  } else if (response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE] ==\n             fireauth.RpcHandler.ServerError.EMAIL_EXISTS) {\n    // When EMAIL_EXISTS returned in error message, Auth credential and email\n    // will also be returned, throw relevant error in that case.\n    // In this case, the developers needs to sign in the user to the original\n    // owner of the account and then link to the returned credential here.\n    response['code'] = fireauth.authenum.Error.EMAIL_EXISTS;\n    error = fireauth.AuthErrorWithCredential.fromPlainObject(response);\n  } else if (response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]) {\n    // Construct developer facing error message from server code in errorMessage\n    // field.\n    error = fireauth.RpcHandler.getDeveloperErrorFromCode_(\n        response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]);\n  }\n  // If error found, throw it.\n  if (error) {\n    throw error;\n  }\n  // If no error found and ID token is missing, throw an internal error.\n  if (!response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Validates a verifyAssertion with linking request.\n * @param {?Object} request The verifyAssertion request data.\n * @private\n */\nfireauth.RpcHandler.validateVerifyAssertionLinkRequest_ = function(request) {\n  // idToken with either (requestUri and sessionId) or (requestUri and postBody)\n  // are required.\n  fireauth.RpcHandler.validateVerifyAssertionRequest_(request);\n  if (!request['idToken']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * @typedef {{\n *   autoCreate: (boolean|undefined),\n *   requestUri: string,\n *   postBody: (?string|undefined),\n *   pendingIdToken: (?string|undefined),\n *   sessionId: (?string|undefined),\n *   idToken: (?string|undefined),\n *   returnIdpCredential: (boolean|undefined)\n * }}\n */\nfireauth.RpcHandler.VerifyAssertionData;\n\n\n/**\n * Requests verifyAssertion endpoint. When resolved, promise returns the whole\n * response.\n * @param {!fireauth.RpcHandler.VerifyAssertionData} request\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyAssertion = function(request) {\n  // Force Auth credential to be returned on the following errors:\n  // FEDERATED_USER_ID_ALREADY_LINKED\n  // EMAIL_EXISTS\n  request['returnIdpCredential'] = true;\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION,\n      request);\n};\n\n\n/**\n * Requests verifyAssertion endpoint for federated account linking. When\n * resolved, promise returns the whole response.\n * @param {!fireauth.RpcHandler.VerifyAssertionData} request\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyAssertionForLinking = function(request) {\n  // Force Auth credential to be returned on the following errors:\n  // FEDERATED_USER_ID_ALREADY_LINKED\n  // EMAIL_EXISTS\n  request['returnIdpCredential'] = true;\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION_FOR_LINKING,\n      request);\n};\n\n\n/**\n * Requests verifyAssertion endpoint for an existing federated account. When\n * resolved, promise returns the whole response. If not existing, a\n * user-not-found error is thrown.\n * @param {!fireauth.RpcHandler.VerifyAssertionData} request\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.verifyAssertionForExisting = function(request) {\n  // Since we are setting returnIdpCredential to true, a response will be\n  // returned even though the account doesn't exist but an error message is\n  // appended with value set to USER_NOT_FOUND. If this flag is not passed, only\n  // the USER_NOT_FOUND error is thrown without any response.\n  request['returnIdpCredential'] = true;\n  // Do not create a new account if the user doesn't exist.\n  request['autoCreate'] = false;\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION_FOR_EXISTING,\n      request);\n};\n\n\n/**\n * Validates a request that should contain an action code.\n * @param {!Object} request\n * @private\n */\nfireauth.RpcHandler.validateApplyActionCodeRequest_ = function(request) {\n  if (!request['oobCode']) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_OOB_CODE);\n  }\n};\n\n\n/**\n * Validates that a checkActionCode response contains the email and requestType\n * fields.\n * @param {!Object} response The raw response returned by the server.\n * @private\n */\nfireauth.RpcHandler.validateCheckActionCodeResponse_ = function(response) {\n  // If the code is invalid, usually a clear error would be returned.\n  // In this case, something unexpected happened.\n  // Email could be empty only if the request type is EMAIL_SIGNIN.\n  var operation = response['requestType'];\n  if (!operation || (!response['email'] && operation != 'EMAIL_SIGNIN')) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n};\n\n\n/**\n * Requests resetPassword endpoint for password reset, returns promise that\n * resolves with user's email.\n * @param {string} code The email action code to confirm for password reset.\n * @param {string} newPassword The new password.\n * @return {!goog.Promise<string>}\n */\nfireauth.RpcHandler.prototype.confirmPasswordReset =\n    function(code, newPassword) {\n  var request = {\n    'oobCode': code,\n    'newPassword': newPassword\n  };\n  return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.RESET_PASSWORD, request);\n};\n\n\n/**\n * Checks the validity of an email action code and returns the response\n * received.\n * @param {string} code The email action code to check.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.RpcHandler.prototype.checkActionCode = function(code) {\n  var request = {\n    'oobCode': code\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.CHECK_ACTION_CODE, request);\n};\n\n\n/**\n * Applies an out-of-band email action code, such as an email verification code.\n * @param {string} code The email action code.\n * @return {!goog.Promise<string>} A promise that resolves with the user's\n *     email.\n */\nfireauth.RpcHandler.prototype.applyActionCode = function(code) {\n  var request = {\n    'oobCode': code\n  };\n  return this.invokeRpc_(\n      fireauth.RpcHandler.ApiMethod.APPLY_OOB_CODE, request);\n};\n\n\n/**\n * The specification of an RPC call. The fields are:\n * <ul>\n * <li>cachebuster: defines whether to send a unique string with request to\n *     force the backend to return an uncached response to request.\n * <li>customErrorMap: A map of backend error codes to client-side errors.\n *     Any entries set here override the default handling of the backend error\n *     code.\n * <li>endpoint: defines the backend endpoint to call.\n * <li>httpMethod: defines the HTTP method to use, defaulting to POST if not\n *     specified.\n * <li>requestRequiredFields: an array of the fields that are required in the\n *     request. The RPC call will fail with an INTERNAL_ERROR error if a\n *     required field is not present or if it is null, undefined, or the empty\n *     string.\n * <li>requestValidator: a function that takes in the request object and throws\n *     an error if the request is invalid.\n * <li>responsePreprocessor: a function to modify the response before running\n *     validation. The function takes in the request and response object.\n * <li>responseValidator: a function that takes in the response object and\n *     throws an error if the response is invalid.\n * <li>responseField: the field of the response object that will be returned\n *     from the RPC call. If no field is specified, the entire response object\n *     will be returned.\n * <li>returnSecureToken: Set to true to explicitly request STS tokens instead\n *     of legacy Google Identity Toolkit tokens from the backend.\n * </ul>\n * @typedef {{\n *   cachebuster: (boolean|undefined),\n *   customErrorMap: (!fireauth.RpcHandler.ServerErrorMap|undefined),\n *   endpoint: string,\n *   httpMethod: (!fireauth.RpcHandler.HttpMethod|undefined),\n *   requestRequiredFields: (!Array<string>|undefined),\n *   requestValidator: (function(!Object):void|undefined),\n *   responsePreprocessor: ((function(!Object, !Object):!Object)|undefined),\n *   responseValidator: (function(!Object):void|undefined),\n *   responseField: (string|undefined),\n *   returnSecureToken: (boolean|undefined)\n * }}\n */\nfireauth.RpcHandler.ApiMethodHandler;\n\n\n/**\n * The specifications for the backend API methods.\n * @enum {!fireauth.RpcHandler.ApiMethodHandler}\n */\nfireauth.RpcHandler.ApiMethod = {\n  APPLY_OOB_CODE: {\n    endpoint: 'setAccountInfo',\n    requestValidator: fireauth.RpcHandler.validateApplyActionCodeRequest_,\n    responseField: fireauth.RpcHandler.AuthServerField.EMAIL\n  },\n  CHECK_ACTION_CODE: {\n    endpoint: 'resetPassword',\n    requestValidator: fireauth.RpcHandler.validateApplyActionCodeRequest_,\n    responseValidator: fireauth.RpcHandler.validateCheckActionCodeResponse_\n  },\n  CREATE_ACCOUNT: {\n    endpoint: 'signupNewUser',\n    requestValidator: fireauth.RpcHandler.validateCreateAccountRequest_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true\n  },\n  CREATE_AUTH_URI: {\n    endpoint: 'createAuthUri'\n  },\n  DELETE_ACCOUNT: {\n    endpoint: 'deleteAccount',\n    requestRequiredFields: ['idToken']\n  },\n  DELETE_LINKED_ACCOUNTS: {\n    endpoint: 'setAccountInfo',\n    requestRequiredFields: ['idToken', 'deleteProvider'],\n    requestValidator: fireauth.RpcHandler.validateDeleteLinkedAccountsRequest_\n  },\n  EMAIL_LINK_SIGNIN: {\n    endpoint: 'emailLinkSignin',\n    requestRequiredFields: ['email', 'oobCode'],\n    requestValidator: fireauth.RpcHandler.validateRequestHasEmail_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true\n  },\n  EMAIL_LINK_SIGNIN_FOR_LINKING: {\n    endpoint: 'emailLinkSignin',\n    requestRequiredFields: ['idToken', 'email', 'oobCode'],\n    requestValidator: fireauth.RpcHandler.validateRequestHasEmail_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true\n  },\n  GET_ACCOUNT_INFO: {\n    endpoint: 'getAccountInfo'\n  },\n  GET_AUTH_URI: {\n    endpoint: 'createAuthUri',\n    requestValidator: fireauth.RpcHandler.validateGetAuthUriRequest_,\n    responseValidator: fireauth.RpcHandler.validateGetAuthResponse_\n  },\n  GET_EMAIL_SIGNIN_CODE: {\n    endpoint: 'getOobConfirmationCode',\n    requestRequiredFields: ['requestType'],\n    requestValidator: fireauth.RpcHandler.validateEmailSignInCodeRequest_,\n    responseField: fireauth.RpcHandler.AuthServerField.EMAIL\n  },\n  GET_EMAIL_VERIFICATION_CODE: {\n    endpoint: 'getOobConfirmationCode',\n    requestRequiredFields: ['idToken', 'requestType'],\n    requestValidator: fireauth.RpcHandler.validateEmailVerificationCodeRequest_,\n    responseField: fireauth.RpcHandler.AuthServerField.EMAIL\n  },\n  GET_OOB_CODE: {\n    endpoint: 'getOobConfirmationCode',\n    requestRequiredFields: ['requestType'],\n    requestValidator: fireauth.RpcHandler.validateOobCodeRequest_,\n    responseField: fireauth.RpcHandler.AuthServerField.EMAIL\n  },\n  GET_PROJECT_CONFIG: {\n    // Microsoft edge caching bug. There are two getProjectConfig API calls,\n    // first from top level window and then from iframe. The second call has a\n    // response of 304 which means it's a cached response. We suspect the call\n    // from iframe is reusing the response from the first call and checks the\n    // allowed origin in the cached response, which only contains the domain for\n    // the top level window.\n    cachebuster: true,\n    endpoint: 'getProjectConfig',\n    httpMethod: fireauth.RpcHandler.HttpMethod.GET\n  },\n  GET_RECAPTCHA_PARAM: {\n    cachebuster: true,\n    endpoint: 'getRecaptchaParam',\n    httpMethod: fireauth.RpcHandler.HttpMethod.GET,\n    responseValidator: fireauth.RpcHandler.validateGetRecaptchaParamResponse_\n  },\n  RESET_PASSWORD: {\n    endpoint: 'resetPassword',\n    requestValidator: fireauth.RpcHandler.validateApplyActionCodeRequest_,\n    responseField: fireauth.RpcHandler.AuthServerField.EMAIL\n  },\n  RETURN_DYNAMIC_LINK: {\n    cachebuster: true,\n    endpoint: 'getProjectConfig',\n    httpMethod: fireauth.RpcHandler.HttpMethod.GET,\n    responseField: fireauth.RpcHandler.AuthServerField.DYNAMIC_LINKS_DOMAIN\n  },\n  SEND_VERIFICATION_CODE: {\n    endpoint: 'sendVerificationCode',\n    // Currently only reCAPTCHA tokens supported.\n    requestRequiredFields: ['phoneNumber', 'recaptchaToken'],\n    responseField: fireauth.RpcHandler.AuthServerField.SESSION_INFO\n  },\n  SET_ACCOUNT_INFO: {\n    endpoint: 'setAccountInfo',\n    requestRequiredFields: ['idToken'],\n    requestValidator: fireauth.RpcHandler.validateEmailIfPresent_,\n    returnSecureToken: true // Maybe updating email will invalidate token in the\n                            // future, this will prevent breaking the client.\n  },\n  SET_ACCOUNT_INFO_SENSITIVE: {\n    endpoint: 'setAccountInfo',\n    requestRequiredFields: ['idToken'],\n    requestValidator: fireauth.RpcHandler.validateSetAccountInfoSensitive_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true // Updating password will send back new sts tokens.\n  },\n  SIGN_IN_ANONYMOUSLY: {\n    endpoint: 'signupNewUser',\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true\n  },\n  VERIFY_ASSERTION: {\n    endpoint: 'verifyAssertion',\n    requestValidator: fireauth.RpcHandler.validateVerifyAssertionRequest_,\n    responsePreprocessor: fireauth.RpcHandler.processVerifyAssertionResponse_,\n    responseValidator: fireauth.RpcHandler.validateVerifyAssertionResponse_,\n    returnSecureToken: true\n  },\n  VERIFY_ASSERTION_FOR_EXISTING: {\n    endpoint: 'verifyAssertion',\n    requestValidator: fireauth.RpcHandler.validateVerifyAssertionRequest_,\n    responsePreprocessor: fireauth.RpcHandler.processVerifyAssertionResponse_,\n    responseValidator:\n        fireauth.RpcHandler.validateVerifyAssertionForExistingResponse_,\n    returnSecureToken: true\n  },\n  VERIFY_ASSERTION_FOR_LINKING: {\n    endpoint: 'verifyAssertion',\n    requestValidator: fireauth.RpcHandler.validateVerifyAssertionLinkRequest_,\n    responsePreprocessor: fireauth.RpcHandler.processVerifyAssertionResponse_,\n    responseValidator: fireauth.RpcHandler.validateVerifyAssertionResponse_,\n    returnSecureToken: true\n  },\n  VERIFY_CUSTOM_TOKEN: {\n    endpoint: 'verifyCustomToken',\n    requestValidator: fireauth.RpcHandler.validateVerifyCustomTokenRequest_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true\n  },\n  VERIFY_PASSWORD: {\n    endpoint: 'verifyPassword',\n    requestValidator: fireauth.RpcHandler.validateVerifyPasswordRequest_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_,\n    returnSecureToken: true\n  },\n  VERIFY_PHONE_NUMBER: {\n    endpoint: 'verifyPhoneNumber',\n    requestValidator: fireauth.RpcHandler.validateVerifyPhoneNumberRequest_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_\n  },\n  VERIFY_PHONE_NUMBER_FOR_LINKING: {\n    endpoint: 'verifyPhoneNumber',\n    requestValidator: fireauth.RpcHandler.validateVerifyPhoneNumberLinkRequest_,\n    responseValidator:\n        fireauth.RpcHandler.validateVerifyPhoneNumberForLinkingResponse_\n  },\n  VERIFY_PHONE_NUMBER_FOR_EXISTING: {\n    customErrorMap: fireauth.RpcHandler.verifyPhoneNumberForExistingErrorMap_,\n    endpoint: 'verifyPhoneNumber',\n    requestValidator: fireauth.RpcHandler.validateVerifyPhoneNumberRequest_,\n    responseValidator: fireauth.RpcHandler.validateIdTokenResponse_\n  }\n};\n\n\n/**\n * @const {string} The parameter to send to the backend to specify that the\n *     client accepts STS tokens directly from Firebear backends.\n * @private\n */\nfireauth.RpcHandler.USE_STS_TOKEN_PARAM_ = 'returnSecureToken';\n\n\n/**\n * Invokes an RPC method according to the specification defined by\n * {@code fireauth.RpcHandler.ApiMethod}.\n * @param {!fireauth.RpcHandler.ApiMethod} method The method to invoke.\n * @param {!Object} request The input data to the method.\n * @return {!goog.Promise} A promise that resolves with the results of the RPC.\n *     The format of the results can be modified in\n *     {@code fireauth.RpcHandler.ApiMethod}.\n * @private\n */\nfireauth.RpcHandler.prototype.invokeRpc_ = function(method, request) {\n  if (!fireauth.object.hasNonEmptyFields(\n      request, method.requestRequiredFields)) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.INTERNAL_ERROR));\n  }\n\n  var httpMethod = method.httpMethod || fireauth.RpcHandler.HttpMethod.POST;\n  var self = this;\n  var response;\n  return goog.Promise.resolve(request)\n      .then(method.requestValidator)\n      .then(function() {\n        if (method.returnSecureToken) {\n          // Signal that the client accepts STS tokens, for the legacy Google\n          // Identity Toolkit token to STS token migration.\n          request[fireauth.RpcHandler.USE_STS_TOKEN_PARAM_] = true;\n        }\n        return self.requestFirebaseEndpoint(method.endpoint, httpMethod,\n            request, method.customErrorMap, method.cachebuster || false);\n      })\n      .then(function(tempResponse) {\n        response = tempResponse;\n        // If response processor is available, pass request and response through\n        // it. Modifications would be made using response reference.\n        if (method.responsePreprocessor) {\n          return method.responsePreprocessor(request, response);\n        }\n        return response;\n      })\n      .then(method.responseValidator)\n      .then(function() {\n        if (!method.responseField) {\n          return response;\n        }\n        if (!(method.responseField in response)) {\n          throw new fireauth.AuthError(\n              fireauth.authenum.Error.INTERNAL_ERROR);\n        }\n        return response[method.responseField];\n      });\n};\n\n\n/**\n * Checks if the server response contains errors.\n * @param {!Object} resp The API response.\n * @return {boolean} {@code true} if the response contains errors.\n * @private\n */\nfireauth.RpcHandler.hasError_ = function(resp) {\n  return !!resp['error'];\n};\n\n\n/**\n * Returns the developer facing error corresponding to the server code provided.\n * @param {string} serverErrorCode The server error message.\n * @return {!fireauth.AuthError} The corresponding error object.\n * @private\n */\nfireauth.RpcHandler.getDeveloperErrorFromCode_ = function(serverErrorCode) {\n  // Encapsulate the server error code in a typical server error response with\n  // the code populated within. This will convert the response to a developer\n  // facing one.\n  return fireauth.RpcHandler.getDeveloperError_({\n    'error': {\n      'errors': [\n        {\n          'message': serverErrorCode\n        }\n      ],\n      'code': 400,\n      'message': serverErrorCode\n    }\n  });\n};\n\n\n/**\n * Converts a server response with errors to a developer-facing AuthError.\n * @param {!Object} response The server response.\n * @param {?fireauth.RpcHandler.ServerErrorMap=} opt_customErrorMap A map of\n *     backend error codes to client-side errors. Any entries set here\n *     override the default handling of the backend error code.\n * @return {!fireauth.AuthError} The corresponding error object.\n * @private\n */\nfireauth.RpcHandler.getDeveloperError_ =\n    function(response, opt_customErrorMap) {\n  var errorMessage;\n  var apiaryError = fireauth.RpcHandler.getApiaryError_(response);\n  if (apiaryError) {\n    return apiaryError;\n  }\n\n  var serverErrorCode = fireauth.RpcHandler.getErrorCode_(response);\n\n  var errorMap = {};\n\n  // Custom token errors.\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_CUSTOM_TOKEN] =\n      fireauth.authenum.Error.INVALID_CUSTOM_TOKEN;\n  errorMap[fireauth.RpcHandler.ServerError.CREDENTIAL_MISMATCH] =\n      fireauth.authenum.Error.CREDENTIAL_MISMATCH;\n  // This can only happen if the SDK sends a bad request.\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_CUSTOM_TOKEN] =\n      fireauth.authenum.Error.INTERNAL_ERROR;\n\n  // Create Auth URI errors.\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_IDENTIFIER] =\n      fireauth.authenum.Error.INVALID_EMAIL;\n  // This can only happen if the SDK sends a bad request.\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_CONTINUE_URI] =\n      fireauth.authenum.Error.INTERNAL_ERROR;\n\n  // Sign in with email and password errors (some apply to sign up too).\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_EMAIL] =\n      fireauth.authenum.Error.INVALID_EMAIL;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_PASSWORD] =\n      fireauth.authenum.Error.INVALID_PASSWORD;\n  errorMap[fireauth.RpcHandler.ServerError.USER_DISABLED] =\n      fireauth.authenum.Error.USER_DISABLED;\n  // This can only happen if the SDK sends a bad request.\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_PASSWORD] =\n      fireauth.authenum.Error.INTERNAL_ERROR;\n\n  // Sign up with email and password errors.\n  errorMap[fireauth.RpcHandler.ServerError.EMAIL_EXISTS] =\n      fireauth.authenum.Error.EMAIL_EXISTS;\n  errorMap[fireauth.RpcHandler.ServerError.PASSWORD_LOGIN_DISABLED] =\n      fireauth.authenum.Error.OPERATION_NOT_ALLOWED;\n\n  // Verify assertion for sign in with credential errors:\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_IDP_RESPONSE] =\n      fireauth.authenum.Error.INVALID_IDP_RESPONSE;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_PENDING_TOKEN] =\n      fireauth.authenum.Error.INVALID_IDP_RESPONSE;\n  errorMap[fireauth.RpcHandler.ServerError.FEDERATED_USER_ID_ALREADY_LINKED] =\n      fireauth.authenum.Error.CREDENTIAL_ALREADY_IN_USE;\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_OR_INVALID_NONCE] =\n      fireauth.authenum.Error.MISSING_OR_INVALID_NONCE;\n\n  // Email template errors while sending emails:\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_MESSAGE_PAYLOAD] =\n      fireauth.authenum.Error.INVALID_MESSAGE_PAYLOAD;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_RECIPIENT_EMAIL] =\n      fireauth.authenum.Error.INVALID_RECIPIENT_EMAIL;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_SENDER] =\n      fireauth.authenum.Error.INVALID_SENDER;\n\n  // Send Password reset email errors:\n  errorMap[fireauth.RpcHandler.ServerError.EMAIL_NOT_FOUND] =\n      fireauth.authenum.Error.USER_DELETED;\n  errorMap[fireauth.RpcHandler.ServerError.RESET_PASSWORD_EXCEED_LIMIT] =\n      fireauth.authenum.Error.TOO_MANY_ATTEMPTS_TRY_LATER;    \n\n  // Reset password errors:\n  errorMap[fireauth.RpcHandler.ServerError.EXPIRED_OOB_CODE] =\n      fireauth.authenum.Error.EXPIRED_OOB_CODE;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_OOB_CODE] =\n      fireauth.authenum.Error.INVALID_OOB_CODE;\n  // This can only happen if the SDK sends a bad request.\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_OOB_CODE] =\n      fireauth.authenum.Error.INTERNAL_ERROR;\n\n  // Get Auth URI errors:\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_PROVIDER_ID] =\n      fireauth.authenum.Error.INVALID_PROVIDER_ID;\n\n  // Operations that require ID token in request:\n  errorMap[fireauth.RpcHandler.ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN] =\n      fireauth.authenum.Error.CREDENTIAL_TOO_OLD_LOGIN_AGAIN;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_ID_TOKEN] =\n      fireauth.authenum.Error.INVALID_AUTH;\n  errorMap[fireauth.RpcHandler.ServerError.TOKEN_EXPIRED] =\n      fireauth.authenum.Error.TOKEN_EXPIRED;\n  errorMap[fireauth.RpcHandler.ServerError.USER_NOT_FOUND] =\n      fireauth.authenum.Error.TOKEN_EXPIRED;\n\n  // CORS issues.\n  errorMap[fireauth.RpcHandler.ServerError.CORS_UNSUPPORTED] =\n      fireauth.authenum.Error.CORS_UNSUPPORTED;\n\n  // Dynamic link not activated.\n  errorMap[fireauth.RpcHandler.ServerError.DYNAMIC_LINK_NOT_ACTIVATED] =\n      fireauth.authenum.Error.DYNAMIC_LINK_NOT_ACTIVATED;\n\n  // iosBundleId or androidPackageName not valid error.\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_APP_ID] =\n      fireauth.authenum.Error.INVALID_APP_ID;\n\n  // Other errors.\n  errorMap[fireauth.RpcHandler.ServerError.TOO_MANY_ATTEMPTS_TRY_LATER] =\n      fireauth.authenum.Error.TOO_MANY_ATTEMPTS_TRY_LATER;\n  errorMap[fireauth.RpcHandler.ServerError.WEAK_PASSWORD] =\n      fireauth.authenum.Error.WEAK_PASSWORD;\n  errorMap[fireauth.RpcHandler.ServerError.OPERATION_NOT_ALLOWED] =\n      fireauth.authenum.Error.OPERATION_NOT_ALLOWED;\n  errorMap[fireauth.RpcHandler.ServerError.USER_CANCELLED] =\n      fireauth.authenum.Error.USER_CANCELLED;\n\n  // Phone Auth related errors.\n  errorMap[fireauth.RpcHandler.ServerError.CAPTCHA_CHECK_FAILED] =\n      fireauth.authenum.Error.CAPTCHA_CHECK_FAILED;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_APP_CREDENTIAL] =\n      fireauth.authenum.Error.INVALID_APP_CREDENTIAL;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_CODE] =\n      fireauth.authenum.Error.INVALID_CODE;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_PHONE_NUMBER] =\n      fireauth.authenum.Error.INVALID_PHONE_NUMBER;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_SESSION_INFO] =\n      fireauth.authenum.Error.INVALID_SESSION_INFO;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_TEMPORARY_PROOF] =\n      fireauth.authenum.Error.INVALID_IDP_RESPONSE;\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_APP_CREDENTIAL] =\n      fireauth.authenum.Error.MISSING_APP_CREDENTIAL;\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_CODE] =\n      fireauth.authenum.Error.MISSING_CODE;\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_PHONE_NUMBER] =\n      fireauth.authenum.Error.MISSING_PHONE_NUMBER;\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_SESSION_INFO] =\n      fireauth.authenum.Error.MISSING_SESSION_INFO;\n  errorMap[fireauth.RpcHandler.ServerError.QUOTA_EXCEEDED] =\n      fireauth.authenum.Error.QUOTA_EXCEEDED;\n  errorMap[fireauth.RpcHandler.ServerError.SESSION_EXPIRED] =\n      fireauth.authenum.Error.CODE_EXPIRED;\n  errorMap[fireauth.RpcHandler.ServerError.REJECTED_CREDENTIAL] =\n      fireauth.authenum.Error.REJECTED_CREDENTIAL;\n\n  // Other action code errors when additional settings passed.\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_CONTINUE_URI] =\n      fireauth.authenum.Error.INVALID_CONTINUE_URI;\n  // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\n  // This is OK as this error will be caught by client side validation.\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_ANDROID_PACKAGE_NAME] =\n      fireauth.authenum.Error.MISSING_ANDROID_PACKAGE_NAME;\n  errorMap[fireauth.RpcHandler.ServerError.MISSING_IOS_BUNDLE_ID] =\n      fireauth.authenum.Error.MISSING_IOS_BUNDLE_ID;\n  errorMap[fireauth.RpcHandler.ServerError.UNAUTHORIZED_DOMAIN] =\n      fireauth.authenum.Error.UNAUTHORIZED_DOMAIN;\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_DYNAMIC_LINK_DOMAIN] =\n      fireauth.authenum.Error.INVALID_DYNAMIC_LINK_DOMAIN;\n\n  // getProjectConfig errors when clientId is passed.\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_OAUTH_CLIENT_ID] =\n      fireauth.authenum.Error.INVALID_OAUTH_CLIENT_ID;\n  // getProjectConfig errors when sha1Cert is passed.\n  errorMap[fireauth.RpcHandler.ServerError.INVALID_CERT_HASH] =\n      fireauth.authenum.Error.INVALID_CERT_HASH;\n\n  // Override errors set in the custom map.\n  var customErrorMap = opt_customErrorMap || {};\n  goog.object.extend(errorMap, customErrorMap);\n\n  // Get detailed message if available.\n  errorMessage = fireauth.RpcHandler.getErrorCodeDetails(serverErrorCode);\n\n  // Handle backend errors where the error code can be a prefix of the message\n  // (e.g. \"WEAK_PASSWORD : Password should be at least 6 characters\").\n  // Use the details after the colon as the error message. If none available,\n  // pass undefined, which will default to the client hard coded error messages.\n  for (var prefixCode in errorMap) {\n    if (serverErrorCode.indexOf(prefixCode) === 0) {\n      return new fireauth.AuthError(errorMap[prefixCode], errorMessage);\n    }\n  }\n\n  // No error message found, return the serialized response as the message.\n  // This is likely to be an Apiary error for unexpected cases like keyExpired,\n  // etc.\n  if (!errorMessage && response) {\n     errorMessage = fireauth.util.stringifyJSON(response);\n  }\n  // The backend returned some error we don't recognize; this is an error on\n  // our side.\n  return new fireauth.AuthError(\n      fireauth.authenum.Error.INTERNAL_ERROR, errorMessage);\n};\n\n\n/**\n * @param {string} serverMessage The server error code.\n * @return {string|undefined} The detailed error code message.\n */\nfireauth.RpcHandler.getErrorCodeDetails = function(serverMessage) {\n  // Use the error details part as the autherror message.\n  // For a message INVALID_CUSTOM_TOKEN : [error detail here],\n  // The Auth error message should be [error detail here].\n  // No space should be contained in the error code, otherwise no detailed error\n  // message returned.\n  var matches = serverMessage.match(/^[^\\s]+\\s*:\\s*(.*)$/);\n  if (matches && matches.length > 1) {\n    return matches[1];\n  }\n  return undefined;\n};\n\n\n/**\n * Gets the Apiary error from a backend response, if applicable.\n * @param {!Object} response The API response.\n * @return {?fireauth.AuthError} The error, if applicable.\n * @private\n */\nfireauth.RpcHandler.getApiaryError_ = function(response) {\n  var error = response['error'] && response['error']['errors'] &&\n      response['error']['errors'][0] || {};\n  var reason = error['reason'] || '';\n\n  var errorReasonMap = {\n    'keyInvalid': fireauth.authenum.Error.INVALID_API_KEY,\n    'ipRefererBlocked': fireauth.authenum.Error.APP_NOT_AUTHORIZED\n  };\n\n  if (errorReasonMap[reason]) {\n    return new fireauth.AuthError(errorReasonMap[reason]);\n  }\n\n  return null;\n};\n\n\n/**\n * Gets the server error code from the response.\n * @param {!Object} resp The API response.\n * @return {string} The error code if present.\n * @private\n */\nfireauth.RpcHandler.getErrorCode_ = function(resp) {\n  return (resp['error'] && resp['error']['message']) || '';\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview The headless Auth class used for authenticating Firebase users.\n */\n\ngoog.provide('fireauth.Auth');\n\ngoog.require('fireauth.ActionCodeInfo');\ngoog.require('fireauth.ActionCodeSettings');\ngoog.require('fireauth.AdditionalUserInfo');\ngoog.require('fireauth.AuthCredential');\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.AuthEventHandler');\ngoog.require('fireauth.AuthEventManager');\ngoog.require('fireauth.AuthProvider');\ngoog.require('fireauth.AuthSettings');\ngoog.require('fireauth.AuthUser');\ngoog.require('fireauth.ConfirmationResult');\ngoog.require('fireauth.EmailAuthProvider');\ngoog.require('fireauth.RpcHandler');\ngoog.require('fireauth.UserEventType');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.constants');\ngoog.require('fireauth.deprecation');\ngoog.require('fireauth.idp');\ngoog.require('fireauth.iframeclient.IfcHandler');\ngoog.require('fireauth.object');\ngoog.require('fireauth.storage.RedirectUserManager');\ngoog.require('fireauth.storage.UserManager');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.object');\n\n\n\n/**\n * Creates the Firebase Auth corresponding for the App provided.\n *\n * @param {!firebase.app.App} app The corresponding Firebase App.\n * @constructor\n * @implements {fireauth.AuthEventHandler}\n * @implements {firebase.Service}\n * @extends {goog.events.EventTarget}\n */\nfireauth.Auth = function(app) {\n  /** @private {boolean} Whether this instance is deleted. */\n  this.deleted_ = false;\n  /** The Auth instance's settings object. */\n  fireauth.object.setReadonlyProperty(\n      this, 'settings', new fireauth.AuthSettings());\n  /** Auth's corresponding App. */\n  fireauth.object.setReadonlyProperty(this, 'app', app);\n  // Initialize RPC handler.\n  // API key is required for web client RPC calls.\n  if (this.app_().options && this.app_().options['apiKey']) {\n    var clientFullVersion = firebase.SDK_VERSION ?\n        fireauth.util.getClientVersion(\n            fireauth.util.ClientImplementation.JSCORE, firebase.SDK_VERSION) :\n        null;\n    this.rpcHandler_ = new fireauth.RpcHandler(\n        this.app_().options && this.app_().options['apiKey'],\n        // Get the client Auth endpoint used.\n        fireauth.constants.getEndpointConfig(fireauth.constants.clientEndpoint),\n        clientFullVersion);\n  } else {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_API_KEY);\n  }\n  /** @private {!Array<!goog.Promise<*, *>|!goog.Promise<void>>} List of\n   *      pending promises. */\n  this.pendingPromises_ = [];\n  /** @private {!Array<!function(?string)>} Auth token listeners. */\n  this.authListeners_ = [];\n  /** @private {!Array<!function(?string)>} User change listeners. */\n  this.userChangeListeners_ = [];\n  /**\n   * @private {!firebase.Subscribe} The subscribe function to the Auth ID token\n   *     change observer. This will trigger on ID token changes, including\n   *     token refresh on the same user.\n   */\n  this.onIdTokenChanged_ = firebase.INTERNAL.createSubscribe(\n      goog.bind(this.initIdTokenChangeObserver_, this));\n  /**\n   * @private {?string|undefined} The UID of the user that last triggered the\n   *     user state change listener.\n   */\n  this.userStateChangeUid_ = undefined;\n  /**\n   * @private {!firebase.Subscribe} The subscribe function to the user state\n   *     change observer.\n   */\n  this.onUserStateChanged_ = firebase.INTERNAL.createSubscribe(\n      goog.bind(this.initUserStateObserver_, this));\n  // Set currentUser to null.\n  this.setCurrentUser_(null);\n  /**\n   * @private {!fireauth.storage.UserManager} The Auth user storage\n   *     manager instance.\n   */\n  this.userStorageManager_ =\n      new fireauth.storage.UserManager(this.getStorageKey());\n  /**\n   * @private {!fireauth.storage.RedirectUserManager} The redirect user\n   *     storagemanager instance.\n   */\n  this.redirectUserStorageManager_ =\n      new fireauth.storage.RedirectUserManager(this.getStorageKey());\n  /**\n   * @private {!goog.Promise<undefined>} Promise that resolves when initial\n   *     state is loaded from storage.\n   */\n  this.authStateLoaded_ = this.registerPendingPromise_(this.initAuthState_());\n  /**\n   * @private {!goog.Promise<undefined>} Promise that resolves when state and\n   *     redirect result is ready, after which sign in and sign out operations\n   *     are safe to execute.\n   */\n  this.redirectStateIsReady_ = this.registerPendingPromise_(\n      this.initAuthRedirectState_());\n  /** @private {boolean} Whether initial state has already been resolved. */\n  this.isStateResolved_ = false;\n  /**\n   * @private {!function()} The syncAuthChanges function with context set to\n   *     auth instance.\n   */\n  this.getSyncAuthUserChanges_ = goog.bind(this.syncAuthUserChanges_, this);\n  /** @private {!function(!fireauth.AuthUser):!goog.Promise} The handler for\n   *      user state changes. */\n  this.userStateChangeListener_ =\n      goog.bind(this.handleUserStateChange_, this);\n  /** @private {!function(!Object)} The handler for user token changes. */\n  this.userTokenChangeListener_ =\n      goog.bind(this.handleUserTokenChange_, this);\n  /** @private {!function(!Object)} The handler for user deletion. */\n  this.userDeleteListener_ = goog.bind(this.handleUserDelete_, this);\n  /** @private {!function(!Object)} The handler for user invalidation. */\n  this.userInvalidatedListener_ = goog.bind(this.handleUserInvalidated_, this);\n  // TODO: find better way to enable or disable auth event manager.\n  if (fireauth.AuthEventManager.ENABLED) {\n    // Initialize Auth event manager to handle popup and redirect operations.\n    this.initAuthEventManager_();\n  }\n\n  // Export INTERNAL namespace.\n  this.INTERNAL = {};\n  this.INTERNAL['delete'] = goog.bind(this.delete, this);\n  this.INTERNAL['logFramework'] = goog.bind(this.logFramework, this);\n  /**\n   * @private {number} The number of Firebase services subscribed to Auth\n   *     changes.\n   */\n  this.firebaseServices_ = 0;\n  // Add call to superclass constructor.\n  fireauth.Auth.base(this, 'constructor');\n  // Initialize readable/writable Auth properties.\n  this.initializeReadableWritableProps_();\n  /**\n   * @private {!Array<string>} List of Firebase frameworks/libraries used. This\n   *     is currently only used to log FirebaseUI.\n   */\n  this.frameworks_ = [];\n};\ngoog.inherits(fireauth.Auth, goog.events.EventTarget);\n\n\n/**\n * Language code change custom event.\n * @param {?string} languageCode The new language code.\n * @constructor\n * @extends {goog.events.Event}\n */\nfireauth.Auth.LanguageCodeChangeEvent = function(languageCode) {\n  goog.events.Event.call(\n      this, fireauth.constants.AuthEventType.LANGUAGE_CODE_CHANGED);\n  this.languageCode = languageCode;\n};\ngoog.inherits(fireauth.Auth.LanguageCodeChangeEvent, goog.events.Event);\n\n\n/**\n * Framework change custom event.\n * @param {!Array<string>} frameworks The new frameworks array.\n * @constructor\n * @extends {goog.events.Event}\n */\nfireauth.Auth.FrameworkChangeEvent = function(frameworks) {\n  goog.events.Event.call(\n      this, fireauth.constants.AuthEventType.FRAMEWORK_CHANGED);\n  this.frameworks = frameworks;\n};\ngoog.inherits(fireauth.Auth.FrameworkChangeEvent, goog.events.Event);\n\n\n/**\n * Changes the Auth state persistence to the specified one.\n * @param {!fireauth.authStorage.Persistence} persistence The Auth state\n *     persistence mechanism.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.setPersistence = function(persistence) {\n  // TODO: fix auth.delete() behavior and how this affects persistence\n  // change after deletion.\n  // Throw an error if already destroyed.\n  // Set current persistence.\n  var p = this.userStorageManager_.setPersistence(persistence);\n  return /** @type {!goog.Promise<void>} */ (this.registerPendingPromise_(p));\n};\n\n\n/**\n * Get rid of Closure warning - the property is adding in the constructor.\n * @type {!firebase.app.App}\n */\nfireauth.Auth.prototype.app;\n\n\n/**\n * Sets the language code.\n * @param {?string} languageCode\n */\nfireauth.Auth.prototype.setLanguageCode = function(languageCode) {\n  // Don't do anything if no change detected.\n  if (this.languageCode_ !== languageCode && !this.deleted_) {\n    this.languageCode_ = languageCode;\n    // Update custom Firebase locale field.\n    this.rpcHandler_.updateCustomLocaleHeader(this.languageCode_);\n    // Notify external language code change listeners.\n    this.notifyLanguageCodeListeners_();\n  }\n};\n\n\n/**\n * Returns the current auth instance's language code if available.\n * @return {?string}\n */\nfireauth.Auth.prototype.getLanguageCode = function() {\n  return this.languageCode_;\n};\n\n\n/**\n * Sets the current language to the default device/browser preference.\n */\nfireauth.Auth.prototype.useDeviceLanguage = function() {\n  this.setLanguageCode(fireauth.util.getUserLanguage());\n};\n\n\n/**\n * @param {string} frameworkId The framework identifier.\n */\nfireauth.Auth.prototype.logFramework = function(frameworkId) {\n  // Theoretically multiple frameworks could be used\n  // (angularfire and FirebaseUI). Once a framework is used, it is not going\n  // to be unused, so no point adding a method to remove the framework ID.\n  this.frameworks_.push(frameworkId);\n  // Update the client version in RPC handler with the new frameworks.\n  this.rpcHandler_.updateClientVersion(firebase.SDK_VERSION ?\n        fireauth.util.getClientVersion(\n            fireauth.util.ClientImplementation.JSCORE, firebase.SDK_VERSION,\n            this.frameworks_) :\n        null);\n  this.dispatchEvent(new fireauth.Auth.FrameworkChangeEvent(\n      this.frameworks_));\n};\n\n\n/** @return {!Array<string>} The current Firebase frameworks. */\nfireauth.Auth.prototype.getFramework = function() {\n  return goog.array.clone(this.frameworks_);\n};\n\n\n/**\n * Updates the framework list on the provided user and configures the user to\n * listen to the Auth instance for any framework ID changes.\n * @param {!fireauth.AuthUser} user The user to whose framework list needs to be\n *     updated.\n * @private\n */\nfireauth.Auth.prototype.setUserFramework_ = function(user) {\n  // Sets the framework ID on the user.\n  user.setFramework(this.frameworks_);\n  // Sets current Auth instance as framework list change dispatcher on the user.\n  user.setFrameworkChangeDispatcher(this);\n};\n\n\n/**\n * Initializes readable/writable properties on Auth.\n * @suppress {invalidCasts}\n * @private\n */\nfireauth.Auth.prototype.initializeReadableWritableProps_ = function() {\n  Object.defineProperty(/** @type {!Object} */ (this), 'lc', {\n    /**\n     * @this {!Object}\n     * @return {?string} The current language code.\n     */\n    get: function() {\n      return this.getLanguageCode();\n    },\n    /**\n     * @this {!Object}\n     * @param {string} value The new language code.\n     */\n    set: function(value) {\n      this.setLanguageCode(value);\n    },\n    enumerable: false\n  });\n  // Initialize to null.\n  /** @private {?string} The current Auth instance's language code. */\n  this.languageCode_ = null;\n};\n\n\n/**\n * Notifies all external listeners of the language code change.\n * @private\n */\nfireauth.Auth.prototype.notifyLanguageCodeListeners_ = function() {\n  // Notify external listeners on the language code change.\n  this.dispatchEvent(new fireauth.Auth.LanguageCodeChangeEvent(\n      this.getLanguageCode()));\n};\n\n\n\n\n\n/**\n * @return {!Object} The object representation of the Auth instance.\n * @override\n */\nfireauth.Auth.prototype.toJSON = function() {\n  // Return the plain object representation in case JSON.stringify is called on\n  // an Auth instance.\n  return {\n    'apiKey': this.app_().options['apiKey'],\n    'authDomain': this.app_().options['authDomain'],\n    'appName': this.app_().name,\n    'currentUser': this.currentUser_() && this.currentUser_().toPlainObject()\n  };\n};\n\n\n/**\n * Returns the Auth event manager promise.\n * @return {!goog.Promise<!fireauth.AuthEventManager>}\n * @private\n */\nfireauth.Auth.prototype.getAuthEventManager_ = function() {\n  // Either return cached Auth event manager promise provider if available or a\n  // promise that rejects with missing Auth domain error.\n  return this.eventManagerProviderPromise_ ||\n      goog.Promise.reject(\n          new fireauth.AuthError(fireauth.authenum.Error.MISSING_AUTH_DOMAIN));\n};\n\n\n/**\n * Initializes the Auth event manager when state is ready.\n * @private\n */\nfireauth.Auth.prototype.initAuthEventManager_ = function() {\n  // Initialize Auth event manager on initState.\n  var self = this;\n  var authDomain = this.app_().options['authDomain'];\n  var apiKey = this.app_().options['apiKey'];\n  // Make sure environment also supports popup and redirect.\n  if (authDomain && fireauth.util.isPopupRedirectSupported()) {\n    // Auth domain is required for Auth event manager to resolve.\n    // Auth state has to be loaded first. One reason is to process link events.\n    this.eventManagerProviderPromise_ = this.authStateLoaded_.then(function() {\n      if (self.deleted_) {\n        return;\n      }\n      // By this time currentUser should be ready if available and will be able\n      // to resolve linkWithRedirect if detected.\n      self.authEventManager_ = fireauth.AuthEventManager.getManager(\n          authDomain, apiKey, self.app_().name);\n      // Subscribe Auth instance.\n      self.authEventManager_.subscribe(self);\n      // Subscribe current user by enabling popup and redirect on that user.\n      if (self.currentUser_()) {\n        self.currentUser_().enablePopupRedirect();\n      }\n      // If a redirect user is present, subscribe to popup and redirect events.\n      // In case current user was not available and the developer called link\n      // with redirect on a signed out user, this will work and the linked\n      // logged out user will be returned in getRedirectResult.\n      // current user and redirect user are the same (was already logged in),\n      // currentUser will have priority as it is subscribed before redirect\n      // user. This change will also allow further popup and redirect events on\n      // the redirect user going forward.\n      if (self.redirectUser_) {\n        self.redirectUser_.enablePopupRedirect();\n        // Set the user language for the redirect user.\n        self.setUserLanguage_(\n            /** @type {!fireauth.AuthUser} */ (self.redirectUser_));\n        // Set the user Firebase frameworks for the redirect user.\n        self.setUserFramework_(\n            /** @type {!fireauth.AuthUser} */ (self.redirectUser_));\n        // Reference to redirect user no longer needed.\n        self.redirectUser_ = null;\n      }\n      return self.authEventManager_;\n    });\n  }\n};\n\n\n/**\n * @param {!fireauth.AuthEvent.Type} mode The Auth type mode.\n * @param {?string=} opt_eventId The event ID.\n * @return {boolean} Whether the auth event handler can handler the provided\n *     event.\n * @override\n */\nfireauth.Auth.prototype.canHandleAuthEvent = function(mode, opt_eventId) {\n  // Only sign in events are handled.\n  switch (mode) {\n    // Accept all general sign in with redirect and unknowns.\n    // Migrating redirect events to use session storage will prevent this event\n    // from leaking to other tabs.\n    case fireauth.AuthEvent.Type.UNKNOWN:\n    case fireauth.AuthEvent.Type.SIGN_IN_VIA_REDIRECT:\n      return true;\n    case fireauth.AuthEvent.Type. SIGN_IN_VIA_POPUP:\n      // Pending sign in with popup event must match the stored popup event ID.\n      return this.popupEventId_ == opt_eventId &&\n          !!this.pendingPopupResolvePromise_;\n    default:\n      return false;\n  }\n};\n\n\n/**\n * Completes the pending popup operation. If error is not null, rejects with the\n * error. Otherwise, it resolves with the popup redirect result.\n * @param {!fireauth.AuthEvent.Type} mode The Auth type mode.\n * @param {?fireauth.AuthEventManager.Result} popupRedirectResult The result\n *     to resolve with when no error supplied.\n * @param {?fireauth.AuthError} error When supplied, the promise will reject.\n * @param {?string=} opt_eventId The event ID.\n * @override\n */\nfireauth.Auth.prototype.resolvePendingPopupEvent =\n    function(mode, popupRedirectResult, error, opt_eventId) {\n  // Only handles popup events of type sign in and which match popup event ID.\n  if (mode != fireauth.AuthEvent.Type.SIGN_IN_VIA_POPUP ||\n      this.popupEventId_ != opt_eventId) {\n    return;\n  }\n  if (error && this.pendingPopupRejectPromise_) {\n    // Reject with error for supplied mode.\n    this.pendingPopupRejectPromise_(error);\n  } else if (popupRedirectResult &&\n             !error &&\n             this.pendingPopupResolvePromise_) {\n    // Resolve with result for supplied mode.\n    this.pendingPopupResolvePromise_(popupRedirectResult);\n  }\n  // Now that event is resolved, delete popup timeout promise.\n  if (this.popupTimeoutPromise_) {\n    this.popupTimeoutPromise_.cancel();\n    this.popupTimeoutPromise_ = null;\n  }\n  // Delete pending promises.\n  delete this.pendingPopupResolvePromise_;\n  delete this.pendingPopupRejectPromise_;\n};\n\n\n/**\n * Returns the handler's appropriate popup and redirect sign in operation\n * finisher.\n * @param {!fireauth.AuthEvent.Type} mode The Auth type mode.\n * @param {?string=} opt_eventId The optional event ID.\n * @return {?function(string,\n *     string, ?string=):!goog.Promise<!fireauth.AuthEventManager.Result>}\n * @override\n */\nfireauth.Auth.prototype.getAuthEventHandlerFinisher =\n    function(mode, opt_eventId) {\n  // Sign in events will be completed by finishPopupAndRedirectSignIn.\n  if (mode == fireauth.AuthEvent.Type.SIGN_IN_VIA_REDIRECT) {\n    return goog.bind(this.finishPopupAndRedirectSignIn, this);\n  } else if (mode == fireauth.AuthEvent.Type.SIGN_IN_VIA_POPUP &&\n             this.popupEventId_ == opt_eventId &&\n             this.pendingPopupResolvePromise_) {\n    return goog.bind(this.finishPopupAndRedirectSignIn, this);\n  }\n  return null;\n};\n\n\n/**\n * Finishes the popup and redirect sign in operations.\n * @param {string} requestUri The callback url with the oauth response.\n * @param {string} sessionId The session id used to generate the authUri.\n * @param {?string=} opt_postBody The optional POST body content.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.finishPopupAndRedirectSignIn =\n    function(requestUri, sessionId, opt_postBody) {\n  var self = this;\n  // Verify assertion request.\n  var request = {\n    'requestUri': requestUri,\n    'postBody': opt_postBody,\n    'sessionId': sessionId\n  };\n  // Now that popup has responded, delete popup timeout promise.\n  if (this.popupTimeoutPromise_) {\n    this.popupTimeoutPromise_.cancel();\n    this.popupTimeoutPromise_ = null;\n  }\n  // This routine could be run before init state, make sure it waits for that to\n  // complete.\n  var credential = null;\n  var additionalUserInfo = null;\n  var idTokenResolver = self.rpcHandler_.verifyAssertion(request)\n      .then(function(response) {\n        // Get Auth credential from verify assert request and save it.\n        credential = fireauth.AuthProvider.getCredentialFromResponse(response);\n        // Get additional IdP data if available in the response.\n        additionalUserInfo = fireauth.AdditionalUserInfo.fromPlainObject(\n            response);\n        return response;\n      });\n  // When state is ready, run verify assertion request.\n  // This will only run either after initial and redirect state is ready for\n  // popups or after initial state is ready for redirect resolution.\n  var p = self.authStateLoaded_.then(function() {\n    return idTokenResolver;\n  }).then(function(idTokenResponse) {\n    // Use ID token response to sign in the Auth user.\n    return self.signInWithIdTokenResponse(idTokenResponse);\n  }).then(function() {\n    // On sign in success, construct redirect and popup result and return a\n    // readonly copy of it.\n    return fireauth.object.makeReadonlyCopy({\n      'user': self.currentUser_(),\n      'credential': credential,\n      'additionalUserInfo': additionalUserInfo,\n      // Sign in operation type.\n      'operationType': fireauth.constants.OperationType.SIGN_IN\n    });\n  });\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * @return {string} The generated event ID used to identify a popup event.\n * @private\n */\nfireauth.Auth.prototype.generateEventId_ = function() {\n  return fireauth.util.generateEventId();\n};\n\n\n/**\n * Signs in to Auth provider via popup.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInWithPopup = function(provider) {\n  // Check if popup and redirect are supported in this environment.\n  if (!fireauth.util.isPopupRedirectSupported()) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  }\n  var mode = fireauth.AuthEvent.Type.SIGN_IN_VIA_POPUP;\n  var self = this;\n  // Popup the window immediately to make sure the browser associates the\n  // popup with the click that triggered it.\n\n  // Get provider settings.\n  var settings = fireauth.idp.getIdpSettings(provider['providerId']);\n  // There could multiple sign in with popup events in different windows.\n  // We need to match the correct popup to the correct pending promise.\n  var eventId = this.generateEventId_();\n  // If incapable of redirecting popup from opener, popup destination URL\n  // directly. This could also happen in a sandboxed iframe.\n  var oauthHelperWidgetUrl = null;\n  if ((!fireauth.util.runsInBackground() || fireauth.util.isIframe()) &&\n      this.app_().options['authDomain'] &&\n      provider['isOAuthProvider']) {\n    oauthHelperWidgetUrl =\n        fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(\n            this.app_().options['authDomain'],\n            this.app_().options['apiKey'],\n            this.app_().name,\n            mode,\n            provider,\n            null,\n            eventId,\n            firebase.SDK_VERSION || null);\n  }\n  // The popup must have a name, otherwise when successive popups are triggered\n  // they will all render in the same instance and none will succeed since the\n  // popup cancel of first window will close the shared popup window instance.\n  var popupWin =\n      fireauth.util.popup(\n          oauthHelperWidgetUrl,\n          fireauth.util.generateRandomString(),\n          settings && settings.popupWidth,\n          settings && settings.popupHeight);\n  // Auth event manager must be available for popup sign in to be possible.\n  var p = this.getAuthEventManager_().then(function(manager) {\n    // Process popup request tagging it with newly created event ID.\n    return manager.processPopup(\n        popupWin, mode, provider, eventId, !!oauthHelperWidgetUrl);\n  }).then(function() {\n    return new goog.Promise(function(resolve, reject) {\n      // Expire other pending promises if still available..\n      self.resolvePendingPopupEvent(\n          mode,\n          null,\n          new fireauth.AuthError(fireauth.authenum.Error.EXPIRED_POPUP_REQUEST),\n          // Existing pending popup event ID.\n          self.popupEventId_);\n      // Save current pending promises.\n      self.pendingPopupResolvePromise_ = resolve;\n      self.pendingPopupRejectPromise_ = reject;\n      // Overwrite popup event ID with new one corresponding to popup.\n      self.popupEventId_ = eventId;\n      // Keep track of timeout promise to cancel it on promise resolution before\n      // it times out.\n      self.popupTimeoutPromise_ =\n          self.authEventManager_.startPopupTimeout(\n              self, mode, /** @type {!Window} */ (popupWin), eventId);\n    });\n  }).then(function(result) {\n    // On resolution, close popup if still opened and pass result through.\n    if (popupWin) {\n      fireauth.util.closeWindow(popupWin);\n    }\n    if (result) {\n      return fireauth.object.makeReadonlyCopy(result);\n    }\n    return null;\n  }).thenCatch(function(error) {\n    if (popupWin) {\n      fireauth.util.closeWindow(popupWin);\n    }\n    throw error;\n  });\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * Signs in to Auth provider via redirect.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.signInWithRedirect = function(provider) {\n  // Check if popup and redirect are supported in this environment.\n  if (!fireauth.util.isPopupRedirectSupported()) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  }\n  var self = this;\n  var mode = fireauth.AuthEvent.Type.SIGN_IN_VIA_REDIRECT;\n  // Auth event manager must be available for sign in via redirect to be\n  // possible.\n  var p = this.getAuthEventManager_().then(function(manager) {\n    // Remember current persistence to apply it on the next page.\n    // This is the only time the state is passed to the next page (when user is\n    // not already logged in).\n    // This is not needed for link and reauthenticate as the user is already\n    // stored with specified persistence.\n    return self.userStorageManager_.savePersistenceForRedirect();\n  }).then(function() {\n    // Process redirect operation.\n    return self.authEventManager_.processRedirect(mode, provider);\n  });\n  return /** @type {!goog.Promise<void>} */ (this.registerPendingPromise_(p));\n};\n\n\n/**\n * Returns the redirect result. If coming back from a successful redirect sign\n * in, will resolve to the signed in user. If coming back from an unsuccessful\n * redirect sign, will reject with the proper error. If no redirect operation\n * called, resolves with null.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.getRedirectResult = function() {\n  // Check if popup and redirect are supported in this environment.\n  if (!fireauth.util.isPopupRedirectSupported()) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  }\n  var self = this;\n  // Auth event manager must be available for get redirect result to be\n  // possible.\n  var p = this.getAuthEventManager_().then(function(manager) {\n    // Return redirect result when resolved.\n    return self.authEventManager_.getRedirectResult();\n  }).then(function(result) {\n    if (result) {\n      return fireauth.object.makeReadonlyCopy(result);\n    }\n    return null;\n  });\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * Asynchronously sets the provided user as currentUser on the current Auth\n * instance.\n * @param {?fireauth.AuthUser} user The user to be copied to Auth instance.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.updateCurrentUser = function(user) {\n  if (!user) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.NULL_USER));\n  }\n  var self = this;\n  var options = {};\n  options['apiKey'] = this.app_().options['apiKey'];\n  options['authDomain'] = this.app_().options['authDomain'];\n  options['appName'] = this.app_().name;\n  var newUser = fireauth.AuthUser.copyUser(user, options,\n      self.redirectUserStorageManager_, self.getFramework());\n  return this.registerPendingPromise_(\n      this.redirectStateIsReady_.then(function() {\n        if (self.app_().options['apiKey'] != user.getApiKey()) {\n          // Throws auth/invalid-user-token if user doesn't belong to app.\n          // Throws auth/user-token-expired if token expires.\n          return newUser.reload();\n        }\n      }).then(function() {\n        if (self.currentUser_() && user['uid'] == self.currentUser_()['uid']) {\n          // Same user signed in. Update user data and notify Auth listeners.\n          // No need to resubscribe to user events.\n          // TODO: Check if the user to copy is older than current user and skip\n          // the copy logic in that case.\n          self.currentUser_().copy(user);\n          return self.handleUserStateChange_(user);\n        }\n        self.setCurrentUser_(newUser);\n        // Enable popup and redirect events.\n        newUser.enablePopupRedirect();\n        // Save user changes.\n        return self.handleUserStateChange_(newUser);\n      }).then(function(user) {\n        self.notifyAuthListeners_();\n      }));\n};\n\n\n/**\n * Completes the headless sign in with the server response containing the STS\n * access and refresh tokens, and sets the Auth user as current user while\n * setting all listeners to it and saving it to storage.\n * @param {!Object<string, string>} idTokenResponse The ID token response from\n *     the server.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.signInWithIdTokenResponse =\n    function(idTokenResponse) {\n  var self = this;\n  var options = {};\n  options['apiKey'] = self.app_().options['apiKey'];\n  options['authDomain'] = self.app_().options['authDomain'];\n  options['appName'] = self.app_().name;\n  // Wait for state to be ready.\n  // This is used internally and is also used for redirect sign in so there is\n  // no need for waiting for redirect result to resolve since redirect result\n  // depends on it.\n  return this.authStateLoaded_.then(function() {\n    // Initialize an Auth user using the provided ID token response.\n    return fireauth.AuthUser.initializeFromIdTokenResponse(\n        options,\n        idTokenResponse,\n        /** @type {!fireauth.storage.RedirectUserManager} */ (\n            self.redirectUserStorageManager_),\n        // Pass frameworks so they are logged in getAccountInfo while populating\n        // the user info.\n        self.getFramework());\n  }).then(function(user) {\n    // Check if the same user is already signed in.\n    if (self.currentUser_() &&\n        user['uid'] == self.currentUser_()['uid']) {\n      // Same user signed in. Update user data and notify Auth listeners.\n      // No need to resubscribe to user events.\n      self.currentUser_().copy(user);\n      return self.handleUserStateChange_(user);\n    }\n    // New user.\n    // Set current user and attach all listeners to it.\n    self.setCurrentUser_(user);\n    // Enable popup and redirect events.\n    user.enablePopupRedirect();\n    // Save user changes.\n    return self.handleUserStateChange_(user);\n  }).then(function() {\n    // Notify external Auth listeners only when state is ready.\n    self.notifyAuthListeners_();\n  });\n};\n\n\n/**\n * Updates the current auth user and attaches event listeners to changes on it.\n * Also removes all event listeners from previously signed in user.\n * @param {?fireauth.AuthUser} user The current user instance.\n * @private\n */\nfireauth.Auth.prototype.setCurrentUser_ = function(user) {\n  // Must be called first before updating currentUser reference.\n  this.attachEventListeners_(user);\n  // Update currentUser property.\n  fireauth.object.setReadonlyProperty(this, 'currentUser', user);\n  if (user) {\n    // If a user is available, set the language code on it and set current Auth\n    // instance as language code change dispatcher.\n    this.setUserLanguage_(user);\n    // Set the current frameworks used on the user and set current Auth instance\n    // as the framework change dispatcher.\n    this.setUserFramework_(user);\n  }\n};\n\n\n/**\n * Signs out the current user while deleting the Auth user from storage and\n * removing all listeners from it.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.signOut = function() {\n  var self = this;\n  // Wait for final state to be ready first, otherwise a signed out user could\n  // come back to life.\n  var p = this.redirectStateIsReady_.then(function() {\n    // Ignore if already signed out.\n    if (!self.currentUser_()) {\n      return goog.Promise.resolve();\n    }\n    // Detach all event listeners.\n    // Set current user to null.\n    self.setCurrentUser_(null);\n    // Remove current user from storage\n    return /** @type {!fireauth.storage.UserManager} */ (\n        self.userStorageManager_).removeCurrentUser()\n        .then(function() {\n          // Notify external Auth listeners of this Auth change event.\n          self.notifyAuthListeners_();\n        });\n  });\n  return /** @type {!goog.Promise<void>} */ (this.registerPendingPromise_(p));\n};\n\n\n/**\n * @return {!goog.Promise} A promise that resolved when any stored redirect user\n *     is loaded and removed from session storage and then stored locally.\n * @private\n */\nfireauth.Auth.prototype.initRedirectUser_ = function() {\n  var self = this;\n  var authDomain = this.app_().options['authDomain'];\n  // Get any saved redirect user and delete from session storage.\n  // Override user's authDomain with app's authDomain if there is a mismatch.\n  var p = /** @type {!fireauth.storage.RedirectUserManager} */ (\n      this.redirectUserStorageManager_).getRedirectUser(authDomain)\n          .then(function(user) {\n            // Save redirect user.\n            self.redirectUser_ = user;\n            if (user) {\n              // Set redirect storage manager on user.\n              user.setRedirectStorageManager(\n                  /** @type {!fireauth.storage.RedirectUserManager} */ (\n                      self.redirectUserStorageManager_));\n            }\n            // Delete redirect user.\n            return /** @type {!fireauth.storage.RedirectUserManager} */ (\n                self.redirectUserStorageManager_).removeRedirectUser();\n          });\n  return /** @type {!goog.Promise<undefined>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * Loads the initial Auth state for current application from web storage and\n * initializes Auth user accordingly to reflect that state. This routine does\n * not wait for any pending redirect result to be resolved.\n * @return {!goog.Promise<undefined>} Promise that resolves when state is ready,\n *     loaded from storage.\n * @private\n */\nfireauth.Auth.prototype.initAuthState_ = function() {\n  // Load current user from storage.\n  var self = this;\n  var authDomain = this.app_().options['authDomain'];\n  // Get any saved redirected user first.\n  var p = this.initRedirectUser_().then(function() {\n    // Override user's authDomain with app's authDomain if there is a mismatch.\n    return /** @type {!fireauth.storage.UserManager} */ (\n        self.userStorageManager_).getCurrentUser(authDomain);\n  }).then(function(user) {\n    // Logged in user.\n    if (user) {\n      // Set redirect storage manager on user.\n      user.setRedirectStorageManager(\n          /** @type {!fireauth.storage.RedirectUserManager} */ (\n              self.redirectUserStorageManager_));\n      // If the current user is undergoing a redirect operation, do not reload\n      // as that could could potentially delete the user if the token is\n      // expired. Instead any token problems will be detected via the\n      // verifyAssertion flow or the remaining flow. This is critical for\n      // reauthenticateWithRedirect as this flow is potentially used to recover\n      // from a token expiration error.\n      if (self.redirectUser_ &&\n          self.redirectUser_.getRedirectEventId() ==\n          user.getRedirectEventId()) {\n        return user;\n      }\n      // Confirm user valid first before setting listeners.\n      return user.reload().then(function() {\n        // Force user saving after reload as state change listeners not\n        // subscribed yet below via setCurrentUser_. Changes may have happened\n        // externally such as email actions or changes on another device.\n        return self.userStorageManager_.setCurrentUser(user).then(function() {\n          return user;\n        });\n      }).thenCatch(function(error) {\n        if (error['code'] == 'auth/network-request-failed') {\n          // Do not delete the user from storage if connection is lost or app is\n          // offline.\n          return user;\n        }\n        // Invalid user, could be deleted, remove from storage and resolve with\n        // null.\n        return /** @type {!fireauth.storage.UserManager} */(\n            self.userStorageManager_).removeCurrentUser();\n      });\n    }\n    // No logged in user, resolve with null;\n    return null;\n  }).then(function(user) {\n    // Even though state not ready yet pending any redirect result.\n    // Current user needs to be available for link with redirect to complete.\n    // This will also set listener on the user changes in case state changes\n    // occur they would get updated in storage too.\n    self.setCurrentUser_(user || null);\n  });\n  // In case the app is deleted before it is initialized with state from\n  // storage.\n  return /** @type {!goog.Promise<undefined>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * After initial Auth state is loaded, waits for any pending redirect result,\n * resolves it and then adds the external Auth state change listeners and\n * triggers first state of all observers.\n * @return {!goog.Promise<undefined>} Promise that resolves when state is ready\n *     taking into account any pending redirect result.\n * @private\n */\nfireauth.Auth.prototype.initAuthRedirectState_ = function() {\n  var self = this;\n  // Wait first for state to be loaded from storage.\n  return this.authStateLoaded_.then(function() {\n    // Resolve any pending redirect result.\n    return self.getRedirectResult();\n  }).thenCatch(function(error) {\n    // Ignore any error in the process. Redirect could be not supported.\n    return;\n  }).then(function() {\n    // Make sure instance was not deleted before proceeding.\n    if (self.deleted_) {\n      return;\n    }\n    // Between init Auth state and get redirect result resolution there\n    // could have been a sign in attempt in another window.\n    // Force sync and then add listener to run sync on change below.\n    return self.getSyncAuthUserChanges_();\n  }).thenCatch(function(error) {\n    // Ignore any error in the process.\n    return;\n  }).then(function() {\n    // Now that final state is ready, make sure instance was not deleted before\n    // proceeding.\n    if (self.deleted_) {\n      return;\n    }\n    // Initial state has been resolved.\n    self.isStateResolved_ = true;\n    // Add user state change listener so changes are synchronized with\n    // other windows and tabs.\n    /** @type {!fireauth.storage.UserManager} */ (self.userStorageManager_\n        ).addCurrentUserChangeListener(self.getSyncAuthUserChanges_);\n  });\n};\n\n\n/**\n * Synchronizes current Auth to stored auth state, used when external state\n * changes occur.\n * @return {!goog.Promise<void>}\n * @private\n */\nfireauth.Auth.prototype.syncAuthUserChanges_ = function() {\n  // Get Auth user state from storage and compare to current state.\n  // Safe to run when no external change is detected.\n  var self = this;\n  var authDomain = this.app_().options['authDomain'];\n  // Override user's authDomain with app's authDomain if there is a mismatch.\n  return /** @type {!fireauth.storage.UserManager} */ (\n      this.userStorageManager_).getCurrentUser(authDomain)\n      .then(function(user) {\n        // In case this was deleted.\n        if (self.deleted_) {\n          return;\n        }\n        // Since the authDomain could be modified here, saving to storage here\n        // could trigger an infinite loop of changes between this tab and\n        // another tab using different Auth domain but since sync Auth user\n        // changes does not save changes to storage, except for getToken below\n        // if the token needs refreshing but will stop triggering the first time\n        // the token is refreshed on one of the first tab that refreshes it.\n        // The latter should not happen anyway since getToken should be valid\n        // at all times since anything that triggers the storage change should\n        // have communicated with the backend and that requires a valid token.\n        // In addition, authDomain difference is an edge case to begin with.\n\n        // If the same user is to be synchronized.\n        if (self.currentUser_() &&\n            user &&\n            self.currentUser_().hasSameUserIdAs(user)) {\n          // Data update, simply copy data changes.\n          self.currentUser_().copy(user);\n          // If tokens changed from previous user tokens, this will trigger\n          // notifyAuthListeners_.\n          return self.currentUser_().getIdToken();\n        } else if (!self.currentUser_() && !user) {\n          // No change, do nothing (was signed out and remained signed out).\n          return;\n        } else {\n          // Update current Auth state. Either a new login or logout.\n          self.setCurrentUser_(user);\n          // If a new user is signed in, enabled popup and redirect on that\n          // user.\n          if (user) {\n            user.enablePopupRedirect();\n            // Set redirect storage manager on user.\n            user.setRedirectStorageManager(\n                /** @type {!fireauth.storage.RedirectUserManager} */ (\n                    self.redirectUserStorageManager_));\n          }\n          if (self.authEventManager_) {\n            self.authEventManager_.subscribe(self);\n          }\n          // Notify external Auth changes of Auth change event.\n          self.notifyAuthListeners_();\n        }\n      });\n};\n\n\n/**\n * Updates the language code on the provided user and configures the user to\n * listen to the Auth instance for any language code changes.\n * @param {!fireauth.AuthUser} user The user to whose language needs to be set.\n * @private\n */\nfireauth.Auth.prototype.setUserLanguage_ = function(user) {\n  // Sets the current language code on the user.\n  user.setLanguageCode(this.getLanguageCode());\n  // Sets current Auth instance as language code change dispatcher on the user.\n  user.setLanguageCodeChangeDispatcher(this);\n};\n\n\n/**\n * Handles user state changes.\n * @param {!fireauth.AuthUser} user The user which triggered the state changes.\n * @return {!goog.Promise} The promise that resolves when state changes are\n *     handled.\n * @private\n */\nfireauth.Auth.prototype.handleUserStateChange_ = function(user) {\n  // Save Auth user state changes.\n  return /** @type {!fireauth.storage.UserManager} */ (\n      this.userStorageManager_).setCurrentUser(user);\n};\n\n\n/**\n * Handles user token changes.\n * @param {!Object} event The token change event.\n * @private\n */\nfireauth.Auth.prototype.handleUserTokenChange_ = function(event) {\n  // This is only called when user is ready and Auth state has been resolved.\n  // Notify external Auth change listeners.\n  this.notifyAuthListeners_();\n  // Save user token changes.\n  this.handleUserStateChange_(/** @type {!fireauth.AuthUser} */ (\n      this.currentUser_()));\n};\n\n\n/**\n * Handles user deletion events.\n * @param {!Object} event The user delete event.\n * @private\n */\nfireauth.Auth.prototype.handleUserDelete_ = function(event) {\n  // A deleted user will be treated like a sign out event.\n  this.signOut();\n};\n\n\n/**\n * Handles user invalidation events.\n * @param {!Object} event The user invalidation event.\n * @private\n */\nfireauth.Auth.prototype.handleUserInvalidated_ = function(event) {\n  // An invalidated user will be treated like a sign out event.\n  this.signOut();\n};\n\n\n/**\n * Detaches all previous listeners on current user and reattach new listeners to\n * provided user if not null.\n * @param {?fireauth.AuthUser} user The user to attach event listeners to.\n * @private\n */\nfireauth.Auth.prototype.attachEventListeners_ = function(user) {\n  // Remove existing event listeners from previous current user if available.\n  if (this.currentUser_()) {\n    this.currentUser_().removeStateChangeListener(\n        this.userStateChangeListener_);\n    goog.events.unlisten(\n        this.currentUser_(),\n        fireauth.UserEventType.TOKEN_CHANGED,\n        this.userTokenChangeListener_);\n    goog.events.unlisten(\n        this.currentUser_(),\n        fireauth.UserEventType.USER_DELETED,\n        this.userDeleteListener_);\n    goog.events.unlisten(\n        this.currentUser_(),\n        fireauth.UserEventType.USER_INVALIDATED,\n        this.userInvalidatedListener_);\n    // Stop proactive token refresh on the current user.\n    this.currentUser_().stopProactiveRefresh();\n  }\n  // If a new user is provided, attach event listeners to state, token, user\n  // invalidation and delete events.\n  if (user) {\n    user.addStateChangeListener(this.userStateChangeListener_);\n    goog.events.listen(\n        user,\n        fireauth.UserEventType.TOKEN_CHANGED,\n        this.userTokenChangeListener_);\n    goog.events.listen(\n        user,\n        fireauth.UserEventType.USER_DELETED,\n        this.userDeleteListener_);\n     goog.events.listen(\n        user,\n        fireauth.UserEventType.USER_INVALIDATED,\n        this.userInvalidatedListener_);\n    // Start proactive token refresh on new user if there is at least one\n    // Firebase service subscribed to Auth changes.\n    if (this.firebaseServices_ > 0) {\n      user.startProactiveRefresh();\n    }\n  }\n};\n\n\n/**\n * Signs in with ID token promise provider.\n * @param {!goog.Promise<!Object>} idTokenPromise\n *     The rpc handler method that returns a promise which resolves with an ID\n *     token.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n * @private\n */\nfireauth.Auth.prototype.signInWithIdTokenProvider_ = function(idTokenPromise) {\n  var self = this;\n  var credential = null;\n  var additionalUserInfo = null;\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(\n          idTokenPromise\n          .then(function(idTokenResponse) {\n            // Get credential if available in the response.\n            credential = fireauth.AuthProvider.getCredentialFromResponse(\n                idTokenResponse);\n            // Get additional IdP data if available in the response.\n            additionalUserInfo = fireauth.AdditionalUserInfo.fromPlainObject(\n                idTokenResponse);\n            // When custom token is exchanged for idToken, continue sign in with\n            // ID token and return firebase Auth user.\n            return self.signInWithIdTokenResponse(idTokenResponse);\n          })\n          .then(function() {\n            // Resolve promise with a readonly user credential object.\n            return fireauth.object.makeReadonlyCopy({\n              // Return the current user reference.\n              'user': self.currentUser_(),\n              // Return any credential passed from the backend.\n              'credential': credential,\n              // Return any additional IdP data passed from the backend.\n              'additionalUserInfo': additionalUserInfo,\n              // Sign in operation type.\n              'operationType': fireauth.constants.OperationType.SIGN_IN\n            });\n          })));\n};\n\n\n/**\n * Initializes the Auth state change observer returned by the\n * firebase.INTERNAL.createSubscribe helper.\n * @param {!firebase.Observer} observer The Auth state change observer.\n * @private\n */\nfireauth.Auth.prototype.initIdTokenChangeObserver_ = function(observer) {\n  var self = this;\n  // Adds a listener that will transmit the event everytime it's called.\n  this.addAuthTokenListener(function(accessToken) {\n    observer.next(self.currentUser_());\n  });\n};\n\n\n/**\n * Initializes the user state change observer returned by the\n * firebase.INTERNAL.createSubscribe helper.\n * @param {!firebase.Observer} observer The user state change observer.\n * @private\n */\nfireauth.Auth.prototype.initUserStateObserver_ = function(observer) {\n  var self = this;\n  // Adds a listener that will transmit the event everytime it's called.\n  this.addUserChangeListener_(function(accessToken) {\n    observer.next(self.currentUser_());\n  });\n};\n\n\n/**\n * Adds an observer for Auth state changes, we need to wrap the call as\n * the args checking code needs a method defined on the prototype this way,\n * not within the constructor, and we also have to implement the behavior\n * that will trigger an observer right away if state is ready.\n * @param {!firebase.Observer|function(?fireauth.AuthUser)}\n *     nextOrObserver An observer object or a function triggered on change.\n * @param {function(!fireauth.AuthError)=} opt_error Optional A function\n *     triggered on Auth error.\n * @param {function()=} opt_completed Optional A function triggered when the\n *     observer is removed.\n * @return {!function()} The unsubscribe function for the observer.\n */\nfireauth.Auth.prototype.onIdTokenChanged = function(\n    nextOrObserver, opt_error, opt_completed) {\n  var self = this;\n  // State already determined. Trigger immediately, otherwise initState will\n  // take care of notifying all pending listeners on initialization.\n  // In this case we do not trigger synchronously and trigger via a resolved\n  // promise as required by specs.\n  if (this.isStateResolved_) {\n    // The observer cannot be called synchronously. We're using the\n    // firebase.Promise implementation as otherwise it creates weird behavior\n    // where the order of promises resolution would not be as expected.\n    // It is due to the fact fireauth and firebase.app use their own\n    // and different promises library and this leads to calls resolutions order\n    // being different from the promises registration order.\n    firebase.Promise.resolve().then(function() {\n      if (goog.isFunction(nextOrObserver)) {\n        nextOrObserver(self.currentUser_());\n      } else if (goog.isFunction(nextOrObserver['next'])) {\n        nextOrObserver['next'](self.currentUser_());\n      }\n    });\n  }\n  return this.onIdTokenChanged_(\n      /** @type {!firebase.Observer|function(*)|undefined} */ (nextOrObserver),\n      /** @type {function(!Error)|undefined} */ (opt_error),\n      opt_completed);\n};\n\n\n/**\n * Adds an observer for user state changes, we need to wrap the call as\n * the args checking code needs a method defined on the prototype this way,\n * not within the constructor, and we also have to implement the behavior\n * that will trigger an observer right away if state is ready.\n * @param {!firebase.Observer|function(?fireauth.AuthUser)}\n *     nextOrObserver An observer object or a function triggered on change.\n * @param {function(!fireauth.AuthError)=} opt_error Optional A function\n *     triggered on Auth error.\n * @param {function()=} opt_completed Optional A function triggered when the\n *     observer is removed.\n * @return {!function()} The unsubscribe function for the observer.\n */\nfireauth.Auth.prototype.onAuthStateChanged = function(\n    nextOrObserver, opt_error, opt_completed) {\n  var self = this;\n  // State already determined. Trigger immediately, otherwise initState will\n  // take care of notifying all pending listeners on initialization.\n  // In this case we do not trigger synchronously and trigger via a resolved\n  // promise as required by specs.\n  if (this.isStateResolved_) {\n    // The observer cannot be called synchronously. We're using the\n    // firebase.Promise implementation as otherwise it creates weird behavior\n    // where the order of promises resolution would not be as expected.\n    // It is due to the fact fireauth and firebase.app use their own\n    // and different promises library and this leads to calls resolutions order\n    // being different from the promises registration order.\n    firebase.Promise.resolve().then(function() {\n      // This ensures that the first time notifyAuthListeners_ is triggered,\n      // it has the correct UID before triggering the user state change\n      // listeners.\n      self.userStateChangeUid_ = self.getUid();\n      if (goog.isFunction(nextOrObserver)) {\n        nextOrObserver(self.currentUser_());\n      } else if (goog.isFunction(nextOrObserver['next'])) {\n        nextOrObserver['next'](self.currentUser_());\n      }\n    });\n  }\n  return this.onUserStateChanged_(\n      /** @type {!firebase.Observer|function(*)|undefined} */ (nextOrObserver),\n      /** @type {function(!Error)|undefined} */ (opt_error),\n      opt_completed);\n};\n\n\n/**\n * Returns an STS token. If the cached one is unexpired it is directly returned.\n * Otherwise the existing ID token or refresh token is exchanged for a new one.\n * If there is no user signed in, returns null.\n *\n * This method is called getIdTokenInternal as the symbol getIdToken is not\n * obfuscated, which could lead to developers incorrectly calling\n * firebase.auth().getIdToken().\n *\n * @param {boolean=} opt_forceRefresh Whether to force refresh token exchange.\n * @return {!goog.Promise<?Object>}\n */\nfireauth.Auth.prototype.getIdTokenInternal = function(opt_forceRefresh) {\n  var self = this;\n  // Wait for state to be ready.\n  var p = this.redirectStateIsReady_.then(function() {\n    // Call user's underlying getIdToken method.\n    if (self.currentUser_()) {\n      return self.currentUser_().getIdToken(opt_forceRefresh)\n          .then(function(stsAccessToken) {\n            // This is used internally by other services which expect the access\n            // token to be returned in an object.\n            return {\n              'accessToken': stsAccessToken\n            };\n          });\n    }\n    // No logged in user, return null token.\n    return null;\n  });\n  return /** @type {!goog.Promise<?Object>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * Signs in a user asynchronously using a custom token and returns any\n * additional user info data or credentials returned form the backend.\n * @param {string} token The custom token to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInWithCustomToken = function(token) {\n  var self = this;\n  // Wait for the redirect state to be determined before proceeding. If critical\n  // errors like web storage unsupported are detected, fail before RPC, instead\n  // of after.\n  return this.redirectStateIsReady_.then(function() {\n    return self.signInWithIdTokenProvider_(\n        self.getRpcHandler().verifyCustomToken(token));\n  }).then(function(result) {\n    var user = result['user'];\n    // Manually sets the isAnonymous flag to false as the GetAccountInfo\n    // response will look like an anonymous user (no credentials visible).\n    user.updateProperty('isAnonymous', false);\n    // Save isAnonymous flag changes to current user in storage.\n    self.handleUserStateChange_(user);\n    return result;\n  });\n};\n\n\n/**\n * Signs in a user asynchronously using a custom token and returns any\n * additional user info data or credentials returned form the backend. It has\n * been deprecated in favor of signInWithCustomToken.\n * @param {string} token The custom token to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInAndRetrieveDataWithCustomToken = function(token) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.SIGN_IN_WITH_CUSTOM_TOKEN);\n  return this.signInWithCustomToken(token);\n};\n\n\n/**\n * Sign in using an email and password and returns any additional user info\n * data or credentials returned form the backend. It has been deprecated in\n * favor of signInWithEmailAndPassword.\n * @param {string} email The email to sign in with.\n * @param {string} password The password to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInAndRetrieveDataWithEmailAndPassword =\n    function(email, password) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.SIGN_IN_WITH_EMAIL_AND_PASSWORD);\n  return this.signInWithEmailAndPassword(email, password);\n};\n\n\n/**\n * Sign in using an email and password and returns any additional user info\n * data or credentials returned form the backend.\n * @param {string} email The email to sign in with.\n * @param {string} password The password to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInWithEmailAndPassword =\n    function(email, password) {\n  var self = this;\n  // Wait for the redirect state to be determined before proceeding. If critical\n  // errors like web storage unsupported are detected, fail before RPC, instead\n  // of after.\n  return this.redirectStateIsReady_.then(function() {\n    return self.signInWithIdTokenProvider_(\n        self.getRpcHandler().verifyPassword(email, password));\n  });\n};\n\n\n/**\n * Creates a new email and password account and returns any additional user\n * info data or credentials returned form the backend.\n * @param {string} email The email to sign up with.\n * @param {string} password The password to sign up with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.createUserWithEmailAndPassword =\n    function(email, password) {\n  var self = this;\n  // Wait for the redirect state to be determined before proceeding. If critical\n  // errors like web storage unsupported are detected, fail before RPC, instead\n  // of after.\n  return this.redirectStateIsReady_.then(function() {\n    return self.signInWithIdTokenProvider_(\n        self.getRpcHandler().createAccount(email, password));\n  });\n};\n\n\n/**\n * Creates a new email and password account and returns any additional user\n * info data or credentials returned form the backend. It has been deprecated\n * in favor of createUserWithEmailAndPassword.\n * @param {string} email The email to sign up with.\n * @param {string} password The password to sign up with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.createUserAndRetrieveDataWithEmailAndPassword =\n    function(email, password) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.CREATE_USER_WITH_EMAIL_AND_PASSWORD);\n  return this.createUserWithEmailAndPassword(email, password);\n};\n\n\n/**\n * Logs into Firebase with the given 3rd party credentials. It has been\n * deprecated in favor of signInAndRetrieveDataWithCredential.\n * @param {!fireauth.AuthCredential} credential The auth credential.\n * @return {!goog.Promise<!fireauth.AuthUser>}\n */\nfireauth.Auth.prototype.signInWithCredential = function(credential) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.SIGN_IN_WITH_CREDENTIAL);\n  // Get signInAndRetrieveDataWithCredential result and return the user only.\n  return this.signInAndRetrieveDataWithCredential(credential)\n      .then(function(result) {\n        return result['user'];\n      });\n};\n\n\n/**\n * Logs into Firebase with the given 3rd party credentials and returns any\n * additional user info data or credentials returned form the backend.\n * @param {!fireauth.AuthCredential} credential The Auth credential.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInAndRetrieveDataWithCredential =\n    function(credential) {\n  // Credential could be extended in the future, so leave it to credential to\n  // decide how to retrieve ID token.\n  var self = this;\n  // Wait for the redirect state to be determined before proceeding. If critical\n  // errors like web storage unsupported are detected, fail before RPC, instead\n  // of after.\n  return this.redirectStateIsReady_.then(function() {\n    // Return the full response object and not just the user.\n    return self.signInWithIdTokenProvider_(\n        credential.getIdTokenProvider(self.getRpcHandler()));\n  });\n};\n\n\n/**\n * Signs in a user anonymously and returns any additional user info data or\n * credentials returned form the backend.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInAnonymously = function() {\n  var self = this;\n  // Wait for the redirect state to be determined before proceeding. If critical\n  // errors like web storage unsupported are detected, fail before RPC, instead\n  // of after.\n  return this.redirectStateIsReady_.then(function() {\n    var user = self.currentUser_();\n    // If an anonymous user is already signed in, no need to sign him again.\n    if (user && user['isAnonymous']) {\n      var additionalUserInfo = fireauth.object.makeReadonlyCopy({\n        'providerId': null,\n        'isNewUser': false\n      });\n      return fireauth.object.makeReadonlyCopy({\n        // Return the signed in user reference.\n        'user': user,\n        // Do not return credential for anonymous user.\n        'credential': null,\n        // Return any additional IdP data.\n        'additionalUserInfo': additionalUserInfo,\n        // Sign in operation type.\n        'operationType': fireauth.constants.OperationType.SIGN_IN\n      });\n    } else {\n      // No anonymous user currently signed in.\n      return self.signInWithIdTokenProvider_(\n          self.getRpcHandler().signInAnonymously())\n          .then(function(result) {\n            var user = result['user'];\n            // Manually sets the isAnonymous flag to true as\n            // initializeFromIdTokenResponse uses the default value of false and\n            // even though getAccountInfo sets that to true, it will be reverted\n            // to false in reloadWithoutSaving.\n            // TODO: consider optimizing this and cleaning these manual\n            // overwrites.\n            user.updateProperty('isAnonymous', true);\n            // Save isAnonymous flag changes to current user in storage.\n            self.handleUserStateChange_(user);\n            return result;\n          });\n    }\n  });\n};\n\n\n/**\n * Signs in a user anonymously and returns any additional user info data or\n * credentials returned form the backend. It has been deprecated in favor of\n * signInWithAnonymously.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInAnonymouslyAndRetrieveData = function() {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.SIGN_IN_ANONYMOUSLY);\n  return this.signInAnonymously();\n};\n\n\n/**\n * @return {string} The key used for storing Auth state.\n */\nfireauth.Auth.prototype.getStorageKey = function() {\n  return fireauth.util.createStorageKey(\n      this.app_().options['apiKey'],\n      this.app_().name);\n};\n\n\n/**\n * @return {!firebase.app.App} The Firebase App this auth object is connected\n *     to.\n * @private\n */\nfireauth.Auth.prototype.app_ = function() {\n  return this['app'];\n};\n\n\n/**\n * @return {!fireauth.RpcHandler} The RPC handler.\n */\nfireauth.Auth.prototype.getRpcHandler = function() {\n  return this.rpcHandler_;\n};\n\n\n/**\n * @return {?fireauth.AuthUser} The currently logged in user.\n * @private\n */\nfireauth.Auth.prototype.currentUser_ = function() {\n  return this['currentUser'];\n};\n\n\n/** @return {?string} The current user UID if available, null if not. */\nfireauth.Auth.prototype.getUid = function() {\n  return (this.currentUser_() && this.currentUser_()['uid']) || null;\n};\n\n\n/**\n * @return {?string} The last cached access token.\n * @private\n */\nfireauth.Auth.prototype.getLastAccessToken_ = function() {\n  return (this.currentUser_() && this.currentUser_()['_lat']) || null;\n};\n\n\n\n/**\n * Called internally on Auth state change to notify listeners.\n * @private\n */\nfireauth.Auth.prototype.notifyAuthListeners_ = function() {\n  // Only run when state is resolved. After state is resolved, the Auth listener\n  // will always trigger.\n  if (this.isStateResolved_) {\n    for (var i = 0; i < this.authListeners_.length; i++) {\n      if (this.authListeners_[i]) {\n        this.authListeners_[i](this.getLastAccessToken_());\n      }\n    }\n    // Trigger user change only if UID changed.\n    if (this.userStateChangeUid_ !== this.getUid() &&\n        this.userChangeListeners_.length) {\n      // Update user state change UID.\n      this.userStateChangeUid_ = this.getUid();\n      // Trigger all subscribed user state change listeners.\n      for (var i = 0; i < this.userChangeListeners_.length; i++) {\n        if (this.userChangeListeners_[i]) {\n          this.userChangeListeners_[i](this.getLastAccessToken_());\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Attaches a listener function to Auth state change.\n * This is used only by internal Firebase services.\n * @param {!function(?string)} listener The auth state change listener.\n */\nfireauth.Auth.prototype.addAuthTokenListenerInternal = function(listener) {\n  this.addAuthTokenListener(listener);\n  // This is not exact science but should be good enough to detect Firebase\n  // services subscribing to Auth token changes.\n  // This is needed to start proactive token refresh on a user.\n  this.firebaseServices_++;\n  if (this.firebaseServices_ > 0 && this.currentUser_()) {\n    // Start proactive token refresh on the current user.\n    this.currentUser_().startProactiveRefresh();\n  }\n};\n\n\n/**\n * Detaches the provided listener from Auth state change event.\n * This is used only by internal Firebase services.\n * @param {!function(?string)} listener The Auth state change listener.\n */\nfireauth.Auth.prototype.removeAuthTokenListenerInternal = function(listener) {\n  // This is unlikely to be called by Firebase services. Services are unlikely\n  // to remove Auth token listeners.\n  // Make sure listener is still subscribed before decrementing.\n  var self = this;\n  goog.array.forEach(this.authListeners_, function(ele) {\n    // This covers the case where the same listener is subscribed more than\n    // once.\n    if (ele == listener) {\n      self.firebaseServices_--;\n    }\n  });\n  if (this.firebaseServices_ < 0) {\n    this.firebaseServices_ = 0;\n  }\n  if (this.firebaseServices_ == 0 && this.currentUser_()) {\n    // Stop proactive token refresh on the current user.\n    this.currentUser_().stopProactiveRefresh();\n  }\n  this.removeAuthTokenListener(listener);\n};\n\n\n/**\n * Attaches a listener function to Auth state change.\n * @param {!function(?string)} listener The Auth state change listener.\n */\nfireauth.Auth.prototype.addAuthTokenListener = function(listener) {\n  var self = this;\n  // Save listener.\n  this.authListeners_.push(listener);\n  // Make sure redirect state is ready and then trigger listener.\n  this.registerPendingPromise_(this.redirectStateIsReady_.then(function() {\n    // Do nothing if deleted.\n    if (self.deleted_) {\n      return;\n    }\n    // Make sure listener is still subscribed.\n    if (goog.array.contains(self.authListeners_, listener)) {\n      // Trigger the first call for this now that redirect state is resolved.\n      listener(self.getLastAccessToken_());\n    }\n  }));\n};\n\n\n/**\n * Detaches the provided listener from Auth state change event.\n * @param {!function(?string)} listener The Auth state change listener.\n */\nfireauth.Auth.prototype.removeAuthTokenListener = function(listener) {\n  // Remove from Auth listeners.\n  goog.array.removeAllIf(this.authListeners_, function(ele) {\n    return ele == listener;\n  });\n};\n\n\n/**\n * Attaches a listener function to user state change.\n * @param {!function(?string)} listener The user state change listener.\n * @private\n */\nfireauth.Auth.prototype.addUserChangeListener_ = function(listener) {\n  var self = this;\n  // Save listener.\n  this.userChangeListeners_.push(listener);\n  // Make sure redirect state is ready and then trigger listener.\n  this.registerPendingPromise_(this.redirectStateIsReady_.then(function() {\n    // Do nothing if deleted.\n    if (self.deleted_) {\n      return;\n    }\n    // Make sure listener is still subscribed.\n    if (goog.array.contains(self.userChangeListeners_, listener)) {\n      // Confirm UID change before triggering.\n      if (self.userStateChangeUid_ !== self.getUid()) {\n        self.userStateChangeUid_ = self.getUid();\n        // Trigger the first call for this now that redirect state is resolved.\n        listener(self.getLastAccessToken_());\n      }\n    }\n  }));\n};\n\n\n/**\n * Deletes the Auth instance, handling cancellation of all pending async Auth\n * operations.\n * @return {!firebase.Promise<void>}\n */\nfireauth.Auth.prototype.delete = function() {\n  this.deleted_ = true;\n  // Cancel all pending promises.\n  for (var i = 0; i < this.pendingPromises_.length; i++) {\n    this.pendingPromises_[i].cancel(fireauth.authenum.Error.MODULE_DESTROYED);\n  }\n\n  // Empty pending promises array.\n  this.pendingPromises_ = [];\n  // Remove current user change listener.\n  if (this.userStorageManager_) {\n    this.userStorageManager_.removeCurrentUserChangeListener(\n        this.getSyncAuthUserChanges_);\n  }\n  // Unsubscribe from Auth event handling.\n  if (this.authEventManager_) {\n    this.authEventManager_.unsubscribe(this);\n    this.authEventManager_.clearRedirectResult();\n  }\n  return firebase.Promise.resolve();\n};\n\n\n/** @return {boolean} Whether Auth instance has pending promises. */\nfireauth.Auth.prototype.hasPendingPromises = function() {\n  return this.pendingPromises_.length != 0;\n};\n\n\n/**\n * Takes in a pending promise, saves it and adds a clean up callback which\n * forgets the pending promise after it is fulfilled and echoes the promise\n * back.\n * @param {!goog.Promise<*, *>|!goog.Promise<void>} p The pending promise.\n * @return {!goog.Promise<*, *>|!goog.Promise<void>}\n * @private\n */\nfireauth.Auth.prototype.registerPendingPromise_ = function(p) {\n  var self = this;\n  // Save created promise in pending list.\n  this.pendingPromises_.push(p);\n  p.thenAlways(function() {\n    // When fulfilled, remove from pending list.\n    goog.array.remove(self.pendingPromises_, p);\n  });\n  // Return the promise.\n  return p;\n};\n\n\n/**\n * Gets the list of IDPs that can be used to log in for the given email address.\n * It has been deprecated in favor of fetchSignInMethodsForEmail.\n * @param {string} email The email address.\n * @return {!goog.Promise<!Array<!fireauth.idp.ProviderId>>}\n */\nfireauth.Auth.prototype.fetchProvidersForEmail = function(email) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.FETCH_PROVIDERS_FOR_EMAIL);\n  return /** @type {!goog.Promise<!Array<!fireauth.idp.ProviderId>>} */ (\n      this.registerPendingPromise_(\n      this.getRpcHandler().fetchProvidersForIdentifier(email)\n      ));\n};\n\n\n/**\n * Gets the list of possible sign in methods for the given email address.\n * @param {string} email The email address.\n * @return {!goog.Promise<!Array<string>>}\n */\nfireauth.Auth.prototype.fetchSignInMethodsForEmail = function(email) {\n  return /** @type {!goog.Promise<!Array<string>>} */ (\n      this.registerPendingPromise_(\n          this.getRpcHandler().fetchSignInMethodsForIdentifier(email)));\n};\n\n\n/**\n * @param {string} emailLink The email link.\n * @return {boolean} Whether the link is a sign in with email link.\n */\nfireauth.Auth.prototype.isSignInWithEmailLink = function(emailLink) {\n  return  !!fireauth.EmailAuthProvider\n      .getActionCodeFromSignInEmailLink(emailLink);\n};\n\n\n/**\n * Sends the sign-in with email link for the email account provided.\n * @param {string} email The email account to sign in with.\n * @param {!Object} actionCodeSettings The action code settings object.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.sendSignInLinkToEmail = function(\n    email, actionCodeSettings) {\n  var self = this;\n  return this.registerPendingPromise_(\n      // Wrap in promise as ActionCodeSettings constructor could throw a\n      // synchronous error if invalid arguments are specified.\n      goog.Promise.resolve()\n          .then(function() {\n            var actionCodeSettingsBuilder =\n                new fireauth.ActionCodeSettings(actionCodeSettings);\n            if (!actionCodeSettingsBuilder.canHandleCodeInApp()) {\n              throw new fireauth.AuthError(\n                  fireauth.authenum.Error.ARGUMENT_ERROR,\n                  fireauth.ActionCodeSettings.RawField.HANDLE_CODE_IN_APP +\n                  ' must be true when sending sign in link to email');\n            }\n            return actionCodeSettingsBuilder.buildRequest();\n          }).then(function(additionalRequestData) {\n            return self.getRpcHandler().sendSignInLinkToEmail(\n                email, additionalRequestData);\n          }).then(function(email) {\n            // Do not return the email.\n          }));\n};\n\n\n/**\n * Verifies an email action code for password reset and returns a promise\n * that resolves with the associated email if verified.\n * @param {string} code The email action code to verify for password reset.\n * @return {!goog.Promise<string>}\n */\nfireauth.Auth.prototype.verifyPasswordResetCode = function(code) {\n  return this.checkActionCode(code).then(function(info) {\n    return info['data']['email'];\n  });\n};\n\n\n/**\n * Requests resetPassword endpoint for password reset, verifies the action code\n * and updates the new password, returns an empty promise.\n * @param {string} code The email action code to confirm for password reset.\n * @param {string} newPassword The new password.\n * @return {!goog.Promise<undefined, !fireauth.AuthError>}\n */\nfireauth.Auth.prototype.confirmPasswordReset = function(code, newPassword) {\n  return this.registerPendingPromise_(\n      this.getRpcHandler().confirmPasswordReset(code, newPassword)\n      .then(function(email) {\n        // Do not return the email.\n      }));\n};\n\n\n/**\n * Verifies an email action code and returns an empty promise if verified.\n * @param {string} code The email action code to verify for password reset.\n * @return {!goog.Promise<!Object>}\n */\nfireauth.Auth.prototype.checkActionCode = function(code) {\n  return this.registerPendingPromise_(\n      this.getRpcHandler().checkActionCode(code)\n      .then(function(response) {\n        return new fireauth.ActionCodeInfo(response);\n      }));\n};\n\n\n/**\n * Applies an out-of-band email action code, such as an email verification code.\n * @param {string} code The email action code.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.applyActionCode = function(code) {\n  return this.registerPendingPromise_(\n      this.getRpcHandler().applyActionCode(code)\n      .then(function(email) {\n        // Returns nothing.\n      }));\n};\n\n\n/**\n * Sends the password reset email for the email account provided.\n * @param {string} email The email account with the password to be reset.\n * @param {?Object=} opt_actionCodeSettings The optional action code settings\n *     object.\n * @return {!goog.Promise<void>}\n */\nfireauth.Auth.prototype.sendPasswordResetEmail =\n    function(email, opt_actionCodeSettings) {\n  var self = this;\n  return this.registerPendingPromise_(\n      // Wrap in promise as ActionCodeSettings constructor could throw a\n      // synchronous error if invalid arguments are specified.\n      goog.Promise.resolve().then(function() {\n        if (typeof opt_actionCodeSettings !== 'undefined' &&\n            // Ignore empty objects.\n            !goog.object.isEmpty(opt_actionCodeSettings)) {\n          return new fireauth.ActionCodeSettings(\n              /** @type {!Object} */ (opt_actionCodeSettings)).buildRequest();\n        }\n        return {};\n      })\n      .then(function(additionalRequestData) {\n        return self.getRpcHandler().sendPasswordResetEmail(\n            email, additionalRequestData);\n      }).then(function(email) {\n        // Do not return the email.\n      }));\n};\n\n\n/**\n * Signs in with a phone number using the app verifier instance and returns a\n * promise that resolves with the confirmation result which on confirmation\n * will resolve with the UserCredential object.\n * @param {string} phoneNumber The phone number to authenticate with.\n * @param {!firebase.auth.ApplicationVerifier} appVerifier The application\n *     verifier.\n * @return {!goog.Promise<!fireauth.ConfirmationResult>}\n */\nfireauth.Auth.prototype.signInWithPhoneNumber =\n    function(phoneNumber, appVerifier) {\n  return /** @type {!goog.Promise<!fireauth.ConfirmationResult>} */ (\n      this.registerPendingPromise_(fireauth.ConfirmationResult.initialize(\n          this,\n          phoneNumber,\n          appVerifier,\n          // This will wait for redirectStateIsReady to resolve first.\n          goog.bind(this.signInAndRetrieveDataWithCredential, this))));\n};\n\n\n/**\n * Signs in a Firebase User with the provided email and the passwordless\n * sign-in email link.\n * @param {string} email The email account to sign in with.\n * @param {?string=} opt_link The optional link which contains the OTP needed\n *     to complete the sign in with email link. If not specified, the current\n *     URL is used instead.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.Auth.prototype.signInWithEmailLink = function(email, opt_link) {\n  var self = this;\n  return this.registerPendingPromise_(\n      goog.Promise.resolve().then(function() {\n        var credential = fireauth.EmailAuthProvider.credentialWithLink(\n            email, opt_link || fireauth.util.getCurrentUrl());\n        return self.signInAndRetrieveDataWithCredential(credential);\n      }));\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Auth event object.\n */\n\ngoog.provide('fireauth.AuthEvent');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\n\n\n/**\n * Defines the authentication event.\n * @param {!fireauth.AuthEvent.Type} type The Auth event type.\n * @param {?string=} opt_eventId The event identifier.\n * @param {?string=} opt_urlResponse The URL with IdP response.\n * @param {?string=} opt_sessionId The session ID used to prevent session\n *     fixation attacks.\n * @param {?fireauth.AuthError=} opt_error The optional error encountered.\n * @param {?string=} opt_postBody The optional POST body.\n * @constructor\n */\nfireauth.AuthEvent = function(\n    type, opt_eventId, opt_urlResponse, opt_sessionId, opt_error,\n    opt_postBody) {\n  /** @const @private {!fireauth.AuthEvent.Type} The Auth event type. */\n  this.type_ = type;\n  /** @const @private {?string} The Auth event ID. */\n  this.eventId_ = opt_eventId || null;\n  /** @const @private {?string} The callback URL with the sign in response. */\n  this.urlResponse_ = opt_urlResponse || null;\n  /** @const @private {?string} The sign in operation session ID. */\n  this.sessionId_ = opt_sessionId || null;\n  /** @const @private {?string} The POST body string if available. */\n  this.postBody_ = opt_postBody || null;\n  /**\n   * @const @private {?fireauth.AuthError} The Auth event error if available.\n   */\n  this.error_ = opt_error || null;\n  if (!this.urlResponse_ && !this.error_) {\n    // Either URL or error is required. They can't be both null.\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT);\n  } else if (this.urlResponse_ && this.error_) {\n    // An error must not be provided when a URL is available.\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT);\n  } else if (this.urlResponse_ && !this.sessionId_) {\n    // A session ID must accompany a URL response.\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT);\n  }\n};\n\n\n\n/**\n * Auth event operation types.\n * All Auth event types that are used for popup operations should be suffixed\n * with `Popup`, whereas those used for redirect operations should be suffixed\n * with `Redirect`.\n * TODO: consider changing the type from a string to an object with ID\n * and some metadata for determining mode: redirect, popup or none.\n * @enum {string}\n */\nfireauth.AuthEvent.Type = {\n  LINK_VIA_POPUP: 'linkViaPopup',\n  LINK_VIA_REDIRECT: 'linkViaRedirect',\n  REAUTH_VIA_POPUP: 'reauthViaPopup',\n  REAUTH_VIA_REDIRECT: 'reauthViaRedirect',\n  SIGN_IN_VIA_POPUP: 'signInViaPopup',\n  SIGN_IN_VIA_REDIRECT: 'signInViaRedirect',\n  UNKNOWN: 'unknown',\n  VERIFY_APP: 'verifyApp'\n};\n\n\n/**\n * @param {!fireauth.AuthEvent} event The Auth event.\n * @return {boolean} Whether the event is a redirect type.\n */\nfireauth.AuthEvent.isRedirect = function(event) {\n  return !!event.getType().match(/Redirect$/);\n};\n\n\n/**\n * @param {!fireauth.AuthEvent} event The Auth event.\n * @return {boolean} Whether the event is a popup type.\n */\nfireauth.AuthEvent.isPopup = function(event) {\n  return !!event.getType().match(/Popup$/);\n};\n\n\n/** @return {!fireauth.AuthEvent.Type} The type of Auth event. */\nfireauth.AuthEvent.prototype.getType = function() {\n  return this.type_;\n};\n\n\n/** @return {?string} The Auth event identifier. */\nfireauth.AuthEvent.prototype.getEventId = function() {\n  return this.eventId_;\n};\n\n\n/** @return {?string} The url response of Auth event. */\nfireauth.AuthEvent.prototype.getUrlResponse = function() {\n  return this.urlResponse_;\n};\n\n\n/** @return {?string} The session ID Auth event. */\nfireauth.AuthEvent.prototype.getSessionId = function() {\n  return this.sessionId_;\n};\n\n\n/** @return {?string} The POST body of the Auth event, if available. */\nfireauth.AuthEvent.prototype.getPostBody = function() {\n  return this.postBody_;\n};\n\n\n/** @return {?fireauth.AuthError} The error of Auth event. */\nfireauth.AuthEvent.prototype.getError = function() {\n  return this.error_;\n};\n\n\n/** @return {boolean} Whether Auth event has an error. */\nfireauth.AuthEvent.prototype.hasError = function() {\n  return !!this.error_;\n};\n\n\n/** @return {!Object} The plain object representation of event. */\nfireauth.AuthEvent.prototype.toPlainObject = function() {\n  return {\n    'type': this.type_,\n    'eventId': this.eventId_,\n    'urlResponse': this.urlResponse_,\n    'sessionId': this.sessionId_,\n    'postBody': this.postBody_,\n    'error': this.error_ && this.error_.toPlainObject()\n  };\n};\n\n\n/**\n * @param {?Object} rawResponse The plain object representation of Auth event.\n * @return {?fireauth.AuthEvent} The Auth event representation of plain object.\n */\nfireauth.AuthEvent.fromPlainObject = function(rawResponse) {\n  var response = rawResponse || {};\n  if (response['type']) {\n    return new fireauth.AuthEvent(\n        response['type'],\n        response['eventId'],\n        response['urlResponse'],\n        response['sessionId'],\n        response['error'] &&\n            fireauth.AuthError.fromPlainObject(response['error']),\n        response['postBody']\n        );\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides the universal link subscriber utility to allow\n * multiple subscriptions for incoming universal link detection.\n */\ngoog.provide('fireauth.UniversalLinkSubscriber');\n\ngoog.require('fireauth.util');\ngoog.require('goog.array');\n\n/**\n * Defines the universal link subscriber class used to allow multiple universal\n * link subscriptions since the underlying plugin only works with one.\n * This utility is needed since the universal link cordova plugin can only allow\n * one subscriber and multiple app instances can subscribe to this.\n * @constructor @final @struct\n */\nfireauth.UniversalLinkSubscriber = function() {\n  /**\n   * @private {?function(?Object)} The master callback that subscribes directly\n   *     to universalLinks.\n   */\n  this.masterCb_ = null;\n  /**\n   * @private {!Array<function(?Object)>} The list of external subscribers that\n   *     are triggered every time the master callback is triggered.\n   */\n  this.cb_ = [];\n};\n\n\n/**\n * @return {!fireauth.UniversalLinkSubscriber} The default universal link\n *     subscriber instance.\n */\nfireauth.UniversalLinkSubscriber.getInstance = function() {\n  if (!fireauth.UniversalLinkSubscriber.instance_) {\n    fireauth.UniversalLinkSubscriber.instance_ =\n        new fireauth.UniversalLinkSubscriber();\n  }\n  return fireauth.UniversalLinkSubscriber.instance_;\n};\n\n\n/** Clears singleton instance. Useful for testing. */\nfireauth.UniversalLinkSubscriber.clear = function() {\n  fireauth.UniversalLinkSubscriber.instance_ = null;\n};\n\n\n/**\n * @private {?fireauth.UniversalLinkSubscriber} The singleton universal\n *     link subscriber instance.\n */\nfireauth.UniversalLinkSubscriber.instance_ = null;\n\n\n/**\n * Subscribes a callback to the universal link plugin listener.\n * @param {function(?Object)} cb The callback to subscribe to the universal\n *     link plugin.\n */\nfireauth.UniversalLinkSubscriber.prototype.subscribe  = function(cb) {\n  var self = this;\n  this.cb_.push(cb);\n  if (!this.masterCb_) {\n    this.masterCb_ = function(event) {\n      for (var i = 0; i < self.cb_.length; i++) {\n        self.cb_[i](event);\n      }\n    };\n    var subscribe = fireauth.util.getObjectRef(\n        'universalLinks.subscribe', goog.global);\n    // For iOS environments, this plugin is not used, therefore this is a no-op\n    // and no error needs to be thrown.\n    if (typeof subscribe === 'function') {\n      subscribe(null, this.masterCb_);\n    }\n  }\n};\n\n\n/**\n * Unsubscribes a callback from the universal link plugin listener.\n * @param {function(?Object)} cb The callback to unsubscribe from the universal\n *     link plugin.\n */\nfireauth.UniversalLinkSubscriber.prototype.unsubscribe = function(cb) {\n  goog.array.removeAllIf(this.cb_, function(ele) {\n    return ele == cb;\n  });\n};\n\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the invalid origin error, a subclass of\n * fireauth.AuthError.\n */\n\n\ngoog.provide('fireauth.InvalidOriginError');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('goog.Uri');\ngoog.require('goog.string');\n\n\n\n/**\n * Invalid origin error that can be returned to the developer.\n * @param {string} origin The invalid domain name.\n * @constructor\n * @extends {fireauth.AuthError}\n */\nfireauth.InvalidOriginError = function(origin) {\n  var code = fireauth.authenum.Error.INVALID_ORIGIN;\n  var message = undefined;\n  var uri = goog.Uri.parse(origin);\n  // Get domain.\n  var domain = uri.getDomain();\n  // Get scheme.\n  var scheme = uri.getScheme();\n  // Only http, https and chrome-extension currently supported.\n  if (scheme == 'chrome-extension') {\n    // Chrome extension whitelisting.\n    // Replace chrome-extension://CHROME_EXT_ID in error message template.\n    message = goog.string.subs(\n        fireauth.InvalidOriginError.CHROME_EXTENSION_MESSAGE_TEMPLATE_,\n        domain);\n  } else if (scheme == 'http' || scheme == 'https') {\n    // Replace domain in error message template.\n    message = goog.string.subs(\n        fireauth.InvalidOriginError.HTTP_MESSAGE_TEMPLATE_,\n        domain);\n  } else {\n    // Throw operation not supported when non http, https or Chrome extension\n    // protocol.\n    code = fireauth.authenum.Error.OPERATION_NOT_SUPPORTED;\n  }\n  fireauth.InvalidOriginError.base(this, 'constructor', code, message);\n};\ngoog.inherits(fireauth.InvalidOriginError, fireauth.AuthError);\n\n\n/** @private @const {string} The http invalid origin message template. */\nfireauth.InvalidOriginError.HTTP_MESSAGE_TEMPLATE_ = 'This domain (%s) is no' +\n    't authorized to run this operation. Add it to the OAuth redirect domain' +\n    's list in the Firebase console -> Auth section -> Sign in method tab.';\n\n\n/**\n * @private @const {string} The Chrome extension invalid origin message\n *     template.\n */\nfireauth.InvalidOriginError.CHROME_EXTENSION_MESSAGE_TEMPLATE_ = 'This chrom' +\n    'e extension ID (chrome-extension://%s) is not authorized to run this op' +\n    'eration. Add it to the OAuth redirect domains list in the Firebase cons' +\n    'ole -> Auth section -> Sign in method tab.';\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Auth errors that include emails and an Auth\n * credential, a subclass of fireauth.AuthError.\n */\n\n\ngoog.provide('fireauth.AuthErrorWithCredential');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthProvider');\ngoog.require('fireauth.object');\ngoog.require('goog.object');\n\n\n/**\n * Error with email and credential that can be returned to the developer.\n * @param {fireauth.authenum.Error} code The error code.\n * @param {?fireauth.AuthErrorWithCredential.CredentialInfo=} opt_credentialInfo\n *     Additional credential information to associate with the error.\n * @param {string=} opt_message The human-readable message.\n * @constructor\n * @extends {fireauth.AuthError}\n */\nfireauth.AuthErrorWithCredential =\n    function(code, opt_credentialInfo, opt_message) {\n  fireauth.AuthErrorWithCredential.base(\n      this, 'constructor', code, opt_message);\n  var credentialInfo = opt_credentialInfo || {};\n\n  // These properties are public.\n  if (credentialInfo.email) {\n    fireauth.object.setReadonlyProperty(this, 'email', credentialInfo.email);\n  }\n  if (credentialInfo.phoneNumber) {\n    fireauth.object.setReadonlyProperty(this, 'phoneNumber',\n        credentialInfo.phoneNumber);\n  }\n  if (credentialInfo.credential) {\n    fireauth.object.setReadonlyProperty(this, 'credential',\n        credentialInfo.credential);\n  }\n};\ngoog.inherits(fireauth.AuthErrorWithCredential, fireauth.AuthError);\n\n\n/**\n * Additional credential information to associate with an error, so that the\n * user does not have to execute the Auth flow again on linking errors.\n * @typedef {{\n *   email: (?string|undefined),\n *   phoneNumber: (?string|undefined),\n *   credential: (?fireauth.AuthCredential|undefined),\n * }}\n */\nfireauth.AuthErrorWithCredential.CredentialInfo;\n\n\n/**\n * @return {!Object} The plain object form of the error.\n * @override\n */\nfireauth.AuthErrorWithCredential.prototype.toPlainObject = function() {\n  var obj = {\n    'code': this['code'],\n    'message': this.message\n  };\n  if (this['email']) {\n    obj['email'] = this['email'];\n  }\n  if (this['phoneNumber']) {\n    obj['phoneNumber'] = this['phoneNumber'];\n  }\n\n  var credential = this['credential'] && this['credential'].toPlainObject();\n  if (credential){\n    goog.object.extend(obj, credential);\n  }\n  return obj;\n};\n\n\n/**\n * @return {!Object} The plain object form of the error. This is used by\n *     JSON.toStringify() to return the stringified representation of the error;\n * @override\n */\nfireauth.AuthErrorWithCredential.prototype.toJSON = function() {\n  // Return the plain object representation in case JSON.stringify is called on\n  // an Auth error instance.\n  return this.toPlainObject();\n};\n\n\n/**\n * @param {?Object|undefined} response The object response to convert to a\n *     fireauth.AuthErrorWithCredential.\n * @return {?fireauth.AuthError} The error representation of the response.\n * @override\n */\nfireauth.AuthErrorWithCredential.fromPlainObject = function(response) {\n  // Code included.\n  if (response['code']) {\n    var code = response['code'] || '';\n    // Remove prefix from name if available.\n    if (code.indexOf(fireauth.AuthError.ERROR_CODE_PREFIX) == 0) {\n      code = code.substring(fireauth.AuthError.ERROR_CODE_PREFIX.length);\n    }\n\n    // Credentials in response.\n    var credentialInfo = {\n      credential: fireauth.AuthProvider.getCredentialFromResponse(response)\n    };\n    if (response['email']) {\n      credentialInfo.email = response['email'];\n    } else if (response['phoneNumber']) {\n      credentialInfo.phoneNumber = response['phoneNumber'];\n    } else if (!credentialInfo.credential) {\n      // Neither email, phone number or credentials are set; return a generic\n      // error.\n      return new fireauth.AuthError(code, response['message'] || undefined);\n    }\n\n    return new fireauth.AuthErrorWithCredential(code, credentialInfo,\n        response['message']);\n  }\n  // No error or invalid response.\n  return null;\n};\n","// Copyright 2010 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Interface for a factory for creating XMLHttpRequest objects\n * and metadata about them.\n * @author dbk@google.com (David Barrett-Kahn)\n */\n\ngoog.provide('goog.net.XmlHttpFactory');\n\n/** @suppress {extraRequire} Typedef. */\ngoog.require('goog.net.XhrLike');\n\n\n\n/**\n * Abstract base class for an XmlHttpRequest factory.\n * @constructor\n */\ngoog.net.XmlHttpFactory = function() {};\n\n\n/**\n * Cache of options - we only actually call internalGetOptions once.\n * @type {Object}\n * @private\n */\ngoog.net.XmlHttpFactory.prototype.cachedOptions_ = null;\n\n\n/**\n * @return {!goog.net.XhrLike.OrNative} A new XhrLike instance.\n */\ngoog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;\n\n\n/**\n * @return {Object} Options describing how xhr objects obtained from this\n *     factory should be used.\n */\ngoog.net.XmlHttpFactory.prototype.getOptions = function() {\n  return this.cachedOptions_ ||\n      (this.cachedOptions_ = this.internalGetOptions());\n};\n\n\n/**\n * Override this method in subclasses to preserve the caching offered by\n * getOptions().\n * @return {Object} Options describing how xhr objects obtained from this\n *     factory should be used.\n * @protected\n */\ngoog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Low level handling of XMLHttpRequest.\n * @author arv@google.com (Erik Arvidsson)\n * @author dbk@google.com (David Barrett-Kahn)\n */\n\ngoog.provide('goog.net.DefaultXmlHttpFactory');\ngoog.provide('goog.net.XmlHttp');\ngoog.provide('goog.net.XmlHttp.OptionType');\ngoog.provide('goog.net.XmlHttp.ReadyState');\ngoog.provide('goog.net.XmlHttpDefines');\n\ngoog.require('goog.asserts');\ngoog.require('goog.net.WrapperXmlHttpFactory');\ngoog.require('goog.net.XmlHttpFactory');\n\n\n/**\n * Static class for creating XMLHttpRequest objects.\n * @return {!goog.net.XhrLike.OrNative} A new XMLHttpRequest object.\n */\ngoog.net.XmlHttp = function() {\n  return goog.net.XmlHttp.factory_.createInstance();\n};\n\n\n/**\n * @define {boolean} Whether to assume XMLHttpRequest exists. Setting this to\n *     true bypasses the ActiveX probing code.\n * NOTE(ruilopes): Due to the way JSCompiler works, this define *will not* strip\n * out the ActiveX probing code from binaries.  To achieve this, use\n * `goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR` instead.\n * TODO(ruilopes): Collapse both defines.\n */\ngoog.define('goog.net.XmlHttp.ASSUME_NATIVE_XHR', false);\n\n\n/** @const */\ngoog.net.XmlHttpDefines = {};\n\n\n/**\n * @define {boolean} Whether to assume XMLHttpRequest exists. Setting this to\n *     true eliminates the ActiveX probing code.\n */\ngoog.define('goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR', false);\n\n\n/**\n * Gets the options to use with the XMLHttpRequest objects obtained using\n * the static methods.\n * @return {Object} The options.\n */\ngoog.net.XmlHttp.getOptions = function() {\n  return goog.net.XmlHttp.factory_.getOptions();\n};\n\n\n/**\n * Type of options that an XmlHttp object can have.\n * @enum {number}\n */\ngoog.net.XmlHttp.OptionType = {\n  /**\n   * Whether a goog.nullFunction should be used to clear the onreadystatechange\n   * handler instead of null.\n   */\n  USE_NULL_FUNCTION: 0,\n\n  /**\n   * NOTE(user): In IE if send() errors on a *local* request the readystate\n   * is still changed to COMPLETE.  We need to ignore it and allow the\n   * try/catch around send() to pick up the error.\n   */\n  LOCAL_REQUEST_ERROR: 1\n};\n\n\n/**\n * Status constants for XMLHTTP, matches:\n * https://msdn.microsoft.com/en-us/library/ms534361(v=vs.85).aspx\n * @enum {number}\n */\ngoog.net.XmlHttp.ReadyState = {\n  /**\n   * Constant for when xmlhttprequest.readyState is uninitialized\n   */\n  UNINITIALIZED: 0,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is loading.\n   */\n  LOADING: 1,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is loaded.\n   */\n  LOADED: 2,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is in an interactive state.\n   */\n  INTERACTIVE: 3,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is completed\n   */\n  COMPLETE: 4\n};\n\n\n/**\n * The global factory instance for creating XMLHttpRequest objects.\n * @type {goog.net.XmlHttpFactory}\n * @private\n */\ngoog.net.XmlHttp.factory_;\n\n\n/**\n * Sets the factories for creating XMLHttpRequest objects and their options.\n * @param {Function} factory The factory for XMLHttpRequest objects.\n * @param {Function} optionsFactory The factory for options.\n * @deprecated Use setGlobalFactory instead.\n */\ngoog.net.XmlHttp.setFactory = function(factory, optionsFactory) {\n  goog.net.XmlHttp.setGlobalFactory(\n      new goog.net.WrapperXmlHttpFactory(\n          goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));\n};\n\n\n/**\n * Sets the global factory object.\n * @param {!goog.net.XmlHttpFactory} factory New global factory object.\n */\ngoog.net.XmlHttp.setGlobalFactory = function(factory) {\n  goog.net.XmlHttp.factory_ = factory;\n};\n\n\n\n/**\n * Default factory to use when creating xhr objects.  You probably shouldn't be\n * instantiating this directly, but rather using it via goog.net.XmlHttp.\n * @extends {goog.net.XmlHttpFactory}\n * @constructor\n */\ngoog.net.DefaultXmlHttpFactory = function() {\n  goog.net.XmlHttpFactory.call(this);\n};\ngoog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);\n\n\n/** @override */\ngoog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {\n  var progId = this.getProgId_();\n  if (progId) {\n    return new ActiveXObject(progId);\n  } else {\n    return new XMLHttpRequest();\n  }\n};\n\n\n/** @override */\ngoog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {\n  var progId = this.getProgId_();\n  var options = {};\n  if (progId) {\n    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;\n    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;\n  }\n  return options;\n};\n\n\n/**\n * The ActiveX PROG ID string to use to create xhr's in IE. Lazily initialized.\n * @type {string|undefined}\n * @private\n */\ngoog.net.DefaultXmlHttpFactory.prototype.ieProgId_;\n\n\n/**\n * Initialize the private state used by other functions.\n * @return {string} The ActiveX PROG ID string to use to create xhr's in IE.\n * @private\n */\ngoog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {\n  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR ||\n      goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {\n    return '';\n  }\n\n  // The following blog post describes what PROG IDs to use to create the\n  // XMLHTTP object in Internet Explorer:\n  // http://blogs.msdn.com/xmlteam/archive/2006/10/23/using-the-right-version-of-msxml-in-internet-explorer.aspx\n  // However we do not (yet) fully trust that this will be OK for old versions\n  // of IE on Win9x so we therefore keep the last 2.\n  if (!this.ieProgId_ && typeof XMLHttpRequest == 'undefined' &&\n      typeof ActiveXObject != 'undefined') {\n    // Candidate Active X types.\n    var ACTIVE_X_IDENTS = [\n      'MSXML2.XMLHTTP.6.0', 'MSXML2.XMLHTTP.3.0', 'MSXML2.XMLHTTP',\n      'Microsoft.XMLHTTP'\n    ];\n    for (var i = 0; i < ACTIVE_X_IDENTS.length; i++) {\n      var candidate = ACTIVE_X_IDENTS[i];\n\n      try {\n        new ActiveXObject(candidate);\n        // NOTE(user): cannot assign progid and return candidate in one line\n        // because JSCompiler complaings: BUG 658126\n        this.ieProgId_ = candidate;\n        return candidate;\n      } catch (e) {\n        // do nothing; try next choice\n      }\n    }\n\n    // couldn't find any matches\n    throw new Error(\n        'Could not create ActiveXObject. ActiveX might be disabled,' +\n        ' or MSXML might not be installed');\n  }\n\n  return /** @type {string} */ (this.ieProgId_);\n};\n\n\n// Set the global factory to an instance of the default factory.\ngoog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory());\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview This file contain classes that add support for cross-domain XHR\n * requests (see http://www.w3.org/TR/cors/). Most modern browsers are able to\n * use a regular XMLHttpRequest for that, but IE 8 use XDomainRequest object\n * instead. This file provides an adapter from this object to a goog.net.XhrLike\n * and a factory to allow using this with a goog.net.XhrIo instance.\n *\n * IE 7 and older versions are not supported (given that they do not support\n * CORS requests).\n */\ngoog.provide('goog.net.CorsXmlHttpFactory');\ngoog.provide('goog.net.IeCorsXhrAdapter');\n\ngoog.require('goog.net.HttpStatus');\ngoog.require('goog.net.XhrLike');\ngoog.require('goog.net.XmlHttp');\ngoog.require('goog.net.XmlHttpFactory');\n\n\n\n/**\n * A factory of XML http request objects that supports cross domain requests.\n * This class should be instantiated and passed as the parameter of a\n * goog.net.XhrIo constructor to allow cross-domain requests in every browser.\n *\n * @extends {goog.net.XmlHttpFactory}\n * @constructor\n * @final\n */\ngoog.net.CorsXmlHttpFactory = function() {\n  goog.net.XmlHttpFactory.call(this);\n};\ngoog.inherits(goog.net.CorsXmlHttpFactory, goog.net.XmlHttpFactory);\n\n\n/** @override */\ngoog.net.CorsXmlHttpFactory.prototype.createInstance = function() {\n  var xhr = new XMLHttpRequest();\n  if (('withCredentials' in xhr)) {\n    return xhr;\n  } else if (typeof XDomainRequest != 'undefined') {\n    return new goog.net.IeCorsXhrAdapter();\n  } else {\n    throw new Error('Unsupported browser');\n  }\n};\n\n\n/** @override */\ngoog.net.CorsXmlHttpFactory.prototype.internalGetOptions = function() {\n  return {};\n};\n\n\n\n/**\n * An adapter around Internet Explorer's XDomainRequest object that makes it\n * look like a standard XMLHttpRequest. This can be used instead of\n * XMLHttpRequest to support CORS.\n *\n * @implements {goog.net.XhrLike}\n * @constructor\n * @struct\n * @final\n */\ngoog.net.IeCorsXhrAdapter = function() {\n  /**\n   * The underlying XDomainRequest used to make the HTTP request.\n   * @type {!XDomainRequest}\n   * @private\n   */\n  this.xdr_ = new XDomainRequest();\n\n  /**\n   * The simulated ready state.\n   * @type {number}\n   */\n  this.readyState = goog.net.XmlHttp.ReadyState.UNINITIALIZED;\n\n  /**\n   * The simulated ready state change callback function.\n   * @type {Function}\n   */\n  this.onreadystatechange = null;\n\n  /**\n   * The simulated response text parameter.\n   * @type {string}\n   */\n  this.responseText = '';\n\n  /**\n   * The simulated status code\n   * @type {number}\n   */\n  this.status = -1;\n\n  /** @override */\n  this.responseXML = null;\n\n  /** @override */\n  this.statusText = '';\n\n  this.xdr_.onload = goog.bind(this.handleLoad_, this);\n  this.xdr_.onerror = goog.bind(this.handleError_, this);\n  this.xdr_.onprogress = goog.bind(this.handleProgress_, this);\n  this.xdr_.ontimeout = goog.bind(this.handleTimeout_, this);\n};\n\n\n/**\n * Opens a connection to the provided URL.\n * @param {string} method The HTTP method to use. Valid methods include GET and\n *     POST.\n * @param {string} url The URL to contact. The authority of this URL must match\n *     the authority of the current page's URL (e.g. http or https).\n * @param {?boolean=} opt_async Whether the request is asynchronous, defaulting\n *     to true. XDomainRequest does not support syncronous requests, so setting\n *     it to false will actually raise an exception.\n * @override\n */\ngoog.net.IeCorsXhrAdapter.prototype.open = function(method, url, opt_async) {\n  if (goog.isDefAndNotNull(opt_async) && (!opt_async)) {\n    throw new Error('Only async requests are supported.');\n  }\n  this.xdr_.open(method, url);\n};\n\n\n/**\n * Sends the request to the remote server. Before calling this function, always\n * call {@link open}.\n * @param {(ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string)=}\n *     opt_content The content to send as POSTDATA, if any. Only string data is\n *     supported by this implementation.\n * @override\n */\ngoog.net.IeCorsXhrAdapter.prototype.send = function(opt_content) {\n  if (opt_content) {\n    if (typeof opt_content == 'string') {\n      this.xdr_.send(opt_content);\n    } else {\n      throw new Error('Only string data is supported');\n    }\n  } else {\n    this.xdr_.send();\n  }\n};\n\n\n/**\n * @override\n */\ngoog.net.IeCorsXhrAdapter.prototype.abort = function() {\n  this.xdr_.abort();\n};\n\n\n/**\n * Sets a request header to send to the remote server. Because this\n * implementation does not support request headers, this function does nothing.\n * @param {string} key The name of the HTTP header to set. Ignored.\n * @param {string} value The value to set for the HTTP header. Ignored.\n * @override\n */\ngoog.net.IeCorsXhrAdapter.prototype.setRequestHeader = function(key, value) {\n  // Unsupported; ignore the header.\n};\n\n\n/**\n * Returns the value of the response header identified by key. This\n * implementation only supports the 'content-type' header.\n * @param {string} key The request header to fetch. If this parameter is set to\n *     'content-type' (case-insensitive), this function returns the value of\n *     the 'content-type' request header. If this parameter is set to any other\n *     value, this function always returns an empty string.\n * @return {string} The value of the response header, or an empty string if key\n *     is not 'content-type' (case-insensitive).\n * @override\n */\ngoog.net.IeCorsXhrAdapter.prototype.getResponseHeader = function(key) {\n  if (key.toLowerCase() == 'content-type') {\n    return this.xdr_.contentType;\n  }\n  return '';\n};\n\n\n/**\n * Handles a request that has fully loaded successfully.\n * @private\n */\ngoog.net.IeCorsXhrAdapter.prototype.handleLoad_ = function() {\n  // IE only calls onload if the status is 200, so the status code must be OK.\n  this.status = goog.net.HttpStatus.OK;\n  this.responseText = this.xdr_.responseText;\n  this.setReadyState_(goog.net.XmlHttp.ReadyState.COMPLETE);\n};\n\n\n/**\n * Handles a request that has failed to load.\n * @private\n */\ngoog.net.IeCorsXhrAdapter.prototype.handleError_ = function() {\n  // IE doesn't tell us what the status code actually is (other than the fact\n  // that it is not 200), so simulate an INTERNAL_SERVER_ERROR.\n  this.status = goog.net.HttpStatus.INTERNAL_SERVER_ERROR;\n  this.responseText = '';\n  this.setReadyState_(goog.net.XmlHttp.ReadyState.COMPLETE);\n};\n\n\n/**\n * Handles a request that timed out.\n * @private\n */\ngoog.net.IeCorsXhrAdapter.prototype.handleTimeout_ = function() {\n  this.handleError_();\n};\n\n\n/**\n * Handles a request that is in the process of loading.\n * @private\n */\ngoog.net.IeCorsXhrAdapter.prototype.handleProgress_ = function() {\n  // IE only calls onprogress if the status is 200, so the status code must be\n  // OK.\n  this.status = goog.net.HttpStatus.OK;\n  this.setReadyState_(goog.net.XmlHttp.ReadyState.LOADING);\n};\n\n\n/**\n * Sets this XHR's ready state and fires the onreadystatechange listener (if one\n * is set).\n * @param {number} readyState The new ready state.\n * @private\n */\ngoog.net.IeCorsXhrAdapter.prototype.setReadyState_ = function(readyState) {\n  this.readyState = readyState;\n  if (this.onreadystatechange) {\n    this.onreadystatechange();\n  }\n};\n\n\n/**\n * Returns the response headers from the server. This implemntation only returns\n * the 'content-type' header.\n * @return {string} The headers returned from the server.\n * @override\n */\ngoog.net.IeCorsXhrAdapter.prototype.getAllResponseHeaders = function() {\n  return 'content-type: ' + this.xdr_.contentType;\n};\n","// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Constants for HTTP status codes.\n */\n\ngoog.provide('goog.net.HttpStatus');\n\n\n/**\n * HTTP Status Codes defined in RFC 2616 and RFC 6585.\n * @see http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n * @see http://tools.ietf.org/html/rfc6585\n * @enum {number}\n */\ngoog.net.HttpStatus = {\n  // Informational 1xx\n  CONTINUE: 100,\n  SWITCHING_PROTOCOLS: 101,\n\n  // Successful 2xx\n  OK: 200,\n  CREATED: 201,\n  ACCEPTED: 202,\n  NON_AUTHORITATIVE_INFORMATION: 203,\n  NO_CONTENT: 204,\n  RESET_CONTENT: 205,\n  PARTIAL_CONTENT: 206,\n\n  // Redirection 3xx\n  MULTIPLE_CHOICES: 300,\n  MOVED_PERMANENTLY: 301,\n  FOUND: 302,\n  SEE_OTHER: 303,\n  NOT_MODIFIED: 304,\n  USE_PROXY: 305,\n  TEMPORARY_REDIRECT: 307,\n\n  // Client Error 4xx\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  PAYMENT_REQUIRED: 402,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  METHOD_NOT_ALLOWED: 405,\n  NOT_ACCEPTABLE: 406,\n  PROXY_AUTHENTICATION_REQUIRED: 407,\n  REQUEST_TIMEOUT: 408,\n  CONFLICT: 409,\n  GONE: 410,\n  LENGTH_REQUIRED: 411,\n  PRECONDITION_FAILED: 412,\n  REQUEST_ENTITY_TOO_LARGE: 413,\n  REQUEST_URI_TOO_LONG: 414,\n  UNSUPPORTED_MEDIA_TYPE: 415,\n  REQUEST_RANGE_NOT_SATISFIABLE: 416,\n  EXPECTATION_FAILED: 417,\n  PRECONDITION_REQUIRED: 428,\n  TOO_MANY_REQUESTS: 429,\n  REQUEST_HEADER_FIELDS_TOO_LARGE: 431,\n\n  // Server Error 5xx\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_IMPLEMENTED: 501,\n  BAD_GATEWAY: 502,\n  SERVICE_UNAVAILABLE: 503,\n  GATEWAY_TIMEOUT: 504,\n  HTTP_VERSION_NOT_SUPPORTED: 505,\n  NETWORK_AUTHENTICATION_REQUIRED: 511,\n\n  /*\n   * IE returns this code for 204 due to its use of URLMon, which returns this\n   * code for 'Operation Aborted'. The status text is 'Unknown', the response\n   * headers are ''. Known to occur on IE 6 on XP through IE9 on Win7.\n   */\n  QUIRK_IE_NO_CONTENT: 1223\n};\n\n\n/**\n * Returns whether the given status should be considered successful.\n *\n * Successful codes are OK (200), CREATED (201), ACCEPTED (202),\n * NO CONTENT (204), PARTIAL CONTENT (206), NOT MODIFIED (304),\n * and IE's no content code (1223).\n *\n * @param {number} status The status code to test.\n * @return {boolean} Whether the status code should be considered successful.\n */\ngoog.net.HttpStatus.isSuccess = function(status) {\n  switch (status) {\n    case goog.net.HttpStatus.OK:\n    case goog.net.HttpStatus.CREATED:\n    case goog.net.HttpStatus.ACCEPTED:\n    case goog.net.HttpStatus.NO_CONTENT:\n    case goog.net.HttpStatus.PARTIAL_CONTENT:\n    case goog.net.HttpStatus.NOT_MODIFIED:\n    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:\n      return true;\n\n    default:\n      return false;\n  }\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Definition of the LogRecord class. Please minimize\n * dependencies this file has on other closure classes as any dependency it\n * takes won't be able to use the logging infrastructure.\n *\n */\n\ngoog.provide('goog.debug.LogRecord');\n\n\n\n/**\n * LogRecord objects are used to pass logging requests between\n * the logging framework and individual log Handlers.\n * @constructor\n * @param {goog.debug.Logger.Level} level One of the level identifiers.\n * @param {string} msg The string message.\n * @param {string} loggerName The name of the source logger.\n * @param {number=} opt_time Time this log record was created if other than now.\n *     If 0, we use #goog.now.\n * @param {number=} opt_sequenceNumber Sequence number of this log record. This\n *     should only be passed in when restoring a log record from persistence.\n */\ngoog.debug.LogRecord = function(\n    level, msg, loggerName, opt_time, opt_sequenceNumber) {\n  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);\n};\n\n\n/**\n * Time the LogRecord was created.\n * @type {number}\n * @private\n */\ngoog.debug.LogRecord.prototype.time_;\n\n\n/**\n * Level of the LogRecord\n * @type {goog.debug.Logger.Level}\n * @private\n */\ngoog.debug.LogRecord.prototype.level_;\n\n\n/**\n * Message associated with the record\n * @type {string}\n * @private\n */\ngoog.debug.LogRecord.prototype.msg_;\n\n\n/**\n * Name of the logger that created the record.\n * @type {string}\n * @private\n */\ngoog.debug.LogRecord.prototype.loggerName_;\n\n\n/**\n * Sequence number for the LogRecord. Each record has a unique sequence number\n * that is greater than all log records created before it.\n * @type {number}\n * @private\n */\ngoog.debug.LogRecord.prototype.sequenceNumber_ = 0;\n\n\n/**\n * Exception associated with the record\n * @type {Object}\n * @private\n */\ngoog.debug.LogRecord.prototype.exception_ = null;\n\n\n/**\n * @define {boolean} Whether to enable log sequence numbers.\n */\ngoog.define('goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS', true);\n\n\n/**\n * A sequence counter for assigning increasing sequence numbers to LogRecord\n * objects.\n * @type {number}\n * @private\n */\ngoog.debug.LogRecord.nextSequenceNumber_ = 0;\n\n\n/**\n * Sets all fields of the log record.\n * @param {goog.debug.Logger.Level} level One of the level identifiers.\n * @param {string} msg The string message.\n * @param {string} loggerName The name of the source logger.\n * @param {number=} opt_time Time this log record was created if other than now.\n *     If 0, we use #goog.now.\n * @param {number=} opt_sequenceNumber Sequence number of this log record. This\n *     should only be passed in when restoring a log record from persistence.\n */\ngoog.debug.LogRecord.prototype.reset = function(\n    level, msg, loggerName, opt_time, opt_sequenceNumber) {\n  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {\n    this.sequenceNumber_ = typeof opt_sequenceNumber == 'number' ?\n        opt_sequenceNumber :\n        goog.debug.LogRecord.nextSequenceNumber_++;\n  }\n\n  this.time_ = opt_time || goog.now();\n  this.level_ = level;\n  this.msg_ = msg;\n  this.loggerName_ = loggerName;\n  delete this.exception_;\n};\n\n\n/**\n * Get the source Logger's name.\n *\n * @return {string} source logger name (may be null).\n */\ngoog.debug.LogRecord.prototype.getLoggerName = function() {\n  return this.loggerName_;\n};\n\n\n/**\n * Get the exception that is part of the log record.\n *\n * @return {Object} the exception.\n */\ngoog.debug.LogRecord.prototype.getException = function() {\n  return this.exception_;\n};\n\n\n/**\n * Set the exception that is part of the log record.\n *\n * @param {Object} exception the exception.\n */\ngoog.debug.LogRecord.prototype.setException = function(exception) {\n  this.exception_ = exception;\n};\n\n\n/**\n * Get the source Logger's name.\n *\n * @param {string} loggerName source logger name (may be null).\n */\ngoog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {\n  this.loggerName_ = loggerName;\n};\n\n\n/**\n * Get the logging message level, for example Level.SEVERE.\n * @return {goog.debug.Logger.Level} the logging message level.\n */\ngoog.debug.LogRecord.prototype.getLevel = function() {\n  return this.level_;\n};\n\n\n/**\n * Set the logging message level, for example Level.SEVERE.\n * @param {goog.debug.Logger.Level} level the logging message level.\n */\ngoog.debug.LogRecord.prototype.setLevel = function(level) {\n  this.level_ = level;\n};\n\n\n/**\n * Get the \"raw\" log message, before localization or formatting.\n *\n * @return {string} the raw message string.\n */\ngoog.debug.LogRecord.prototype.getMessage = function() {\n  return this.msg_;\n};\n\n\n/**\n * Set the \"raw\" log message, before localization or formatting.\n *\n * @param {string} msg the raw message string.\n */\ngoog.debug.LogRecord.prototype.setMessage = function(msg) {\n  this.msg_ = msg;\n};\n\n\n/**\n * Get event time in milliseconds since 1970.\n *\n * @return {number} event time in millis since 1970.\n */\ngoog.debug.LogRecord.prototype.getMillis = function() {\n  return this.time_;\n};\n\n\n/**\n * Set event time in milliseconds since 1970.\n *\n * @param {number} time event time in millis since 1970.\n */\ngoog.debug.LogRecord.prototype.setMillis = function(time) {\n  this.time_ = time;\n};\n\n\n/**\n * Get the sequence number.\n * <p>\n * Sequence numbers are normally assigned in the LogRecord\n * constructor, which assigns unique sequence numbers to\n * each new LogRecord in increasing order.\n * @return {number} the sequence number.\n */\ngoog.debug.LogRecord.prototype.getSequenceNumber = function() {\n  return this.sequenceNumber_;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Definition of the Logger class. Please minimize dependencies\n * this file has on other closure classes as any dependency it takes won't be\n * able to use the logging infrastructure.\n *\n * @see ../demos/debug.html\n */\n\ngoog.provide('goog.debug.LogManager');\ngoog.provide('goog.debug.Loggable');\ngoog.provide('goog.debug.Logger');\ngoog.provide('goog.debug.Logger.Level');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.debug');\ngoog.require('goog.debug.LogBuffer');\ngoog.require('goog.debug.LogRecord');\n\n\n/**\n * A message value that can be handled by a Logger.\n *\n * Functions are treated like callbacks, but are only called when the event's\n * log level is enabled. This is useful for logging messages that are expensive\n * to construct.\n *\n * @typedef {string|function(): string}\n */\ngoog.debug.Loggable;\n\n\n\n/**\n * The Logger is an object used for logging debug messages. Loggers are\n * normally named, using a hierarchical dot-separated namespace. Logger names\n * can be arbitrary strings, but they should normally be based on the package\n * name or class name of the logged component, such as goog.net.BrowserChannel.\n *\n * The Logger object is loosely based on the java class\n * java.util.logging.Logger. It supports different levels of filtering for\n * different loggers.\n *\n * The logger object should never be instantiated by application code. It\n * should always use the goog.debug.Logger.getLogger function.\n *\n * @constructor\n * @param {string} name The name of the Logger.\n * @final\n */\ngoog.debug.Logger = function(name) {\n  /**\n   * Name of the Logger. Generally a dot-separated namespace\n   * @private {string}\n   */\n  this.name_ = name;\n\n  /**\n   * Parent Logger.\n   * @private {goog.debug.Logger}\n   */\n  this.parent_ = null;\n\n  /**\n   * Level that this logger only filters above. Null indicates it should\n   * inherit from the parent.\n   * @private {goog.debug.Logger.Level}\n   */\n  this.level_ = null;\n\n  /**\n   * Map of children loggers. The keys are the leaf names of the children and\n   * the values are the child loggers.\n   * @private {Object}\n   */\n  this.children_ = null;\n\n  /**\n   * Handlers that are listening to this logger.\n   * @private {Array<Function>}\n   */\n  this.handlers_ = null;\n};\n\n\n/** @const */\ngoog.debug.Logger.ROOT_LOGGER_NAME = '';\n\n\n/**\n * @define {boolean} Toggles whether loggers other than the root logger can have\n *     log handlers attached to them and whether they can have their log level\n *     set. Logging is a bit faster when this is set to false.\n */\ngoog.define('goog.debug.Logger.ENABLE_HIERARCHY', true);\n\n\n/**\n * @define {boolean} Toggles whether active log statements are also recorded\n *     to the profiler.\n */\ngoog.define('goog.debug.Logger.ENABLE_PROFILER_LOGGING', false);\n\n\nif (!goog.debug.Logger.ENABLE_HIERARCHY) {\n  /**\n   * @type {!Array<Function>}\n   * @private\n   */\n  goog.debug.Logger.rootHandlers_ = [];\n\n\n  /**\n   * @type {goog.debug.Logger.Level}\n   * @private\n   */\n  goog.debug.Logger.rootLevel_;\n}\n\n\n\n/**\n * The Level class defines a set of standard logging levels that\n * can be used to control logging output.  The logging Level objects\n * are ordered and are specified by ordered integers.  Enabling logging\n * at a given level also enables logging at all higher levels.\n * <p>\n * Clients should normally use the predefined Level constants such\n * as Level.SEVERE.\n * <p>\n * The levels in descending order are:\n * <ul>\n * <li>SEVERE (highest value)\n * <li>WARNING\n * <li>INFO\n * <li>CONFIG\n * <li>FINE\n * <li>FINER\n * <li>FINEST  (lowest value)\n * </ul>\n * In addition there is a level OFF that can be used to turn\n * off logging, and a level ALL that can be used to enable\n * logging of all messages.\n *\n * @param {string} name The name of the level.\n * @param {number} value The numeric value of the level.\n * @constructor\n * @final\n */\ngoog.debug.Logger.Level = function(name, value) {\n  /**\n   * The name of the level\n   * @type {string}\n   */\n  this.name = name;\n\n  /**\n   * The numeric value of the level\n   * @type {number}\n   */\n  this.value = value;\n};\n\n\n/**\n * @return {string} String representation of the logger level.\n * @override\n */\ngoog.debug.Logger.Level.prototype.toString = function() {\n  return this.name;\n};\n\n\n/**\n * OFF is a special level that can be used to turn off logging.\n * This level is initialized to <CODE>Infinity</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.OFF = new goog.debug.Logger.Level('OFF', Infinity);\n\n\n/**\n * SHOUT is a message level for extra debugging loudness.\n * This level is initialized to <CODE>1200</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level('SHOUT', 1200);\n\n\n/**\n * SEVERE is a message level indicating a serious failure.\n * This level is initialized to <CODE>1000</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level('SEVERE', 1000);\n\n\n/**\n * WARNING is a message level indicating a potential problem.\n * This level is initialized to <CODE>900</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level('WARNING', 900);\n\n\n/**\n * INFO is a message level for informational messages.\n * This level is initialized to <CODE>800</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.INFO = new goog.debug.Logger.Level('INFO', 800);\n\n\n/**\n * CONFIG is a message level for static configuration messages.\n * This level is initialized to <CODE>700</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level('CONFIG', 700);\n\n\n/**\n * FINE is a message level providing tracing information.\n * This level is initialized to <CODE>500</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.FINE = new goog.debug.Logger.Level('FINE', 500);\n\n\n/**\n * FINER indicates a fairly detailed tracing message.\n * This level is initialized to <CODE>400</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.FINER = new goog.debug.Logger.Level('FINER', 400);\n\n/**\n * FINEST indicates a highly detailed tracing message.\n * This level is initialized to <CODE>300</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\n\ngoog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level('FINEST', 300);\n\n\n/**\n * ALL indicates that all messages should be logged.\n * This level is initialized to <CODE>0</CODE>.\n * @type {!goog.debug.Logger.Level}\n */\ngoog.debug.Logger.Level.ALL = new goog.debug.Logger.Level('ALL', 0);\n\n\n/**\n * The predefined levels.\n * @type {!Array<!goog.debug.Logger.Level>}\n * @final\n */\ngoog.debug.Logger.Level.PREDEFINED_LEVELS = [\n  goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT,\n  goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING,\n  goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG,\n  goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER,\n  goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL\n];\n\n\n/**\n * A lookup map used to find the level object based on the name or value of\n * the level object.\n * @type {Object}\n * @private\n */\ngoog.debug.Logger.Level.predefinedLevelsCache_ = null;\n\n\n/**\n * Creates the predefined levels cache and populates it.\n * @private\n */\ngoog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {\n  goog.debug.Logger.Level.predefinedLevelsCache_ = {};\n  for (var i = 0, level; level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];\n       i++) {\n    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;\n    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;\n  }\n};\n\n\n/**\n * Gets the predefined level with the given name.\n * @param {string} name The name of the level.\n * @return {goog.debug.Logger.Level} The level, or null if none found.\n */\ngoog.debug.Logger.Level.getPredefinedLevel = function(name) {\n  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {\n    goog.debug.Logger.Level.createPredefinedLevelsCache_();\n  }\n\n  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;\n};\n\n\n/**\n * Gets the highest predefined level <= #value.\n * @param {number} value Level value.\n * @return {goog.debug.Logger.Level} The level, or null if none found.\n */\ngoog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {\n  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {\n    goog.debug.Logger.Level.createPredefinedLevelsCache_();\n  }\n\n  if (value in /** @type {!Object} */ (\n          goog.debug.Logger.Level.predefinedLevelsCache_)) {\n    return goog.debug.Logger.Level.predefinedLevelsCache_[value];\n  }\n\n  for (var i = 0; i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length; ++i) {\n    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];\n    if (level.value <= value) {\n      return level;\n    }\n  }\n  return null;\n};\n\n\n/**\n * Finds or creates a logger for a named subsystem. If a logger has already been\n * created with the given name it is returned. Otherwise a new logger is\n * created. If a new logger is created its log level will be configured based\n * on the LogManager configuration and it will configured to also send logging\n * output to its parent's handlers. It will be registered in the LogManager\n * global namespace.\n *\n * @param {string} name A name for the logger. This should be a dot-separated\n * name and should normally be based on the package name or class name of the\n * subsystem, such as goog.net.BrowserChannel.\n * @return {!goog.debug.Logger} The named logger.\n * @deprecated use {@link goog.log} instead.\n */\ngoog.debug.Logger.getLogger = function(name) {\n  return goog.debug.LogManager.getLogger(name);\n};\n\n\n/**\n * Logs a message to profiling tools, if available.\n * {@see https://developers.google.com/web-toolkit/speedtracer/logging-api}\n * {@see http://msdn.microsoft.com/en-us/library/dd433074(VS.85).aspx}\n * @param {string} msg The message to log.\n */\ngoog.debug.Logger.logToProfilers = function(msg) {\n  // Some browsers also log timeStamp calls to the console, only log\n  // if actually asked.\n  if (goog.debug.Logger.ENABLE_PROFILER_LOGGING) {\n    var msWriteProfilerMark = goog.global['msWriteProfilerMark'];\n    if (msWriteProfilerMark) {\n      // Logs a message to the Microsoft profiler\n      // On IE, console['timeStamp'] may output to console\n      msWriteProfilerMark(msg);\n      return;\n    }\n\n    // Using goog.global, as loggers might be used in window-less contexts.\n    var console = goog.global['console'];\n    if (console && console['timeStamp']) {\n      // Logs a message to Firebug, Web Inspector, SpeedTracer, etc.\n      console['timeStamp'](msg);\n    }\n  }\n};\n\n\n/**\n * Gets the name of this logger.\n * @return {string} The name of this logger.\n */\ngoog.debug.Logger.prototype.getName = function() {\n  return this.name_;\n};\n\n\n/**\n * Adds a handler to the logger. This doesn't use the event system because\n * we want to be able to add logging to the event system.\n * @param {Function} handler Handler function to add.\n */\ngoog.debug.Logger.prototype.addHandler = function(handler) {\n  if (goog.debug.LOGGING_ENABLED) {\n    if (goog.debug.Logger.ENABLE_HIERARCHY) {\n      if (!this.handlers_) {\n        this.handlers_ = [];\n      }\n      this.handlers_.push(handler);\n    } else {\n      goog.asserts.assert(\n          !this.name_, 'Cannot call addHandler on a non-root logger when ' +\n              'goog.debug.Logger.ENABLE_HIERARCHY is false.');\n      goog.debug.Logger.rootHandlers_.push(handler);\n    }\n  }\n};\n\n\n/**\n * Removes a handler from the logger. This doesn't use the event system because\n * we want to be able to add logging to the event system.\n * @param {Function} handler Handler function to remove.\n * @return {boolean} Whether the handler was removed.\n */\ngoog.debug.Logger.prototype.removeHandler = function(handler) {\n  if (goog.debug.LOGGING_ENABLED) {\n    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ?\n        this.handlers_ :\n        goog.debug.Logger.rootHandlers_;\n    return !!handlers && goog.array.remove(handlers, handler);\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * Returns the parent of this logger.\n * @return {goog.debug.Logger} The parent logger or null if this is the root.\n */\ngoog.debug.Logger.prototype.getParent = function() {\n  return this.parent_;\n};\n\n\n/**\n * Returns the children of this logger as a map of the child name to the logger.\n * @return {!Object} The map where the keys are the child leaf names and the\n *     values are the Logger objects.\n */\ngoog.debug.Logger.prototype.getChildren = function() {\n  if (!this.children_) {\n    this.children_ = {};\n  }\n  return this.children_;\n};\n\n\n/**\n * Set the log level specifying which message levels will be logged by this\n * logger. Message levels lower than this value will be discarded.\n * The level value Level.OFF can be used to turn off logging. If the new level\n * is null, it means that this node should inherit its level from its nearest\n * ancestor with a specific (non-null) level value.\n *\n * @param {goog.debug.Logger.Level} level The new level.\n */\ngoog.debug.Logger.prototype.setLevel = function(level) {\n  if (goog.debug.LOGGING_ENABLED) {\n    if (goog.debug.Logger.ENABLE_HIERARCHY) {\n      this.level_ = level;\n    } else {\n      goog.asserts.assert(\n          !this.name_, 'Cannot call setLevel() on a non-root logger when ' +\n              'goog.debug.Logger.ENABLE_HIERARCHY is false.');\n      goog.debug.Logger.rootLevel_ = level;\n    }\n  }\n};\n\n\n/**\n * Gets the log level specifying which message levels will be logged by this\n * logger. Message levels lower than this value will be discarded.\n * The level value Level.OFF can be used to turn off logging. If the level\n * is null, it means that this node should inherit its level from its nearest\n * ancestor with a specific (non-null) level value.\n *\n * @return {goog.debug.Logger.Level} The level.\n */\ngoog.debug.Logger.prototype.getLevel = function() {\n  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;\n};\n\n\n/**\n * Returns the effective level of the logger based on its ancestors' levels.\n * @return {goog.debug.Logger.Level} The level.\n */\ngoog.debug.Logger.prototype.getEffectiveLevel = function() {\n  if (!goog.debug.LOGGING_ENABLED) {\n    return goog.debug.Logger.Level.OFF;\n  }\n\n  if (!goog.debug.Logger.ENABLE_HIERARCHY) {\n    return goog.debug.Logger.rootLevel_;\n  }\n  if (this.level_) {\n    return this.level_;\n  }\n  if (this.parent_) {\n    return this.parent_.getEffectiveLevel();\n  }\n  goog.asserts.fail('Root logger has no level set.');\n  return null;\n};\n\n\n/**\n * Checks if a message of the given level would actually be logged by this\n * logger. This check is based on the Loggers effective level, which may be\n * inherited from its parent.\n * @param {goog.debug.Logger.Level} level The level to check.\n * @return {boolean} Whether the message would be logged.\n */\ngoog.debug.Logger.prototype.isLoggable = function(level) {\n  return goog.debug.LOGGING_ENABLED &&\n      level.value >= this.getEffectiveLevel().value;\n};\n\n\n/**\n * Logs a message. If the logger is currently enabled for the\n * given message level then the given message is forwarded to all the\n * registered output Handler objects.\n * @param {goog.debug.Logger.Level} level One of the level identifiers.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error|Object=} opt_exception An exception associated with the\n *     message.\n */\ngoog.debug.Logger.prototype.log = function(level, msg, opt_exception) {\n  // java caches the effective level, not sure it's necessary here\n  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {\n    // Message callbacks can be useful when a log message is expensive to build.\n    if (goog.isFunction(msg)) {\n      msg = msg();\n    }\n\n    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));\n  }\n};\n\n\n/**\n * Creates a new log record and adds the exception (if present) to it.\n * @param {goog.debug.Logger.Level} level One of the level identifiers.\n * @param {string} msg The string message.\n * @param {Error|Object=} opt_exception An exception associated with the\n *     message.\n * @return {!goog.debug.LogRecord} A log record.\n * @suppress {es5Strict}\n */\ngoog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {\n  if (goog.debug.LogBuffer.isBufferingEnabled()) {\n    var logRecord =\n        goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_);\n  } else {\n    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);\n  }\n  if (opt_exception) {\n    logRecord.setException(opt_exception);\n  }\n  return logRecord;\n};\n\n\n/**\n * Logs a message at the Logger.Level.SHOUT level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.shout = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.SEVERE level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.severe = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.WARNING level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.warning = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.INFO level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.info = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.CONFIG level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.config = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.FINE level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.fine = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.FINER level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.finer = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Logger.Level.FINEST level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.debug.Logger.prototype.finest = function(msg, opt_exception) {\n  if (goog.debug.LOGGING_ENABLED) {\n    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a LogRecord. If the logger is currently enabled for the\n * given message level then the given message is forwarded to all the\n * registered output Handler objects.\n * @param {goog.debug.LogRecord} logRecord A log record to log.\n */\ngoog.debug.Logger.prototype.logRecord = function(logRecord) {\n  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {\n    this.doLogRecord_(logRecord);\n  }\n};\n\n\n/**\n * Logs a LogRecord.\n * @param {goog.debug.LogRecord} logRecord A log record to log.\n * @private\n */\ngoog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {\n  if (goog.debug.Logger.ENABLE_PROFILER_LOGGING) {\n    goog.debug.Logger.logToProfilers('log:' + logRecord.getMessage());\n  }\n  if (goog.debug.Logger.ENABLE_HIERARCHY) {\n    var target = this;\n    while (target) {\n      target.callPublish_(logRecord);\n      target = target.getParent();\n    }\n  } else {\n    for (var i = 0, handler; handler = goog.debug.Logger.rootHandlers_[i++];) {\n      handler(logRecord);\n    }\n  }\n};\n\n\n/**\n * Calls the handlers for publish.\n * @param {goog.debug.LogRecord} logRecord The log record to publish.\n * @private\n */\ngoog.debug.Logger.prototype.callPublish_ = function(logRecord) {\n  if (this.handlers_) {\n    for (var i = 0, handler; handler = this.handlers_[i]; i++) {\n      handler(logRecord);\n    }\n  }\n};\n\n\n/**\n * Sets the parent of this logger. This is used for setting up the logger tree.\n * @param {goog.debug.Logger} parent The parent logger.\n * @private\n */\ngoog.debug.Logger.prototype.setParent_ = function(parent) {\n  this.parent_ = parent;\n};\n\n\n/**\n * Adds a child to this logger. This is used for setting up the logger tree.\n * @param {string} name The leaf name of the child.\n * @param {goog.debug.Logger} logger The child logger.\n * @private\n */\ngoog.debug.Logger.prototype.addChild_ = function(name, logger) {\n  this.getChildren()[name] = logger;\n};\n\n\n/**\n * There is a single global LogManager object that is used to maintain a set of\n * shared state about Loggers and log services. This is loosely based on the\n * java class java.util.logging.LogManager.\n * @const\n */\ngoog.debug.LogManager = {};\n\n\n/**\n * Map of logger names to logger objects.\n *\n * @type {!Object<string, !goog.debug.Logger>}\n * @private\n */\ngoog.debug.LogManager.loggers_ = {};\n\n\n/**\n * The root logger which is the root of the logger tree.\n * @type {goog.debug.Logger}\n * @private\n */\ngoog.debug.LogManager.rootLogger_ = null;\n\n\n/**\n * Initializes the LogManager if not already initialized.\n */\ngoog.debug.LogManager.initialize = function() {\n  if (!goog.debug.LogManager.rootLogger_) {\n    goog.debug.LogManager.rootLogger_ =\n        new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);\n    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] =\n        goog.debug.LogManager.rootLogger_;\n    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);\n  }\n};\n\n\n/**\n * Returns all the loggers.\n * @return {!Object<string, !goog.debug.Logger>} Map of logger names to logger\n *     objects.\n */\ngoog.debug.LogManager.getLoggers = function() {\n  return goog.debug.LogManager.loggers_;\n};\n\n\n/**\n * Returns the root of the logger tree namespace, the logger with the empty\n * string as its name.\n *\n * @return {!goog.debug.Logger} The root logger.\n */\ngoog.debug.LogManager.getRoot = function() {\n  goog.debug.LogManager.initialize();\n  return /** @type {!goog.debug.Logger} */ (goog.debug.LogManager.rootLogger_);\n};\n\n\n/**\n * Finds a named logger.\n *\n * @param {string} name A name for the logger. This should be a dot-separated\n * name and should normally be based on the package name or class name of the\n * subsystem, such as goog.net.BrowserChannel.\n * @return {!goog.debug.Logger} The named logger.\n */\ngoog.debug.LogManager.getLogger = function(name) {\n  goog.debug.LogManager.initialize();\n  var ret = goog.debug.LogManager.loggers_[name];\n  return ret || goog.debug.LogManager.createLogger_(name);\n};\n\n\n/**\n * Creates a function that can be passed to goog.debug.catchErrors. The function\n * will log all reported errors using the given logger.\n * @param {goog.debug.Logger=} opt_logger The logger to log the errors to.\n *     Defaults to the root logger.\n * @return {function(Object)} The created function.\n */\ngoog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {\n  return function(info) {\n    var logger = opt_logger || goog.debug.LogManager.getRoot();\n    logger.severe(\n        'Error: ' + info.message + ' (' + info.fileName + ' @ Line: ' +\n        info.line + ')');\n  };\n};\n\n\n/**\n * Creates the named logger. Will also create the parents of the named logger\n * if they don't yet exist.\n * @param {string} name The name of the logger.\n * @return {!goog.debug.Logger} The named logger.\n * @private\n */\ngoog.debug.LogManager.createLogger_ = function(name) {\n  // find parent logger\n  var logger = new goog.debug.Logger(name);\n  if (goog.debug.Logger.ENABLE_HIERARCHY) {\n    var lastDotIndex = name.lastIndexOf('.');\n    var parentName = name.substr(0, lastDotIndex);\n    var leafName = name.substr(lastDotIndex + 1);\n    var parentLogger = goog.debug.LogManager.getLogger(parentName);\n\n    // tell the parent about the child and the child about the parent\n    parentLogger.addChild_(leafName, logger);\n    logger.setParent_(parentLogger);\n  }\n\n  goog.debug.LogManager.loggers_[name] = logger;\n  return logger;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Basic strippable logging definitions.\n * @see http://go/closurelogging\n *\n * @author johnlenz@google.com (John Lenz)\n */\n\ngoog.provide('goog.log');\ngoog.provide('goog.log.Level');\ngoog.provide('goog.log.LogRecord');\ngoog.provide('goog.log.Logger');\n\ngoog.require('goog.debug');\ngoog.require('goog.debug.LogManager');\ngoog.require('goog.debug.LogRecord');\ngoog.require('goog.debug.Logger');\n\n\n/** @define {boolean} Whether logging is enabled. */\ngoog.define('goog.log.ENABLED', goog.debug.LOGGING_ENABLED);\n\n\n/** @const {string} */\ngoog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;\n\n\n\n/**\n * @constructor\n * @final\n */\ngoog.log.Logger = goog.debug.Logger;\n\n\n\n/**\n * @constructor\n * @final\n */\ngoog.log.Level = goog.debug.Logger.Level;\n\n\n\n/**\n * @constructor\n * @final\n */\ngoog.log.LogRecord = goog.debug.LogRecord;\n\n\n/**\n * Finds or creates a logger for a named subsystem. If a logger has already been\n * created with the given name it is returned. Otherwise a new logger is\n * created. If a new logger is created its log level will be configured based\n * on the goog.debug.LogManager configuration and it will configured to also\n * send logging output to its parent's handlers.\n * @see goog.debug.LogManager\n *\n * @param {string} name A name for the logger. This should be a dot-separated\n *     name and should normally be based on the package name or class name of\n *     the subsystem, such as goog.net.BrowserChannel.\n * @param {goog.log.Level=} opt_level If provided, override the\n *     default logging level with the provided level.\n * @return {goog.log.Logger} The named logger or null if logging is disabled.\n */\ngoog.log.getLogger = function(name, opt_level) {\n  if (goog.log.ENABLED) {\n    var logger = goog.debug.LogManager.getLogger(name);\n    if (opt_level && logger) {\n      logger.setLevel(opt_level);\n    }\n    return logger;\n  } else {\n    return null;\n  }\n};\n\n\n// TODO(johnlenz): try to tighten the types to these functions.\n/**\n * Adds a handler to the logger. This doesn't use the event system because\n * we want to be able to add logging to the event system.\n * @param {goog.log.Logger} logger\n * @param {Function} handler Handler function to add.\n */\ngoog.log.addHandler = function(logger, handler) {\n  if (goog.log.ENABLED && logger) {\n    logger.addHandler(handler);\n  }\n};\n\n\n/**\n * Removes a handler from the logger. This doesn't use the event system because\n * we want to be able to add logging to the event system.\n * @param {goog.log.Logger} logger\n * @param {Function} handler Handler function to remove.\n * @return {boolean} Whether the handler was removed.\n */\ngoog.log.removeHandler = function(logger, handler) {\n  if (goog.log.ENABLED && logger) {\n    return logger.removeHandler(handler);\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * Logs a message. If the logger is currently enabled for the\n * given message level then the given message is forwarded to all the\n * registered output Handler objects.\n * @param {goog.log.Logger} logger\n * @param {goog.log.Level} level One of the level identifiers.\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error|Object=} opt_exception An exception associated with the\n *     message.\n */\ngoog.log.log = function(logger, level, msg, opt_exception) {\n  if (goog.log.ENABLED && logger) {\n    logger.log(level, msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Level.SEVERE level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.log.Logger} logger\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.log.error = function(logger, msg, opt_exception) {\n  if (goog.log.ENABLED && logger) {\n    logger.severe(msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Level.WARNING level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.log.Logger} logger\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.log.warning = function(logger, msg, opt_exception) {\n  if (goog.log.ENABLED && logger) {\n    logger.warning(msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Level.INFO level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.log.Logger} logger\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.log.info = function(logger, msg, opt_exception) {\n  if (goog.log.ENABLED && logger) {\n    logger.info(msg, opt_exception);\n  }\n};\n\n\n/**\n * Logs a message at the Level.Fine level.\n * If the logger is currently enabled for the given message level then the\n * given message is forwarded to all the registered output Handler objects.\n * @param {goog.log.Logger} logger\n * @param {goog.debug.Loggable} msg The message to log.\n * @param {Error=} opt_exception An exception associated with the message.\n */\ngoog.log.fine = function(logger, msg, opt_exception) {\n  if (goog.log.ENABLED && logger) {\n    logger.fine(msg, opt_exception);\n  }\n};\n","// Copyright 2015 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('goog.net.FetchXmlHttp');\ngoog.provide('goog.net.FetchXmlHttpFactory');\n\ngoog.require('goog.asserts');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.functions');\ngoog.require('goog.log');\ngoog.require('goog.net.XhrLike');\ngoog.require('goog.net.XmlHttpFactory');\n\n\n\n/**\n * Factory for creating Xhr objects that uses the native fetch() method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n * Note that this factory is intended for use in Service Worker only.\n * @param {!WorkerGlobalScope} worker The Service Worker global scope.\n * @extends {goog.net.XmlHttpFactory}\n * @struct\n * @constructor\n */\ngoog.net.FetchXmlHttpFactory = function(worker) {\n  goog.net.FetchXmlHttpFactory.base(this, 'constructor');\n\n  /** @private @final {!WorkerGlobalScope} */\n  this.worker_ = worker;\n\n  /** @private {!RequestCredentials|undefined} */\n  this.credentialsMode_ = undefined;\n\n  /** @private {!RequestCache|undefined} */\n  this.cacheMode_ = undefined;\n};\ngoog.inherits(goog.net.FetchXmlHttpFactory, goog.net.XmlHttpFactory);\n\n\n/** @override */\ngoog.net.FetchXmlHttpFactory.prototype.createInstance = function() {\n  var instance = new goog.net.FetchXmlHttp(this.worker_);\n  if (this.credentialsMode_) {\n    instance.setCredentialsMode(this.credentialsMode_);\n  }\n  if (this.cacheMode_) {\n    instance.setCacheMode(this.cacheMode_);\n  }\n  return instance;\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttpFactory.prototype.internalGetOptions =\n    goog.functions.constant({});\n\n\n/**\n * @param {!RequestCredentials} credentialsMode The credentials mode of the\n *     Service Worker fetch.\n */\ngoog.net.FetchXmlHttpFactory.prototype.setCredentialsMode = function(\n    credentialsMode) {\n  this.credentialsMode_ = credentialsMode;\n};\n\n\n/**\n * @param {!RequestCache} cacheMode The cache mode of the Service Worker fetch.\n */\ngoog.net.FetchXmlHttpFactory.prototype.setCacheMode = function(cacheMode) {\n  this.cacheMode_ = cacheMode;\n};\n\n\n\n/**\n * FetchXmlHttp object constructor.\n * @param {!WorkerGlobalScope} worker\n * @extends {goog.events.EventTarget}\n * @implements {goog.net.XhrLike}\n * @constructor\n * @struct\n */\ngoog.net.FetchXmlHttp = function(worker) {\n  goog.net.FetchXmlHttp.base(this, 'constructor');\n\n  /** @private @final {!WorkerGlobalScope} */\n  this.worker_ = worker;\n\n  /** @private {RequestCredentials|undefined} */\n  this.credentialsMode_ = undefined;\n\n  /** @private {RequestCache|undefined} */\n  this.cacheMode_ = undefined;\n\n  /**\n   * Request state.\n   * @type {goog.net.FetchXmlHttp.RequestState}\n   */\n  this.readyState = goog.net.FetchXmlHttp.RequestState.UNSENT;\n\n  /**\n   * HTTP status.\n   * @type {number}\n   */\n  this.status = 0;\n\n  /**\n   * HTTP status string.\n   * @type {string}\n   */\n  this.statusText = '';\n\n  /**\n   * Content of the response.\n   * @type {string}\n   */\n  this.responseText = '';\n\n  /**\n   * Document response entity body.\n   * NOTE: This is always null and not supported by this class.\n   * @final {null}\n   */\n  this.responseXML = null;\n\n  /**\n   * Method to call when the state changes.\n   * @type {?function()}\n   */\n  this.onreadystatechange = null;\n\n  /** @private {!Headers} */\n  this.requestHeaders_ = new Headers();\n\n  /** @private {?Headers} */\n  this.responseHeaders_ = null;\n\n  /**\n   * Request method (GET or POST).\n   * @private {string}\n   */\n  this.method_ = 'GET';\n\n  /**\n   * Request URL.\n   * @private {string}\n   */\n  this.url_ = '';\n\n  /**\n   * Whether the request is in progress.\n   * @private {boolean}\n   */\n  this.inProgress_ = false;\n\n  /** @private @final {?goog.log.Logger} */\n  this.logger_ = goog.log.getLogger('goog.net.FetchXmlHttp');\n\n};\ngoog.inherits(goog.net.FetchXmlHttp, goog.events.EventTarget);\n\n\n/**\n * State of the requests.\n * @enum {number}\n */\ngoog.net.FetchXmlHttp.RequestState = {\n  UNSENT: 0,\n  OPENED: 1,\n  HEADER_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.open = function(method, url, opt_async) {\n  goog.asserts.assert(!!opt_async, 'Only async requests are supported.');\n  if (this.readyState != goog.net.FetchXmlHttp.RequestState.UNSENT) {\n    this.abort();\n    throw new Error('Error reopening a connection');\n  }\n\n  this.method_ = method;\n  this.url_ = url;\n\n  this.readyState = goog.net.FetchXmlHttp.RequestState.OPENED;\n  this.dispatchCallback_();\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.send = function(opt_data) {\n  if (this.readyState != goog.net.FetchXmlHttp.RequestState.OPENED) {\n    this.abort();\n    throw new Error('need to call open() first. ');\n  }\n\n  this.inProgress_ = true;\n  var requestInit = {\n    headers: this.requestHeaders_,\n    method: this.method_,\n    credentials: this.credentialsMode_,\n    cache: this.cacheMode_\n  };\n  if (opt_data) {\n    requestInit['body'] = opt_data;\n  }\n  this.worker_\n      .fetch(new Request(this.url_, /** @type {!RequestInit} */ (requestInit)))\n      .then(\n          this.handleResponse_.bind(this), this.handleSendFailure_.bind(this));\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.abort = function() {\n  this.responseText = '';\n  this.requestHeaders_ = new Headers();\n  this.status = 0;\n  if (((this.readyState >= goog.net.FetchXmlHttp.RequestState.OPENED) &&\n       this.inProgress_) &&\n      (this.readyState != goog.net.FetchXmlHttp.RequestState.DONE)) {\n    this.readyState = goog.net.FetchXmlHttp.RequestState.DONE;\n    this.inProgress_ = false;\n    this.dispatchCallback_();\n  }\n\n  this.readyState = goog.net.FetchXmlHttp.RequestState.UNSENT;\n};\n\n\n/**\n * Handles the fetch response.\n * @param {!Response} response\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleResponse_ = function(response) {\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n\n  if (!this.responseHeaders_) {\n    this.responseHeaders_ = response.headers;\n    this.readyState = goog.net.FetchXmlHttp.RequestState.HEADER_RECEIVED;\n    this.dispatchCallback_();\n  }\n  // A callback may abort the request.\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n\n  this.readyState = goog.net.FetchXmlHttp.RequestState.LOADING;\n  this.dispatchCallback_();\n  // A callback may abort the request.\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n  response.text().then(\n      this.handleResponseText_.bind(this, response),\n      this.handleSendFailure_.bind(this));\n};\n\n\n/**\n * Handles the response text.\n * @param {!Response} response\n * @param {string} responseText\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleResponseText_ = function(\n    response, responseText) {\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n  this.status = response.status;\n  this.statusText = response.statusText;\n  this.responseText = responseText;\n  this.readyState = goog.net.FetchXmlHttp.RequestState.DONE;\n  this.dispatchCallback_();\n};\n\n\n/**\n * Handles the send failure.\n * @param {*} error\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleSendFailure_ = function(error) {\n  var e = error instanceof Error ? error : Error(error);\n  goog.log.warning(this.logger_, 'Failed to fetch url ' + this.url_, e);\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n  this.readyState = goog.net.FetchXmlHttp.RequestState.DONE;\n  this.dispatchCallback_();\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.setRequestHeader = function(header, value) {\n  this.requestHeaders_.append(header, value);\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.getResponseHeader = function(header) {\n  // TODO(b/70808323): This method should return null when the headers are not\n  // present or the specified header is missing. The externs need to be fixed.\n  if (!this.responseHeaders_) {\n    goog.log.warning(\n        this.logger_,\n        'Attempting to get response header but no headers have been received ' +\n            'for url: ' + this.url_);\n    return '';\n  }\n  return this.responseHeaders_.get(header.toLowerCase()) || '';\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.getAllResponseHeaders = function() {\n  if (!this.responseHeaders_) {\n    goog.log.warning(\n        this.logger_,\n        'Attempting to get all response headers but no headers have been ' +\n            'received for url: ' + this.url_);\n    return '';\n  }\n  var lines = [];\n  var iter = this.responseHeaders_.entries();\n  var entry = iter.next();\n  while (!entry.done) {\n    var pair = entry.value;\n    lines.push(pair[0] + ': ' + pair[1]);\n    entry = iter.next();\n  }\n  return lines.join('\\r\\n');\n};\n\n\n/**\n * @param {!RequestCredentials} credentialsMode The credentials mode of the\n *     Service Worker fetch.\n */\ngoog.net.FetchXmlHttp.prototype.setCredentialsMode = function(credentialsMode) {\n  this.credentialsMode_ = credentialsMode;\n};\n\n\n/**\n * @param {!RequestCache} cacheMode The cache mode of the Service Worker fetch.\n */\ngoog.net.FetchXmlHttp.prototype.setCacheMode = function(cacheMode) {\n  this.cacheMode_ = cacheMode;\n};\n\n\n/**\n * Dispatches the callback, if the callback attribute is defined.\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.dispatchCallback_ = function() {\n  if (this.onreadystatechange) {\n    this.onreadystatechange.call(this);\n  }\n};\n","// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for creating functions. Loosely inspired by the\n * java classes: http://goo.gl/GM0Hmu and http://goo.gl/6k7nI8.\n *\n * @author nicksantos@google.com (Nick Santos)\n */\n\n\ngoog.provide('goog.functions');\n\n\n/**\n * Creates a function that always returns the same value.\n * @param {T} retValue The value to return.\n * @return {function():T} The new function.\n * @template T\n */\ngoog.functions.constant = function(retValue) {\n  return function() { return retValue; };\n};\n\n\n/**\n * Always returns false.\n * @type {function(...): boolean}\n */\ngoog.functions.FALSE = goog.functions.constant(false);\n\n\n/**\n * Always returns true.\n * @type {function(...): boolean}\n */\ngoog.functions.TRUE = goog.functions.constant(true);\n\n\n/**\n * Always returns NULL.\n * @type {function(...): null}\n */\ngoog.functions.NULL = goog.functions.constant(null);\n\n\n/**\n * A simple function that returns the first argument of whatever is passed\n * into it.\n * @param {T=} opt_returnValue The single value that will be returned.\n * @param {...*} var_args Optional trailing arguments. These are ignored.\n * @return {T} The first argument passed in, or undefined if nothing was passed.\n * @template T\n */\ngoog.functions.identity = function(opt_returnValue, var_args) {\n  return opt_returnValue;\n};\n\n\n/**\n * Creates a function that always throws an error with the given message.\n * @param {string} message The error message.\n * @return {!Function} The error-throwing function.\n */\ngoog.functions.error = function(message) {\n  return function() {\n    throw new Error(message);\n  };\n};\n\n\n/**\n * Creates a function that throws the given object.\n * @param {*} err An object to be thrown.\n * @return {!Function} The error-throwing function.\n */\ngoog.functions.fail = function(err) {\n  return function() { throw err; };\n};\n\n\n/**\n * Given a function, create a function that keeps opt_numArgs arguments and\n * silently discards all additional arguments.\n * @param {Function} f The original function.\n * @param {number=} opt_numArgs The number of arguments to keep. Defaults to 0.\n * @return {!Function} A version of f that only keeps the first opt_numArgs\n *     arguments.\n */\ngoog.functions.lock = function(f, opt_numArgs) {\n  opt_numArgs = opt_numArgs || 0;\n  return function() {\n    var self = /** @type {*} */ (this);\n    return f.apply(self, Array.prototype.slice.call(arguments, 0, opt_numArgs));\n  };\n};\n\n\n/**\n * Creates a function that returns its nth argument.\n * @param {number} n The position of the return argument.\n * @return {!Function} A new function.\n */\ngoog.functions.nth = function(n) {\n  return function() { return arguments[n]; };\n};\n\n\n/**\n * Like goog.partial(), except that arguments are added after arguments to the\n * returned function.\n *\n * Usage:\n * function f(arg1, arg2, arg3, arg4) { ... }\n * var g = goog.functions.partialRight(f, arg3, arg4);\n * g(arg1, arg2);\n *\n * @param {!Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn\n *     at the end.\n * @return {!Function} A partially-applied form of the function goog.partial()\n *     was invoked as a method of.\n */\ngoog.functions.partialRight = function(fn, var_args) {\n  var rightArgs = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    var self = /** @type {*} */ (this);\n    var newArgs = Array.prototype.slice.call(arguments);\n    newArgs.push.apply(newArgs, rightArgs);\n    return fn.apply(self, newArgs);\n  };\n};\n\n\n/**\n * Given a function, create a new function that swallows its return value\n * and replaces it with a new one.\n * @param {Function} f A function.\n * @param {T} retValue A new return value.\n * @return {function(...?):T} A new function.\n * @template T\n */\ngoog.functions.withReturnValue = function(f, retValue) {\n  return goog.functions.sequence(f, goog.functions.constant(retValue));\n};\n\n\n/**\n * Creates a function that returns whether its argument equals the given value.\n *\n * Example:\n * var key = goog.object.findKey(obj, goog.functions.equalTo('needle'));\n *\n * @param {*} value The value to compare to.\n * @param {boolean=} opt_useLooseComparison Whether to use a loose (==)\n *     comparison rather than a strict (===) one. Defaults to false.\n * @return {function(*):boolean} The new function.\n */\ngoog.functions.equalTo = function(value, opt_useLooseComparison) {\n  return function(other) {\n    return opt_useLooseComparison ? (value == other) : (value === other);\n  };\n};\n\n\n/**\n * Creates the composition of the functions passed in.\n * For example, (goog.functions.compose(f, g))(a) is equivalent to f(g(a)).\n * @param {function(...?):T} fn The final function.\n * @param {...Function} var_args A list of functions.\n * @return {function(...?):T} The composition of all inputs.\n * @template T\n */\ngoog.functions.compose = function(fn, var_args) {\n  var functions = arguments;\n  var length = functions.length;\n  return function() {\n    var self = /** @type {*} */ (this);\n    var result;\n    if (length) {\n      result = functions[length - 1].apply(self, arguments);\n    }\n\n    for (var i = length - 2; i >= 0; i--) {\n      result = functions[i].call(self, result);\n    }\n    return result;\n  };\n};\n\n\n/**\n * Creates a function that calls the functions passed in in sequence, and\n * returns the value of the last function. For example,\n * (goog.functions.sequence(f, g))(x) is equivalent to f(x),g(x).\n * @param {...Function} var_args A list of functions.\n * @return {!Function} A function that calls all inputs in sequence.\n */\ngoog.functions.sequence = function(var_args) {\n  var functions = arguments;\n  var length = functions.length;\n  return function() {\n    var self = /** @type {*} */ (this);\n    var result;\n    for (var i = 0; i < length; i++) {\n      result = functions[i].apply(self, arguments);\n    }\n    return result;\n  };\n};\n\n\n/**\n * Creates a function that returns true if each of its components evaluates\n * to true. The components are evaluated in order, and the evaluation will be\n * short-circuited as soon as a function returns false.\n * For example, (goog.functions.and(f, g))(x) is equivalent to f(x) && g(x).\n * @param {...Function} var_args A list of functions.\n * @return {function(...?):boolean} A function that ANDs its component\n *      functions.\n */\ngoog.functions.and = function(var_args) {\n  var functions = arguments;\n  var length = functions.length;\n  return function() {\n    var self = /** @type {*} */ (this);\n    for (var i = 0; i < length; i++) {\n      if (!functions[i].apply(self, arguments)) {\n        return false;\n      }\n    }\n    return true;\n  };\n};\n\n\n/**\n * Creates a function that returns true if any of its components evaluates\n * to true. The components are evaluated in order, and the evaluation will be\n * short-circuited as soon as a function returns true.\n * For example, (goog.functions.or(f, g))(x) is equivalent to f(x) || g(x).\n * @param {...Function} var_args A list of functions.\n * @return {function(...?):boolean} A function that ORs its component\n *    functions.\n */\ngoog.functions.or = function(var_args) {\n  var functions = arguments;\n  var length = functions.length;\n  return function() {\n    var self = /** @type {*} */ (this);\n    for (var i = 0; i < length; i++) {\n      if (functions[i].apply(self, arguments)) {\n        return true;\n      }\n    }\n    return false;\n  };\n};\n\n\n/**\n * Creates a function that returns the Boolean opposite of a provided function.\n * For example, (goog.functions.not(f))(x) is equivalent to !f(x).\n * @param {!Function} f The original function.\n * @return {function(...?):boolean} A function that delegates to f and returns\n * opposite.\n */\ngoog.functions.not = function(f) {\n  return function() {\n    var self = /** @type {*} */ (this);\n    return !f.apply(self, arguments);\n  };\n};\n\n\n/**\n * Generic factory function to construct an object given the constructor\n * and the arguments. Intended to be bound to create object factories.\n *\n * Example:\n *\n * var factory = goog.partial(goog.functions.create, Class);\n *\n * @param {function(new:T, ...)} constructor The constructor for the Object.\n * @param {...*} var_args The arguments to be passed to the constructor.\n * @return {T} A new instance of the class given in `constructor`.\n * @template T\n */\ngoog.functions.create = function(constructor, var_args) {\n  /**\n   * @constructor\n   * @final\n   */\n  var temp = function() {};\n  temp.prototype = constructor.prototype;\n\n  // obj will have constructor's prototype in its chain and\n  // 'obj instanceof constructor' will be true.\n  var obj = new temp();\n\n  // obj is initialized by constructor.\n  // arguments is only array-like so lacks shift(), but can be used with\n  // the Array prototype function.\n  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));\n  return obj;\n};\n\n\n/**\n * @define {boolean} Whether the return value cache should be used.\n *    This should only be used to disable caches when testing.\n */\ngoog.define('goog.functions.CACHE_RETURN_VALUE', true);\n\n\n/**\n * Gives a wrapper function that caches the return value of a parameterless\n * function when first called.\n *\n * When called for the first time, the given function is called and its\n * return value is cached (thus this is only appropriate for idempotent\n * functions).  Subsequent calls will return the cached return value. This\n * allows the evaluation of expensive functions to be delayed until first used.\n *\n * To cache the return values of functions with parameters, see goog.memoize.\n *\n * @param {function():T} fn A function to lazily evaluate.\n * @return {function():T} A wrapped version the function.\n * @template T\n */\ngoog.functions.cacheReturnValue = function(fn) {\n  var called = false;\n  var value;\n\n  return function() {\n    if (!goog.functions.CACHE_RETURN_VALUE) {\n      return fn();\n    }\n\n    if (!called) {\n      value = fn();\n      called = true;\n    }\n\n    return value;\n  };\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once. All\n * additional calls are no-ops.\n *\n * This is particularly useful for initialization functions\n * that should be called, at most, once.\n *\n * @param {function():*} f Function to call.\n * @return {function():undefined} Wrapped function.\n */\ngoog.functions.once = function(f) {\n  // Keep a reference to the function that we null out when we're done with\n  // it -- that way, the function can be GC'd when we're done with it.\n  var inner = f;\n  return function() {\n    if (inner) {\n      var tmp = inner;\n      inner = null;\n      tmp();\n    }\n  };\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once per interval\n * (specified in milliseconds). If the wrapper function is called N times within\n * that interval, only the Nth call will go through.\n *\n * This is particularly useful for batching up repeated actions where the\n * last action should win. This can be used, for example, for refreshing an\n * autocomplete pop-up every so often rather than updating with every keystroke,\n * since the final text typed by the user is the one that should produce the\n * final autocomplete results. For more stateful debouncing with support for\n * pausing, resuming, and canceling debounced actions, use\n * `goog.async.Debouncer`.\n *\n * @param {function(this:SCOPE, ...?)} f Function to call.\n * @param {number} interval Interval over which to debounce. The function will\n *     only be called after the full interval has elapsed since the last call.\n * @param {SCOPE=} opt_scope Object in whose scope to call the function.\n * @return {function(...?): undefined} Wrapped function.\n * @template SCOPE\n */\ngoog.functions.debounce = function(f, interval, opt_scope) {\n  var timeout = 0;\n  return /** @type {function(...?)} */ (function(var_args) {\n    goog.global.clearTimeout(timeout);\n    var args = arguments;\n    timeout = goog.global.setTimeout(function() {\n      f.apply(opt_scope, args);\n    }, interval);\n  });\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once per interval\n * (specified in milliseconds). If the wrapper function is called N times in\n * that interval, both the 1st and the Nth calls will go through.\n *\n * This is particularly useful for limiting repeated user requests where the\n * the last action should win, but you also don't want to wait until the end of\n * the interval before sending a request out, as it leads to a perception of\n * slowness for the user.\n *\n * @param {function(this:SCOPE, ...?)} f Function to call.\n * @param {number} interval Interval over which to throttle. The function can\n *     only be called once per interval.\n * @param {SCOPE=} opt_scope Object in whose scope to call the function.\n * @return {function(...?): undefined} Wrapped function.\n * @template SCOPE\n */\ngoog.functions.throttle = function(f, interval, opt_scope) {\n  var timeout = 0;\n  var shouldFire = false;\n  var args = [];\n\n  var handleTimeout = function() {\n    timeout = 0;\n    if (shouldFire) {\n      shouldFire = false;\n      fire();\n    }\n  };\n\n  var fire = function() {\n    timeout = goog.global.setTimeout(handleTimeout, interval);\n    f.apply(opt_scope, args);\n  };\n\n  return /** @type {function(...?)} */ (function(var_args) {\n    args = arguments;\n    if (!timeout) {\n      fire();\n    } else {\n      shouldFire = true;\n    }\n  });\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once per interval\n * (specified in milliseconds). If the wrapper function is called N times within\n * that interval, only the 1st call will go through.\n *\n * This is particularly useful for limiting repeated user requests where the\n * first request is guaranteed to have all the data required to perform the\n * final action, so there's no need to wait until the end of the interval before\n * sending the request out.\n *\n * @param {function(this:SCOPE, ...?)} f Function to call.\n * @param {number} interval Interval over which to rate-limit. The function will\n *     only be called once per interval, and ignored for the remainer of the\n *     interval.\n * @param {SCOPE=} opt_scope Object in whose scope to call the function.\n * @return {function(...?): undefined} Wrapped function.\n * @template SCOPE\n */\ngoog.functions.rateLimit = function(f, interval, opt_scope) {\n  var timeout = 0;\n\n  var handleTimeout = function() {\n    timeout = 0;\n  };\n\n  return /** @type {function(...?)} */ (function(var_args) {\n    if (!timeout) {\n      timeout = goog.global.setTimeout(handleTimeout, interval);\n      f.apply(opt_scope, arguments);\n    }\n  });\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Common events for the network classes.\n */\n\n\ngoog.provide('goog.net.EventType');\n\n\n/**\n * Event names for network events\n * @enum {string}\n */\ngoog.net.EventType = {\n  COMPLETE: 'complete',\n  SUCCESS: 'success',\n  ERROR: 'error',\n  ABORT: 'abort',\n  READY: 'ready',\n  READY_STATE_CHANGE: 'readystatechange',\n  TIMEOUT: 'timeout',\n  INCREMENTAL_DATA: 'incrementaldata',\n  PROGRESS: 'progress',\n  // DOWNLOAD_PROGRESS and UPLOAD_PROGRESS are special events dispatched by\n  // goog.net.XhrIo to allow binding listeners specific to each type of\n  // progress.\n  DOWNLOAD_PROGRESS: 'downloadprogress',\n  UPLOAD_PROGRESS: 'uploadprogress'\n};\n","// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Error codes shared between goog.net.IframeIo and\n * goog.net.XhrIo.\n */\n\ngoog.provide('goog.net.ErrorCode');\n\n\n/**\n * Error codes\n * @enum {number}\n */\ngoog.net.ErrorCode = {\n\n  /**\n   * There is no error condition.\n   */\n  NO_ERROR: 0,\n\n  /**\n   * The most common error from iframeio, unfortunately, is that the browser\n   * responded with an error page that is classed as a different domain. The\n   * situations, are when a browser error page  is shown -- 404, access denied,\n   * DNS failure, connection reset etc.)\n   *\n   */\n  ACCESS_DENIED: 1,\n\n  /**\n   * Currently the only case where file not found will be caused is when the\n   * code is running on the local file system and a non-IE browser makes a\n   * request to a file that doesn't exist.\n   */\n  FILE_NOT_FOUND: 2,\n\n  /**\n   * If Firefox shows a browser error page, such as a connection reset by\n   * server or access denied, then it will fail silently without the error or\n   * load handlers firing.\n   */\n  FF_SILENT_ERROR: 3,\n\n  /**\n   * Custom error provided by the client through the error check hook.\n   */\n  CUSTOM_ERROR: 4,\n\n  /**\n   * Exception was thrown while processing the request.\n   */\n  EXCEPTION: 5,\n\n  /**\n   * The Http response returned a non-successful http status code.\n   */\n  HTTP_ERROR: 6,\n\n  /**\n   * The request was aborted.\n   */\n  ABORT: 7,\n\n  /**\n   * The request timed out.\n   */\n  TIMEOUT: 8,\n\n  /**\n   * The resource is not available offline.\n   */\n  OFFLINE: 9\n};\n\n\n/**\n * Returns a friendly error message for an error code. These messages are for\n * debugging and are not localized.\n * @param {goog.net.ErrorCode} errorCode An error code.\n * @return {string} A message for debugging.\n */\ngoog.net.ErrorCode.getDebugMessage = function(errorCode) {\n  switch (errorCode) {\n    case goog.net.ErrorCode.NO_ERROR:\n      return 'No Error';\n\n    case goog.net.ErrorCode.ACCESS_DENIED:\n      return 'Access denied to content document';\n\n    case goog.net.ErrorCode.FILE_NOT_FOUND:\n      return 'File not found';\n\n    case goog.net.ErrorCode.FF_SILENT_ERROR:\n      return 'Firefox silently errored';\n\n    case goog.net.ErrorCode.CUSTOM_ERROR:\n      return 'Application custom error';\n\n    case goog.net.ErrorCode.EXCEPTION:\n      return 'An exception occurred';\n\n    case goog.net.ErrorCode.HTTP_ERROR:\n      return 'Http response at 400 or 500 level';\n\n    case goog.net.ErrorCode.ABORT:\n      return 'Request was aborted';\n\n    case goog.net.ErrorCode.TIMEOUT:\n      return 'Request timed out';\n\n    case goog.net.ErrorCode.OFFLINE:\n      return 'The resource is not available offline';\n\n    default:\n      return 'Unrecognized error code';\n  }\n};\n","// Copyright 2007 Bob Ippolito. All Rights Reserved.\n// Modifications Copyright 2009 The Closure Library Authors. All Rights\n// Reserved.\n\n/**\n * @license Portions of this code are from MochiKit, received by\n * The Closure Authors under the MIT license. All other code is Copyright\n * 2005-2009 The Closure Authors. All Rights Reserved.\n */\n\n/**\n * @fileoverview Classes for tracking asynchronous operations and handling the\n * results. The Deferred object here is patterned after the Deferred object in\n * the Twisted python networking framework.\n *\n * See: http://twistedmatrix.com/projects/core/documentation/howto/defer.html\n *\n * Based on the Dojo code which in turn is based on the MochiKit code.\n *\n * @author arv@google.com (Erik Arvidsson)\n * @author brenneman@google.com (Shawn Brenneman)\n */\n\ngoog.provide('goog.async.Deferred');\ngoog.provide('goog.async.Deferred.AlreadyCalledError');\ngoog.provide('goog.async.Deferred.CanceledError');\n\ngoog.require('goog.Promise');\ngoog.require('goog.Thenable');\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.debug.Error');\n\n\n\n/**\n * A Deferred represents the result of an asynchronous operation. A Deferred\n * instance has no result when it is created, and is \"fired\" (given an initial\n * result) by calling `callback` or `errback`.\n *\n * Once fired, the result is passed through a sequence of callback functions\n * registered with `addCallback` or `addErrback`. The functions may\n * mutate the result before it is passed to the next function in the sequence.\n *\n * Callbacks and errbacks may be added at any time, including after the Deferred\n * has been \"fired\". If there are no pending actions in the execution sequence\n * of a fired Deferred, any new callback functions will be called with the last\n * computed result. Adding a callback function is the only way to access the\n * result of the Deferred.\n *\n * If a Deferred operation is canceled, an optional user-provided cancellation\n * function is invoked which may perform any special cleanup, followed by firing\n * the Deferred's errback sequence with a `CanceledError`. If the\n * Deferred has already fired, cancellation is ignored.\n *\n * Deferreds may be templated to a specific type they produce using generics\n * with syntax such as:\n *\n *    /** @type {goog.async.Deferred<string>} *\\\n *    var d = new goog.async.Deferred();\n *    // Compiler can infer that foo is a string.\n *    d.addCallback(function(foo) {...});\n *    d.callback('string');  // Checked to be passed a string\n *\n * Since deferreds are often used to produce different values across a chain,\n * the type information is not propagated across chains, but rather only\n * associated with specifically cast objects.\n *\n * @param {Function=} opt_onCancelFunction A function that will be called if the\n *     Deferred is canceled. If provided, this function runs before the\n *     Deferred is fired with a `CanceledError`.\n * @param {Object=} opt_defaultScope The default object context to call\n *     callbacks and errbacks in.\n * @constructor\n * @implements {goog.Thenable<VALUE>}\n * @template VALUE\n */\ngoog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {\n  /**\n   * Entries in the sequence are arrays containing a callback, an errback, and\n   * an optional scope. The callback or errback in an entry may be null.\n   * @type {!Array<!Array>}\n   * @private\n   */\n  this.sequence_ = [];\n\n  /**\n   * Optional function that will be called if the Deferred is canceled.\n   * @type {Function|undefined}\n   * @private\n   */\n  this.onCancelFunction_ = opt_onCancelFunction;\n\n  /**\n   * The default scope to execute callbacks and errbacks in.\n   * @type {Object}\n   * @private\n   */\n  this.defaultScope_ = opt_defaultScope || null;\n\n  /**\n   * Whether the Deferred has been fired.\n   * @type {boolean}\n   * @private\n   */\n  this.fired_ = false;\n\n  /**\n   * Whether the last result in the execution sequence was an error.\n   * @type {boolean}\n   * @private\n   */\n  this.hadError_ = false;\n\n  /**\n   * The current Deferred result, updated as callbacks and errbacks are\n   * executed.\n   * @type {*}\n   * @private\n   */\n  this.result_ = undefined;\n\n  /**\n   * Whether the Deferred is blocked waiting on another Deferred to fire. If a\n   * callback or errback returns a Deferred as a result, the execution sequence\n   * is blocked until that Deferred result becomes available.\n   * @type {boolean}\n   * @private\n   */\n  this.blocked_ = false;\n\n  /**\n   * Whether this Deferred is blocking execution of another Deferred. If this\n   * instance was returned as a result in another Deferred's execution\n   * sequence,that other Deferred becomes blocked until this instance's\n   * execution sequence completes. No additional callbacks may be added to a\n   * Deferred once it is blocking another instance.\n   * @type {boolean}\n   * @private\n   */\n  this.blocking_ = false;\n\n  /**\n   * Whether the Deferred has been canceled without having a custom cancel\n   * function.\n   * @type {boolean}\n   * @private\n   */\n  this.silentlyCanceled_ = false;\n\n  /**\n   * If an error is thrown during Deferred execution with no errback to catch\n   * it, the error is rethrown after a timeout. Reporting the error after a\n   * timeout allows execution to continue in the calling context (empty when\n   * no error is scheduled).\n   * @type {number}\n   * @private\n   */\n  this.unhandledErrorId_ = 0;\n\n  /**\n   * If this Deferred was created by branch(), this will be the \"parent\"\n   * Deferred.\n   * @type {goog.async.Deferred}\n   * @private\n   */\n  this.parent_ = null;\n\n  /**\n   * The number of Deferred objects that have been branched off this one. This\n   * will be decremented whenever a branch is fired or canceled.\n   * @type {number}\n   * @private\n   */\n  this.branches_ = 0;\n\n  if (goog.async.Deferred.LONG_STACK_TRACES) {\n    /**\n     * Holds the stack trace at time of deferred creation if the JS engine\n     * provides the Error.captureStackTrace API.\n     * @private {?string}\n     */\n    this.constructorStack_ = null;\n    if (Error.captureStackTrace) {\n      var target = { stack: '' };\n      Error.captureStackTrace(target, goog.async.Deferred);\n      // Check if Error.captureStackTrace worked. It fails in gjstest.\n      if (typeof target.stack == 'string') {\n        // Remove first line and force stringify to prevent memory leak due to\n        // holding on to actual stack frames.\n        this.constructorStack_ = target.stack.replace(/^[^\\n]*\\n/, '');\n      }\n    }\n  }\n};\n\n\n/**\n * @define {boolean} Whether unhandled errors should always get rethrown to the\n * global scope. Defaults to false.\n */\ngoog.define('goog.async.Deferred.STRICT_ERRORS', false);\n\n\n/**\n * @define {boolean} Whether to attempt to make stack traces long.  Defaults to\n * false.\n */\ngoog.define('goog.async.Deferred.LONG_STACK_TRACES', false);\n\n\n/**\n * Cancels a Deferred that has not yet been fired, or is blocked on another\n * deferred operation. If this Deferred is waiting for a blocking Deferred to\n * fire, the blocking Deferred will also be canceled.\n *\n * If this Deferred was created by calling branch() on a parent Deferred with\n * opt_propagateCancel set to true, the parent may also be canceled. If\n * opt_deepCancel is set, cancel() will be called on the parent (as well as any\n * other ancestors if the parent is also a branch). If one or more branches were\n * created with opt_propagateCancel set to true, the parent will be canceled if\n * cancel() is called on all of those branches.\n *\n * @param {boolean=} opt_deepCancel If true, cancels this Deferred's parent even\n *     if cancel() hasn't been called on some of the parent's branches. Has no\n *     effect on a branch without opt_propagateCancel set to true.\n */\ngoog.async.Deferred.prototype.cancel = function(opt_deepCancel) {\n  if (!this.hasFired()) {\n    if (this.parent_) {\n      // Get rid of the parent reference before potentially running the parent's\n      // canceler function to ensure that this cancellation isn't\n      // double-counted.\n      var parent = this.parent_;\n      delete this.parent_;\n      if (opt_deepCancel) {\n        parent.cancel(opt_deepCancel);\n      } else {\n        parent.branchCancel_();\n      }\n    }\n\n    if (this.onCancelFunction_) {\n      // Call in user-specified scope.\n      this.onCancelFunction_.call(this.defaultScope_, this);\n    } else {\n      this.silentlyCanceled_ = true;\n    }\n    if (!this.hasFired()) {\n      this.errback(new goog.async.Deferred.CanceledError(this));\n    }\n  } else if (this.result_ instanceof goog.async.Deferred) {\n    this.result_.cancel();\n  }\n};\n\n\n/**\n * Handle a single branch being canceled. Once all branches are canceled, this\n * Deferred will be canceled as well.\n *\n * @private\n */\ngoog.async.Deferred.prototype.branchCancel_ = function() {\n  this.branches_--;\n  if (this.branches_ <= 0) {\n    this.cancel();\n  }\n};\n\n\n/**\n * Called after a blocking Deferred fires. Unblocks this Deferred and resumes\n * its execution sequence.\n *\n * @param {boolean} isSuccess Whether the result is a success or an error.\n * @param {*} res The result of the blocking Deferred.\n * @private\n */\ngoog.async.Deferred.prototype.continue_ = function(isSuccess, res) {\n  this.blocked_ = false;\n  this.updateResult_(isSuccess, res);\n};\n\n\n/**\n * Updates the current result based on the success or failure of the last action\n * in the execution sequence.\n *\n * @param {boolean} isSuccess Whether the new result is a success or an error.\n * @param {*} res The result.\n * @private\n */\ngoog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {\n  this.fired_ = true;\n  this.result_ = res;\n  this.hadError_ = !isSuccess;\n  this.fire_();\n};\n\n\n/**\n * Verifies that the Deferred has not yet been fired.\n *\n * @private\n * @throws {Error} If this has already been fired.\n */\ngoog.async.Deferred.prototype.check_ = function() {\n  if (this.hasFired()) {\n    if (!this.silentlyCanceled_) {\n      throw new goog.async.Deferred.AlreadyCalledError(this);\n    }\n    this.silentlyCanceled_ = false;\n  }\n};\n\n\n/**\n * Fire the execution sequence for this Deferred by passing the starting result\n * to the first registered callback.\n * @param {VALUE=} opt_result The starting result.\n */\ngoog.async.Deferred.prototype.callback = function(opt_result) {\n  this.check_();\n  this.assertNotDeferred_(opt_result);\n  this.updateResult_(true /* isSuccess */, opt_result);\n};\n\n\n/**\n * Fire the execution sequence for this Deferred by passing the starting error\n * result to the first registered errback.\n * @param {*=} opt_result The starting error.\n */\ngoog.async.Deferred.prototype.errback = function(opt_result) {\n  this.check_();\n  this.assertNotDeferred_(opt_result);\n  this.makeStackTraceLong_(opt_result);\n  this.updateResult_(false /* isSuccess */, opt_result);\n};\n\n\n/**\n * Attempt to make the error's stack trace be long in that it contains the\n * stack trace from the point where the deferred was created on top of the\n * current stack trace to give additional context.\n * @param {*} error\n * @private\n */\ngoog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {\n  if (!goog.async.Deferred.LONG_STACK_TRACES) {\n    return;\n  }\n  if (this.constructorStack_ && goog.isObject(error) && error.stack &&\n      // Stack looks like it was system generated. See\n      // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n      (/^[^\\n]+(\\n   [^\\n]+)+/).test(error.stack)) {\n    error.stack = error.stack + '\\nDEFERRED OPERATION:\\n' +\n        this.constructorStack_;\n  }\n};\n\n\n/**\n * Asserts that an object is not a Deferred.\n * @param {*} obj The object to test.\n * @throws {Error} Throws an exception if the object is a Deferred.\n * @private\n */\ngoog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {\n  goog.asserts.assert(\n      !(obj instanceof goog.async.Deferred),\n      'An execution sequence may not be initiated with a blocking Deferred.');\n};\n\n\n/**\n * Register a callback function to be called with a successful result. If no\n * value is returned by the callback function, the result value is unchanged. If\n * a new value is returned, it becomes the Deferred result and will be passed to\n * the next callback in the execution sequence.\n *\n * If the function throws an error, the error becomes the new result and will be\n * passed to the next errback in the execution chain.\n *\n * If the function returns a Deferred, the execution sequence will be blocked\n * until that Deferred fires. Its result will be passed to the next callback (or\n * errback if it is an error result) in this Deferred's execution sequence.\n *\n * @param {function(this:T,VALUE):?} cb The function to be called with a\n *     successful result.\n * @param {T=} opt_scope An optional scope to call the callback in.\n * @return {!goog.async.Deferred} This Deferred.\n * @template T\n */\ngoog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {\n  return this.addCallbacks(cb, null, opt_scope);\n};\n\n\n/**\n * Register a callback function to be called with an error result. If no value\n * is returned by the function, the error result is unchanged. If a new error\n * value is returned or thrown, that error becomes the Deferred result and will\n * be passed to the next errback in the execution sequence.\n *\n * If the errback function handles the error by returning a non-error value,\n * that result will be passed to the next normal callback in the sequence.\n *\n * If the function returns a Deferred, the execution sequence will be blocked\n * until that Deferred fires. Its result will be passed to the next callback (or\n * errback if it is an error result) in this Deferred's execution sequence.\n *\n * @param {function(this:T,?):?} eb The function to be called on an\n *     unsuccessful result.\n * @param {T=} opt_scope An optional scope to call the errback in.\n * @return {!goog.async.Deferred<VALUE>} This Deferred.\n * @template T\n */\ngoog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {\n  return this.addCallbacks(null, eb, opt_scope);\n};\n\n\n/**\n * Registers one function as both a callback and errback.\n *\n * @param {function(this:T,?):?} f The function to be called on any result.\n * @param {T=} opt_scope An optional scope to call the function in.\n * @return {!goog.async.Deferred} This Deferred.\n * @template T\n */\ngoog.async.Deferred.prototype.addBoth = function(f, opt_scope) {\n  return this.addCallbacks(f, f, opt_scope);\n};\n\n\n/**\n * Like addBoth, but propagates uncaught exceptions in the errback.\n *\n * @param {function(this:T,?):?} f The function to be called on any result.\n * @param {T=} opt_scope An optional scope to call the function in.\n * @return {!goog.async.Deferred<VALUE>} This Deferred.\n * @template T\n */\ngoog.async.Deferred.prototype.addFinally = function(f, opt_scope) {\n  return this.addCallbacks(f, function(err) {\n    var result = f.call(/** @type {?} */ (this), err);\n    if (!goog.isDef(result)) {\n      throw err;\n    }\n    return result;\n  }, opt_scope);\n};\n\n\n/**\n * Registers a callback function and an errback function at the same position\n * in the execution sequence. Only one of these functions will execute,\n * depending on the error state during the execution sequence.\n *\n * NOTE: This is not equivalent to {@code def.addCallback().addErrback()}! If\n * the callback is invoked, the errback will be skipped, and vice versa.\n *\n * @param {?(function(this:T,VALUE):?)} cb The function to be called on a\n *     successful result.\n * @param {?(function(this:T,?):?)} eb The function to be called on an\n *     unsuccessful result.\n * @param {T=} opt_scope An optional scope to call the functions in.\n * @return {!goog.async.Deferred} This Deferred.\n * @template T\n */\ngoog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {\n  goog.asserts.assert(!this.blocking_, 'Blocking Deferreds can not be re-used');\n  this.sequence_.push([cb, eb, opt_scope]);\n  if (this.hasFired()) {\n    this.fire_();\n  }\n  return this;\n};\n\n\n/**\n * Implements {@see goog.Thenable} for seamless integration with\n * {@see goog.Promise}.\n * Deferred results are mutable and may represent multiple values over\n * their lifetime. Calling `then` on a Deferred returns a Promise\n * with the result of the Deferred at that point in its callback chain.\n * Note that if the Deferred result is never mutated, and only\n * `then` calls are made, the Deferred will behave like a Promise.\n *\n * @override\n */\ngoog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected,\n    opt_context) {\n  var resolve, reject;\n  var promise = new goog.Promise(function(res, rej) {\n    // Copying resolvers to outer scope, so that they are available when the\n    // deferred callback fires (which may be synchronous).\n    resolve = res;\n    reject = rej;\n  });\n  this.addCallbacks(resolve, function(reason) {\n    if (reason instanceof goog.async.Deferred.CanceledError) {\n      promise.cancel();\n    } else {\n      reject(reason);\n    }\n  });\n  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);\n};\ngoog.Thenable.addImplementation(goog.async.Deferred);\n\n\n/**\n * Links another Deferred to the end of this Deferred's execution sequence. The\n * result of this execution sequence will be passed as the starting result for\n * the chained Deferred, invoking either its first callback or errback.\n *\n * @param {!goog.async.Deferred} otherDeferred The Deferred to chain.\n * @return {!goog.async.Deferred} This Deferred.\n */\ngoog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {\n  this.addCallbacks(\n      otherDeferred.callback, otherDeferred.errback, otherDeferred);\n  return this;\n};\n\n\n/**\n * Makes this Deferred wait for another Deferred's execution sequence to\n * complete before continuing.\n *\n * This is equivalent to adding a callback that returns `otherDeferred`,\n * but doesn't prevent additional callbacks from being added to\n * `otherDeferred`.\n *\n * @param {!goog.async.Deferred|!goog.Thenable} otherDeferred The Deferred\n *     to wait for.\n * @return {!goog.async.Deferred} This Deferred.\n */\ngoog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {\n  if (!(otherDeferred instanceof goog.async.Deferred)) {\n    // The Thenable case.\n    return this.addCallback(function() {\n      return otherDeferred;\n    });\n  }\n  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));\n};\n\n\n/**\n * Creates a branch off this Deferred's execution sequence, and returns it as a\n * new Deferred. The branched Deferred's starting result will be shared with the\n * parent at the point of the branch, even if further callbacks are added to the\n * parent.\n *\n * All branches at the same stage in the execution sequence will receive the\n * same starting value.\n *\n * @param {boolean=} opt_propagateCancel If cancel() is called on every child\n *     branch created with opt_propagateCancel, the parent will be canceled as\n *     well.\n * @return {!goog.async.Deferred<VALUE>} A Deferred that will be started with\n *     the computed result from this stage in the execution sequence.\n */\ngoog.async.Deferred.prototype.branch = function(opt_propagateCancel) {\n  var d = new goog.async.Deferred();\n  this.chainDeferred(d);\n  if (opt_propagateCancel) {\n    d.parent_ = this;\n    this.branches_++;\n  }\n  return d;\n};\n\n\n/**\n * @return {boolean} Whether the execution sequence has been started on this\n *     Deferred by invoking `callback` or `errback`.\n */\ngoog.async.Deferred.prototype.hasFired = function() {\n  return this.fired_;\n};\n\n\n/**\n * @param {*} res The latest result in the execution sequence.\n * @return {boolean} Whether the current result is an error that should cause\n *     the next errback to fire. May be overridden by subclasses to handle\n *     special error types.\n * @protected\n */\ngoog.async.Deferred.prototype.isError = function(res) {\n  return res instanceof Error;\n};\n\n\n/**\n * @return {boolean} Whether an errback exists in the remaining sequence.\n * @private\n */\ngoog.async.Deferred.prototype.hasErrback_ = function() {\n  return goog.array.some(this.sequence_, function(sequenceRow) {\n    // The errback is the second element in the array.\n    return goog.isFunction(sequenceRow[1]);\n  });\n};\n\n\n/**\n * Exhausts the execution sequence while a result is available. The result may\n * be modified by callbacks or errbacks, and execution will block if the\n * returned result is an incomplete Deferred.\n *\n * @private\n */\ngoog.async.Deferred.prototype.fire_ = function() {\n  if (this.unhandledErrorId_ && this.hasFired() && this.hasErrback_()) {\n    // It is possible to add errbacks after the Deferred has fired. If a new\n    // errback is added immediately after the Deferred encountered an unhandled\n    // error, but before that error is rethrown, the error is unscheduled.\n    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);\n    this.unhandledErrorId_ = 0;\n  }\n\n  if (this.parent_) {\n    this.parent_.branches_--;\n    delete this.parent_;\n  }\n\n  var res = this.result_;\n  var unhandledException = false;\n  var isNewlyBlocked = false;\n\n  while (this.sequence_.length && !this.blocked_) {\n    var sequenceEntry = this.sequence_.shift();\n\n    var callback = sequenceEntry[0];\n    var errback = sequenceEntry[1];\n    var scope = sequenceEntry[2];\n\n    var f = this.hadError_ ? errback : callback;\n    if (f) {\n\n      try {\n        var ret = f.call(scope || this.defaultScope_, res);\n\n        // If no result, then use previous result.\n        if (goog.isDef(ret)) {\n          // Bubble up the error as long as the return value hasn't changed.\n          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));\n          this.result_ = res = ret;\n        }\n\n        if (goog.Thenable.isImplementedBy(res) ||\n            (typeof goog.global['Promise'] === 'function' &&\n            res instanceof goog.global['Promise'])) {\n          isNewlyBlocked = true;\n          this.blocked_ = true;\n        }\n\n      } catch (ex) {\n        res = ex;\n        this.hadError_ = true;\n        this.makeStackTraceLong_(res);\n\n        if (!this.hasErrback_()) {\n          // If an error is thrown with no additional errbacks in the queue,\n          // prepare to rethrow the error.\n          unhandledException = true;\n        }\n      }\n    }\n  }\n\n  this.result_ = res;\n\n  if (isNewlyBlocked) {\n    var onCallback = goog.bind(this.continue_, this, true /* isSuccess */);\n    var onErrback = goog.bind(this.continue_, this, false /* isSuccess */);\n\n    if (res instanceof goog.async.Deferred) {\n      res.addCallbacks(onCallback, onErrback);\n      res.blocking_ = true;\n    } else {\n      /** @type {!IThenable} */ (res).then(onCallback, onErrback);\n    }\n  } else if (goog.async.Deferred.STRICT_ERRORS && this.isError(res) &&\n      !(res instanceof goog.async.Deferred.CanceledError)) {\n    this.hadError_ = true;\n    unhandledException = true;\n  }\n\n  if (unhandledException) {\n    // Rethrow the unhandled error after a timeout. Execution will continue, but\n    // the error will be seen by global handlers and the user. The throw will\n    // be canceled if another errback is appended before the timeout executes.\n    // The error's original stack trace is preserved where available.\n    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);\n  }\n};\n\n\n/**\n * Creates a Deferred that has an initial result.\n *\n * @param {*=} opt_result The result.\n * @return {!goog.async.Deferred} The new Deferred.\n */\ngoog.async.Deferred.succeed = function(opt_result) {\n  var d = new goog.async.Deferred();\n  d.callback(opt_result);\n  return d;\n};\n\n\n/**\n * Creates a Deferred that fires when the given promise resolves.\n * Use only during migration to Promises.\n *\n * Note: If the promise resolves to a thenable value (which is not allowed by\n * conforming promise implementations), then the deferred may behave\n * unexpectedly as it tries to wait on it. This should not be a risk when using\n * goog.Promise, goog.async.Deferred, or native Promise objects.\n *\n * @param {!IThenable<T>} promise\n * @return {!goog.async.Deferred<T>} The new Deferred.\n * @template T\n */\ngoog.async.Deferred.fromPromise = function(promise) {\n  var d = new goog.async.Deferred();\n  promise.then(\n      function(value) {\n        d.callback(value);\n      },\n      function(error) {\n        d.errback(error);\n      });\n  return d;\n};\n\n\n/**\n * Creates a Deferred that has an initial error result.\n *\n * @param {*} res The error result.\n * @return {!goog.async.Deferred} The new Deferred.\n */\ngoog.async.Deferred.fail = function(res) {\n  var d = new goog.async.Deferred();\n  d.errback(res);\n  return d;\n};\n\n\n/**\n * Creates a Deferred that has already been canceled.\n *\n * @return {!goog.async.Deferred} The new Deferred.\n */\ngoog.async.Deferred.canceled = function() {\n  var d = new goog.async.Deferred();\n  d.cancel();\n  return d;\n};\n\n\n/**\n * Normalizes values that may or may not be Deferreds.\n *\n * If the input value is a Deferred, the Deferred is branched (so the original\n * execution sequence is not modified) and the input callback added to the new\n * branch. The branch is returned to the caller.\n *\n * If the input value is not a Deferred, the callback will be executed\n * immediately and an already firing Deferred will be returned to the caller.\n *\n * In the following (contrived) example, if <code>isImmediate</code> is true\n * then 3 is alerted immediately, otherwise 6 is alerted after a 2-second delay.\n *\n * <pre>\n * var value;\n * if (isImmediate) {\n *   value = 3;\n * } else {\n *   value = new goog.async.Deferred();\n *   setTimeout(function() { value.callback(6); }, 2000);\n * }\n *\n * var d = goog.async.Deferred.when(value, alert);\n * </pre>\n *\n * @param {*} value Deferred or normal value to pass to the callback.\n * @param {function(this:T, ?):?} callback The callback to execute.\n * @param {T=} opt_scope An optional scope to call the callback in.\n * @return {!goog.async.Deferred} A new Deferred that will call the input\n *     callback with the input value.\n * @template T\n */\ngoog.async.Deferred.when = function(value, callback, opt_scope) {\n  if (value instanceof goog.async.Deferred) {\n    return value.branch(true).addCallback(callback, opt_scope);\n  } else {\n    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);\n  }\n};\n\n\n\n/**\n * An error sub class that is used when a Deferred has already been called.\n * @param {!goog.async.Deferred} deferred The Deferred.\n *\n * @constructor\n * @extends {goog.debug.Error}\n */\ngoog.async.Deferred.AlreadyCalledError = function(deferred) {\n  goog.debug.Error.call(this);\n\n  /**\n   * The Deferred that raised this error.\n   * @type {goog.async.Deferred}\n   */\n  this.deferred = deferred;\n};\ngoog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);\n\n\n/** @override */\ngoog.async.Deferred.AlreadyCalledError.prototype.message =\n    'Deferred has already fired';\n\n\n/** @override */\ngoog.async.Deferred.AlreadyCalledError.prototype.name = 'AlreadyCalledError';\n\n\n\n/**\n * An error sub class that is used when a Deferred is canceled.\n *\n * @param {!goog.async.Deferred} deferred The Deferred object.\n * @constructor\n * @extends {goog.debug.Error}\n */\ngoog.async.Deferred.CanceledError = function(deferred) {\n  goog.debug.Error.call(this);\n\n  /**\n   * The Deferred that raised this error.\n   * @type {goog.async.Deferred}\n   */\n  this.deferred = deferred;\n};\ngoog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);\n\n\n/** @override */\ngoog.async.Deferred.CanceledError.prototype.message = 'Deferred was canceled';\n\n\n/** @override */\ngoog.async.Deferred.CanceledError.prototype.name = 'CanceledError';\n\n\n\n/**\n * Wrapper around errors that are scheduled to be thrown by failing deferreds\n * after a timeout.\n *\n * @param {*} error Error from a failing deferred.\n * @constructor\n * @final\n * @private\n * @struct\n */\ngoog.async.Deferred.Error_ = function(error) {\n  /** @const @private {number} */\n  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);\n\n  /** @const @private {*} */\n  this.error_ = error;\n};\n\n\n/**\n * Actually throws the error and removes it from the list of pending\n * deferred errors.\n */\ngoog.async.Deferred.Error_.prototype.throwError = function() {\n  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_],\n      'Cannot throw an error that is not scheduled.');\n  delete goog.async.Deferred.errorMap_[this.id_];\n  throw this.error_;\n};\n\n\n/**\n * Resets the error throw timer.\n */\ngoog.async.Deferred.Error_.prototype.resetTimer = function() {\n  goog.global.clearTimeout(this.id_);\n};\n\n\n/**\n * Map of unhandled errors scheduled to be rethrown in a future timestep.\n * @private {!Object<(number|string), goog.async.Deferred.Error_>}\n */\ngoog.async.Deferred.errorMap_ = {};\n\n\n/**\n * Schedules an error to be thrown after a delay.\n * @param {*} error Error from a failing deferred.\n * @return {number} Id of the error.\n * @private\n */\ngoog.async.Deferred.scheduleError_ = function(error) {\n  var deferredError = new goog.async.Deferred.Error_(error);\n  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;\n  return deferredError.id_;\n};\n\n\n/**\n * Unschedules an error from being thrown.\n * @param {number} id Id of the deferred error to unschedule.\n * @private\n */\ngoog.async.Deferred.unscheduleError_ = function(id) {\n  var error = goog.async.Deferred.errorMap_[id];\n  if (error) {\n    error.resetTimer();\n    delete goog.async.Deferred.errorMap_[id];\n  }\n};\n\n\n/**\n * Asserts that there are no pending deferred errors. If there are any\n * scheduled errors, one will be thrown immediately to make this function fail.\n */\ngoog.async.Deferred.assertNoErrors = function() {\n  var map = goog.async.Deferred.errorMap_;\n  for (var key in map) {\n    var error = map[key];\n    error.resetTimer();\n    error.throwError();\n  }\n};\n","// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A utility to load JavaScript files via DOM script tags.\n * Refactored from goog.net.Jsonp. Works cross-domain.\n *\n */\n\ngoog.provide('goog.net.jsloader');\ngoog.provide('goog.net.jsloader.Error');\ngoog.provide('goog.net.jsloader.ErrorCode');\ngoog.provide('goog.net.jsloader.Options');\n\ngoog.require('goog.array');\ngoog.require('goog.async.Deferred');\ngoog.require('goog.debug.Error');\ngoog.require('goog.dom');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.safe');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.object');\n\n\n/**\n * The name of the property of goog.global under which the JavaScript\n * verification object is stored by the loaded script.\n * @private {string}\n */\ngoog.net.jsloader.GLOBAL_VERIFY_OBJS_ = 'closure_verification';\n\n\n/**\n * The default length of time, in milliseconds, we are prepared to wait for a\n * load request to complete.\n * @type {number}\n */\ngoog.net.jsloader.DEFAULT_TIMEOUT = 5000;\n\n\n/**\n * Optional parameters for goog.net.jsloader.send.\n * timeout: The length of time, in milliseconds, we are prepared to wait\n *     for a load request to complete, or 0 or negative for no timeout. Default\n *     is 5 seconds.\n * document: The HTML document under which to load the JavaScript. Default is\n *     the current document.\n * cleanupWhenDone: If true clean up the script tag after script completes to\n *     load. This is important if you just want to read data from the JavaScript\n *     and then throw it away. Default is false.\n * attributes: Additional attributes to set on the script tag.\n *\n * @typedef {{\n *   timeout: (number|undefined),\n *   document: (HTMLDocument|undefined),\n *   cleanupWhenDone: (boolean|undefined),\n *   attributes: (!Object<string, string>|undefined)\n * }}\n */\ngoog.net.jsloader.Options;\n\n\n/**\n * Scripts (URIs) waiting to be loaded.\n * @private {!Array<!goog.html.TrustedResourceUrl>}\n */\ngoog.net.jsloader.scriptsToLoad_ = [];\n\n\n/**\n * The deferred result of loading the URIs in scriptsToLoad_.\n * We need to return this to a caller that wants to load URIs while\n * a deferred is already working on them.\n * @private {!goog.async.Deferred<null>}\n */\ngoog.net.jsloader.scriptLoadingDeferred_;\n\n\n\n/**\n * Loads and evaluates the JavaScript files at the specified URIs, guaranteeing\n * the order of script loads.\n *\n * Because we have to load the scripts in serial (load script 1, exec script 1,\n * load script 2, exec script 2, and so on), this will be slower than doing\n * the network fetches in parallel.\n *\n * If you need to load a large number of scripts but dependency order doesn't\n * matter, you should just call goog.net.jsloader.safeLoad N times.\n *\n * If you need to load a large number of scripts on the same domain,\n * you may want to use goog.module.ModuleLoader.\n *\n * @param {Array<!goog.html.TrustedResourceUrl>} trustedUris The URIs to load.\n * @param {goog.net.jsloader.Options=} opt_options Optional parameters. See\n *     goog.net.jsloader.options documentation for details.\n * @return {!goog.async.Deferred} The deferred result, that may be used to add\n *     callbacks\n */\ngoog.net.jsloader.safeLoadMany = function(trustedUris, opt_options) {\n  // Loading the scripts in serial introduces asynchronosity into the flow.\n  // Therefore, there are race conditions where client A can kick off the load\n  // sequence for client B, even though client A's scripts haven't all been\n  // loaded yet.\n  //\n  // To work around this issue, all module loads share a queue.\n  if (!trustedUris.length) {\n    return goog.async.Deferred.succeed(null);\n  }\n\n  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;\n  goog.array.extend(goog.net.jsloader.scriptsToLoad_, trustedUris);\n  if (isAnotherModuleLoading) {\n    // jsloader is still loading some other scripts.\n    // In order to prevent the race condition noted above, we just add\n    // these URIs to the end of the scripts' queue and return the deferred\n    // result of the ongoing script load, so the caller knows when they\n    // finish loading.\n    return goog.net.jsloader.scriptLoadingDeferred_;\n  }\n\n  trustedUris = goog.net.jsloader.scriptsToLoad_;\n  var popAndLoadNextScript = function() {\n    var trustedUri = trustedUris.shift();\n    var deferred = goog.net.jsloader.safeLoad(trustedUri, opt_options);\n    if (trustedUris.length) {\n      deferred.addBoth(popAndLoadNextScript);\n    }\n    return deferred;\n  };\n  goog.net.jsloader.scriptLoadingDeferred_ = popAndLoadNextScript();\n  return goog.net.jsloader.scriptLoadingDeferred_;\n};\n\n\n/**\n * Loads and evaluates a JavaScript file.\n * When the script loads, a user callback is called.\n * It is the client's responsibility to verify that the script ran successfully.\n *\n * @param {!goog.html.TrustedResourceUrl} trustedUri The URI of the JavaScript.\n * @param {goog.net.jsloader.Options=} opt_options Optional parameters. See\n *     goog.net.jsloader.Options documentation for details.\n * @return {!goog.async.Deferred} The deferred result, that may be used to add\n *     callbacks and/or cancel the transmission.\n *     The error callback will be called with a single goog.net.jsloader.Error\n *     parameter.\n */\ngoog.net.jsloader.safeLoad = function(trustedUri, opt_options) {\n  var options = opt_options || {};\n  var doc = options.document || document;\n  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);\n\n  var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);\n  var request = {script_: script, timeout_: undefined};\n  var deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request);\n\n  // Set a timeout.\n  var timeout = null;\n  var timeoutDuration = goog.isDefAndNotNull(options.timeout) ?\n      options.timeout :\n      goog.net.jsloader.DEFAULT_TIMEOUT;\n  if (timeoutDuration > 0) {\n    timeout = window.setTimeout(function() {\n      goog.net.jsloader.cleanup_(script, true);\n      deferred.errback(\n          new goog.net.jsloader.Error(\n              goog.net.jsloader.ErrorCode.TIMEOUT,\n              'Timeout reached for loading script ' + uri));\n    }, timeoutDuration);\n    request.timeout_ = timeout;\n  }\n\n  // Hang the user callback to be called when the script completes to load.\n  // NOTE(user): This callback will be called in IE even upon error. In any\n  // case it is the client's responsibility to verify that the script ran\n  // successfully.\n  script.onload = script.onreadystatechange = function() {\n    if (!script.readyState || script.readyState == 'loaded' ||\n        script.readyState == 'complete') {\n      var removeScriptNode = options.cleanupWhenDone || false;\n      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);\n      deferred.callback(null);\n    }\n  };\n\n  // Add an error callback.\n  // NOTE(user): Not supported in IE.\n  script.onerror = function() {\n    goog.net.jsloader.cleanup_(script, true, timeout);\n    deferred.errback(\n        new goog.net.jsloader.Error(\n            goog.net.jsloader.ErrorCode.LOAD_ERROR,\n            'Error while loading script ' + uri));\n  };\n\n  var properties = options.attributes || {};\n  goog.object.extend(\n      properties, {'type': 'text/javascript', 'charset': 'UTF-8'});\n  goog.dom.setProperties(script, properties);\n  // NOTE(user): Safari never loads the script if we don't set the src\n  // attribute before appending.\n  goog.dom.safe.setScriptSrc(script, trustedUri);\n  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);\n  scriptParent.appendChild(script);\n\n  return deferred;\n};\n\n\n/**\n * Loads a JavaScript file and verifies it was evaluated successfully, using a\n * verification object.\n * The verification object is set by the loaded JavaScript at the end of the\n * script.\n * We verify this object was set and return its value in the success callback.\n * If the object is not defined we trigger an error callback.\n *\n * @param {!goog.html.TrustedResourceUrl} trustedUri The URI of the JavaScript.\n * @param {string} verificationObjName The name of the verification object that\n *     the loaded script should set.\n * @param {goog.net.jsloader.Options} options Optional parameters. See\n *     goog.net.jsloader.Options documentation for details.\n * @return {!goog.async.Deferred} The deferred result, that may be used to add\n *     callbacks and/or cancel the transmission.\n *     The success callback will be called with a single parameter containing\n *     the value of the verification object.\n *     The error callback will be called with a single goog.net.jsloader.Error\n *     parameter.\n */\ngoog.net.jsloader.safeLoadAndVerify = function(\n    trustedUri, verificationObjName, options) {\n  // Define the global objects variable.\n  if (!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]) {\n    goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {};\n  }\n  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];\n  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);\n\n  // Verify that the expected object does not exist yet.\n  if (goog.isDef(verifyObjs[verificationObjName])) {\n    // TODO(user): Error or reset variable?\n    return goog.async.Deferred.fail(\n        new goog.net.jsloader.Error(\n            goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS,\n            'Verification object ' + verificationObjName +\n                ' already defined.'));\n  }\n\n  // Send request to load the JavaScript.\n  var sendDeferred = goog.net.jsloader.safeLoad(trustedUri, options);\n\n  // Create a deferred object wrapping the send result.\n  var deferred =\n      new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));\n\n  // Call user back with object that was set by the script.\n  sendDeferred.addCallback(function() {\n    var result = verifyObjs[verificationObjName];\n    if (goog.isDef(result)) {\n      deferred.callback(result);\n      delete verifyObjs[verificationObjName];\n    } else {\n      // Error: script was not loaded properly.\n      deferred.errback(\n          new goog.net.jsloader.Error(\n              goog.net.jsloader.ErrorCode.VERIFY_ERROR, 'Script ' + uri +\n                  ' loaded, but verification object ' + verificationObjName +\n                  ' was not defined.'));\n    }\n  });\n\n  // Pass error to new deferred object.\n  sendDeferred.addErrback(function(error) {\n    if (goog.isDef(verifyObjs[verificationObjName])) {\n      delete verifyObjs[verificationObjName];\n    }\n    deferred.errback(error);\n  });\n\n  return deferred;\n};\n\n\n/**\n * Gets the DOM element under which we should add new script elements.\n * How? Take the first head element, and if not found take doc.documentElement,\n * which always exists.\n *\n * @param {!HTMLDocument} doc The relevant document.\n * @return {!Element} The script parent element.\n * @private\n */\ngoog.net.jsloader.getScriptParentElement_ = function(doc) {\n  var headElements = goog.dom.getElementsByTagName(goog.dom.TagName.HEAD, doc);\n  if (!headElements || goog.array.isEmpty(headElements)) {\n    return doc.documentElement;\n  } else {\n    return headElements[0];\n  }\n};\n\n\n/**\n * Cancels a given request.\n * @this {{script_: Element, timeout_: number}} The request context.\n * @private\n */\ngoog.net.jsloader.cancel_ = function() {\n  var request = this;\n  if (request && request.script_) {\n    var scriptNode = request.script_;\n    if (scriptNode && scriptNode.tagName == goog.dom.TagName.SCRIPT) {\n      goog.net.jsloader.cleanup_(scriptNode, true, request.timeout_);\n    }\n  }\n};\n\n\n/**\n * Removes the script node and the timeout.\n *\n * @param {Node} scriptNode The node to be cleaned up.\n * @param {boolean} removeScriptNode If true completely remove the script node.\n * @param {?number=} opt_timeout The timeout handler to cleanup.\n * @private\n */\ngoog.net.jsloader.cleanup_ = function(\n    scriptNode, removeScriptNode, opt_timeout) {\n  if (goog.isDefAndNotNull(opt_timeout)) {\n    goog.global.clearTimeout(opt_timeout);\n  }\n\n  scriptNode.onload = goog.nullFunction;\n  scriptNode.onerror = goog.nullFunction;\n  scriptNode.onreadystatechange = goog.nullFunction;\n\n  // Do this after a delay (removing the script node of a running script can\n  // confuse older IEs).\n  if (removeScriptNode) {\n    window.setTimeout(function() { goog.dom.removeNode(scriptNode); }, 0);\n  }\n};\n\n\n/**\n * Possible error codes for jsloader.\n * @enum {number}\n */\ngoog.net.jsloader.ErrorCode = {\n  LOAD_ERROR: 0,\n  TIMEOUT: 1,\n  VERIFY_ERROR: 2,\n  VERIFY_OBJECT_ALREADY_EXISTS: 3\n};\n\n\n\n/**\n * A jsloader error.\n *\n * @param {goog.net.jsloader.ErrorCode} code The error code.\n * @param {string=} opt_message Additional message.\n * @constructor\n * @extends {goog.debug.Error}\n * @final\n */\ngoog.net.jsloader.Error = function(code, opt_message) {\n  var msg = 'Jsloader error (code #' + code + ')';\n  if (opt_message) {\n    msg += ': ' + opt_message;\n  }\n  goog.net.jsloader.Error.base(this, 'constructor', msg);\n\n  /**\n   * The code for this error.\n   *\n   * @type {goog.net.jsloader.ErrorCode}\n   */\n  this.code = code;\n};\ngoog.inherits(goog.net.jsloader.Error, goog.debug.Error);\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines fireauth.iframeclient.IframeWrapper used to communicate\n * with the hidden iframe to detect Auth events.\n */\n\ngoog.provide('fireauth.iframeclient.IframeWrapper');\n\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.net.jsloader');\ngoog.require('goog.string.Const');\n\n\n/**\n * Defines the hidden iframe wrapper for cross origin communications.\n * @param {string} url The hidden iframe src URL.\n * @constructor\n */\nfireauth.iframeclient.IframeWrapper = function(url) {\n  /** @private {string} The hidden iframe URL. */\n  this.url_ = url;\n\n  /**\n   * @type {?gapi.iframes.Iframe}\n   * @private\n   */\n  this.iframe_ = null;\n\n  /** @private {!goog.Promise} A promise that resolves on iframe open. */\n  this.onIframeOpen_ = this.open_();\n};\n\n\n/**\n * @typedef {{\n *   type: string\n * }}\n */\nfireauth.iframeclient.IframeWrapper.Message;\n\n/**\n * Returns URL, src of the hidden iframe.\n * @return {string}\n * @private\n */\nfireauth.iframeclient.IframeWrapper.prototype.getPath_ = function() {\n  return this.url_;\n};\n\n\n/**\n * @return {!goog.Promise} The promise that resolves when the iframe is ready.\n */\nfireauth.iframeclient.IframeWrapper.prototype.onReady = function() {\n  return this.onIframeOpen_;\n};\n\n\n/**\n * Returns options used to open the iframe.\n * @return {!gapi.iframes.OptionsBag}\n * @private\n */\nfireauth.iframeclient.IframeWrapper.prototype.getOptions_ = function() {\n  var options = /** @type {!gapi.iframes.OptionsBag} */ ({\n    'where': document.body,\n    'url': this.getPath_(),\n    'messageHandlersFilter': /** @type {!gapi.iframes.IframesFilter} */ (\n        fireauth.util.getObjectRef(\n            'gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER')),\n    'attributes': {\n      'style': {\n        'position': 'absolute',\n        'top': '-100px',\n        'width': '1px',\n        'height': '1px'\n      }\n    },\n    'dontclear': true\n  });\n  return options;\n};\n\n\n/**\n * Opens an iframe.\n * @return {!goog.Promise} A promise that resolves on successful iframe open.\n * @private\n */\nfireauth.iframeclient.IframeWrapper.prototype.open_ = function() {\n  var self = this;\n  return fireauth.iframeclient.IframeWrapper.loadGApiJs_().then(function() {\n    return new goog.Promise(function(resolve, reject) {\n      /**\n       * @param {?gapi.iframes.Iframe} iframe The new opened iframe.\n       */\n      var onOpen = function(iframe) {\n        self.iframe_ = iframe;\n        self.iframe_.restyle({\n          // Prevent iframe from closing on mouse out.\n          'setHideOnLeave': false\n        });\n        // Confirm iframe is correctly loaded.\n        // To fallback on failure, set a timeout.\n        var networkErrorTimer = setTimeout(function() {\n          reject(new Error('Network Error'));\n        }, fireauth.iframeclient.IframeWrapper.PING_TIMEOUT_.get());\n        // Clear timer and resolve pending iframe ready promise.\n        var clearTimerAndResolve = function() {\n          clearTimeout(networkErrorTimer);\n          resolve();\n        };\n        // This returns an IThenable. However the reject part does not call\n        // when the iframe is not loaded.\n        iframe.ping(clearTimerAndResolve).then(\n            clearTimerAndResolve,\n            function(error) { reject(new Error('Network Error')); });\n      };\n      /** @type {function():!gapi.iframes.Context} */ (\n          fireauth.util.getObjectRef('gapi.iframes.getContext'))().open(\n              self.getOptions_(), onOpen);\n    });\n  });\n};\n\n\n/**\n * @param {!fireauth.iframeclient.IframeWrapper.Message} message to send.\n * @return {!goog.Promise<?Object>} The promise that resolve when message is\n *     sent.\n */\nfireauth.iframeclient.IframeWrapper.prototype.sendMessage = function(message) {\n  var self = this;\n  return this.onIframeOpen_.then(function() {\n    return new goog.Promise(function(resolve, reject) {\n      self.iframe_.send(\n          message['type'],\n          message,\n          resolve,\n          /** @type {!gapi.iframes.IframesFilter} */ (\n              fireauth.util.getObjectRef(\n                  'gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER')));\n\n    });\n  });\n};\n\n\n/**\n * Registers a listener to a post message.\n * @param {string} eventName The message to register for.\n * @param {gapi.iframes.MessageHandler} handler Message handler.\n */\nfireauth.iframeclient.IframeWrapper.prototype.registerEvent =\n    function(eventName, handler) {\n  var self = this;\n  this.onIframeOpen_.then(function() {\n    self.iframe_.register(\n        eventName,\n        /** @type {function(this:gapi.iframes.Iframe,\n         *                  *, gapi.iframes.Iframe): *}\n         */ (handler),\n        /** @type {!gapi.iframes.IframesFilter} */ (\n            fireauth.util.getObjectRef(\n                'gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER')));\n  });\n};\n\n\n/**\n * Unregisters a listener to a post message.\n * @param {string} eventName The message to unregister.\n * @param {gapi.iframes.MessageHandler} handler Message handler.\n */\nfireauth.iframeclient.IframeWrapper.prototype.unregisterEvent =\n    function(eventName, handler) {\n  var self = this;\n  this.onIframeOpen_.then(function() {\n    self.iframe_.unregister(\n        eventName,\n        /** @type {(function(this:gapi.iframes.Iframe,\n         *                   *, gapi.iframes.Iframe): *|undefined)}\n         */ (handler));\n  });\n};\n\n\n/** @private @const {!goog.string.Const} The GApi loader URL. */\nfireauth.iframeclient.IframeWrapper.GAPI_LOADER_SRC_ = goog.string.Const.from(\n    'https://apis.google.com/js/api.js?onload=%{onload}');\n\n\n/**\n * @private @const {!fireauth.util.Delay} The gapi.load network error timeout\n *     delay with units in ms.\n */\nfireauth.iframeclient.IframeWrapper.NETWORK_TIMEOUT_ =\n    new fireauth.util.Delay(30000, 60000);\n\n\n/**\n * @private @const {!fireauth.util.Delay} The iframe ping error timeout delay\n *     with units in ms.\n */\nfireauth.iframeclient.IframeWrapper.PING_TIMEOUT_ =\n    new fireauth.util.Delay(5000, 15000);\n\n\n/** @private {?goog.Promise} The cached GApi loader promise. */\nfireauth.iframeclient.IframeWrapper.cachedGApiLoader_ = null;\n\n\n/** Resets the cached GApi loader. */\nfireauth.iframeclient.IframeWrapper.resetCachedGApiLoader = function() {\n  fireauth.iframeclient.IframeWrapper.cachedGApiLoader_ = null;\n};\n\n\n\n/**\n * Loads the GApi client library if it is not loaded for gapi.iframes usage.\n * @return {!goog.Promise} A promise that resolves when gapi.iframes is loaded.\n * @private\n */\nfireauth.iframeclient.IframeWrapper.loadGApiJs_ = function() {\n  // If already pending or resolved, return the cached promise.\n  if (fireauth.iframeclient.IframeWrapper.cachedGApiLoader_) {\n    return fireauth.iframeclient.IframeWrapper.cachedGApiLoader_;\n  }\n  // If there is no cached promise, initialize a new one.\n  fireauth.iframeclient.IframeWrapper.cachedGApiLoader_ =\n      new goog.Promise(function(resolve, reject) {\n    // Function to run when gapi.load is ready.\n    var onGapiLoad = function() {\n      // The developer may have tried to previously run gapi.load and failed.\n      // Run this to fix that.\n      fireauth.util.resetUnloadedGapiModules();\n      var loader = /** @type {function(string, !Object)} */ (\n          fireauth.util.getObjectRef('gapi.load'));\n      loader('gapi.iframes', {\n        'callback': resolve,\n        'ontimeout': function() {\n          // The above reset may be sufficient, but having this reset after\n          // failure ensures that if the developer calls gapi.load after the\n          // connection is re-established and before another attempt to embed\n          // the iframe, it would work and would not be broken because of our\n          // failed attempt.\n          // Timeout when gapi.iframes.Iframe not loaded.\n          fireauth.util.resetUnloadedGapiModules();\n          reject(new Error('Network Error'));\n        },\n        'timeout': fireauth.iframeclient.IframeWrapper.NETWORK_TIMEOUT_.get()\n      });\n    };\n    if (fireauth.util.getObjectRef('gapi.iframes.Iframe')) {\n      // If gapi.iframes.Iframe available, resolve.\n      resolve();\n    } else if (fireauth.util.getObjectRef('gapi.load')) {\n      // Gapi loader ready, load gapi.iframes.\n      onGapiLoad();\n    } else {\n      // Create a new iframe callback when this is called so as not to overwrite\n      // any previous defined callback. This happens if this method is called\n      // multiple times in parallel and could result in the later callback\n      // overwriting the previous one. This would end up with a iframe\n      // timeout.\n      var cbName = '__iframefcb' +\n          Math.floor(Math.random() * 1000000).toString();\n      // GApi loader not available, dynamically load platform.js.\n      goog.global[cbName] = function() {\n        // GApi loader should be ready.\n        if (fireauth.util.getObjectRef('gapi.load')) {\n          onGapiLoad();\n        } else {\n          // Gapi loader failed, throw error.\n          reject(new Error('Network Error'));\n        }\n      };\n      // Build GApi loader.\n      var url = goog.html.TrustedResourceUrl.format(\n          fireauth.iframeclient.IframeWrapper.GAPI_LOADER_SRC_,\n          {'onload': cbName});\n      // Load GApi loader.\n      var result = goog.Promise.resolve(goog.net.jsloader.safeLoad(url));\n      result.thenCatch(function(error) {\n        // In case library fails to load, typically due to a network error,\n        // reset cached loader to null to force a refresh on a retrial.\n        reject(new Error('Network Error'));\n      });\n    }\n  }).thenCatch(function(error) {\n    // Reset cached promise to allow for retrial.\n    fireauth.iframeclient.IframeWrapper.cachedGApiLoader_ = null;\n    throw error;\n  });\n  return fireauth.iframeclient.IframeWrapper.cachedGApiLoader_;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.AsyncStorage');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.storage.Storage');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\n\n\n/**\n * AsyncStorage provides an interface to the React Native AsyncStorage API.\n * @param {!Object=} opt_asyncStorage The AsyncStorage API. If not provided\n *     this method will attempt to fetch an implementation from\n *     firebase.INTERNAL.reactNative.\n * @constructor\n * @implements {fireauth.storage.Storage}\n * @see https://facebook.github.io/react-native/docs/asyncstorage.html\n */\nfireauth.storage.AsyncStorage = function(opt_asyncStorage) {\n  /**\n   * The underlying storage instance for persistent data.\n   * @private\n   */\n  this.storage_ =\n      opt_asyncStorage || (firebase.INTERNAL['reactNative'] &&\n                           firebase.INTERNAL['reactNative']['AsyncStorage']);\n\n  if (!this.storage_) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n        'The React Native compatibility library was not found.');\n  }\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.ASYNC_STORAGE;\n};\n\n\n/**\n * Retrieves the value stored at the key.\n * @param {string} key\n * @return {!goog.Promise<*>}\n * @override\n */\nfireauth.storage.AsyncStorage.prototype.get = function(key) {\n  return goog.Promise.resolve(this.storage_['getItem'](key))\n      .then(function(val) {\n        return val && fireauth.util.parseJSON(val);\n      });\n};\n\n\n/**\n * Stores the value at the specified key.\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.AsyncStorage.prototype.set = function(key, value) {\n  return goog.Promise.resolve(\n      this.storage_['setItem'](key, fireauth.util.stringifyJSON(value)));\n};\n\n\n/**\n * Removes the value at the specified key.\n * @param {string} key\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.AsyncStorage.prototype.remove = function(key) {\n  return goog.Promise.resolve(this.storage_['removeItem'](key));\n};\n\n\n/**\n * Does nothing. AsyncStorage does not support storage events,\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.AsyncStorage.prototype.addStorageListener = function(\n    listener) {};\n\n\n/**\n * Does nothing. AsyncStorage does not support storage events,\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.AsyncStorage.prototype.removeStorageListener = function(\n    listener) {};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.Storage');\n\n\n\n/**\n * Defines a generic interface to storage APIs across platforms.\n * @interface\n */\nfireauth.storage.Storage = function() {};\n\n\n/**\n * Retrieves the value stored at the key.\n * @param {string} key\n * @return {!goog.Promise<*>}\n */\nfireauth.storage.Storage.prototype.get = function(key) {};\n\n\n/**\n * Stores the value at the specified key.\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n */\nfireauth.storage.Storage.prototype.set = function(key, value) {};\n\n\n/**\n * Removes the value at the specified key.\n * @param {string} key\n * @return {!goog.Promise<void>}\n */\nfireauth.storage.Storage.prototype.remove = function(key) {};\n\n\n/**\n * Adds a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)|function(!Array<string>)}\n *     listener The storage event listener.\n */\nfireauth.storage.Storage.prototype.addStorageListener = function(listener) {};\n\n\n/**\n * Removes a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)|function(!Array<string>)}\n *     listener The storage event listener.\n */\nfireauth.storage.Storage.prototype.removeStorageListener = function(listener) {\n};\n\n\n/** @type {string} The storage type identifier. */\nfireauth.storage.Storage.prototype.type;\n\n\n/**\n * Enum for the identifier of the type of underlying storage.\n * @enum {string}\n */\nfireauth.storage.Storage.Type = {\n  ASYNC_STORAGE: 'asyncStorage',\n  IN_MEMORY: 'inMemory',\n  INDEXEDDB: 'indexedDB',\n  LOCAL_STORAGE: 'localStorage',\n  MOCK_STORAGE: 'mockStorage',\n  NULL_STORAGE: 'nullStorage',\n  SESSION_STORAGE: 'sessionStorage'\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the MessageChannel based wrapper for receiving\n * messages from other windows or workers.\n */\n\ngoog.provide('fireauth.messagechannel.Receiver');\n\ngoog.require('fireauth.messagechannel.Status');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\ngoog.require('goog.object');\n\n\n/**\n * Initializes a channel to receive specific messages from a specified event\n * target.\n * Note receivers should not be manually instantiated. Instead `getInstance()`\n * should be used instead to get a receiver instance for a specified event\n * target.\n * @param {!EventTarget} eventTarget The event target to listen to.\n * @constructor\n */\nfireauth.messagechannel.Receiver = function(eventTarget) {\n  /**\n   * @const @private {!EventTarget} The messageChannel event target.\n   */\n  this.eventTarget_ = eventTarget;\n  /**\n   * @const @private {!Object.<string,\n   *                    !Array<function(string, *):!goog.Promise<?>|void>>}\n   *     This is the event type to handlers hash map. It is used to hold the\n   *     corresponding handlers for specified events.\n   */\n  this.eventHandlers_ = {};\n  /**\n   * @const @private {function(!Event)} The internal 'message' event handler\n   *     used to reroute the request to corresponding subscribed handlers.\n   */\n  this.messageEventHandler_ = goog.bind(this.handleEvent_, this);\n};\n\n\n/**\n * @param {!EventTarget} eventTarget The event target to check for.\n * @return {boolean} Whether the receiver is listening to the specified event\n *     target.\n */\nfireauth.messagechannel.Receiver.prototype.isListeningTo =\n    function(eventTarget) {\n  return this.eventTarget_ == eventTarget;\n};\n\n\n/**\n * @const @private {!Array<!fireauth.messagechannel.Receiver>} The list of all\n *     created `fireauth.messagechannel.Receiver` instances.\n */\nfireauth.messagechannel.Receiver.receivers_ = [];\n\n\n/**\n * Return a receiver instance for the specified event target. This is needed\n * since one instance can be available per event target. Otherwise receivers\n * could clobber each other.\n * @param {!EventTarget} eventTarget The event target to listen to.\n * @return {!fireauth.messagechannel.Receiver} The receiver instance for the\n *     specified event target.\n */\nfireauth.messagechannel.Receiver.getInstance = function(eventTarget) {\n  // The results are stored in an array since objects can't be keys for other\n  // objects. In addition, setting a unique property on an event target as a\n  // hash map key may not be allowed due to CORS restrictions.\n  var instance;\n  goog.array.forEach(\n      fireauth.messagechannel.Receiver.receivers_,\n      function(receiver) {\n        if (receiver.isListeningTo(eventTarget)) {\n          instance = receiver;\n        }\n      });\n  if (!instance) {\n    instance = new fireauth.messagechannel.Receiver(eventTarget);\n    fireauth.messagechannel.Receiver.receivers_.push(instance);\n  }\n  return instance;\n};\n\n\n/**\n * Handles a PostMessage event based on the following protocol:\n * <ul>\n * <li>When an event is first detected, check there is a subscribed handler.\n *     If not, do nothing as there could be other listeners.</li>\n * <li>If there is a subscribed event, reply with an ACK event to notify the\n *     sender that the event can be handled.</li>\n * <li>Trigger the subscribed handlers.</li>\n * <li>Reply again with the combined results of all subscribed handlers and\n *     return the response back.</li>\n * </ul>\n *\n * @param {!Event} event The PostMessage event to handle.\n * @private\n */\nfireauth.messagechannel.Receiver.prototype.handleEvent_ = function(event) {\n  // Respond to sender first with ack reply. This will let the client\n  // know that the service worker can handle this event.\n  var eventType = event.data['eventType'];\n  var eventId = event.data['eventId'];\n  var handlers = this.eventHandlers_[eventType];\n  if (handlers && handlers.length > 0) {\n    // Event can be handled.\n    event.ports[0].postMessage({\n      'status': fireauth.messagechannel.Status.ACK,\n      'eventId': eventId,\n      'eventType': eventType,\n      'response': null\n    });\n    var promises = [];\n    goog.array.forEach(handlers, function(handler) {\n      // Wrap in promise in case the handler doesn't return a promise.\n      promises.push(goog.Promise.resolve().then(function() {\n        return handler(event.origin, event.data['data']);\n      }));\n    });\n    // allSettled is more flexible as it executes all the promises passed and\n    // returns whether they succeeded or failed.\n    goog.Promise.allSettled(promises)\n        .then(function(result) {\n          // allResponse has the format:\n          // !Array<!{fulfilled: boolean, value: (*|undefined),\n          //          reason: (*|undefined)}>\n          // Respond to sender with ack reply.\n          // De-obfuscate the allSettled result.\n          var allResponses = [];\n          goog.array.forEach(result, function(item) {\n            allResponses.push({\n              'fulfilled': item.fulfilled,\n              'value': item.value,\n              // Error cannot be clone in postMessage.\n              'reason': item.reason ? item.reason.message : undefined\n            });\n          });\n          // Remove undefined fields.\n          goog.array.forEach(allResponses, function(item) {\n            for (var key in item) {\n              if (typeof item[key] === 'undefined') {\n                delete item[key];\n              }\n            }\n          });\n          event.ports[0].postMessage({\n            'status': fireauth.messagechannel.Status.DONE,\n            'eventId': eventId,\n            'eventType': eventType,\n            'response': allResponses\n          });\n        });\n  }\n  // Let unsupported events time out, as there could be external receivers\n  // that can handle them.\n};\n\n\n/**\n * Subscribes to events of the specified type.\n * @param {string} eventType The event type to listen to.\n * @param {function(string, *):!goog.Promise<?>|void} handler The async callback\n *     function to run when the event is triggered.\n */\nfireauth.messagechannel.Receiver.prototype.subscribe =\n    function(eventType, handler) {\n  if (goog.object.isEmpty(this.eventHandlers_)) {\n    this.eventTarget_.addEventListener('message', this.messageEventHandler_);\n  }\n  if (typeof this.eventHandlers_[eventType] === 'undefined') {\n    this.eventHandlers_[eventType] = [];\n  }\n  this.eventHandlers_[eventType].push(handler);\n};\n\n\n/**\n * Unsubscribes the specified handler from the specified event. If no handler\n * is specified, all handlers are unsubscribed.\n * @param {string} eventType The event type to unsubscribe from.\n * @param {?function(string, *):!goog.Promise<?>|void=} opt_handler The\n *     callback function to unsubscribe from the specified event type. If none\n *     is specified, all handlers are unsubscribed.\n */\nfireauth.messagechannel.Receiver.prototype.unsubscribe =\n    function(eventType, opt_handler) {\n  if (typeof this.eventHandlers_[eventType] !== 'undefined' && opt_handler) {\n    goog.array.removeAllIf(this.eventHandlers_[eventType], function(ele) {\n      return ele == opt_handler;\n    });\n    if (this.eventHandlers_[eventType].length == 0) {\n      delete this.eventHandlers_[eventType];\n    }\n  } else if (!opt_handler) {\n    // Unsubscribe all handlers for speficied event.\n    delete this.eventHandlers_[eventType];\n  }\n  if (goog.object.isEmpty(this.eventHandlers_)) {\n    this.eventTarget_.removeEventListener('message', this.messageEventHandler_);\n  }\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the MessageChannel common utilities and enums.\n */\n\ngoog.provide('fireauth.messagechannel.Error');\ngoog.provide('fireauth.messagechannel.Status');\ngoog.provide('fireauth.messagechannel.TimeoutDuration');\ngoog.provide('fireauth.messagechannel.utils');\n\n\n/**\n * Enum for the messagechannel error messages. These errors are not meant to be\n * user facing.\n * @enum {string}\n */\nfireauth.messagechannel.Error = {\n  CONNECTION_CLOSED: 'connection_closed',\n  CONNECTION_UNAVAILABLE: 'connection_unavailable',\n  INVALID_RESPONSE: 'invalid_response',\n  TIMEOUT: 'timeout',\n  UNKNOWN: 'unknown_error',\n  UNSUPPORTED_EVENT: 'unsupported_event'\n};\n\n\n/**\n * Enum for the message channel request status labels.\n * @enum {string}\n */\nfireauth.messagechannel.Status = {\n  ACK: 'ack',\n  DONE: 'done'\n};\n\n\n/**\n * Enum for the timeout durations in milliseconds for different contexts.\n * @enum {number}\n */\nfireauth.messagechannel.TimeoutDuration = {\n  ACK: 50,\n  COMPLETION: 3000,\n  // Used when a handler is confirmed to be available on the other side.\n  LONG_ACK: 800\n};\n\n\n/**\n * @param {?string=} opt_prefix An optional prefix string to prepend to ID.\n * @param {?number=} opt_digits An optional number of digits used for event ID.\n * @return {string} The generated event ID used to identify a generic event.\n */\nfireauth.messagechannel.utils.generateEventId =\n    function(opt_prefix, opt_digits) {\n  // 0, null and undefined will default to 20.\n  var digits = opt_digits || 20;\n  return opt_prefix ? opt_prefix : '' +\n      Math.floor(Math.random() * Math.pow(10, digits)).toString();\n};\n\n\n/**\n * @return {?MessageChannel} The initialized MessageChannel instance if\n *     supported.\n */\nfireauth.messagechannel.utils.initializeMessageChannel = function() {\n  return typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the PostMessager interface needed for the\n * `fireauth.messagechannel.Sender`, in addition to 2 types of implementations.\n */\n\ngoog.provide('fireauth.messagechannel.PostMessager');\ngoog.provide('fireauth.messagechannel.WindowPostMessager');\ngoog.provide('fireauth.messagechannel.WorkerClientPostMessager');\n\n\n/**\n * This is the interface defining the postMessage format of a window which\n * takes an additional second parameter for target origin.\n *\n * @typedef {{\n *   postMessage: function(*, string, !Array<!Transferable>)\n * }}\n */\nfireauth.messagechannel.Window;\n\n\n/**\n * This is the interface defining the postMessage format of a worker or\n * ServiceWorkerClient, etc. which just takes a message and a list of\n * Transferables.\n *\n * @typedef {{\n *   postMessage: function(*, !Array<!Transferable>)\n * }}\n */\nfireauth.messagechannel.WorkerClient;\n\n\n/**\n * Defines a common interface to postMessage data to a specified PostMessager.\n * @interface\n */\nfireauth.messagechannel.PostMessager = function() {};\n\n\n/**\n * Sends a message to the specified context.\n * @param {*} message The message to send.\n * @param {!Array<!Transferable>} transfer The list of `Transferable` objects\n *     that are transferred with the message. The ownsership fo these objects is\n *     given to the destination side and they are no longer usable on the\n *     sending side.\n */\nfireauth.messagechannel.PostMessager.prototype.postMessage =\n    function(message, transfer) {};\n\n\n\n/**\n * Defines the implementation for postMessaging to a window context.\n * @param {!fireauth.messagechannel.Window} win The window PostMessager.\n * @param {?string=} opt_targetOrigin The target origin.\n * @constructor\n * @implements {fireauth.messagechannel.PostMessager}\n */\nfireauth.messagechannel.WindowPostMessager = function(win, opt_targetOrigin) {\n  /**\n   * @const @private {!fireauth.messagechannel.Window} The window PostMessager.\n   */\n  this.win_ = win;\n  /** @const @private {string} The postMessage target origin. */\n  this.targetOrigin_ = opt_targetOrigin || '*';\n};\n\n\n/**\n * Sends a message to the specified window context.\n * @param {*} message The message to send.\n * @param {!Array<!Transferable>} transfer The list of `Transferable` objects\n *     that are transferred with the message. The ownsership fo these objects is\n *     given to the destination side and they are no longer usable on the\n *     sending side.\n * @override\n */\nfireauth.messagechannel.WindowPostMessager.prototype.postMessage =\n    function(message, transfer) {\n  this.win_.postMessage(message, this.targetOrigin_, transfer);\n};\n\n\n/**\n * Defines the implementation for postMessaging to a worker/client context.\n * @param {!fireauth.messagechannel.WorkerClient} worker The worker/client\n *     PostMessager.\n * @constructor\n * @implements {fireauth.messagechannel.PostMessager}\n */\nfireauth.messagechannel.WorkerClientPostMessager = function(worker) {\n  /**\n   * @const @private {!fireauth.messagechannel.WorkerClient} The worker/client\n   *     PostMessager.\n   */\n  this.worker_ = worker;\n};\n\n\n/**\n * Sends a message to the specified worker/client context.\n * @param {*} message The message to send.\n * @param {!Array<!Transferable>} transfer The list of `Transferable` objects\n *     that are transferred with the message. The ownsership fo these objects is\n *     given to the destination side and they are no longer usable on the\n *     sending side.\n * @override\n */\nfireauth.messagechannel.WorkerClientPostMessager.prototype.postMessage =\n    function(message, transfer) {\n  this.worker_.postMessage(message, transfer);\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the MessageChannel based wrapper for sending messages\n * to other windows or workers.\n */\n\ngoog.provide('fireauth.messagechannel.Sender');\n\ngoog.require('fireauth.messagechannel.Error');\ngoog.require('fireauth.messagechannel.PostMessager');\ngoog.require('fireauth.messagechannel.Status');\ngoog.require('fireauth.messagechannel.TimeoutDuration');\ngoog.require('fireauth.messagechannel.utils');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\n\n\n/**\n * This is the interface defining a MessageChannel/handler pair.\n *\n * @typedef {{\n *   onMessage: function(!Event),\n *   messageChannel: !MessageChannel\n * }}\n */\nfireauth.messagechannel.MessageHandler;\n\n\n/**\n * Helper static function to create messageChannel errors.\n * @param {!fireauth.messagechannel.Error} errorId The error identifier.\n * @param {?string=} opt_message The optional error message used for generic\n *     error types.\n * @return {!Error} The constructed error to return.\n * @private\n */\nfireauth.messagechannel.createError_ = function(errorId, opt_message) {\n  if (errorId != fireauth.messagechannel.Error.UNKNOWN || !opt_message) {\n    return new Error(errorId);\n  } else {\n    return new Error(opt_message);\n  }\n};\n\n\n/**\n * Initializes a channel to send specific messages to a specified PostMessage.\n * @param {!fireauth.messagechannel.PostMessager} postMessager The post messager\n *     to send messages to.\n * @constructor\n */\nfireauth.messagechannel.Sender = function(postMessager) {\n  /**\n   * @const @private {!fireauth.messagechannel.PostMessager} The messageChannel\n   *     PostMessager.\n   */\n  this.postMessager_ = postMessager;\n  /** @private {boolean} Whether the connection was closed. */\n  this.closed_ = false;\n  /**\n   * @const @private {!Array<!fireauth.messagechannel.MessageHandler>} The list\n   *     of subscribed message handlers and their corresponding MessageChannels.\n   */\n  this.messageHandlers_ = [];\n};\n\n\n/**\n * Sends a message to the receiver. The message is identified by an event\n * type and can carry additional payload data.\n * The sender protocol works as follows:\n * <ul>\n * <li>The request is constructed and postMessaged to the receiver with the port\n *     used to reply back to sender.</li>\n * <li>The operation will block until an ACK response is received. If not, it\n *     will timeout and reject with an error.</li>\n * <li>If an ACK response is received, it will wait longer for the full\n *     processed response.</li>\n * <li>Once the response is received, the operation will resolve with that\n *     result.</li>\n * </ul>\n *\n * @param {string} eventType The event type identifying the message. This is\n *     used to help the receiver handle this message.\n * @param {?Object=} opt_data The optional data to send along the message.\n * @param {?boolean=} opt_useLongTimeout Whether long timeout should be used\n *     for ACK responses.\n * @return {!goog.Promise<!Array<{fulfilled: boolean,\n *                                value: (*|undefined),\n *                                reason: (*|undefined)}>>} A promise that\n *     resolves with the receiver responses.\n */\nfireauth.messagechannel.Sender.prototype.send = function(\n    eventType, opt_data, opt_useLongTimeout) {\n  var self = this;\n  var eventId;\n  var data = opt_data || {};\n  var onMessage;\n  var ackTimer;\n  var completionTimer;\n  var entry = null;\n  if (this.closed_) {\n    return goog.Promise.reject(fireauth.messagechannel.createError_(\n        fireauth.messagechannel.Error.CONNECTION_UNAVAILABLE));\n  }\n  var ackTimeout =\n      !!opt_useLongTimeout ?\n      fireauth.messagechannel.TimeoutDuration.LONG_ACK :\n      fireauth.messagechannel.TimeoutDuration.ACK;\n  var messageChannel =\n      fireauth.messagechannel.utils.initializeMessageChannel();\n  return new goog.Promise(function(resolve, reject) {\n    // Send message along with port for reply\n    if (messageChannel) {\n      eventId = fireauth.messagechannel.utils.generateEventId();\n      // Start the connection if not already started.\n      messageChannel.port1.start();\n      // Handler for receiving message reply from receiver.\n      // Blocks promise resolution until service worker detects the change.\n      ackTimer = setTimeout(function() {\n        // The receiver may not be able to handle the response for various\n        // reasons: library not included, or an incompatible version of\n        // the library is included.\n        // Timeout after some time.\n        reject(fireauth.messagechannel.createError_(\n            fireauth.messagechannel.Error.UNSUPPORTED_EVENT));\n      }, ackTimeout);\n      onMessage = function(event) {\n        // Process only the expected events that match current event ID.\n        if (event.data['eventId'] !== eventId) {\n          return;\n        }\n        // This avoids adding a long wait when the receiver is unable to handle\n        // the event.\n        if (event.data['status'] === fireauth.messagechannel.Status.ACK) {\n          clearTimeout(ackTimer);\n          // Set longer timeout to allow receiver to process.\n          completionTimer = setTimeout(function() {\n            reject(fireauth.messagechannel.createError_(\n                fireauth.messagechannel.Error.TIMEOUT));\n          }, fireauth.messagechannel.TimeoutDuration.COMPLETION);\n          return;\n        } else if (event.data['status'] ===\n                   fireauth.messagechannel.Status.DONE) {\n          clearTimeout(completionTimer);\n          if (typeof event.data['response'] !== 'undefined') {\n            resolve(event.data['response']);\n          } else {\n            reject(fireauth.messagechannel.createError_(\n                fireauth.messagechannel.Error.UNKNOWN));\n          }\n        } else {\n          clearTimeout(ackTimer);\n          clearTimeout(completionTimer);\n          reject(fireauth.messagechannel.createError_(\n              fireauth.messagechannel.Error.INVALID_RESPONSE));\n        }\n      };\n      entry = {\n        'messageChannel': messageChannel,\n        'onMessage': onMessage\n      };\n      self.messageHandlers_.push(entry);\n      messageChannel.port1.addEventListener('message', onMessage);\n      var request = {\n        'eventType': eventType,\n        'eventId': eventId,\n        'data': data\n      };\n      // It is possible the receiver cannot handle this result.\n      // For example, the developer may not be including the library in the\n      // receiver or using an outdated version.\n      self.postMessager_.postMessage(\n          request,\n          [messageChannel.port2]);\n    } else {\n      // No connection available.\n      reject(fireauth.messagechannel.createError_(\n          fireauth.messagechannel.Error.CONNECTION_UNAVAILABLE));\n    }\n  }).then(function(result) {\n    // On completion, remove the message handler. A new one is needed for a\n    // new message.\n    self.removeMessageHandler_(entry);\n    return result;\n  }).thenCatch(function(error) {\n    // On failure, remove the message handler. A new one is needed for a new\n    // message.\n    self.removeMessageHandler_(entry);\n    throw error;\n  });\n};\n\n\n/**\n * Removes the onMessage handler for the specified messageChannel.\n * @param {?fireauth.messagechannel.MessageHandler} messageHandler\n * @private\n */\nfireauth.messagechannel.Sender.prototype.removeMessageHandler_ =\n    function(messageHandler) {\n  if (!messageHandler) {\n    return;\n  }\n  var messageChannel = messageHandler['messageChannel'];\n  var onMessage = messageHandler['onMessage'];\n  if (messageChannel) {\n    messageChannel.port1.removeEventListener('message', onMessage);\n    messageChannel.port1.close();\n  }\n  goog.array.removeAllIf(this.messageHandlers_, function(ele) {\n    return ele == messageHandler;\n  });\n};\n\n\n/** Closes the underlying MessageChannel connection. */\nfireauth.messagechannel.Sender.prototype.close = function() {\n  // Any pending event will timeout.\n  while (this.messageHandlers_.length > 0) {\n    this.removeMessageHandler_(this.messageHandlers_[0]);\n  }\n  this.closed_ = true;\n};\n\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines a local storage interface with an indexedDB\n * implementation to be used as a fallback with browsers that do not synchronize\n * local storage changes between different windows of the same origin.\n */\n\ngoog.provide('fireauth.storage.IndexedDB');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.messagechannel.Receiver');\ngoog.require('fireauth.messagechannel.Sender');\ngoog.require('fireauth.messagechannel.WorkerClientPostMessager');\ngoog.require('fireauth.storage.Storage');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Timer');\ngoog.require('goog.array');\n\n\n\n/**\n * Initialize an indexedDB local storage manager used to mimic local storage\n * using an indexedDB underlying implementation including the ability to listen\n * to storage changes by key similar to localstorage storage event.\n * @param {string} dbName The indexedDB database name where all local storage\n *     data is to be stored.\n * @param {string} objectStoreName The indexedDB object store name where all\n *     local storage data is to be stored.\n * @param {string} dataKeyPath The indexedDB object store index name used to key\n *     all local storage data.\n * @param {string} valueKeyPath The indexedDB object store value field for each\n *     entry.\n * @param {number} version The indexedDB database version number.\n * @param {?IDBFactory=} opt_indexedDB The optional IndexedDB factory object.\n * @implements {fireauth.storage.Storage}\n * @constructor\n */\nfireauth.storage.IndexedDB = function(\n    dbName,\n    objectStoreName,\n    dataKeyPath,\n    valueKeyPath,\n    version,\n    opt_indexedDB) {\n  // indexedDB not available, fail hard.\n  if (!fireauth.storage.IndexedDB.isAvailable()) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED);\n  }\n  /**\n   * @const @private {string} The indexedDB database name where all local\n   *     storage data is to be stored.\n   */\n  this.dbName_ = dbName;\n  /**\n   * @const @private {string} The indexedDB object store name where all local\n   *     storage data is to be stored.\n   */\n  this.objectStoreName_ = objectStoreName;\n  /**\n   * @const @private {string} The indexedDB object store index name used to key\n   *     all local storage data.\n   */\n  this.dataKeyPath_ = dataKeyPath;\n  /**\n   * @const @private {string} The indexedDB object store value field for each\n   *     entry.\n   */\n  this.valueKeyPath_ = valueKeyPath;\n  /** @const @private {number} The indexedDB database version number. */\n  this.version_ = version;\n  /** @private {!Object.<string, *>} The local indexedDB map copy. */\n  this.localMap_ = {};\n  /**\n   * @private {!Array<function(!Array<string>)>} Listeners to storage events.\n   */\n  this.storageListeners_ = [];\n  /** @private {number} The indexedDB pending write operations tracker. */\n  this.pendingOpsTracker_ = 0;\n  /** @private {!IDBFactory} The indexedDB factory object. */\n  this.indexedDB_ = /** @type {!IDBFactory} */ (\n      opt_indexedDB || goog.global.indexedDB);\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.INDEXEDDB;\n  /**\n   * @private {?goog.Promise<void>} The pending polling promise for syncing\n   *     unprocessed indexedDB external changes.\n   */\n  this.poll_ = null;\n  /**\n   * @private {?number} The poll timer ID for syncing external indexedDB\n   *     changes.\n   */\n  this.pollTimerId_ = null;\n  /**\n   * @private {?fireauth.messagechannel.Receiver} The messageChannel receiver if\n   *     running from a serviceworker.\n   */\n  this.receiver_ = null;\n  /**\n   * @private {?fireauth.messagechannel.Sender} The messageChannel sender to\n   *     send keyChanged messages to the service worker from the client.\n   */\n  this.sender_ = null;\n  /**\n   * @private {boolean} Whether the service worker has a receiver for the\n   *     keyChanged events.\n   */\n  this.serviceWorkerReceiverAvailable_ = false;\n  /** @private {?ServiceWorker} The current active service worker. */\n  this.activeServiceWorker_ = null;\n  var scope = this;\n  if (fireauth.util.getWorkerGlobalScope()) {\n    this.receiver_ = fireauth.messagechannel.Receiver.getInstance(\n        /** @type {!WorkerGlobalScope} */ (\n            fireauth.util.getWorkerGlobalScope()));\n    // Listen to indexedDB changes.\n    this.receiver_.subscribe('keyChanged', function(origin, request) {\n      // Sync data.\n      return scope.sync_().then(function(keys) {\n        // Trigger listeners if unhandled changes are detected.\n        if (keys.length > 0) {\n          goog.array.forEach(\n              scope.storageListeners_,\n              function(listener) {\n                listener(keys);\n              });\n        }\n        // When this is false, it means the change was already\n        // detected and processed before the notification.\n        return {\n          'keyProcessed': goog.array.contains(keys, request['key'])\n        };\n      });\n    });\n    // Used to inform sender that service worker what events it supports.\n    this.receiver_.subscribe('ping', function(origin, request) {\n      return goog.Promise.resolve(['keyChanged']);\n    });\n  } else {\n    // Get active service worker when its available.\n    fireauth.util.getActiveServiceWorker()\n        .then(function(sw) {\n          scope.activeServiceWorker_ = sw;\n          if (sw) {\n            // Initialize the sender.\n            scope.sender_ = new fireauth.messagechannel.Sender(\n                new fireauth.messagechannel.WorkerClientPostMessager(sw));\n            // Ping the service worker to check what events they can handle.\n            // Use long timeout.\n            scope.sender_.send('ping', null, true)\n                .then(function(results) {\n                  // Check if keyChanged is supported.\n                  if (results[0]['fulfilled'] &&\n                      goog.array.contains(results[0]['value'], 'keyChanged')) {\n                    scope.serviceWorkerReceiverAvailable_ = true;\n                  }\n                })\n                .thenCatch(function(error) {\n                  // Ignore error.\n                });\n          }\n        });\n  }\n};\n\n\n\n/**\n * The indexedDB database name where all local storage data is to be stored.\n * @private @const {string}\n */\nfireauth.storage.IndexedDB.DB_NAME_ = 'firebaseLocalStorageDb';\n\n\n/**\n * The indexedDB object store name where all local storage data is to be stored.\n * @private @const {string}\n */\nfireauth.storage.IndexedDB.DATA_OBJECT_STORE_NAME_ = 'firebaseLocalStorage';\n\n\n/**\n * The indexedDB object store index name used to key all local storage data.\n * @private @const {string}\n */\nfireauth.storage.IndexedDB.DATA_KEY_PATH_ = 'fbase_key';\n\n\n/**\n * The indexedDB object store value field for each entry.\n * @private @const {string}\n */\nfireauth.storage.IndexedDB.VALUE_KEY_PATH_ = 'value';\n\n\n/**\n * The indexedDB database version number.\n * @private @const {number}\n */\nfireauth.storage.IndexedDB.VERSION_ = 1;\n\n\n/**\n * The indexedDB polling delay time in milliseconds.\n * @private @const {number}\n */\nfireauth.storage.IndexedDB.POLLING_DELAY_ = 800;\n\n\n/**\n * The indexedDB polling stop error.\n * @private @const {string}\n */\nfireauth.storage.IndexedDB.STOP_ERROR_ = 'STOP_EVENT';\n\n\n\n/**\n * @return {!fireauth.storage.IndexedDB} The Firebase Auth indexedDB\n *     local storage manager.\n */\nfireauth.storage.IndexedDB.getFireauthManager = function() {\n  if (!fireauth.storage.IndexedDB.managerInstance_) {\n    fireauth.storage.IndexedDB.managerInstance_ =\n        new fireauth.storage.IndexedDB(\n            fireauth.storage.IndexedDB.DB_NAME_,\n            fireauth.storage.IndexedDB.DATA_OBJECT_STORE_NAME_,\n            fireauth.storage.IndexedDB.DATA_KEY_PATH_,\n            fireauth.storage.IndexedDB.VALUE_KEY_PATH_,\n            fireauth.storage.IndexedDB.VERSION_);\n  }\n  return fireauth.storage.IndexedDB.managerInstance_;\n};\n\n\n/**\n * Delete the indexedDB database.\n * @return {!goog.Promise<!IDBDatabase>} A promise that resolves on successful\n *     database deletion.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.deleteDb_ = function() {\n  var self = this;\n  return new goog.Promise(function(resolve, reject) {\n    var request = self.indexedDB_.deleteDatabase(self.dbName_);\n    request.onsuccess = function(event) {\n      resolve();\n    };\n    request.onerror = function(event) {\n      reject(new Error(event.target.error));\n    };\n  });\n};\n\n\n/**\n * Initializes The indexedDB database, creates it if not already created and\n * opens it.\n * @return {!goog.Promise<!IDBDatabase>} A promise for the database object.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.initializeDb_ = function() {\n  var self = this;\n  return new goog.Promise(function(resolve, reject) {\n    var request = self.indexedDB_.open(self.dbName_, self.version_);\n    request.onerror = function(event) {\n      // Suppress this from surfacing to browser console.\n      try {\n        event.preventDefault();\n      } catch (e) {}\n      reject(new Error(event.target.error));\n    };\n    request.onupgradeneeded = function(event) {\n      var db = event.target.result;\n      try {\n        db.createObjectStore(\n            self.objectStoreName_,\n            {\n              'keyPath': self.dataKeyPath_\n            });\n      } catch (e) {\n        reject(e);\n      }\n    };\n    request.onsuccess = function(event) {\n      var db = event.target.result;\n      // Strange bug that occurs in Firefox when multiple tabs are opened at the\n      // same time. The only way to recover seems to be deleting the database\n      // and re-initializing it.\n      // https://github.com/firebase/firebase-js-sdk/issues/634\n      if (!db.objectStoreNames.contains(self.objectStoreName_)) {\n        self.deleteDb_()\n            .then(function() {\n              return self.initializeDb_();\n            })\n            .then(function(newDb) {\n              resolve(newDb);\n            })\n            .thenCatch(function(e) {\n              reject(e);\n            });\n      } else {\n        resolve(db);\n      }\n    };\n  });\n};\n\n\n/**\n * Checks if indexedDB is initialized, if so, the callback is run, otherwise,\n * it waits for the db to initialize and then runs the callback function.\n * @return {!goog.Promise<!IDBDatabase>} A promise for the initialized indexedDB\n *     database.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.initializeDbAndRun_ =\n    function() {\n  if (!this.initPromise_) {\n    this.initPromise_ = this.initializeDb_();\n  }\n  return this.initPromise_;\n};\n\n\n/**\n * @return {boolean} Whether indexedDB is available or not.\n */\nfireauth.storage.IndexedDB.isAvailable = function() {\n  try {\n    return !!goog.global['indexedDB'];\n  } catch (e) {\n    return false;\n  }\n};\n\n\n/**\n * Creates a reference for the local storage indexedDB object store and returns\n * it.\n * @param {!IDBTransaction} tx The IDB transaction instance.\n * @return {!IDBObjectStore} The indexedDB object store.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.getDataObjectStore_ =\n    function(tx) {\n  return tx.objectStore(this.objectStoreName_);\n};\n\n\n/**\n * Creates an IDB transaction and returns it.\n * @param {!IDBDatabase} db The indexedDB instance.\n * @param {boolean} isReadWrite Whether the current indexedDB operation is a\n *     read/write operation or not.\n * @return {!IDBTransaction} The requested IDB transaction instance.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.getTransaction_ =\n    function(db, isReadWrite) {\n  var tx = db.transaction(\n      [this.objectStoreName_],\n      isReadWrite ? 'readwrite' : 'readonly');\n  return tx;\n};\n\n\n/**\n * @param {!IDBRequest} request The IDB request instance.\n * @return {!goog.Promise} The promise to resolve on transaction completion.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.onIDBRequest_ =\n    function(request) {\n  return new goog.Promise(function(resolve, reject) {\n    request.onsuccess = function(event) {\n      if (event && event.target) {\n        resolve(event.target.result);\n      } else {\n        resolve();\n      }\n    };\n    request.onerror = function(event) {\n      reject(event.target.error);\n    };\n  });\n};\n\n\n/**\n * Sets the item's identified by the key provided to the value passed. If the\n * item does not exist, it is created. An optional callback is run on success.\n * @param {string} key The storage key for the item to set. If the item exists,\n *     it is updated, otherwise created.\n * @param {*} value The value to store for the item to set.\n * @return {!goog.Promise<void>} A promise that resolves on operation success.\n * @override\n */\nfireauth.storage.IndexedDB.prototype.set = function(key, value) {\n  var isLocked = false;\n  var dbTemp;\n  var self = this;\n  return this.initializeDbAndRun_()\n      .then(function(db) {\n        dbTemp = db;\n        var objectStore = self.getDataObjectStore_(\n            self.getTransaction_(dbTemp, true));\n        return self.onIDBRequest_(objectStore.get(key));\n      })\n      .then(function(data) {\n        var objectStore = self.getDataObjectStore_(\n            self.getTransaction_(dbTemp, true));\n        if (data) {\n          // Update the value(s) in the object that you want to change\n          data.value = value;\n          // Put this updated object back into the database.\n          return self.onIDBRequest_(objectStore.put(data));\n        }\n        self.pendingOpsTracker_++;\n        isLocked = true;\n        var obj = {};\n        obj[self.dataKeyPath_] = key;\n        obj[self.valueKeyPath_] = value;\n        return self.onIDBRequest_(objectStore.add(obj));\n      })\n      .then(function() {\n        // Save in local copy to avoid triggering false external event.\n        self.localMap_[key] = value;\n        // Announce change in key to service worker.\n        return self.notifySW_(key);\n      })\n      .thenAlways(function() {\n        if (isLocked) {\n          self.pendingOpsTracker_--;\n        }\n      });\n};\n\n\n/**\n * Notify the service worker of the indexeDB write operation.\n * Waits until the operation is processed.\n * @param {string} key The key which is changing.\n * @return {!goog.Promise<void>} A promise that resolves on delivery.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.notifySW_ = function(key) {\n  // If sender is available.\n  // Run some sanity check to confirm no sw change occurred.\n  // For now, we support one service worker per page.\n  if (this.sender_ &&\n      this.activeServiceWorker_ &&\n      fireauth.util.getServiceWorkerController() ===\n      this.activeServiceWorker_) {\n    return this.sender_.send(\n        'keyChanged',\n        {'key': key},\n        // Use long timeout if receiver is known to be available.\n        this.serviceWorkerReceiverAvailable_)\n        .then(function(responses) {\n          // Return nothing.\n        })\n        .thenCatch(function(error) {\n          // This is a best effort approach. Ignore errors.\n        });\n  }\n  return goog.Promise.resolve();\n};\n\n\n/**\n * Retrieves a stored item identified by the key provided asynchronously.\n * The value is passed to the callback function provided.\n * @param {string} key The storage key for the item to fetch.\n * @return {!goog.Promise} A promise that resolves with the item's value, or\n *     null if the item is not found.\n * @override\n */\nfireauth.storage.IndexedDB.prototype.get = function(key) {\n  var self = this;\n  return this.initializeDbAndRun_()\n      .then(function(db) {\n        return self.onIDBRequest_(\n            self.getDataObjectStore_(self.getTransaction_(db, false)).get(key));\n      })\n      .then(function(response) {\n        return response && response.value;\n      });\n};\n\n\n/**\n * Deletes the item identified by the key provided and on success, runs the\n * optional callback.\n * @param {string} key The storage key for the item to remove.\n * @return {!goog.Promise<void>} A promise that resolves on operation success.\n * @override\n */\nfireauth.storage.IndexedDB.prototype.remove = function(key) {\n  var isLocked = false;\n  var self = this;\n  return this.initializeDbAndRun_()\n      .then(function(db) {\n        isLocked = true;\n        self.pendingOpsTracker_++;\n        return self.onIDBRequest_(\n            self.getDataObjectStore_(\n                self.getTransaction_(db, true))['delete'](key));\n      }).then(function() {\n        // Delete from local copy to avoid triggering false external event.\n        delete self.localMap_[key];\n        // Announce change in key to service worker.\n        return self.notifySW_(key);\n      }).thenAlways(function() {\n        if (isLocked) {\n          self.pendingOpsTracker_--;\n        }\n      });\n};\n\n\n/**\n * @return {!goog.Promise<!Array<string>>} A promise that resolved with all the\n *     storage keys that have changed.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.sync_ = function() {\n  var self = this;\n  return this.initializeDbAndRun_()\n      .then(function(db) {\n        var objectStore =\n            self.getDataObjectStore_(self.getTransaction_(db, false));\n        if (objectStore['getAll']) {\n          // Get all keys and value pairs using getAll if supported.\n          return self.onIDBRequest_(objectStore['getAll']());\n        } else {\n          // If getAll isn't supported, fallback to cursor.\n          return new goog.Promise(function(resolve, reject) {\n            var res = [];\n            var request = objectStore.openCursor();\n            request.onsuccess = function(event) {\n              var cursor = event.target.result;\n              if (cursor) {\n                res.push(cursor.value);\n                cursor['continue']();\n              } else {\n                resolve(res);\n              }\n            };\n            request.onerror = function(event) {\n              reject(event.target.error);\n            };\n          });\n        }\n      }).then(function(res) {\n        var centralCopy = {};\n        // List of keys differing from central copy.\n        var diffKeys = [];\n        // Build central copy (external copy).\n        if (self.pendingOpsTracker_ == 0) {\n          for (var i = 0; i < res.length; i++) {\n            centralCopy[res[i][self.dataKeyPath_]] =\n                res[i][self.valueKeyPath_];\n          }\n          // Get diff of central copy and local copy.\n          diffKeys = fireauth.util.getKeyDiff(self.localMap_, centralCopy);\n          // Update local copy.\n          self.localMap_ = centralCopy;\n        }\n        // Return modified keys.\n        return diffKeys;\n      });\n};\n\n\n/**\n * Adds a listener to storage event change.\n * @param {function(!Array<string>)} listener The storage event listener.\n * @override\n */\nfireauth.storage.IndexedDB.prototype.addStorageListener =\n    function(listener) {\n  // First listener, start listeners.\n  if (this.storageListeners_.length == 0) {\n    this.startListeners_();\n  }\n  this.storageListeners_.push(listener);\n};\n\n\n/**\n * Removes a listener to storage event change.\n * @param {function(!Array<string>)} listener The storage event listener.\n * @override\n */\nfireauth.storage.IndexedDB.prototype.removeStorageListener =\n    function(listener) {\n  goog.array.removeAllIf(\n      this.storageListeners_,\n      function(ele) {\n        return ele == listener;\n      });\n  // No more listeners, stop.\n  if (this.storageListeners_.length == 0) {\n    this.stopListeners_();\n  }\n};\n\n\n/**\n * Removes all listeners to storage event change.\n */\nfireauth.storage.IndexedDB.prototype.removeAllStorageListeners =\n    function() {\n  this.storageListeners_ = [];\n  // No more listeners, stop.\n  this.stopListeners_();\n};\n\n\n/**\n * Starts the listener to storage events.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.startListeners_ = function() {\n  var self = this;\n  // Stop any previous listeners.\n  this.stopListeners_();\n  var repeat = function() {\n    self.pollTimerId_ = setTimeout(\n        function() {\n          self.poll_ = self.sync_()\n              .then(function(keys) {\n                // If keys modified, call listeners.\n                if (keys.length > 0) {\n                  goog.array.forEach(\n                      self.storageListeners_,\n                      function(listener) {\n                        listener(keys);\n                      });\n                }\n              })\n              .then(function() {\n                repeat();\n              })\n              .thenCatch(function(error) {\n                if (error.message != fireauth.storage.IndexedDB.STOP_ERROR_) {\n                  repeat();\n                }\n              });\n        },\n        fireauth.storage.IndexedDB.POLLING_DELAY_);\n  };\n  repeat();\n};\n\n\n/**\n * Stops the listener to storage events.\n * @private\n */\nfireauth.storage.IndexedDB.prototype.stopListeners_ = function() {\n  if (this.poll_) {\n    // Cancel polling function.\n    this.poll_.cancel(fireauth.storage.IndexedDB.STOP_ERROR_);\n  }\n  // Clear any pending polling timer.\n  if (this.pollTimerId_) {\n    clearTimeout(this.pollTimerId_);\n    this.pollTimerId_ = null;\n  }\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.HybridIndexedDB');\n\ngoog.require('fireauth.storage.IndexedDB');\ngoog.require('fireauth.storage.Storage');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\n\n/**\n * HybridStorage provides an interface to indexedDB, the persistent Web\n * Storage API for browsers that support it. This will fallback to the provided\n * fallback storage when indexedDB is not supported which is determined\n * asynchronously.\n * @param {!fireauth.storage.Storage} fallbackStorage The storage to fallback to\n *     when indexedDB is not available.\n * @constructor\n * @implements {fireauth.storage.Storage}\n */\nfireauth.storage.HybridIndexedDB = function(fallbackStorage) {\n  var self = this;\n  var storage = null;\n  /**\n   * @const @private {!Array<function((!goog.events.BrowserEvent|\n   *                                   !Array<string>))>} The storage listeners.\n   */\n  this.storageListeners_ = [];\n  // This type may change if the fallback is used.\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.INDEXEDDB;\n  /**\n   * @const @private {!fireauth.storage.Storage} The fallback storage when\n   *     indexedDB is unavailable.\n   */\n  this.fallbackStorage_ = fallbackStorage;\n  /**\n   * @const @private {!goog.Promise<!fireauth.storage.Storage>} A promise that\n   *     resolves with the underlying indexedDB storage or a fallback when not\n   *     supported.\n   */\n  this.underlyingStoragePromise_ = goog.Promise.resolve().then(function() {\n    // Initial check shows indexedDB is available. This is not enough.\n    // Try to write/read from indexedDB. If it fails, switch to fallback.\n    if (fireauth.storage.IndexedDB.isAvailable()) {\n      // Test write/read using a random key. This is important for the following\n      // reasons:\n      // 1. Double inclusion of the firebase-auth.js library.\n      // 2. Multiple windows opened at the same time.\n      // The above may cause collision if multiple instances try to\n      // write/read/delete from the same entry.\n      var randomId = fireauth.util.generateEventId();\n      var randomKey = fireauth.storage.HybridIndexedDB.KEY_ + randomId;\n      storage = fireauth.storage.IndexedDB.getFireauthManager();\n      return storage.set(randomKey, randomId)\n          .then(function() {\n            return storage.get(randomKey);\n          })\n          .then(function(value) {\n            if (value !== randomId) {\n              throw new Error('indexedDB not supported!');\n            }\n            return storage.remove(randomKey);\n          })\n          .then(function() {\n            return storage;\n          })\n          .thenCatch(function(error) {\n            return self.fallbackStorage_;\n          });\n    } else {\n      // indexedDB not available, use fallback.\n      return self.fallbackStorage_;\n    }\n  }).then(function(storage) {\n    // Update type.\n    self.type = storage.type;\n    // Listen to all storage changes.\n    storage.addStorageListener(function(key) {\n      // Trigger all attached storage listeners.\n      goog.array.forEach(self.storageListeners_, function(listener) {\n        listener(key);\n      });\n    });\n    return storage;\n  });\n};\n\n\n/**\n * The key used to check if the storage instance is available.\n * @private {string}\n * @const\n */\nfireauth.storage.HybridIndexedDB.KEY_ = '__sak';\n\n\n/**\n * Retrieves the value stored at the key.\n * @param {string} key\n * @return {!goog.Promise<*>}\n * @override\n */\nfireauth.storage.HybridIndexedDB.prototype.get = function(key) {\n  return this.underlyingStoragePromise_.then(function(storage) {\n    return storage.get(key);\n  });\n};\n\n\n/**\n * Stores the value at the specified key.\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.HybridIndexedDB.prototype.set = function(key, value) {\n  return this.underlyingStoragePromise_.then(function(storage) {\n    return storage.set(key, value);\n  });\n};\n\n\n/**\n * Removes the value at the specified key.\n * @param {string} key\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.HybridIndexedDB.prototype.remove = function(key) {\n  return this.underlyingStoragePromise_.then(function(storage) {\n    return storage.remove(key);\n  });\n};\n\n\n/**\n * Adds a listener to storage event change.\n * @param {function((!goog.events.BrowserEvent|!Array<string>))} listener The\n *     storage event listener.\n * @override\n */\nfireauth.storage.HybridIndexedDB.prototype.addStorageListener =\n    function(listener) {\n  this.storageListeners_.push(listener);\n};\n\n\n/**\n * Removes a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.HybridIndexedDB.prototype.removeStorageListener =\n    function(listener) {\n  goog.array.removeAllIf(this.storageListeners_, function(ele) {\n    return ele == listener;\n  });\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.InMemoryStorage');\n\ngoog.require('goog.Promise');\n\n\n\n/**\n * InMemoryStorage provides an implementation of Storage that will only persist\n * data in memory. This data is volatile and in a browser environment, will\n * be lost on page unload and will only be available in the current window.\n * This is a useful fallback for browsers where web storage is disabled or\n * environments where the preferred storage mechanism is not available or not\n * supported.\n * @constructor\n * @implements {fireauth.storage.Storage}\n */\nfireauth.storage.InMemoryStorage = function() {\n  /** @protected {!Object} The object where we store values. */\n  this.storage = {};\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.IN_MEMORY;\n};\n\n\n/**\n * @param {string} key\n * @return {!goog.Promise<*>}\n * @override\n */\nfireauth.storage.InMemoryStorage.prototype.get = function(key) {\n  return goog.Promise.resolve(/** @type {*} */ (this.storage[key]));\n};\n\n\n/**\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.InMemoryStorage.prototype.set = function(key, value) {\n  this.storage[key] = value;\n  return goog.Promise.resolve();\n};\n\n\n/**\n * @param {string} key\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.InMemoryStorage.prototype.remove = function(key) {\n  delete this.storage[key];\n  return goog.Promise.resolve();\n};\n\n\n/**\n * @param {function((!goog.events.BrowserEvent|!Array<string>))} listener The\n *     storage event listener.\n * @override\n */\nfireauth.storage.InMemoryStorage.prototype.addStorageListener =\n    function(listener) {\n};\n\n\n/**\n * @param {function((!goog.events.BrowserEvent|!Array<string>))} listener The\n *     storage event listener.\n * @override\n */\nfireauth.storage.InMemoryStorage.prototype.removeStorageListener = function(\n    listener) {};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.LocalStorage');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.storage.Storage');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.events');\n\n\n\n/**\n * LocalStorage provides an interface to localStorage, the persistent Web\n * Storage API.\n * @constructor\n * @implements {fireauth.storage.Storage}\n */\nfireauth.storage.LocalStorage = function() {\n  // Check is localStorage available in the current environment.\n  if (!fireauth.storage.LocalStorage.isAvailable()) {\n    // In a Node.js environment, dom-storage module needs to be required.\n    if (fireauth.util.getEnvironment() == fireauth.util.Env.NODE) {\n      throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n          'The LocalStorage compatibility library was not found.');\n    }\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED);\n  }\n\n  /**\n   * The underlying storage instance for persistent data.\n   * @private {!Storage}\n   */\n  this.storage_ = /** @type {!Storage} */ (\n      fireauth.storage.LocalStorage.getGlobalStorage() ||\n      firebase.INTERNAL['node']['localStorage']);\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.LOCAL_STORAGE;\n};\n\n\n/** @return {?Storage|undefined} The global localStorage instance. */\nfireauth.storage.LocalStorage.getGlobalStorage = function() {\n  try {\n    var storage = goog.global['localStorage'];\n    // Try editing web storage. If an error is thrown, it may be disabled.\n    var key = fireauth.util.generateEventId();\n    if (storage) {\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n    }\n    return storage;\n  } catch (e) {\n    // In some cases, browsers with web storage disabled throw an error simply\n    // on access.\n    return null;\n  }\n};\n\n\n/**\n * The key used to check if the storage instance is available.\n * @private {string}\n * @const\n */\nfireauth.storage.LocalStorage.STORAGE_AVAILABLE_KEY_ = '__sak';\n\n\n/** @return {boolean} Whether localStorage is available. */\nfireauth.storage.LocalStorage.isAvailable = function() {\n  // In Node.js localStorage is polyfilled.\n  var isNode = fireauth.util.getEnvironment() == fireauth.util.Env.NODE;\n  // Either window should provide this storage mechanism or in case of Node.js,\n  // firebase.INTERNAL should provide it.\n  var storage = fireauth.storage.LocalStorage.getGlobalStorage() ||\n      (isNode &&\n       firebase.INTERNAL['node'] &&\n       firebase.INTERNAL['node']['localStorage']);\n  if (!storage) {\n    return false;\n  }\n  try {\n    // setItem will throw an exception if we cannot access web storage (e.g.,\n    // Safari in private mode).\n    storage.setItem(fireauth.storage.LocalStorage.STORAGE_AVAILABLE_KEY_, '1');\n    storage.removeItem(fireauth.storage.LocalStorage.STORAGE_AVAILABLE_KEY_);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\n\n/**\n * Retrieves the value stored at the key.\n * @param {string} key\n * @return {!goog.Promise<*>}\n * @override\n */\nfireauth.storage.LocalStorage.prototype.get = function(key) {\n  var self = this;\n  return goog.Promise.resolve()\n      .then(function() {\n        var json = self.storage_.getItem(key);\n        return fireauth.util.parseJSON(json);\n      });\n};\n\n\n/**\n * Stores the value at the specified key.\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.LocalStorage.prototype.set = function(key, value) {\n  var self = this;\n  return goog.Promise.resolve()\n      .then(function() {\n        var obj = fireauth.util.stringifyJSON(value);\n        if (goog.isNull(obj)) {\n          self.remove(key);\n        } else {\n          self.storage_.setItem(key, obj);\n        }\n      });\n};\n\n\n/**\n * Removes the value at the specified key.\n * @param {string} key\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.LocalStorage.prototype.remove = function(key) {\n  var self = this;\n  return goog.Promise.resolve()\n      .then(function() {\n        self.storage_.removeItem(key);\n      });\n};\n\n\n/**\n * Adds a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.LocalStorage.prototype.addStorageListener = function(\n    listener) {\n  if (goog.global['window']) {\n    goog.events.listen(goog.global['window'], 'storage', listener);\n  }\n};\n\n\n/**\n * Removes a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.LocalStorage.prototype.removeStorageListener = function(\n    listener) {\n  if (goog.global['window']) {\n    goog.events.unlisten(goog.global['window'], 'storage', listener);\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.NullStorage');\n\ngoog.require('fireauth.storage.Storage');\ngoog.require('goog.Promise');\n\n\n\n/**\n * NullStorage provides an implementation of Storage that does always returns\n * null. This can be used if a type of storage is unsupported on a platform.\n * @constructor\n * @implements {fireauth.storage.Storage}\n */\nfireauth.storage.NullStorage = function() {\n  /** @private {!Object} The object where we store values. */\n  this.storage_ = {};\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.NULL_STORAGE;\n};\n\n\n/**\n * @param {string} key\n * @return {!goog.Promise<*>}\n * @override\n */\nfireauth.storage.NullStorage.prototype.get = function(key) {\n  return goog.Promise.resolve(/** @type {*} */ (null));\n};\n\n\n/**\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.NullStorage.prototype.set = function(key, value) {\n  return goog.Promise.resolve();\n};\n\n\n/**\n * @param {string} key\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.NullStorage.prototype.remove = function(key) {\n  return goog.Promise.resolve();\n};\n\n\n/**\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.NullStorage.prototype.addStorageListener = function(listener) {\n};\n\n\n/**\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.NullStorage.prototype.removeStorageListener = function(\n    listener) {};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.SessionStorage');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.storage.Storage');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\n\n\n\n/**\n * SessionStorage provides an interface to sessionStorage, the temporary web\n * storage API.\n * @constructor\n * @implements {fireauth.storage.Storage}\n */\nfireauth.storage.SessionStorage = function() {\n  // Check is sessionStorage available in the current environment.\n  if (!fireauth.storage.SessionStorage.isAvailable()) {\n    // In a Node.js environment, dom-storage module needs to be required.\n    if (fireauth.util.getEnvironment() == fireauth.util.Env.NODE) {\n      throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n          'The SessionStorage compatibility library was not found.');\n    }\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED);\n  }\n\n  /**\n   * The underlying storage instance for temporary data.\n   * @private {!Storage}\n   */\n  this.storage_ = /** @type {!Storage} */ (\n      fireauth.storage.SessionStorage.getGlobalStorage() ||\n      firebase.INTERNAL['node']['sessionStorage']);\n  /** @public {string} The storage type identifier. */\n  this.type = fireauth.storage.Storage.Type.SESSION_STORAGE;\n};\n\n\n/** @return {?Storage|undefined} The global sessionStorage instance. */\nfireauth.storage.SessionStorage.getGlobalStorage = function() {\n  try {\n    var storage = goog.global['sessionStorage'];\n    // Try editing web storage. If an error is thrown, it may be disabled.\n    var key = fireauth.util.generateEventId();\n    if (storage) {\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n    }\n    return storage;\n  } catch (e) {\n    // In some cases, browsers with web storage disabled throw an error simply\n    // on access.\n    return null;\n  }\n};\n\n\n/**\n * The key used to check if the storage instance is available.\n * @private {string}\n * @const\n */\nfireauth.storage.SessionStorage.STORAGE_AVAILABLE_KEY_ = '__sak';\n\n\n/** @return {boolean} Whether sessionStorage is available. */\nfireauth.storage.SessionStorage.isAvailable = function() {\n  // In Node.js sessionStorage is polyfilled.\n  var isNode = fireauth.util.getEnvironment() == fireauth.util.Env.NODE;\n  // Either window should provide this storage mechanism or in case of Node.js,\n  // firebase.INTERNAL should provide it.\n  var storage = fireauth.storage.SessionStorage.getGlobalStorage() ||\n      (isNode &&\n       firebase.INTERNAL['node'] &&\n       firebase.INTERNAL['node']['sessionStorage']);\n  if (!storage) {\n    return false;\n  }\n  try {\n    // setItem will throw an exception if we cannot access web storage (e.g.,\n    // Safari in private mode).\n    storage.setItem(\n        fireauth.storage.SessionStorage.STORAGE_AVAILABLE_KEY_, '1');\n    storage.removeItem(fireauth.storage.SessionStorage.STORAGE_AVAILABLE_KEY_);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\n\n/**\n * Retrieves the value stored at the key.\n * @param {string} key\n * @return {!goog.Promise<*>}\n * @override\n */\nfireauth.storage.SessionStorage.prototype.get = function(key) {\n  var self = this;\n  return goog.Promise.resolve()\n      .then(function() {\n        var json = self.storage_.getItem(key);\n        return fireauth.util.parseJSON(json);\n      });\n};\n\n\n/**\n * Stores the value at the specified key.\n * @param {string} key\n * @param {*} value\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.SessionStorage.prototype.set = function(key, value) {\n  var self = this;\n  return goog.Promise.resolve()\n      .then(function() {\n        var obj = fireauth.util.stringifyJSON(value);\n        if (goog.isNull(obj)) {\n          self.remove(key);\n        } else {\n          self.storage_.setItem(key, obj);\n        }\n      });\n};\n\n\n/**\n * Removes the value at the specified key.\n * @param {string} key\n * @return {!goog.Promise<void>}\n * @override\n */\nfireauth.storage.SessionStorage.prototype.remove = function(key) {\n  var self = this;\n  return goog.Promise.resolve()\n      .then(function() {\n        self.storage_.removeItem(key);\n      });\n};\n\n\n/**\n * Adds a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.SessionStorage.prototype.addStorageListener = function(\n    listener) {};\n\n\n/**\n * Removes a listener to storage event change.\n * @param {function(!goog.events.BrowserEvent)} listener The storage event\n *     listener.\n * @override\n */\nfireauth.storage.SessionStorage.prototype.removeStorageListener = function(\n    listener) {};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.storage.Factory');\ngoog.provide('fireauth.storage.Factory.EnvConfig');\n\ngoog.require('fireauth.storage.AsyncStorage');\ngoog.require('fireauth.storage.HybridIndexedDB');\ngoog.require('fireauth.storage.InMemoryStorage');\ngoog.require('fireauth.storage.LocalStorage');\ngoog.require('fireauth.storage.NullStorage');\ngoog.require('fireauth.storage.SessionStorage');\ngoog.require('fireauth.util');\n\n\n/**\n * Factory manages the storage implementations and determines the correct one\n * for the current environment.\n * @param {!fireauth.storage.Factory.EnvConfigType} env The storage\n *     configuration for the current environment.\n * @constructor\n */\nfireauth.storage.Factory = function(env) {\n  /** @const @private {!fireauth.storage.Factory.EnvConfigType} */\n  this.env_ = env;\n};\n\n\n/**\n * Construct the singleton instance of the Factory, automatically detecting\n * the current environment.\n * @return {!fireauth.storage.Factory}\n */\nfireauth.storage.Factory.getInstance = function() {\n  if (!fireauth.storage.Factory.instance_) {\n    fireauth.storage.Factory.instance_ =\n        new fireauth.storage.Factory(fireauth.storage.Factory.getEnvConfig());\n  }\n  return fireauth.storage.Factory.instance_;\n};\n\n\n/**\n * @typedef {{\n *   persistent: function(new:fireauth.storage.Storage),\n *   temporary: function(new:fireauth.storage.Storage)\n * }}\n */\nfireauth.storage.Factory.EnvConfigType;\n\n\n/**\n * Configurations of storage for different environments.\n * @enum {!fireauth.storage.Factory.EnvConfigType}\n */\nfireauth.storage.Factory.EnvConfig = {\n  BROWSER: {\n    persistent: fireauth.storage.LocalStorage,\n    temporary: fireauth.storage.SessionStorage\n  },\n  NODE: {\n    persistent: fireauth.storage.LocalStorage,\n    temporary: fireauth.storage.SessionStorage\n  },\n  REACT_NATIVE: {\n    persistent: fireauth.storage.AsyncStorage,\n    temporary: fireauth.storage.NullStorage\n  },\n  WORKER: {\n    persistent: fireauth.storage.LocalStorage,\n    temporary: fireauth.storage.NullStorage\n  }\n};\n\n\n/**\n * Detects the current environment and returns the appropriate environment\n * configuration.\n * @return {!fireauth.storage.Factory.EnvConfigType}\n */\nfireauth.storage.Factory.getEnvConfig = function() {\n  var envMap = {};\n  envMap[fireauth.util.Env.BROWSER] =\n      fireauth.storage.Factory.EnvConfig.BROWSER;\n  envMap[fireauth.util.Env.NODE] =\n      fireauth.storage.Factory.EnvConfig.NODE;\n  envMap[fireauth.util.Env.REACT_NATIVE] =\n      fireauth.storage.Factory.EnvConfig.REACT_NATIVE;\n  envMap[fireauth.util.Env.WORKER] =\n      fireauth.storage.Factory.EnvConfig.WORKER;    \n  return envMap[fireauth.util.getEnvironment()];\n};\n\n\n/**\n * @return {!fireauth.storage.Storage} The persistent storage instance.\n */\nfireauth.storage.Factory.prototype.makePersistentStorage = function() {\n  if (fireauth.util.persistsStorageWithIndexedDB()) {\n    // If persistent storage is implemented using indexedDB, use indexedDB.\n    // Use HybridIndexedDB instead of indexedDB directly since this will\n    // fallback to a fallback storage when indexedDB is not supported (private\n    // browsing mode, etc).\n    return new fireauth.storage.HybridIndexedDB(\n        fireauth.util.isWorker() ?\n        new fireauth.storage.InMemoryStorage() : new this.env_.persistent());\n  }\n  return new this.env_.persistent();\n};\n\n\n/**\n * @return {!fireauth.storage.Storage} The temporary storage instance.\n */\nfireauth.storage.Factory.prototype.makeTemporaryStorage = function() {\n  return new this.env_.temporary();\n};\n\n\n/**\n * @return {!fireauth.storage.Storage} An in memory storage instance.\n */\nfireauth.storage.Factory.prototype.makeInMemoryStorage = function() {\n  return new fireauth.storage.InMemoryStorage();\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines utilities for session management.\n */\n\ngoog.provide('fireauth.authStorage');\ngoog.provide('fireauth.authStorage.Key');\ngoog.provide('fireauth.authStorage.Manager');\ngoog.provide('fireauth.authStorage.Persistence');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.storage.Factory');\ngoog.require('fireauth.storage.Storage');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\ngoog.require('goog.events');\ngoog.require('goog.object');\n\n\n\n/**\n * The namespace for Firebase Auth storage.\n * @private @const {string}\n */\nfireauth.authStorage.NAMESPACE_ = 'firebase';\n\n\n/**\n * The separator for Firebase Auth storage with App ID key.\n * @private @const {string}\n */\nfireauth.authStorage.SEPARATOR_ = ':';\n\n\n/**\n * @const {number} The IE 10 localStorage cross tab synchronization delay in\n *     milliseconds.\n */\nfireauth.authStorage.IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\n\n\n/**\n * Enums for Auth state persistence.\n * @enum {string}\n */\nfireauth.authStorage.Persistence = {\n  // State will persist even when the browser window is closed or the activity\n  // is destroyed in react-native.\n  LOCAL: 'local',\n  // State is only stored in memory and will be cleared when the window or\n  // activity is refreshed.\n  NONE: 'none',\n  // State will only persist in current session/tab, relevant to web only, and\n  // will be cleared when the tab is closed.\n  SESSION: 'session'\n};\n\n\n/**\n * Validates that an argument is a valid persistence value. If an invalid type\n * is specified, an error is thrown synchronously.\n * @param {*} arg The argument to validate.\n */\nfireauth.authStorage.validatePersistenceArgument =\n    function(arg) {\n  // Invalid type error.\n  var invalidTypeError = new fireauth.AuthError(\n      fireauth.authenum.Error.INVALID_PERSISTENCE);\n  // Unsupported type error.\n  var unsupportedTypeError = new fireauth.AuthError(\n      fireauth.authenum.Error.UNSUPPORTED_PERSISTENCE);\n  // Check if the persistence type is a valid one.\n  // Throw invalid type error if not valid.\n  if (!goog.object.containsValue(fireauth.authStorage.Persistence, arg) ||\n      // goog.object.containsValue(fireauth.authStorage.Persistence, ['none'])\n      // returns true.\n      typeof arg !== 'string') {\n    throw invalidTypeError;\n  }\n  // Validate if the specified type is supported in the current environment.\n  switch (fireauth.util.getEnvironment()) {\n    case fireauth.util.Env.REACT_NATIVE:\n      // This is only supported in a browser.\n      if (arg === fireauth.authStorage.Persistence.SESSION) {\n        throw unsupportedTypeError;\n      }\n      break;\n    case fireauth.util.Env.NODE:\n      // Only none is supported in Node.js.\n      if (arg !== fireauth.authStorage.Persistence.NONE) {\n        throw unsupportedTypeError;\n      }\n      break;\n    case fireauth.util.Env.BROWSER:\n    default:\n      // This is restricted by what the browser supports.\n      if (!fireauth.util.isWebStorageSupported() &&\n          arg !== fireauth.authStorage.Persistence.NONE) {\n        throw unsupportedTypeError;\n      }\n      break;\n  }\n};\n\n\n/**\n * Storage key metadata.\n * @typedef {{name: string, persistent: !fireauth.authStorage.Persistence}}\n */\nfireauth.authStorage.Key;\n\n\n/**\n * Storage manager.\n * @param {string} namespace The optional namespace.\n * @param {string} separator The optional separator.\n * @param {boolean} safariLocalStorageNotSynced Whether browser has Safari\n *     iframe restriction with storage event triggering but storage not updated.\n * @param {boolean} runsInBackground Whether browser can detect storage event\n *     when it had already been pushed to the background. This may happen in\n *     some mobile browsers. A localStorage change in the foreground window\n *     will not be detected in the background window via the storage event.\n *     This was detected in iOS 7.x mobile browsers.\n * @param {boolean} webStorageSupported Whether browser web storage is\n *     supported.\n * @constructor @struct @final\n */\nfireauth.authStorage.Manager = function(\n    namespace,\n    separator,\n    safariLocalStorageNotSynced,\n    runsInBackground,\n    webStorageSupported) {\n  /** @const @private {string} Storage namespace. */\n  this.namespace_ = namespace;\n  /** @const @private {string} Storage namespace key separator. */\n  this.separator_ = separator;\n  /**\n   * @const @private {boolean} Whether browser has Safari iframe restriction\n   *     with storage event triggering but storage not updated.\n   */\n  this.safariLocalStorageNotSynced_ = safariLocalStorageNotSynced;\n  /**\n   *  @private {boolean} Whether browser can detect storage event when it\n   *     had already been pushed to the background. This may happen in some\n   *     mobile browsers.\n   */\n  this.runsInBackground_ = runsInBackground;\n  /**  @const @private {boolean} Whether browser web storage is supported. */\n  this.webStorageSupported_ = webStorageSupported;\n\n  /**\n   * @const @private {!Object.<string, !Array<function()>>} The storage event\n   *     key to listeners map.\n   */\n  this.listeners_ = {};\n\n  var storageFactory = fireauth.storage.Factory.getInstance();\n  try {\n    /**\n     * @private {!fireauth.storage.Storage} Persistence storage.\n     */\n    this.persistentStorage_ = storageFactory.makePersistentStorage();\n  } catch (e) {\n    // Default to in memory storage if the preferred persistent storage is not\n    // supported.\n    this.persistentStorage_ = storageFactory.makeInMemoryStorage();\n    // Do not use indexedDB fallback.\n    this.localStorageNotSynchronized_ = false;\n    // Do not set polling functions on window.localStorage.\n    this.runsInBackground_ = true;\n  }\n  try {\n    /**\n     * @private {!fireauth.storage.Storage} Temporary session storage.\n     */\n    this.temporaryStorage_ = storageFactory.makeTemporaryStorage();\n  } catch (e) {\n    // Default to in memory storage if the preferred temporary storage is not\n    // supported. This should be a different in memory instance as the\n    // persistent storage, since the same key could be available for both types\n    // of storage.\n    this.temporaryStorage_ = storageFactory.makeInMemoryStorage();\n  }\n  /**\n   * @private {!fireauth.storage.Storage} In memory storage.\n   */\n  this.inMemoryStorage_ = storageFactory.makeInMemoryStorage();\n\n  /**\n   * @const @private {function(!goog.events.BrowserEvent)|\n   *                  function(!Array<string>)} Storage change handler.\n   */\n  this.storageChangeEventHandler_ = goog.bind(this.storageChangeEvent_, this);\n  /** @private {!Object.<string, *>} Local map for localStorage. */\n  this.localMap_ = {};\n};\n\n\n/**\n * @return {!fireauth.authStorage.Manager} The default Auth storage manager\n *     instance.\n */\nfireauth.authStorage.Manager.getInstance = function() {\n  // Creates the default instance for Auth storage maanger.\n  if (!fireauth.authStorage.Manager.instance_) {\n    /**\n     * @private {?fireauth.authStorage.Manager} The default storage manager\n     *     instance.\n     */\n    fireauth.authStorage.Manager.instance_ = new fireauth.authStorage.Manager(\n        fireauth.authStorage.NAMESPACE_,\n        fireauth.authStorage.SEPARATOR_,\n        fireauth.util.isSafariLocalStorageNotSynced(),\n        fireauth.util.runsInBackground(),\n        fireauth.util.isWebStorageSupported());\n  }\n  return fireauth.authStorage.Manager.instance_;\n};\n\n\n/** Clears storage manager instances. This is used for testing. */\nfireauth.authStorage.Manager.clear = function() {\n  fireauth.authStorage.Manager.instance_ = null;\n};\n\n\n/**\n * Returns the storage corresponding to the specified persistence.\n * @param {!fireauth.authStorage.Persistence} persistent The type of storage\n *     persistence.\n * @return {!fireauth.storage.Storage} The corresponding storage instance.\n * @private\n */\nfireauth.authStorage.Manager.prototype.getStorage_ = function(persistent) {\n  switch (persistent) {\n    case fireauth.authStorage.Persistence.SESSION:\n      return this.temporaryStorage_;\n    case fireauth.authStorage.Persistence.NONE:\n      return this.inMemoryStorage_;\n    case fireauth.authStorage.Persistence.LOCAL:\n    default:\n      return this.persistentStorage_;\n  }\n};\n\n\n/**\n * Constructs the corresponding storage key name.\n * @param {fireauth.authStorage.Key} dataKey The key under which the value is\n *     stored.\n * @param {?string=} opt_id This ID associates storage values with specific\n *     apps.\n * @return {string} The corresponding key name with namespace prefixed.\n * @private\n */\nfireauth.authStorage.Manager.prototype.getKeyName_ = function(dataKey, opt_id) {\n  return this.namespace_ + this.separator_ + dataKey.name +\n      (opt_id ? this.separator_ + opt_id : '');\n};\n\n\n/**\n * Migrates window.localStorage to the provided persistent storage.\n * @param {fireauth.authStorage.Key} dataKey The key under which the persistent\n *     value is supposed to be stored.\n * @param {?string=} opt_id When operating in multiple app mode, this ID\n *     associates storage values with specific apps.\n * @return {!goog.Promise<void>} A promise that resolves when the data stored\n *     in window.localStorage is migrated to the provided persistent storage\n *     identified by the provided data key.\n */\nfireauth.authStorage.Manager.prototype.migrateFromLocalStorage =\n    function(dataKey, opt_id) {\n  var self = this;\n  var key = this.getKeyName_(dataKey, opt_id);\n  var storage = this.getStorage_(dataKey.persistent);\n  // Get data stored in the default persistent storage identified by dataKey.\n  return this.get(dataKey, opt_id).then(function(response) {\n    // Get the stored value in window.localStorage if available.\n    var oldStorageValue = null;\n    try {\n      oldStorageValue = fireauth.util.parseJSON(\n          goog.global['localStorage']['getItem'](key));\n    } catch (e) {\n      // Set value as null. This will resolve the promise immediately.\n    }\n    // If data is stored in window.localStorage but no data is available in\n    // default persistent storage, migrate data from window.localStorage to\n    // default persistent storage.\n    if (oldStorageValue && !response) {\n      // This condition may fail in situations where a user opens a tab with\n      // an old version while using a tab with a new version, or when a\n      // developer switches back and forth between and old and new version of\n      // the library.\n      goog.global['localStorage']['removeItem'](key);\n      // Migrate the value to new default persistent storage.\n      return self.set(dataKey, oldStorageValue, opt_id);\n    } else if (oldStorageValue &&\n               response &&\n               storage.type != fireauth.storage.Storage.Type.LOCAL_STORAGE) {\n      // Data stored in both localStorage and new persistent storage (eg.\n      // indexedDB) for some reason.\n      // This could happen if the developer is migrating back and forth.\n      // The new default persistent storage (eg. indexedDB) takes precedence.\n      goog.global['localStorage']['removeItem'](key);\n    }\n  });\n};\n\n\n/**\n * Gets the stored value from the corresponding storage.\n * @param {fireauth.authStorage.Key} dataKey The key under which the value is\n *     stored.\n * @param {?string=} opt_id When operating in multiple app mode, this ID\n *     associates storage values with specific apps.\n * @return {!goog.Promise} A Promise that resolves with the stored value.\n */\nfireauth.authStorage.Manager.prototype.get = function(dataKey, opt_id) {\n  var keyName = this.getKeyName_(dataKey, opt_id);\n  return this.getStorage_(dataKey.persistent).get(keyName);\n};\n\n\n/**\n * Removes the stored value from the corresponding storage.\n * @param {fireauth.authStorage.Key} dataKey The key under which the value is\n *     stored.\n * @param {?string=} opt_id When operating in multiple app mode, this ID\n *     associates storage values with specific apps.\n * @return {!goog.Promise<void>} A Promise that resolves when the operation is\n *     completed.\n */\nfireauth.authStorage.Manager.prototype.remove = function(dataKey, opt_id) {\n  var keyName = this.getKeyName_(dataKey, opt_id);\n  // Keep local map up to date for requested key if persistent storage is used.\n  if (dataKey.persistent == fireauth.authStorage.Persistence.LOCAL) {\n    this.localMap_[keyName] = null;\n  }\n  return this.getStorage_(dataKey.persistent).remove(keyName);\n};\n\n\n/**\n * Stores the value in the corresponding storage.\n * @param {fireauth.authStorage.Key} dataKey The key under which the value is\n *     stored.\n * @param {*} value The value to be stored.\n * @param {?string=} opt_id When operating in multiple app mode, this ID\n *     associates storage values with specific apps.\n * @return {!goog.Promise<void>} A Promise that resolves when the operation is\n *     completed.\n */\nfireauth.authStorage.Manager.prototype.set = function(dataKey, value, opt_id) {\n  var keyName = this.getKeyName_(dataKey, opt_id);\n  var self = this;\n  var storage = this.getStorage_(dataKey.persistent);\n  return storage.set(keyName, value)\n      .then(function() {\n        return storage.get(keyName);\n      })\n      .then(function(serializedValue) {\n        // Keep local map up to date for requested key if persistent storage is\n        // used.\n        if (dataKey.persistent == fireauth.authStorage.Persistence.LOCAL) {\n          self.localMap_[keyName] = serializedValue;\n        }\n      });\n};\n\n\n/**\n * @param {fireauth.authStorage.Key} dataKey The key under which the value is\n *     stored.\n * @param {?string} id When operating in multiple app mode, this ID associates\n *     storage values with specific apps.\n * @param {function()} listener The callback listener to run on storage event\n *     related to key.\n */\nfireauth.authStorage.Manager.prototype.addListener =\n    function(dataKey, id, listener) {\n  var key = this.getKeyName_(dataKey, id);\n  // Initialize local map for current key if web storage is supported.\n  if (this.webStorageSupported_) {\n    this.localMap_[key] = goog.global['localStorage']['getItem'](key);\n  }\n  if (goog.object.isEmpty(this.listeners_)) {\n    // Start listeners.\n    this.startListeners_();\n  }\n  if (!this.listeners_[key]) {\n    this.listeners_[key] = [];\n  }\n  this.listeners_[key].push(listener);\n};\n\n\n/**\n * @param {fireauth.authStorage.Key} dataKey The key under which the value is\n *     stored.\n * @param {?string} id When operating in multiple app mode, this ID associates\n *     storage values with specific apps.\n * @param {function()} listener The listener to remove.\n */\nfireauth.authStorage.Manager.prototype.removeListener =\n    function(dataKey, id, listener) {\n  var key = this.getKeyName_(dataKey, id);\n  if (this.listeners_[key]) {\n    goog.array.removeAllIf(\n        this.listeners_[key],\n        function(ele) {\n          return ele == listener;\n        });\n    if (this.listeners_[key].length == 0) {\n      delete this.listeners_[key];\n    }\n  }\n  if (goog.object.isEmpty(this.listeners_)) {\n    // Stop listeners.\n    this.stopListeners_();\n  }\n};\n\n\n/**\n * The delay to wait between continuous checks of localStorage on browsers where\n * tabs do not run in the background. After each interval wait, we check for\n * external changes in localStorage that were not detected in the current tab.\n * @const {number}\n * @private\n */\nfireauth.authStorage.Manager.LOCAL_STORAGE_POLLING_TIMER_ = 1000;\n\n\n/**\n * Starts all storage event listeners.\n * @private\n */\nfireauth.authStorage.Manager.prototype.startListeners_ = function() {\n  this.getStorage_(fireauth.authStorage.Persistence.LOCAL)\n      .addStorageListener(this.storageChangeEventHandler_);\n  // TODO: refactor this implementation to be handled by the underlying\n  // storage mechanism.\n  if (!this.runsInBackground_ &&\n      // Add an exception for browsers that persist storage with indexedDB, we\n      // should stick with indexedDB listener implementation in that case.\n      !fireauth.util.persistsStorageWithIndexedDB() &&\n      // Confirm browser web storage is supported as polling relies on it.\n      this.webStorageSupported_) {\n    this.startManualListeners_();\n  }\n};\n\n/**\n * Starts manual polling function to detect storage event changes.\n * @private\n */\nfireauth.authStorage.Manager.prototype.startManualListeners_ = function() {\n  var self = this;\n  this.stopManualListeners_();\n  /** @private {?number} The interval timer for manual storage checking. */\n  this.manualListenerTimer_ = setInterval(function() {\n    // Check all keys with listeners on them.\n    for (var key in self.listeners_) {\n      // Get value from localStorage.\n      var currentValue = goog.global['localStorage']['getItem'](key);\n      var oldValue = self.localMap_[key];\n      // If local map value does not match, trigger listener with storage event.\n      if (currentValue != oldValue) {\n        self.localMap_[key] = currentValue;\n        var event = new goog.events.BrowserEvent(/** @type {!Event} */ ({\n          type: 'storage',\n          key: key,\n          target: window,\n          oldValue: oldValue,\n          newValue: currentValue,\n          // Differentiate this simulated event from the real storage event.\n          poll: true\n        }));\n        self.storageChangeEvent_(event);\n      }\n    }\n  }, fireauth.authStorage.Manager.LOCAL_STORAGE_POLLING_TIMER_);\n};\n\n\n/**\n * Stops manual polling function to detect storage event changes.\n * @private\n */\nfireauth.authStorage.Manager.prototype.stopManualListeners_ = function() {\n  if (this.manualListenerTimer_) {\n    clearInterval(this.manualListenerTimer_);\n    this.manualListenerTimer_ = null;\n  }\n};\n\n\n/**\n * Stops all storage event listeners.\n * @private\n */\nfireauth.authStorage.Manager.prototype.stopListeners_ = function() {\n  this.getStorage_(fireauth.authStorage.Persistence.LOCAL)\n      .removeStorageListener(this.storageChangeEventHandler_);\n  this.stopManualListeners_();\n};\n\n\n/**\n * @param {!goog.events.BrowserEvent|!Array<string>} data The storage event\n *     triggered or the array of keys modified.\n * @private\n */\nfireauth.authStorage.Manager.prototype.storageChangeEvent_ = function(data) {\n  if (data && data.getBrowserEvent) {\n    var event = /** @type {!goog.events.BrowserEvent} */ (data);\n    var key = event.getBrowserEvent().key;\n    // Key would be null in some situations, like when localStorage is cleared\n    // from the browser developer tools.\n    if (key == null) {\n      // For all keys of interest.\n      for (var keyName in this.listeners_) {\n        // Check if something changed in this key's real value.\n        var storedValue = this.localMap_[keyName];\n        // localStorage returns null when a field is not found.\n        if (typeof storedValue === 'undefined') {\n          storedValue = null;\n        }\n        var realValue = goog.global['localStorage']['getItem'](keyName);\n        if (realValue !== storedValue) {\n          // Update local map with real value.\n          this.localMap_[keyName] = realValue;\n          // Trigger that key's listener.\n          this.callListeners_(keyName);\n        }\n      }\n      return;\n    }\n    // Check if the key is Firebase Auth related, otherwise ignore.\n    if (key.indexOf(this.namespace_ + this.separator_) != 0 ||\n        // Ignore keys that have no listeners.\n        !this.listeners_[key]) {\n      return;\n    }\n    // Check the mechanism how this event was detected.\n    // The first event will dictate the mechanism to be used.\n    // Do not use hasOwnProperty('poll') as poll gets obfuscated.\n    if (typeof event.getBrowserEvent().poll !== 'undefined') {\n      // Environment detects storage changes via polling.\n      // Remove storage event listener to prevent possible event duplication.\n      this.getStorage_(fireauth.authStorage.Persistence.LOCAL)\n          .removeStorageListener(this.storageChangeEventHandler_);\n    } else {\n      // Environment detects storage changes via storage event listener.\n      // Remove polling listener to prevent possible event duplication.\n      this.stopManualListeners_();\n    }\n    // Safari embedded iframe. Storage event will trigger with the delta changes\n    // but no changes will be applied to the iframe localStorage.\n    if (this.safariLocalStorageNotSynced_) {\n      // Get current iframe page value, old value and new value.\n      var currentValue = goog.global['localStorage']['getItem'](key);\n      var newValue = event.getBrowserEvent().newValue;\n      // Value not synchronized, synchronize manually.\n      if (newValue !== currentValue) {\n        if (newValue !== null) {\n          // Value changed from current value.\n          goog.global['localStorage']['setItem'](key, newValue);\n        } else {\n          // Current value deleted.\n          goog.global['localStorage']['removeItem'](key);\n        }\n      } else {\n        // Already detected and processed, do not trigger listeners again.\n        if (this.localMap_[key] === newValue &&\n            // Real storage event.\n            typeof event.getBrowserEvent().poll === 'undefined') {\n          return;\n        }\n      }\n    }\n    var self = this;\n    var triggerListeners = function() {\n      // Keep local map up to date in case storage event is triggered before\n      // poll.\n      if (typeof event.getBrowserEvent().poll === 'undefined' &&\n          self.localMap_[key] === goog.global['localStorage']['getItem'](key)) {\n        // Real storage event which has already been detected, do nothing.\n        // This seems to trigger in some IE browsers for some reason.\n        return;\n      }\n      self.localMap_[key] = goog.global['localStorage']['getItem'](key);\n      self.callListeners_(key);\n    };\n    if (fireauth.util.isIe10() &&\n        goog.global['localStorage']['getItem'](key) !==\n        event.getBrowserEvent().newValue &&\n        event.getBrowserEvent().newValue !== event.getBrowserEvent().oldValue) {\n      // IE 10 has this weird bug where a storage event would trigger with the\n      // correct key, oldValue and newValue but localStorage.getItem(key) does\n      // not yield the updated value until a few milliseconds. This ensures this\n      // recovers from that situation.\n      setTimeout(\n          triggerListeners, fireauth.authStorage.IE10_LOCAL_STORAGE_SYNC_DELAY);\n    } else {\n      triggerListeners();\n    }\n  } else {\n    var keys = /** @type {!Array<string>} */ (data);\n    goog.array.forEach(keys, goog.bind(this.callListeners_, this));\n  }\n};\n\n\n/**\n * Calls all listeners for specified storage event key.\n * @param {string} key The storage event key whose listeners are to be run.\n * @private\n */\nfireauth.authStorage.Manager.prototype.callListeners_ = function(key) {\n  if (this.listeners_[key]) {\n    goog.array.forEach(\n        this.listeners_[key],\n        function(listener) {\n          listener();\n        });\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the fireauth.storage.AuthEventManager class used by\n * the iframe to retrieve and delete Auth events triggered through an OAuth\n * flow.\n */\n\ngoog.provide('fireauth.storage.AuthEventManager');\ngoog.provide('fireauth.storage.AuthEventManager.Keys');\n\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.authStorage');\n\n\n/**\n * Defines the Auth event storage manager. It provides methods to\n * load and delete Auth events as well as listen to external OAuth changes on\n * them.\n * @param {string} appId The Auth event's application ID.\n * @param {?fireauth.authStorage.Manager=} opt_manager The underlying storage\n *     manager to use. If none is provided, the default global instance is used.\n * @constructor @struct @final\n */\nfireauth.storage.AuthEventManager = function(appId, opt_manager) {\n  /** @const @private{string} appId The Auth event's application ID. */\n  this.appId_ = appId;\n  /**\n   * @const @private{!fireauth.authStorage.Manager} The underlying storage\n   *     manager.\n   */\n  this.manager_ = opt_manager || fireauth.authStorage.Manager.getInstance();\n};\n\n\n/**\n * Valid keys for Auth event manager data.\n * @enum {!fireauth.authStorage.Key}\n */\nfireauth.storage.AuthEventManager.Keys = {\n  AUTH_EVENT: {\n    name: 'authEvent',\n    persistent: fireauth.authStorage.Persistence.LOCAL\n  },\n  REDIRECT_EVENT: {\n    name: 'redirectEvent',\n    persistent: fireauth.authStorage.Persistence.SESSION\n  }\n};\n\n\n/**\n * @return {!goog.Promise<?fireauth.AuthEvent>} A promise that resolves on\n *     success with the stored Auth event.\n */\nfireauth.storage.AuthEventManager.prototype.getAuthEvent = function() {\n  return this.manager_.get(\n      fireauth.storage.AuthEventManager.Keys.AUTH_EVENT, this.appId_)\n      .then(function(response) {\n        return fireauth.AuthEvent.fromPlainObject(response);\n      });\n};\n\n\n/**\n * Removes the identifier's Auth event if it exists.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.AuthEventManager.prototype.removeAuthEvent = function() {\n  return this.manager_.remove(\n      fireauth.storage.AuthEventManager.Keys.AUTH_EVENT, this.appId_);\n};\n\n\n/**\n * Adds a listener to Auth event for App ID provided.\n * @param {!function()} listener The listener to run on Auth event.\n */\nfireauth.storage.AuthEventManager.prototype.addAuthEventListener =\n    function(listener) {\n  this.manager_.addListener(\n      fireauth.storage.AuthEventManager.Keys.AUTH_EVENT, this.appId_, listener);\n};\n\n\n/**\n * Removes a listener to Auth event for App ID provided.\n * @param {!function()} listener The listener to run on Auth event.\n */\nfireauth.storage.AuthEventManager.prototype.removeAuthEventListener =\n    function(listener) {\n  this.manager_.removeListener(\n      fireauth.storage.AuthEventManager.Keys.AUTH_EVENT, this.appId_, listener);\n};\n\n\n/**\n * @return {!goog.Promise<?fireauth.AuthEvent>} A promise that resolves on\n *     success with the stored redirect Auth event.\n */\nfireauth.storage.AuthEventManager.prototype.getRedirectEvent =\n    function() {\n  return this.manager_.get(\n      fireauth.storage.AuthEventManager.Keys.REDIRECT_EVENT,\n      this.appId_).then(function(response) {\n        return fireauth.AuthEvent.fromPlainObject(response);\n      });\n};\n\n\n/**\n * Removes the identifier's redirect Auth event if it exists.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.AuthEventManager.prototype.removeRedirectEvent = function() {\n  return this.manager_.remove(\n      fireauth.storage.AuthEventManager.Keys.REDIRECT_EVENT, this.appId_);\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the fireauth.storage.OAuthHandlerManager class which\n * provides utilities to the OAuth handler widget to set Auth events after an\n * IDP sign in attempt and to store state during the OAuth handshake with IDP.\n */\n\ngoog.provide('fireauth.storage.OAuthHandlerManager');\n\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.OAuthHelperState');\ngoog.require('fireauth.authStorage');\ngoog.require('fireauth.storage.AuthEventManager.Keys');\n\n\n/**\n * Defines the OAuth handler storage manager. It provides methods to\n * store, load and delete OAuth handler widget state, properties and setting\n * Auth events.\n * @param {?fireauth.authStorage.Manager=} opt_manager The underlying storage\n *     manager to use. If none is provided, the default global instance is used.\n * @constructor @struct @final\n */\nfireauth.storage.OAuthHandlerManager = function(opt_manager) {\n  /**\n   * @const @private{!fireauth.authStorage.Manager} The underlying storage\n   *     manager.\n   */\n  this.manager_ = opt_manager || fireauth.authStorage.Manager.getInstance();\n};\n\n\n/**\n * Valid keys for OAuth handler manager data.\n * @private @enum {!fireauth.authStorage.Key}\n */\nfireauth.storage.OAuthHandlerManager.Keys_ = {\n  OAUTH_HELPER_STATE: {\n    name: 'oauthHelperState',\n    persistent: fireauth.authStorage.Persistence.SESSION\n  },\n  SESSION_ID: {\n    name: 'sessionId',\n    persistent: fireauth.authStorage.Persistence.SESSION\n  }\n};\n\n\n/**\n * @param {string} appId The Auth state's application ID.\n * @return {!goog.Promise<?string|undefined>} A promise that resolves on success\n *     with the stored session ID.\n */\nfireauth.storage.OAuthHandlerManager.prototype.getSessionId = function(appId) {\n  return this.manager_.get(\n      fireauth.storage.OAuthHandlerManager.Keys_.SESSION_ID, appId);\n};\n\n\n/**\n * Removes the session ID string if it exists.\n * @param {string} appId The Auth state's application ID.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.OAuthHandlerManager.prototype.removeSessionId =\n    function(appId) {\n  return this.manager_.remove(\n      fireauth.storage.OAuthHandlerManager.Keys_.SESSION_ID, appId);\n};\n\n\n/**\n * Stores the session ID string.\n * @param {string} appId The Auth state's application ID.\n * @param {string} sessionId The session ID string to store.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.OAuthHandlerManager.prototype.setSessionId =\n    function(appId, sessionId) {\n  return this.manager_.set(\n      fireauth.storage.OAuthHandlerManager.Keys_.SESSION_ID, sessionId, appId);\n};\n\n\n/**\n * @return {!goog.Promise<?fireauth.OAuthHelperState>} A promise that resolves\n *     on success with the stored OAuth helper state.\n */\nfireauth.storage.OAuthHandlerManager.prototype.getOAuthHelperState =\n    function() {\n  return this.manager_.get(\n      fireauth.storage.OAuthHandlerManager.Keys_.OAUTH_HELPER_STATE)\n      .then(function(response) {\n        return fireauth.OAuthHelperState.fromPlainObject(response);\n      });\n};\n\n\n/**\n * Removes the current OAuth helper state if it exists.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.OAuthHandlerManager.prototype.removeOAuthHelperState =\n    function() {\n  return this.manager_.remove(\n      fireauth.storage.OAuthHandlerManager.Keys_.OAUTH_HELPER_STATE);\n};\n\n\n/**\n * Stores the current OAuth helper state.\n * @param {!fireauth.OAuthHelperState} state The OAuth helper state.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.OAuthHandlerManager.prototype.setOAuthHelperState =\n    function(state) {\n  return this.manager_.set(\n      fireauth.storage.OAuthHandlerManager.Keys_.OAUTH_HELPER_STATE,\n      state.toPlainObject());\n};\n\n\n/**\n * Stores the Auth event for specified identifier.\n * @param {string} appId The Auth state's application ID.\n * @param {!fireauth.AuthEvent} authEvent The Auth event.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.OAuthHandlerManager.prototype.setAuthEvent =\n    function(appId, authEvent) {\n  return this.manager_.set(\n      fireauth.storage.AuthEventManager.Keys.AUTH_EVENT,\n      authEvent.toPlainObject(),\n      appId);\n};\n\n\n/**\n * Stores the redirect Auth event for specified identifier.\n * @param {string} appId The Auth state's application ID.\n * @param {!fireauth.AuthEvent} authEvent The redirect Auth event.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.OAuthHandlerManager.prototype.setRedirectEvent =\n    function(appId, authEvent) {\n  return this.manager_.set(\n      fireauth.storage.AuthEventManager.Keys.REDIRECT_EVENT,\n      authEvent.toPlainObject(),\n      appId);\n};\n","// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Abstract cryptographic hash interface.\n *\n * See goog.crypt.Sha1 and goog.crypt.Md5 for sample implementations.\n *\n */\n\ngoog.provide('goog.crypt.Hash');\n\n\n\n/**\n * Create a cryptographic hash instance.\n *\n * @constructor\n * @struct\n */\ngoog.crypt.Hash = function() {\n  /**\n   * The block size for the hasher.\n   * @type {number}\n   */\n  this.blockSize = -1;\n};\n\n\n/**\n * Resets the internal accumulator.\n */\ngoog.crypt.Hash.prototype.reset = goog.abstractMethod;\n\n\n/**\n * Adds a byte array (array with values in [0-255] range) or a string (must\n * only contain 8-bit, i.e., Latin1 characters) to the internal accumulator.\n *\n * Many hash functions operate on blocks of data and implement optimizations\n * when a full chunk of data is readily available. Hence it is often preferable\n * to provide large chunks of data (a kilobyte or more) than to repeatedly\n * call the update method with few tens of bytes. If this is not possible, or\n * not feasible, it might be good to provide data in multiplies of hash block\n * size (often 64 bytes). Please see the implementation and performance tests\n * of your favourite hash.\n *\n * @param {Array<number>|Uint8Array|string} bytes Data used for the update.\n * @param {number=} opt_length Number of bytes to use.\n */\ngoog.crypt.Hash.prototype.update = goog.abstractMethod;\n\n\n/**\n * @return {!Array<number>} The finalized hash computed\n *     from the internal accumulator.\n */\ngoog.crypt.Hash.prototype.digest = goog.abstractMethod;\n","// Copyright 2012 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Base class for SHA-2 cryptographic hash.\n *\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Some code similar to SHA1 are borrowed from sha1.js written by mschilder@.\n *\n */\n\ngoog.provide('goog.crypt.Sha2');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.crypt.Hash');\n\n\n\n/**\n * SHA-2 cryptographic hash constructor.\n * This constructor should not be used directly to create the object. Rather,\n * one should use the constructor of the sub-classes.\n * @param {number} numHashBlocks The size of output in 16-byte blocks.\n * @param {!Array<number>} initHashBlocks The hash-specific initialization\n * @constructor\n * @extends {goog.crypt.Hash}\n * @struct\n */\ngoog.crypt.Sha2 = function(numHashBlocks, initHashBlocks) {\n  goog.crypt.Sha2.base(this, 'constructor');\n\n  this.blockSize = goog.crypt.Sha2.BLOCKSIZE_;\n\n  /**\n   * A chunk holding the currently processed message bytes. Once the chunk has\n   * 64 bytes, we feed it into computeChunk_ function and reset this.chunk_.\n   * @private {!Array<number>|!Uint8Array}\n   */\n  this.chunk_ = goog.global['Uint8Array'] ? new Uint8Array(this.blockSize) :\n                                            new Array(this.blockSize);\n\n  /**\n   * Current number of bytes in this.chunk_.\n   * @private {number}\n   */\n  this.inChunk_ = 0;\n\n  /**\n   * Total number of bytes in currently processed message.\n   * @private {number}\n   */\n  this.total_ = 0;\n\n\n  /**\n   * Holds the previous values of accumulated hash a-h in the computeChunk_\n   * function.\n   * @private {!Array<number>|!Int32Array}\n   */\n  this.hash_ = [];\n\n  /**\n   * The number of output hash blocks (each block is 4 bytes long).\n   * @private {number}\n   */\n  this.numHashBlocks_ = numHashBlocks;\n\n  /**\n   * @private {!Array<number>} initHashBlocks\n   */\n  this.initHashBlocks_ = initHashBlocks;\n\n  /**\n   * Temporary array used in chunk computation.  Allocate here as a\n   * member rather than as a local within computeChunk_() as a\n   * performance optimization to reduce the number of allocations and\n   * reduce garbage collection.\n   * @private {!Int32Array|!Array<number>}\n   */\n  this.w_ = goog.global['Int32Array'] ? new Int32Array(64) : new Array(64);\n\n  if (!goog.isDef(goog.crypt.Sha2.Kx_)) {\n    // This is the first time this constructor has been called.\n    if (goog.global['Int32Array']) {\n      // Typed arrays exist\n      goog.crypt.Sha2.Kx_ = new Int32Array(goog.crypt.Sha2.K_);\n    } else {\n      // Typed arrays do not exist\n      goog.crypt.Sha2.Kx_ = goog.crypt.Sha2.K_;\n    }\n  }\n\n  this.reset();\n};\ngoog.inherits(goog.crypt.Sha2, goog.crypt.Hash);\n\n\n/**\n * The block size\n * @private {number}\n */\ngoog.crypt.Sha2.BLOCKSIZE_ = 512 / 8;\n\n\n/**\n * Contains data needed to pad messages less than BLOCK_SIZE_ bytes.\n * @private {!Array<number>}\n */\ngoog.crypt.Sha2.PADDING_ = goog.array.concat(\n    128, goog.array.repeat(0, goog.crypt.Sha2.BLOCKSIZE_ - 1));\n\n\n/** @override */\ngoog.crypt.Sha2.prototype.reset = function() {\n  this.inChunk_ = 0;\n  this.total_ = 0;\n  this.hash_ = goog.global['Int32Array'] ?\n      new Int32Array(this.initHashBlocks_) :\n      goog.array.clone(this.initHashBlocks_);\n};\n\n\n/**\n * Helper function to compute the hashes for a given 512-bit message chunk.\n * @private\n */\ngoog.crypt.Sha2.prototype.computeChunk_ = function() {\n  var chunk = this.chunk_;\n  goog.asserts.assert(chunk.length == this.blockSize);\n  var rounds = 64;\n\n  // Divide the chunk into 16 32-bit-words.\n  var w = this.w_;\n  var index = 0;\n  var offset = 0;\n  while (offset < chunk.length) {\n    w[index++] = (chunk[offset] << 24) | (chunk[offset + 1] << 16) |\n        (chunk[offset + 2] << 8) | (chunk[offset + 3]);\n    offset = index * 4;\n  }\n\n  // Extend the w[] array to be the number of rounds.\n  for (var i = 16; i < rounds; i++) {\n    var w_15 = w[i - 15] | 0;\n    var s0 = ((w_15 >>> 7) | (w_15 << 25)) ^ ((w_15 >>> 18) | (w_15 << 14)) ^\n        (w_15 >>> 3);\n    var w_2 = w[i - 2] | 0;\n    var s1 = ((w_2 >>> 17) | (w_2 << 15)) ^ ((w_2 >>> 19) | (w_2 << 13)) ^\n        (w_2 >>> 10);\n\n    // As a performance optimization, construct the sum a pair at a time\n    // with casting to integer (bitwise OR) to eliminate unnecessary\n    // double<->integer conversions.\n    var partialSum1 = ((w[i - 16] | 0) + s0) | 0;\n    var partialSum2 = ((w[i - 7] | 0) + s1) | 0;\n    w[i] = (partialSum1 + partialSum2) | 0;\n  }\n\n  var a = this.hash_[0] | 0;\n  var b = this.hash_[1] | 0;\n  var c = this.hash_[2] | 0;\n  var d = this.hash_[3] | 0;\n  var e = this.hash_[4] | 0;\n  var f = this.hash_[5] | 0;\n  var g = this.hash_[6] | 0;\n  var h = this.hash_[7] | 0;\n  for (var i = 0; i < rounds; i++) {\n    var S0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n    var maj = ((a & b) ^ (a & c) ^ (b & c));\n    var t2 = (S0 + maj) | 0;\n    var S1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n    var ch = ((e & f) ^ ((~e) & g));\n\n    // As a performance optimization, construct the sum a pair at a time\n    // with casting to integer (bitwise OR) to eliminate unnecessary\n    // double<->integer conversions.\n    var partialSum1 = (h + S1) | 0;\n    var partialSum2 = (ch + (goog.crypt.Sha2.Kx_[i] | 0)) | 0;\n    var partialSum3 = (partialSum2 + (w[i] | 0)) | 0;\n    var t1 = (partialSum1 + partialSum3) | 0;\n\n    h = g;\n    g = f;\n    f = e;\n    e = (d + t1) | 0;\n    d = c;\n    c = b;\n    b = a;\n    a = (t1 + t2) | 0;\n  }\n\n  this.hash_[0] = (this.hash_[0] + a) | 0;\n  this.hash_[1] = (this.hash_[1] + b) | 0;\n  this.hash_[2] = (this.hash_[2] + c) | 0;\n  this.hash_[3] = (this.hash_[3] + d) | 0;\n  this.hash_[4] = (this.hash_[4] + e) | 0;\n  this.hash_[5] = (this.hash_[5] + f) | 0;\n  this.hash_[6] = (this.hash_[6] + g) | 0;\n  this.hash_[7] = (this.hash_[7] + h) | 0;\n};\n\n\n/** @override */\ngoog.crypt.Sha2.prototype.update = function(message, opt_length) {\n  if (!goog.isDef(opt_length)) {\n    opt_length = message.length;\n  }\n  // Process the message from left to right up to |opt_length| bytes.\n  // When we get a 512-bit chunk, compute the hash of it and reset\n  // this.chunk_. The message might not be multiple of 512 bits so we\n  // might end up with a chunk that is less than 512 bits. We store\n  // such partial chunk in this.chunk_ and it will be filled up later\n  // in digest().\n  var n = 0;\n  var inChunk = this.inChunk_;\n\n  // The input message could be either byte array of string.\n  if (goog.isString(message)) {\n    while (n < opt_length) {\n      this.chunk_[inChunk++] = message.charCodeAt(n++);\n      if (inChunk == this.blockSize) {\n        this.computeChunk_();\n        inChunk = 0;\n      }\n    }\n  } else if (goog.isArrayLike(message)) {\n    while (n < opt_length) {\n      var b = message[n++];\n      if (!('number' == typeof b && 0 <= b && 255 >= b && b == (b | 0))) {\n        throw new Error('message must be a byte array');\n      }\n      this.chunk_[inChunk++] = b;\n      if (inChunk == this.blockSize) {\n        this.computeChunk_();\n        inChunk = 0;\n      }\n    }\n  } else {\n    throw new Error('message must be string or array');\n  }\n\n  // Record the current bytes in chunk to support partial update.\n  this.inChunk_ = inChunk;\n\n  // Record total message bytes we have processed so far.\n  this.total_ += opt_length;\n};\n\n\n/** @override */\ngoog.crypt.Sha2.prototype.digest = function() {\n  var digest = [];\n  var totalBits = this.total_ * 8;\n\n  // Append pad 0x80 0x00*.\n  if (this.inChunk_ < 56) {\n    this.update(goog.crypt.Sha2.PADDING_, 56 - this.inChunk_);\n  } else {\n    this.update(\n        goog.crypt.Sha2.PADDING_, this.blockSize - (this.inChunk_ - 56));\n  }\n\n  // Append # bits in the 64-bit big-endian format.\n  for (var i = 63; i >= 56; i--) {\n    this.chunk_[i] = totalBits & 255;\n    totalBits /= 256;  // Don't use bit-shifting here!\n  }\n  this.computeChunk_();\n\n  // Finally, output the result digest.\n  var n = 0;\n  for (var i = 0; i < this.numHashBlocks_; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      digest[n++] = ((this.hash_[i] >> j) & 255);\n    }\n  }\n  return digest;\n};\n\n\n/**\n * Constants used in SHA-2.\n * @const\n * @private {!Array<number>}\n */\ngoog.crypt.Sha2.K_ = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n  0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n  0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n  0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n  0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n  0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\n\n/**\n * Sha2.K as an Int32Array if this JS supports typed arrays; otherwise,\n * the same array as Sha2.K.\n *\n * The compiler cannot remove an Int32Array, even if it is not needed\n * (There are certain cases where creating an Int32Array is not\n * side-effect free).  Instead, the first time we construct a Sha2\n * instance, we convert or assign Sha2.K as appropriate.\n * @private {undefined|!Array<number>|!Int32Array}\n */\ngoog.crypt.Sha2.Kx_;\n","// Copyright 2012 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview SHA-256 cryptographic hash.\n *\n * Usage:\n *   var sha256 = new goog.crypt.Sha256();\n *   sha256.update(bytes);\n *   var hash = sha256.digest();\n *\n */\n\ngoog.provide('goog.crypt.Sha256');\n\ngoog.require('goog.crypt.Sha2');\n\n\n\n/**\n * SHA-256 cryptographic hash constructor.\n *\n * @constructor\n * @extends {goog.crypt.Sha2}\n * @final\n * @struct\n */\ngoog.crypt.Sha256 = function() {\n  goog.crypt.Sha256.base(\n      this, 'constructor', 8, goog.crypt.Sha256.INIT_HASH_BLOCK_);\n};\ngoog.inherits(goog.crypt.Sha256, goog.crypt.Sha2);\n\n\n/** @private {!Array<number>} */\ngoog.crypt.Sha256.INIT_HASH_BLOCK_ = [\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c,\n  0x1f83d9ab, 0x5be0cd19\n];\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines Cordova utility and helper functions.\n * The following plugins must be installed:\n * cordova plugin add cordova-plugin-buildinfo\n * cordova plugin add cordova-universal-links-plugin-fix\n * cordova plugin add cordova-plugin-browsertab\n * cordova plugin add cordova-plugin-inappbrowser\n * iOS custom scheme support:\n * cordova plugin add cordova-plugin-customurlscheme --variable \\\n * URL_SCHEME=com.firebase.example\n * Console logging in iOS:\n * cordova plugin add cordova-plugin-console\n */\n\ngoog.provide('fireauth.CordovaHandler');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.AuthProvider');\ngoog.require('fireauth.DynamicLink');\ngoog.require('fireauth.OAuthSignInHandler');\ngoog.require('fireauth.UniversalLinkSubscriber');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.iframeclient.IfcHandler');\ngoog.require('fireauth.storage.AuthEventManager');\ngoog.require('fireauth.storage.OAuthHandlerManager');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Timer');\ngoog.require('goog.Uri');\ngoog.require('goog.array');\ngoog.require('goog.crypt');\ngoog.require('goog.crypt.Sha256');\n\n\n/**\n * Cordova environment utility and helper functions.\n * @param {string} authDomain The application authDomain.\n * @param {string} apiKey The API key.\n * @param {string} appName The App name.\n * @param {?string=} opt_clientVersion The optional client version string.\n * @param {number=} opt_initialTimeout Initial Auth event timeout.\n * @param {number=} opt_redirectTimeout Redirect result timeout.\n * @param {?string=} opt_endpointId The endpoint ID (staging, test Gaia, etc).\n * @constructor\n * @implements {fireauth.OAuthSignInHandler}\n */\nfireauth.CordovaHandler = function(authDomain, apiKey, appName,\n    opt_clientVersion, opt_initialTimeout, opt_redirectTimeout,\n    opt_endpointId) {\n  /** @private {string} The application authDomain. */\n  this.authDomain_ = authDomain;\n  /** @private {string} The application API key. */\n  this.apiKey_ = apiKey;\n  /** @private {string} The application name. */\n  this.appName_ = appName;\n  /** @private {?string} The client version */\n  this.clientVersion_ = opt_clientVersion || null;\n  /** @private {?string} The Auth endpoint ID. */\n  this.endpointId_ = opt_endpointId || null;\n  /** @private {string} The storage key. */\n  this.storageKey_ = fireauth.util.createStorageKey(apiKey, appName);\n  /**\n   * @private {!fireauth.storage.OAuthHandlerManager} The OAuth handler\n   *     storage manager reference, used to save a partial Auth event when\n   *     redirect operation is triggered.\n   */\n  this.savePartialEventManager_ = new fireauth.storage.OAuthHandlerManager();\n  /**\n   * @private {!fireauth.storage.AuthEventManager} The Auth event storage\n   *     manager reference. This is used to get back the saved partial Auth\n   *     event and then delete on successful handling.\n   */\n  this.getAndDeletePartialEventManager_ =\n      new fireauth.storage.AuthEventManager(this.storageKey_);\n  /**\n   * @private {?goog.Promise<!fireauth.AuthEvent>} A promise that resolves with\n   *     the OAuth redirect URL response.\n   */\n  this.initialAuthEvent_ = null;\n  /**\n   * @private {!Array<!function(?fireauth.AuthEvent)>} The Auth event\n   *     listeners.\n   */\n  this.authEventListeners_ = [];\n  /** @private {number} The initial Auth event timeout. */\n  this.initialTimeout_ = opt_initialTimeout ||\n      fireauth.CordovaHandler.INITIAL_TIMEOUT_MS_;\n  /** @private {number} The return to app after redirect timeout. */\n  this.redirectTimeout_ = opt_redirectTimeout ||\n      fireauth.CordovaHandler.REDIRECT_TIMEOUT_MS_;\n  /**\n   * @private {?goog.Promise} The last pending redirect promise. This is null if\n   *     already completed.\n   */\n  this.pendingRedirect_ = null;\n  /**\n   * @private {?Object} The inAppBrowser reference window if available. This is\n   *     relevant to iOS 7 and 8 embedded webviews.\n   */\n  this.inAppBrowserRef_ = null;\n};\n\n\n/**\n * The total number of chars used to generate the session ID string.\n * @const {number}\n * @private\n */\nfireauth.CordovaHandler.SESSION_ID_TOTAL_CHARS_ = 20;\n\n\n/**\n * The default initial Auth event timeout in ms.\n * @const {number}\n * @private\n */\nfireauth.CordovaHandler.INITIAL_TIMEOUT_MS_ = 500;\n\n\n/**\n * The default timeout in milliseconds for a pending redirect operation after\n * returning to the app.\n * @const {number}\n * @private\n */\nfireauth.CordovaHandler.REDIRECT_TIMEOUT_MS_ = 2000;\n\n\n/**\n * Constructs a Cordova configuration error message.\n * @param {?string=} opt_message The optional error message to be used. This\n *     will override the existing default one.\n * @return {!fireauth.AuthError} The Cordova invalid configuration error with\n *     the custom message provided. If no message is provided, the default\n *     message is used.\n * @private\n */\nfireauth.CordovaHandler.getError_ = function(opt_message) {\n  return new fireauth.AuthError(\n      fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION,\n      opt_message);\n};\n\n\n/**\n * Initializes the Cordova environment and waits for it to be ready.\n * @return {!goog.Promise} A promise that resolves if the current environment is\n *     a Cordova environment.\n * @override\n */\nfireauth.CordovaHandler.prototype.initializeAndWait = function() {\n  if (this.isReady_) {\n    return this.isReady_;\n  }\n  this.isReady_ = fireauth.util.checkIfCordova().then(function() {\n    // Check all dependencies installed.\n    // Note that cordova-universal-links-plugin has been abandoned.\n    // A fork with latest fixes is available at:\n    // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\n    var subscribe = fireauth.util.getObjectRef(\n        'universalLinks.subscribe', goog.global);\n    if (typeof subscribe !== 'function') {\n      throw fireauth.CordovaHandler.getError_(\n          'cordova-universal-links-plugin-fix is not installed');\n    }\n    // https://www.npmjs.com/package/cordova-plugin-buildinfo\n    var appIdentifier =\n        fireauth.util.getObjectRef('BuildInfo.packageName', goog.global);\n    if (typeof appIdentifier === 'undefined') {\n      throw fireauth.CordovaHandler.getError_(\n          'cordova-plugin-buildinfo is not installed');\n    }\n    // https://github.com/google/cordova-plugin-browsertab\n    var openUrl = fireauth.util.getObjectRef(\n        'cordova.plugins.browsertab.openUrl', goog.global);\n    if (typeof openUrl !== 'function') {\n      throw fireauth.CordovaHandler.getError_(\n          'cordova-plugin-browsertab is not installed');\n    }\n    // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\n    var openInAppBrowser = fireauth.util.getObjectRef(\n        'cordova.InAppBrowser.open', goog.global);\n    if (typeof openInAppBrowser !== 'function') {\n      throw fireauth.CordovaHandler.getError_(\n          'cordova-plugin-inappbrowser is not installed');\n    }\n  }, function(error) {\n    // If not supported.\n    throw new fireauth.AuthError(fireauth.authenum.Error.CORDOVA_NOT_READY);\n  });\n  return this.isReady_;\n};\n\n\n/**\n * Generates a session ID. Used to prevent session fixation attacks.\n * @param {number} numOfChars The number of characters to generate.\n * @return {string} The generated session ID.\n * @private\n */\nfireauth.CordovaHandler.prototype.generateSessionId_ = function(numOfChars) {\n  var chars = [];\n  var allowedChars =\n      '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  while (numOfChars > 0) {\n    var index = Math.floor(Math.random() * allowedChars.length);\n    chars.push(allowedChars.charAt(index));\n    numOfChars--;\n  }\n  return chars.join('');\n};\n\n\n/**\n * Computes the sha256 hash of a session ID.\n * @param {string} str The string to hash.\n * @return {string} The hashed string.\n * @private\n */\nfireauth.CordovaHandler.prototype.computeSecureHash_ = function(str) {\n  // sha256 the sessionId. This will be passed to the OAuth backend.\n  // When exchanging the Auth code with a firebase ID token, the raw session ID\n  // needs to be provided.\n  var sha256 = new goog.crypt.Sha256();\n  sha256.update(str);\n  return goog.crypt.byteArrayToHex(sha256.digest());\n};\n\n\n/**\n * Waits for popup window to close and time out if the result is unhandled.\n * This is not supported in Cordova.\n * @param {!Window} popupWin The popup window.\n * @param {!function(!fireauth.AuthError)} onError The on error callback.\n * @return {!goog.Promise}\n * @override\n */\nfireauth.CordovaHandler.prototype.startPopupTimeout =\n    function(popupWin, onError, timeoutDuration) {\n  // Not supported operation, check processPopup for details.\n  onError(new fireauth.AuthError(\n      fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  return goog.Promise.resolve();\n};\n\n\n/**\n * Processes the popup request. This is not supported in Cordova.\n * @param {?Window} popupWin The popup window reference.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {!function()} onInitialize The function to call on initialization.\n * @param {!function(*)} onError The function to call on error.\n * @param {string=} opt_eventId The optional event ID.\n * @param {boolean=} opt_alreadyRedirected Whether popup is already redirected\n *     to final destination.\n * @return {!goog.Promise} The popup window promise.\n * @override\n */\nfireauth.CordovaHandler.prototype.processPopup = function(\n    popupWin,\n    mode,\n    provider,\n    onInitialize,\n    onError,\n    opt_eventId,\n    opt_alreadyRedirected) {\n  // Popups not supported in Cordova as the activity could be destroyed in\n  // some cases. Redirect works better as getRedirectResult can be used as a\n  // fallback to get the result when the activity is detroyed.\n  return goog.Promise.reject(new fireauth.AuthError(\n      fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n};\n\n\n/**\n * @return {boolean} Whether the handler will unload the current page on\n *     redirect operations.\n * @override\n */\nfireauth.CordovaHandler.prototype.unloadsOnRedirect = function() {\n  // Does not necessarily unload the page on redirect.\n  return false;\n};\n\n\n/**\n * @return {boolean} Whether the handler should be initialized early.\n * @override\n */\nfireauth.CordovaHandler.prototype.shouldBeInitializedEarly = function() {\n  // Initialize early to detect incoming link. This is not an expensive\n  // operation, unlike embedding an iframe.\n  return true;\n};\n\n\n/**\n * @return {boolean} Whether the sign-in handler in the current environment\n *     has volatile session storage.\n * @override\n */\nfireauth.CordovaHandler.prototype.hasVolatileStorage = function() {\n  // An activity can be destroyed and thereby sessionStorage wiped out.\n  return true;\n};\n\n\n/**\n * Processes the OAuth redirect request. Will resolve when the OAuth response\n * is detected in the incoming link and the corresponding Auth event is\n * triggered.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {?string=} opt_eventId The optional event ID.\n * @return {!goog.Promise}\n * @override\n */\nfireauth.CordovaHandler.prototype.processRedirect = function(\n    mode,\n    provider,\n    opt_eventId) {\n  // If there is already a pending redirect, throw an error.\n  if (this.pendingRedirect_) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.REDIRECT_OPERATION_PENDING));\n  }\n  var self = this;\n  var doc = goog.global.document;\n  // On close timer promise.\n  var onClose = null;\n  // Auth event detection callback;\n  var authEventCallback = null;\n  // On resume (return from the redirect operation).\n  var onResume = null;\n  // On visibility change used to detect return to app in certain versions,\n  // currently iOS.\n  var onVisibilityChange = null;\n  // When the processRedirect promise completes, clean up any remaining\n  // temporary listeners and timers.\n  var cleanup = function() {\n    // Remove current resume listener.\n    if (onResume) {\n      doc.removeEventListener('resume', onResume, false);\n    }\n    // Remove visibility change listener.\n    if (onVisibilityChange) {\n      doc.removeEventListener('visibilitychange', onVisibilityChange, false);\n    }\n    // Cancel onClose promise if not already cancelled.\n    if (onClose) {\n      onClose.cancel();\n    }\n    // Remove Auth event callback.\n    if (authEventCallback) {\n      self.removeAuthEventListener(authEventCallback);\n    }\n    // Clear any pending redirect now that it is completed.\n    self.pendingRedirect_ = null;\n  };\n  // Save the pending redirect promise and clear it on completion.\n  this.pendingRedirect_ = goog.Promise.resolve().then(function() {\n    // Validate provider.\n    // Fail fast in this case.\n    fireauth.AuthProvider.checkIfOAuthSupported(provider);\n    return self.getInitialAuthEvent_();\n  }).then(function() {\n    return self.processRedirectInternal_(mode, provider, opt_eventId);\n  }).then(function() {\n    // Wait for result (universal link) before resolving this operation.\n    // This ensures that if the activity is not destroyed, we can still\n    // return the result of this operation.\n    return new goog.Promise(function(resolve, reject) {\n      /**\n       * @param {?fireauth.AuthEvent} event The Auth event detected.\n       * @return {boolean}\n       */\n      authEventCallback = function(event) {\n        // Auth event detected, resolve promise.\n        // Close SFSVC if still open.\n        var closeBrowsertab = fireauth.util.getObjectRef(\n            'cordova.plugins.browsertab.close', goog.global);\n        resolve();\n        // Close the SFSVC if it is still open (iOS 9+).\n        if (typeof closeBrowsertab === 'function') {\n          closeBrowsertab();\n        }\n        // Close inappbrowser emebedded webview in iOS7 and 8 case if still\n        // open.\n        if (self.inAppBrowserRef_ &&\n            typeof self.inAppBrowserRef_['close'] === 'function') {\n          self.inAppBrowserRef_['close']();\n          // Reset reference.\n          self.inAppBrowserRef_ = null;\n        }\n        return false;\n      };\n      // Wait and listen for the operation to complete (Auth event would\n      // trigger).\n      self.addAuthEventListener(authEventCallback);\n      // On resume (return from the redirect operation).\n      onResume = function() {\n        // Already resumed. Do not run again.\n        if (onClose) {\n          return;\n        }\n        // Wait for some time before throwing the error that the flow was\n        // cancelled by the user.\n        onClose = goog.Timer.promise(self.redirectTimeout_).then(function() {\n          // Throw the redirect cancelled by user error.\n          reject(new fireauth.AuthError(\n              fireauth.authenum.Error.REDIRECT_CANCELLED_BY_USER));\n        });\n      };\n      onVisibilityChange = function() {\n        // If app is visible, run onResume. Otherwise, ignore.\n        if (fireauth.util.isAppVisible()) {\n          onResume();\n        }\n      };\n      // Listen to resume event (will trigger when the user returns to the app).\n      doc.addEventListener('resume', onResume, false);\n      // Listen to visibility change. This is used for iOS Cordova Safari 7+.\n      // Does not work in Android stock browser versions older than 4.4.\n      // We rely on resume event in Android as it works reliably in all\n      // versions.\n      if (!fireauth.util.isAndroid()) {\n        doc.addEventListener('visibilitychange', onVisibilityChange, false);\n      }\n    }).thenCatch(function(error) {\n      // Remove any pending partial event.\n      return self.getPartialStoredEvent_().then(function() {\n        throw error;\n      });\n    });\n  }).thenAlways(cleanup);\n  // Return the pending redirect promise.\n  return this.pendingRedirect_;\n};\n\n/**\n * Processes the OAuth redirect request.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {?string=} opt_eventId The optional event ID.\n * @return {!goog.Promise}\n * @private\n */\nfireauth.CordovaHandler.prototype.processRedirectInternal_ = function(\n    mode,\n    provider,\n    opt_eventId) {\n  var self = this;\n  // https://github.com/google/cordova-plugin-browsertab\n  // Opens chrome custom tab in Android if chrome is installed,\n  // SFSafariViewController in iOS if supported.\n  // If the above are not supported, opens the system browser.\n  // Opening a system browser could result in an app being rejected in the App\n  // Store. The only solution here is to use an insecure embedded UIWebView.\n  // This applies to older iOS versions 8 and under.\n  // Generate a random session ID.\n  var sessionId = this.generateSessionId_(\n      fireauth.CordovaHandler.SESSION_ID_TOTAL_CHARS_);\n  // Create the partial Auth event.\n  var event = new fireauth.AuthEvent(\n      mode,\n      opt_eventId,\n      null,\n      sessionId,\n      new fireauth.AuthError(fireauth.authenum.Error.NO_AUTH_EVENT));\n  // Use buildinfo package to get app metadata.\n  // https://www.npmjs.com/package/cordova-plugin-buildinfo\n  // Get app identifier.\n  var appIdentifier =\n      fireauth.util.getObjectRef('BuildInfo.packageName', goog.global);\n  // initializeAndWait will ensure this does not happen.\n  if (typeof appIdentifier !== 'string') {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION);\n  }\n  // Get app display name.\n  var appDisplayName =\n      fireauth.util.getObjectRef('BuildInfo.displayName', goog.global);\n  // Construct additional params to pass to OAuth handler.\n  var additionalParams  = {};\n  // Append app identifier.\n  if (fireauth.util.isIOS()) {\n    // iOS app.\n    additionalParams['ibi'] = appIdentifier;\n  } else if (fireauth.util.isAndroid()) {\n    // Android app.\n    additionalParams['apn'] = appIdentifier;\n  } else {\n    // This should not happen as Cordova handler should not even be used in this\n    // case.\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  }\n  // Pass app display name.\n  if (appDisplayName) {\n    additionalParams['appDisplayName'] = appDisplayName;\n  }\n  // Hash the session ID and pass it to additional params.\n  var hashedSessionId = this.computeSecureHash_(sessionId);\n  // Append session ID.\n  additionalParams['sessionId'] = hashedSessionId;\n  // Construct OAuth handler URL.\n  var oauthHelperWidgetUrl =\n      fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(\n          this.authDomain_,\n          this.apiKey_,\n          this.appName_,\n          mode,\n          provider,\n          null,\n          opt_eventId,\n          this.clientVersion_,\n          additionalParams,\n          this.endpointId_);\n  // Make sure handler initialized and ready.\n  // This should also ensure all plugins are installed.\n  return this.initializeAndWait().then(function() {\n    // Save partial Auth event.\n    return self.savePartialEventManager_.setAuthEvent(self.storageKey_, event);\n  }).then(function() {\n    // initializeAndWait will ensure this plugin is installed.\n    var isAvailable = /** @type {!function(!function(*))} */ (\n        fireauth.util.getObjectRef(\n            'cordova.plugins.browsertab.isAvailable', goog.global));\n    if (typeof isAvailable !== 'function') {\n      throw new fireauth.AuthError(\n          fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION);\n    }\n    var openUrl = null;\n    // Check if browsertab is supported.\n    isAvailable(function(result) {\n      if (result) {\n        // browsertab supported.\n        openUrl = /** @type {!function(string, ...*)} */ (\n            fireauth.util.getObjectRef(\n                'cordova.plugins.browsertab.openUrl', goog.global));\n        if (typeof openUrl !== 'function') {\n          throw new fireauth.AuthError(\n              fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION);\n        }\n        // Open OAuth handler.\n        openUrl(oauthHelperWidgetUrl);\n      } else {\n        // browsertab not supported, switch to inappbrowser.\n        openUrl = /** @type {!function(string, string, string=)} */ (\n            fireauth.util.getObjectRef(\n                'cordova.InAppBrowser.open', goog.global));\n        if (typeof openUrl !== 'function') {\n          throw new fireauth.AuthError(\n              fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION);\n        }\n        // Open in embedded webview for iOS 7 and 8 as Apple rejects apps that\n        // switch context.\n        // _blank opens an embedded webview.\n        // _system opens the system browser.\n        // _system (opens a system browser) is used as a fallback when\n        // browsertab plugin is unable to open a chromecustomtab or SFSVC.\n        // This has to exclude all iOS older versions where switching to a\n        // browser is frowned upon by Apple and embedding a UIWebView is the\n        // only option but is insecure and deprecated by Google for OAuth\n        // sign-in. This will be applicable in old versions of Android.\n        self.inAppBrowserRef_ = openUrl(\n            oauthHelperWidgetUrl,\n            fireauth.util.isIOS7Or8() ? '_blank' : '_system',\n            'location=yes');\n      }\n    });\n  });\n};\n\n\n/**\n * Dispatches the detected Auth event to all subscribed listeners.\n * @param {!fireauth.AuthEvent} event A detected Auth event.\n * @private\n */\nfireauth.CordovaHandler.prototype.dispatchEvent_ = function(event) {\n  for (var i = 0; i < this.authEventListeners_.length; i++) {\n    try {\n      this.authEventListeners_[i](event);\n    } catch (e) {\n      // If any handler fails, ignore and run next handler.\n    }\n  }\n};\n\n\n/**\n * Resolves the first redirect Auth event and caches it.\n * @return {!goog.Promise<!fireauth.AuthEvent>} A promise that resolves with the\n *     initial Auth event response from a redirect operation. Initializes the\n *     internal Auth event listener which will dispatch Auth events to all\n *     subscribed listeners.\n * @private\n */\nfireauth.CordovaHandler.prototype.getInitialAuthEvent_ = function() {\n  var self = this;\n  if (!this.initialAuthEvent_) {\n    // Cache this result so on next call, it is not triggered again.\n    this.initialAuthEvent_ = this.initializeAndWait().then(function() {\n      return new goog.Promise(function(resolve, reject) {\n        /**\n         * @param {?fireauth.AuthEvent} event The Auth event detected.\n         * @return {boolean}\n         */\n        var authEventCallback = function(event) {\n          resolve(event);\n          // Remove on completion.\n          self.removeAuthEventListener(authEventCallback);\n          return false;\n        };\n        // Listen to Auth events. If resolved, resolve promise.\n        self.addAuthEventListener(authEventCallback);\n        // This should succeed as initializeAndWait should guarantee plugins are\n        // ready.\n        self.setAuthEventListener_();\n      });\n    });\n  }\n  return this.initialAuthEvent_;\n};\n\n\n/**\n * Gets and deletes the current stored partial event from storage.\n * @return {!goog.Promise<?fireauth.AuthEvent>} A promise that resolves with the\n *     stored Auth event.\n * @private\n */\nfireauth.CordovaHandler.prototype.getPartialStoredEvent_ = function() {\n  var event = null;\n  var self = this;\n  // Get any saved partial Auth event.\n  return this.getAndDeletePartialEventManager_.getAuthEvent()\n    .then(function(authEvent) {\n      // Save partial event locally.\n      event = authEvent;\n      // Delete partial event.\n      return self.getAndDeletePartialEventManager_.removeAuthEvent();\n    }).then(function() {\n      // Return the locally saved partial event.\n      return event;\n    });\n};\n\n\n/**\n * Extracts the Auth event pertaining to the incoming URL.\n * @param {!fireauth.AuthEvent} partialEvent The partial Auth event.\n * @param {string} url The incoming universal link.\n * @return {?fireauth.AuthEvent} The resolved Auth event corresponding to the\n *     callback URL. This is null if no event is found.\n * @private\n */\nfireauth.CordovaHandler.prototype.extractAuthEventFromUrl_ =\n    function(partialEvent, url) {\n  // Default no redirect event result.\n  var authEvent = null;\n  // Parse the deep link within the dynamic link URL.\n  var callbackUrl = fireauth.DynamicLink.parseDeepLink(url);\n  // Confirm it is actually a callback URL.\n  // Currently the universal link will be of this format:\n  // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\n  // This is a fake URL but is not intended to take the user anywhere\n  // and just redirect to the app.\n  if (callbackUrl.indexOf('/__/auth/callback') != -1) {\n    // Check if there is an error in the URL.\n    // This mechanism is also used to pass errors back to the app:\n    // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\n    var uri = goog.Uri.parse(callbackUrl);\n    // Get the error object corresponding to the stringified error if found.\n    var errorObject = fireauth.util.parseJSON(\n        uri.getParameterValue('firebaseError') || null);\n    var error = typeof errorObject === 'object' ?\n        fireauth.AuthError.fromPlainObject(\n            /** @type {?Object} */ (errorObject)) :\n        null;\n    if (error) {\n      // Construct the full failed Auth event.\n      authEvent = new fireauth.AuthEvent(\n          partialEvent.getType(),\n          partialEvent.getEventId(),\n          null,\n          null,\n          error);\n    } else {\n      // Construct the full successful Auth event.\n      authEvent = new fireauth.AuthEvent(\n          partialEvent.getType(),\n          partialEvent.getEventId(),\n          callbackUrl,\n          partialEvent.getSessionId());\n    }\n  }\n  return authEvent;\n};\n\n\n/**\n * Sets the internal Auth event listener. This listens to incoming universal\n * links and on detection, repackages them into an Auth event and then\n * dispatches the events in all event listeners.\n * @private\n */\nfireauth.CordovaHandler.prototype.setAuthEventListener_ = function() {\n  // https://github.com/nordnet/cordova-universal-links-plugin-fix\n  var self = this;\n  // Default no redirect event result.\n  var noEvent = new fireauth.AuthEvent(\n      fireauth.AuthEvent.Type.UNKNOWN,\n      null,\n      null,\n      null,\n      new fireauth.AuthError(fireauth.authenum.Error.NO_AUTH_EVENT));\n  var initialResolve = false;\n  // On initialization, if no incoming universal link detected, trigger\n  // no Auth event (no redirect operation previously called) after waiting\n  // for a short period of time.\n  var noEventTimer = goog.Timer.promise(this.initialTimeout_).then(function() {\n    // Delete any pending unhandled event.\n    return self.getPartialStoredEvent_().then(function(event) {\n      // On timeout trigger noEvent if not already resolved in link\n      // subscriber.\n      if (!initialResolve) {\n        self.dispatchEvent_(noEvent);\n      }\n    });\n  });\n  // No event name needed, subscribe to all incoming universal links.\n  var universalLinkCb = function(eventData) {\n    initialResolve = true;\n    // Cancel no event timer.\n    if (noEventTimer) {\n      noEventTimer.cancel();\n    }\n    // Incoming link detected.\n    // Check for any stored partial event.\n    self.getPartialStoredEvent_().then(function(event) {\n      // Initialize to an unknown event.\n      var authEvent = noEvent;\n      // Confirm OAuth response included.\n      if (event && eventData && eventData['url']) {\n        // Construct complete event. Default to unknown event if none found.\n        authEvent = self.extractAuthEventFromUrl_(event, eventData['url']) ||\n            noEvent;\n      }\n      // Dispatch Auth event.\n      self.dispatchEvent_(authEvent);\n    });\n  };\n  // iOS 7 or 8 custom URL schemes.\n  // This is also the current default behavior for iOS 9+.\n  // For this to work, cordova-plugin-customurlscheme needs to be installed.\n  // https://github.com/EddyVerbruggen/Custom-URL-scheme\n  // Do not overwrite the existing developer's URL handler.\n  var existingHandlerOpenURL = goog.global['handleOpenURL'];\n  goog.global['handleOpenURL'] = function(url) {\n    var appIdentifier =\n        fireauth.util.getObjectRef('BuildInfo.packageName', goog.global);\n    // Apply case insensitive match. While bundle IDs are case sensitive,\n    // when creating a new app, Apple verifies the Bundle ID using\n    // case-insensitive search. So it is not possible that an app in the app\n    // store try to impersonate another one by lower/upper casing characters.\n    if (url.toLowerCase().indexOf(appIdentifier.toLowerCase() + '://') == 0) {\n      universalLinkCb({\n        'url': url\n      });\n    }\n    // Call the developer's handler if it is present.\n    if (typeof existingHandlerOpenURL === 'function') {\n      try {\n        existingHandlerOpenURL(url);\n      } catch(e) {\n        // This doesn't swallow the error but also does not interrupt the flow.\n        console.error(e);\n      }\n    }\n  };\n  fireauth.UniversalLinkSubscriber.getInstance().subscribe(universalLinkCb);\n};\n\n\n/**\n * @param {!function(?fireauth.AuthEvent):boolean} listener The Auth event\n *     listener to add.\n * @override\n */\nfireauth.CordovaHandler.prototype.addAuthEventListener = function(listener) {\n  // TODO: consider creating an abstract base class that OAuth handlers\n  // extend with add, remove Auth event listeners and dispatcher methods.\n  this.authEventListeners_.push(listener);\n  // Set internal listener to Auth events. This will be ignored on subsequent\n  // calls.\n  this.getInitialAuthEvent_().thenCatch(function(error) {\n    // Suppress this error as it should be caught through other actionable\n    // public methods.\n    // This would typically happen on invalid Cordova setup, when the OAuth\n    // plugins are not installed. This should still trigger the Auth event\n    // as developers are not forced to use OAuth sign-in in their Cordova app.\n    // This is needed for onAuthStateChanged listener to trigger initially.\n    if (error.code === 'auth/invalid-cordova-configuration') {\n      var noEvent = new fireauth.AuthEvent(\n          fireauth.AuthEvent.Type.UNKNOWN,\n          null,\n          null,\n          null,\n          new fireauth.AuthError(fireauth.authenum.Error.NO_AUTH_EVENT));\n      listener(noEvent);\n    }\n  });\n};\n\n\n/**\n * @param {!function(?fireauth.AuthEvent):boolean} listener The Auth event\n *     listener to remove.\n * @override\n */\nfireauth.CordovaHandler.prototype.removeAuthEventListener = function(listener) {\n  goog.array.removeAllIf(this.authEventListeners_, function(ele) {\n    return ele == listener;\n  });\n};\n\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the fireauth.storage.PendingRedirectManager class which\n * provides utilities to store, retrieve and delete the state of whether there\n * is a pending redirect operation previously triggered.\n */\n\ngoog.provide('fireauth.storage.PendingRedirectManager');\n\ngoog.require('fireauth.authStorage');\n\n\n/**\n * Defines the pending redirect storage manager. It provides methods\n * to store, retrieve and delete the state of whether there is a pending\n * redirect operation previously triggered.\n * @param {string} appId The Auth state's application ID.\n * @param {?fireauth.authStorage.Manager=} opt_manager The underlying storage\n *     manager to use. If none is provided, the default global instance is used.\n * @constructor @struct @final\n */\nfireauth.storage.PendingRedirectManager = function(appId, opt_manager) {\n  /** @const @private{string} appId The Auth state's application ID. */\n  this.appId_ = appId;\n  /**\n   * @const @private{!fireauth.authStorage.Manager} The underlying storage\n   *     manager.\n   */\n  this.manager_ = opt_manager || fireauth.authStorage.Manager.getInstance();\n};\n\n\n/**\n * @const @private{!string} The pending redirect flag.\n */\nfireauth.storage.PendingRedirectManager.PENDING_FLAG_ = 'pending';\n\n\n/**\n * @const @private{!fireauth.authStorage.Key} The pending redirect status\n *     storage identifier key.\n */\nfireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_ = {\n  name: 'pendingRedirect',\n  persistent: fireauth.authStorage.Persistence.SESSION\n};\n\n\n/**\n * Stores the pending redirect operation for the provided application ID.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.PendingRedirectManager.prototype.setPendingStatus =\n    function() {\n  return this.manager_.set(\n      fireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_,\n      fireauth.storage.PendingRedirectManager.PENDING_FLAG_,\n      this.appId_);\n};\n\n\n/**\n * Removes the stored pending redirect operation for provided app ID.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.PendingRedirectManager.prototype.removePendingStatus =\n    function() {\n  return this.manager_.remove(\n      fireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_,\n      this.appId_);\n};\n\n\n/**\n * @return {!goog.Promise<boolean>} A promise that resolves with a boolean\n *     whether there is a pending redirect operaiton for the provided app ID.\n */\nfireauth.storage.PendingRedirectManager.prototype.getPendingStatus =\n    function() {\n  return this.manager_.get(\n      fireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_,\n      this.appId_).then(function(response) {\n        return response ==\n            fireauth.storage.PendingRedirectManager.PENDING_FLAG_;\n      });\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Auth event manager instance.\n */\n\ngoog.provide('fireauth.AuthEventHandler');\ngoog.provide('fireauth.AuthEventManager');\ngoog.provide('fireauth.AuthEventManager.Result');\ngoog.provide('fireauth.PopupAuthEventProcessor');\ngoog.provide('fireauth.RedirectAuthEventProcessor');\n\ngoog.require('fireauth.AuthCredential');\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.CordovaHandler');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.constants');\ngoog.require('fireauth.iframeclient.IfcHandler');\ngoog.require('fireauth.storage.PendingRedirectManager');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Timer');\ngoog.require('goog.array');\n\n\n/**\n * Initializes the Auth event manager which provides the mechanism to connect\n * external Auth events to their corresponding listeners.\n * @param {string} authDomain The Firebase authDomain used to determine the\n *     OAuth helper page domain.\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The App ID for the Auth instance that triggered this\n *     request.\n * @constructor\n */\nfireauth.AuthEventManager = function(authDomain, apiKey, appName) {\n  /** @private {string} The Auth domain. */\n  this.authDomain_ = authDomain;\n  /** @private {string} The browser API key. */\n  this.apiKey_ = apiKey;\n  /** @private {string} The App name. */\n  this.appName_ = appName;\n  /**\n   * @private {!Array<!fireauth.AuthEventHandler>} List of subscribed handlers.\n   */\n  this.subscribedHandlers_ = [];\n  /**\n   * @private {boolean} Whether the Auth event manager instance is initialized.\n   */\n  this.initialized_ = false;\n  /** @private {function(?fireauth.AuthEvent)} The Auth event handler. */\n  this.authEventHandler_ = goog.bind(this.handleAuthEvent_, this);\n  /** @private {!fireauth.RedirectAuthEventProcessor} The redirect event\n   *      processor. */\n  this.redirectAuthEventProcessor_ =\n      new fireauth.RedirectAuthEventProcessor(this);\n  /** @private {!fireauth.PopupAuthEventProcessor} The popup event processor. */\n  this.popupAuthEventProcessor_ = new fireauth.PopupAuthEventProcessor(this);\n  /**\n   * @private {!fireauth.storage.PendingRedirectManager} The pending redirect\n   *     storage manager instance.\n   */\n  this.pendingRedirectStorageManager_ =\n      new fireauth.storage.PendingRedirectManager(\n          fireauth.AuthEventManager.getKey_(this.apiKey_, this.appName_));\n\n  /**\n   * @private {!Object.<!fireauth.AuthEvent.Type, !fireauth.AuthEventProcessor>}\n   *     Map containing Firebase event processor instances keyed by event type.\n   */\n  this.typeToManager_ = {};\n  this.typeToManager_[fireauth.AuthEvent.Type.UNKNOWN] =\n      this.redirectAuthEventProcessor_;\n  this.typeToManager_[fireauth.AuthEvent.Type.SIGN_IN_VIA_REDIRECT] =\n      this.redirectAuthEventProcessor_;\n  this.typeToManager_[fireauth.AuthEvent.Type.LINK_VIA_REDIRECT] =\n      this.redirectAuthEventProcessor_;\n  this.typeToManager_[fireauth.AuthEvent.Type.REAUTH_VIA_REDIRECT] =\n      this.redirectAuthEventProcessor_;\n  this.typeToManager_[fireauth.AuthEvent.Type.SIGN_IN_VIA_POPUP] =\n      this.popupAuthEventProcessor_;\n  this.typeToManager_[fireauth.AuthEvent.Type.LINK_VIA_POPUP] =\n      this.popupAuthEventProcessor_;\n  this.typeToManager_[fireauth.AuthEvent.Type.REAUTH_VIA_POPUP] =\n      this.popupAuthEventProcessor_;\n  /**\n   * @private {!fireauth.OAuthSignInHandler} The OAuth sign in handler depending\n   *     on the current environment.\n   */\n  this.oauthSignInHandler_ =\n      fireauth.AuthEventManager.instantiateOAuthSignInHandler(\n          this.authDomain_, this.apiKey_, this.appName_,\n          firebase.SDK_VERSION || null,\n          fireauth.constants.clientEndpoint);\n};\n\n\n/**\n * @return {!fireauth.RedirectAuthEventProcessor} The redirect event processor.\n */\nfireauth.AuthEventManager.prototype.getRedirectAuthEventProcessor = function() {\n  return this.redirectAuthEventProcessor_;\n};\n\n\n/** @return {!fireauth.PopupAuthEventProcessor} The popup event processor. */\nfireauth.AuthEventManager.prototype.getPopupAuthEventProcessor = function() {\n  return this.popupAuthEventProcessor_;\n};\n\n\n/**\n * Instantiates an OAuth sign-in handler depending on the current environment\n * and returns it.\n * @param {string} authDomain The Firebase authDomain used to determine the\n *     OAuth helper page domain.\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The App ID for the Auth instance that triggered this\n *     request.\n * @param {?string} version The SDK client version.\n * @param {?string=} opt_endpointId The endpoint ID (staging, test Gaia, etc).\n * @return {!fireauth.OAuthSignInHandler} The OAuth sign in handler depending\n *     on the current environment.\n */\nfireauth.AuthEventManager.instantiateOAuthSignInHandler =\n    function(authDomain, apiKey, appName, version, opt_endpointId) {\n  // This assumes that android/iOS file environment must be a Cordova\n  // environment which is not true. This is the best way currently available\n  // to instantiate this synchronously without waiting for checkIfCordova to\n  // resolve. If it is determined that the Cordova was falsely detected, it will\n  // be caught via actionable public popup and redirect methods.\n  return fireauth.util.isAndroidOrIosFileEnvironment() ?\n      new fireauth.CordovaHandler(\n          authDomain, apiKey, appName, version, undefined, undefined,\n          opt_endpointId) :\n      new fireauth.iframeclient.IfcHandler(\n          authDomain, apiKey, appName, version, opt_endpointId);\n};\n\n\n/** Reset iframe. This will require reinitializing it.*/\nfireauth.AuthEventManager.prototype.reset = function() {\n  // Reset initialized status. This will force a popup request to re-initialize\n  // the iframe.\n  this.initialized_ = false;\n  // Remove any previous existing Auth event listener.\n  this.oauthSignInHandler_.removeAuthEventListener(this.authEventHandler_);\n  // Construct a new instance of OAuth sign in handler.\n\n  this.oauthSignInHandler_ =\n      fireauth.AuthEventManager.instantiateOAuthSignInHandler(\n          this.authDomain_, this.apiKey_, this.appName_,\n          firebase.SDK_VERSION || null);\n};\n\n\n/**\n * Clears the cached redirect result as long as there is no pending redirect\n * result being processed. Unrecoverable errors will not be cleared.\n */\nfireauth.AuthEventManager.prototype.clearRedirectResult = function() {\n  this.redirectAuthEventProcessor_.clearRedirectResult();\n};\n\n\n/**\n * @typedef {{\n *   user: (?fireauth.AuthUser|undefined),\n *   credential: (?fireauth.AuthCredential|undefined),\n *   operationType: (?string|undefined),\n *   additionalUserInfo: (?fireauth.AdditionalUserInfo|undefined)\n * }}\n */\nfireauth.AuthEventManager.Result;\n\n\n/**\n * Whether to enable Auth event manager subscription.\n * @const {boolean}\n */\nfireauth.AuthEventManager.ENABLED = true;\n\n\n/**\n * Initializes the ifchandler and add Auth event listener on it.\n * @return {!goog.Promise} The promise that resolves when the iframe is ready.\n */\nfireauth.AuthEventManager.prototype.initialize = function() {\n  var self = this;\n  // Initialize once.\n  if (!this.initialized_) {\n    this.initialized_ = true;\n    // Listen to Auth events on iframe.\n    this.oauthSignInHandler_.addAuthEventListener(this.authEventHandler_);\n  }\n  var previousOauthSignInHandler = this.oauthSignInHandler_;\n  // This should initialize ifchandler underneath.\n  // Return on OAuth handler ready promise.\n  // Check for error in ifcHandler used to embed the iframe.\n  return this.oauthSignInHandler_.initializeAndWait()\n      .thenCatch(function(error) {\n        // Force ifchandler to reinitialize on retrial.\n        if (self.oauthSignInHandler_ == previousOauthSignInHandler) {\n          // If a new OAuth sign in handler was already created, do not reset.\n          self.reset();\n        }\n        throw error;\n      });\n};\n\n\n/**\n * Called after it is determined that there is no pending redirect result.\n * Will populate the redirect result if it is guaranteed to be null and will\n * force an early initialization of the OAuth sign in handler if the\n * environment requires it.\n * @private\n */\nfireauth.AuthEventManager.prototype.initializeWithNoPendingRedirectResult_ =\n    function() {\n  var self = this;\n  // Check if the OAuth sign in handler should be initialized early in all\n  // cases.\n  if (this.oauthSignInHandler_.shouldBeInitializedEarly()) {\n    this.initialize().thenCatch(function(error) {\n      // Current environment was falsely detected as Cordova, trigger a fake\n      // Auth event to notify getRedirectResult that operation is not supported.\n      var notSupportedEvent = new fireauth.AuthEvent(\n          fireauth.AuthEvent.Type.UNKNOWN,\n          null,\n          null,\n          null,\n          new fireauth.AuthError(\n              fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n      if (fireauth.AuthEventManager.isCordovaFalsePositive_(\n          /** @type {?fireauth.AuthError} */ (error))) {\n        self.handleAuthEvent_(notSupportedEvent);\n      }\n    });\n  }\n  // For environments where storage is volatile, we can't determine that\n  // there is no pending redirect response. This is true in Cordova\n  // where an activity would be destroyed in some cases and the\n  // sessionStorage is lost.\n  if (!this.oauthSignInHandler_.hasVolatileStorage()) {\n    // Since there is no redirect result, it is safe to default to empty\n    // redirect result instead of blocking on this.\n    // The downside here is that on iOS devices, calling signInWithPopup\n    // after getRedirectResult resolves and the iframe does not finish\n    // loading, the popup event propagating to the iframe would not be\n    // detected. This is because in iOS devices, storage events only trigger\n    // in iframes but are not actually saved in web storage. The iframe must\n    // be embedded and ready before the storage event propagates. Otherwise\n    // it won't be detected.\n    this.redirectAuthEventProcessor_.defaultToEmptyResponse();\n  }\n};\n\n\n/**\n * Subscribes an Auth event handler to list of handlers.\n * @param {!fireauth.AuthEventHandler} handler The instance to subscribe.\n */\nfireauth.AuthEventManager.prototype.subscribe = function(handler) {\n  if (!goog.array.contains(this.subscribedHandlers_, handler)) {\n    this.subscribedHandlers_.push(handler);\n  }\n  if (this.initialized_) {\n    return;\n  }\n  var self = this;\n  // Check pending redirect status.\n  this.pendingRedirectStorageManager_.getPendingStatus()\n      .then(function(status) {\n    // Pending redirect detected.\n    if (status) {\n      // Remove pending status and initialize.\n      self.pendingRedirectStorageManager_.removePendingStatus()\n          .then(function() {\n            self.initialize().thenCatch(function(error) {\n              // Current environment was falsely detected as Cordova, trigger a\n              // fake Auth event to notify getRedirectResult that operation is\n              // not supported.\n              var notSupportedEvent = new fireauth.AuthEvent(\n                 fireauth.AuthEvent.Type.UNKNOWN,\n                 null,\n                 null,\n                 null,\n                 new fireauth.AuthError(\n                     fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n              if (fireauth.AuthEventManager.isCordovaFalsePositive_(\n                  /** @type {?fireauth.AuthError} */ (error))) {\n                self.handleAuthEvent_(notSupportedEvent);\n              }\n            });\n          });\n    } else {\n      // No previous redirect, default to empty response.\n      self.initializeWithNoPendingRedirectResult_();\n    }\n  }).thenCatch(function(error) {\n    // Error checking pending status, default to empty response.\n    self.initializeWithNoPendingRedirectResult_();\n  });\n};\n\n\n/**\n * @param {!fireauth.AuthEventHandler} handler The possible subscriber.\n * @return {boolean} Whether the handle is subscribed.\n */\nfireauth.AuthEventManager.prototype.isSubscribed = function(handler) {\n  return goog.array.contains(this.subscribedHandlers_, handler);\n};\n\n\n/**\n * Unsubscribes an Auth event handler to list of handlers.\n * @param {!fireauth.AuthEventHandler} handler The instance to unsubscribe.\n */\nfireauth.AuthEventManager.prototype.unsubscribe = function(handler) {\n  goog.array.removeAllIf(this.subscribedHandlers_, function(ele) {\n    return ele == handler;\n  });\n};\n\n\n/**\n * Handles external Auth event detected by the OAuth sign-in handler.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @return {boolean} Whether the event found an appropriate owner that can\n *     handle it. This signals to the OAuth helper iframe that the event is safe\n *     to delete.\n * @private\n */\nfireauth.AuthEventManager.prototype.handleAuthEvent_ = function(authEvent) {\n  // This should not happen as fireauth.iframe.AuthRelay will not send null\n  // events.\n  if (!authEvent) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT);\n  }\n  // Initialize event processed status to false. When set to false, the event is\n  // not clear to delete in the OAuth helper iframe as the owner of this event\n  // could be a user in another tab.\n  var processed = false;\n  // Lookup a potential handler for this event.\n  for (var i = 0; i < this.subscribedHandlers_.length; i++) {\n    var potentialHandler = this.subscribedHandlers_[i];\n    if (potentialHandler.canHandleAuthEvent(\n        authEvent.getType(), authEvent.getEventId())) {\n      var eventManager = this.typeToManager_[authEvent.getType()];\n      if (eventManager) {\n        eventManager.processAuthEvent(authEvent, potentialHandler);\n      }\n      // Event has been processed, free to clear in OAuth helper.\n      processed = true;\n      break;\n    }\n  }\n  // If no redirect response ready yet, default to an empty response.\n  this.redirectAuthEventProcessor_.defaultToEmptyResponse();\n  // Notify iframe of processed status.\n  return processed;\n};\n\n\n/**\n * The popup promise timeout delay with units in ms between the time the iframe\n * is ready (successfully embedded on the page) and the time the popup Auth\n * event is detected in the parent container.\n * @const {!fireauth.util.Delay}\n * @private\n */\nfireauth.AuthEventManager.POPUP_TIMEOUT_MS_ =\n    new fireauth.util.Delay(2000, 10000);\n\n\n/**\n * The redirect promise timeout delay with units in ms. Unlike the popup\n * timeout, this covers the entire duration from start to getRedirectResult\n * resolution.\n * @const {!fireauth.util.Delay}\n * @private\n */\nfireauth.AuthEventManager.REDIRECT_TIMEOUT_MS_ =\n    new fireauth.util.Delay(30000, 60000);\n\n\n/**\n * Returns the redirect result. If coming back from a successful redirect sign\n * in, will resolve to the signed in user. If coming back from an unsuccessful\n * redirect sign, will reject with the proper error. If no redirect operation\n * called, resolves with null.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthEventManager.prototype.getRedirectResult = function() {\n  return this.redirectAuthEventProcessor_.getRedirectResult();\n};\n\n\n/**\n * Processes the popup request. The popup instance must be provided externally\n * and on error, the requestor must close the window.\n * @param {?Window} popupWin The popup window reference.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {string=} opt_eventId The optional event ID.\n * @param {boolean=} opt_alreadyRedirected Whether popup is already redirected\n *     to final destination.\n * @return {!goog.Promise} The popup window promise.\n */\nfireauth.AuthEventManager.prototype.processPopup =\n    function(popupWin, mode, provider, opt_eventId, opt_alreadyRedirected) {\n  var self = this;\n  return this.oauthSignInHandler_.processPopup(\n      popupWin,\n      mode,\n      provider,\n      // On initialization, add Auth event listener if not already added.\n      function() {\n        if (!self.initialized_) {\n          self.initialized_ = true;\n          // Listen to Auth events on iframe.\n          self.oauthSignInHandler_.addAuthEventListener(self.authEventHandler_);\n        }\n      },\n      // On error, reset to force re-initialization on retrial.\n      function(error) {\n        self.reset();\n      },\n      opt_eventId,\n      opt_alreadyRedirected);\n};\n\n\n/**\n * @param {?fireauth.AuthError} error The error to check for Cordova false\n *     positive.\n * @return {boolean} Whether the current environment was falsely identified as\n *     Cordova.\n * @private\n */\nfireauth.AuthEventManager.isCordovaFalsePositive_ = function(error) {\n  if (error && error['code'] == 'auth/cordova-not-ready') {\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Processes the redirect request.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {string=} opt_eventId The optional event ID.\n * @return {!goog.Promise}\n */\nfireauth.AuthEventManager.prototype.processRedirect =\n    function(mode, provider, opt_eventId) {\n  var self = this;\n  var error;\n  // Save pending status first.\n  return this.pendingRedirectStorageManager_.setPendingStatus()\n    .then(function() {\n      // Try to redirect.\n      return self.oauthSignInHandler_.processRedirect(\n          mode, provider, opt_eventId)\n        .thenCatch(function(e) {\n          if (fireauth.AuthEventManager.isCordovaFalsePositive_(\n              /** @type {?fireauth.AuthError} */ (e))) {\n            throw new fireauth.AuthError(\n                fireauth.authenum.Error.OPERATION_NOT_SUPPORTED);\n          }\n          // On failure, remove pending status and rethrow the error.\n          error = e;\n          return self.pendingRedirectStorageManager_.removePendingStatus()\n            .then(function() {\n              throw error;\n            });\n        })\n        .then(function() {\n          // Resolve, if the OAuth handler unloads the page on redirect.\n          if (!self.oauthSignInHandler_.unloadsOnRedirect()) {\n            // Relevant to Cordova case, will not matter in web case where\n            // browser redirects.\n            // In Cordova, the activity could still be running in the background\n            // so we need to wait for getRedirectResult to resolve before\n            // resolving this current promise.\n            // Otherwise, if the activity is destroyed, getRedirectResult would\n            // be used.\n            // At this point, authEvent should have been triggered.\n            // When this promise resolves, the developer should be able to\n            // call getRedirectResult to get the result of this operation.\n            // Remove pending status as result should be resolved.\n            return self.pendingRedirectStorageManager_.removePendingStatus()\n                .then(function() {\n                  // Ensure redirect result ready before resolving.\n                  return self.getRedirectResult();\n                }).then(function(result) {\n                  // Do nothing. Developer expected to call getRedirectResult to\n                  // get result.\n                }).thenCatch(function(error) {\n                  // Do nothing. Developer expected to call getRedirectResult to\n                  // get result.\n                });\n          } else {\n            // For environments that will unload the page on redirect, keep\n            // the promise pending on success. This makes it easier to reuse\n            // the same code for Cordova environment and browser environment.\n            // The developer can always add getRedirectResult on promise\n            // resolution and expect that when it runs, the redirect operation\n            // was completed.\n            return new goog.Promise(function(resolve, reject) {\n              // Keep this pending.\n            });\n          }\n        });\n    });\n};\n\n\n/**\n * Waits for popup window to close. When closed start timeout listener for popup\n * pending promise. If in the process, it was detected that the iframe does not\n * support web storage, the popup is closed and the web storage unsupported\n * error is thrown.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @param {!fireauth.AuthEvent.Type} mode The Auth event type.\n * @param {!Window} popupWin The popup window.\n * @param {?string=} opt_eventId The event ID.\n * @return {!goog.Promise}\n */\nfireauth.AuthEventManager.prototype.startPopupTimeout =\n    function(owner, mode, popupWin, opt_eventId) {\n  return this.oauthSignInHandler_.startPopupTimeout(\n      popupWin,\n      // On popup error such as popup closed by user or web storage not\n      // supported.\n      function(error) {\n        // Notify owner of the error.\n        owner.resolvePendingPopupEvent(mode, null, error, opt_eventId);\n      },\n      fireauth.AuthEventManager.POPUP_TIMEOUT_MS_.get());\n};\n\n\n\n/**\n * @private {!Object.<string, !fireauth.AuthEventManager>} Map containing\n *     Firebase event manager instances keyed by Auth event manager ID.\n */\nfireauth.AuthEventManager.manager_ = {};\n\n\n/**\n * The separator for manager keys to concatenate app name and apiKey.\n * @const {string}\n * @private\n */\nfireauth.AuthEventManager.KEY_SEPARATOR_ = ':';\n\n\n/**\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The Auth instance that initiated the Auth event.\n * @return {string} The key identifying the Auth event manager instance.\n * @private\n */\nfireauth.AuthEventManager.getKey_ = function(apiKey, appName) {\n  return apiKey + fireauth.AuthEventManager.KEY_SEPARATOR_ + appName;\n};\n\n\n/**\n * @param {string} authDomain The Firebase authDomain used to determine the\n *     OAuth helper page domain.\n * @param {string} apiKey The API key for sending backend Auth requests.\n * @param {string} appName The Auth instance that initiated the Auth event\n *     manager.\n * @return {!fireauth.AuthEventManager} the requested manager instance.\n */\nfireauth.AuthEventManager.getManager = function(authDomain, apiKey, appName) {\n  // Construct storage key.\n  var key = fireauth.AuthEventManager.getKey_(apiKey, appName);\n  if (!fireauth.AuthEventManager.manager_[key]) {\n    fireauth.AuthEventManager.manager_[key] =\n        new fireauth.AuthEventManager(authDomain, apiKey, appName);\n  }\n  return fireauth.AuthEventManager.manager_[key];\n};\n\n\n\n/**\n * The interface that represents a specific type of Auth event processor.\n * @interface\n */\nfireauth.AuthEventProcessor = function() {};\n\n\n/**\n * Completes the processing of an external Auth event detected by the embedded\n * iframe.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n */\nfireauth.AuthEventProcessor.prototype.processAuthEvent =\n    function(authEvent, owner) {};\n\n\n\n/**\n * Redirect Auth event manager.\n * @param {!fireauth.AuthEventManager} manager The parent Auth event manager.\n * @constructor\n * @implements {fireauth.AuthEventProcessor}\n */\nfireauth.RedirectAuthEventProcessor = function(manager) {\n  this.manager_ = manager;\n  // Only one redirect result can be tracked on first load.\n  /**\n   * @private {?function():!goog.Promise<!fireauth.AuthEventManager.Result>}\n   *     Redirect result resolver. This will be used to resolve the\n   *     getRedirectResult promise. When the redirect result is obtained, this\n   *     field will be set.\n   */\n  this.redirectedUserPromise_ = null;\n  /**\n   * @private {!Array<function(!fireauth.AuthEventManager.Result)>} Pending\n   *     promise redirect resolver. When the redirect result is obtained and the\n   *     user is detected, this will be called.\n   */\n  this.redirectResolve_ = [];\n  /**\n   * @private {!Array<function(*)>} Pending Promise redirect rejecter. When the\n   *     redirect result is obtained and an error is detected, this will be\n   *     called.\n   */\n  this.redirectReject_ = [];\n  /** @private {?goog.Promise} Pending timeout promise for redirect. */\n  this.redirectTimeoutPromise_ = null;\n  /**\n   * @private {boolean} Whether redirect result is resolved. This is true\n   *     when a valid Auth event has been triggered.\n   */\n  this.redirectResultResolved_ = false;\n  /**\n   * @private {boolean} Whether an unrecoverable error was detected. This\n   *     includes web storage unsupported or operation not allowed errors.\n   */\n  this.unrecoverableErrorDetected_ = false;\n};\n\n\n/** Reset any previous redirect result. */\nfireauth.RedirectAuthEventProcessor.prototype.reset = function() {\n  // Reset to allow override getRedirectResult. This is relevant for Cordova\n  // environment where redirect events do not necessarily unload the current\n  // page.\n  this.redirectedUserPromise_ = null;\n  if (this.redirectTimeoutPromise_) {\n    this.redirectTimeoutPromise_.cancel();\n    this.redirectTimeoutPromise_ = null;\n  }\n};\n\n\n/**\n * Completes the processing of an external Auth event detected by the embedded\n * iframe.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n * @override\n */\nfireauth.RedirectAuthEventProcessor.prototype.processAuthEvent =\n    function(authEvent, owner) {\n  // This should not happen as fireauth.iframe.AuthRelay will not send null\n  // events.\n  if (!authEvent) {\n    return goog.Promise.reject(\n        new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT));\n  }\n  // Reset any pending redirect result. This event will overwrite it.\n  this.reset();\n  this.redirectResultResolved_ = true;\n  var mode = authEvent.getType();\n  var eventId = authEvent.getEventId();\n  // Check if web storage is not supported in the iframe.\n  var isWebStorageNotSupported =\n      authEvent.getError() &&\n      authEvent.getError()['code'] == 'auth/web-storage-unsupported';\n  /// Check if operation is supported in this environment.\n  var isOperationNotSupported =\n      authEvent.getError() &&\n      authEvent.getError()['code'] == 'auth/operation-not-supported-in-this-' +\n          'environment';\n  this.unrecoverableErrorDetected_ =\n      !!(isWebStorageNotSupported || isOperationNotSupported);\n  // UNKNOWN mode is always triggered on load by iframe when no popup/redirect\n  // data is available. If web storage unsupported error is thrown, process as\n  // error and not as unknown event. If the operation is not supported in this\n  // environment, also treat as an error and not as an unknown event.\n  if (mode == fireauth.AuthEvent.Type.UNKNOWN &&\n      !isWebStorageNotSupported &&\n      !isOperationNotSupported) {\n    return this.processUnknownEvent_();\n  } else if (authEvent.hasError()) {\n    return this.processErrorEvent_(authEvent, owner);\n  } else if (owner.getAuthEventHandlerFinisher(mode, eventId)) {\n    return this.processSuccessEvent_(authEvent, owner);\n  } else {\n    return goog.Promise.reject(\n        new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT));\n  }\n};\n\n\n/**\n * Sets an empty redirect result response when no redirect result is available.\n */\nfireauth.RedirectAuthEventProcessor.prototype.defaultToEmptyResponse =\n    function() {\n  // If the first event does not resolve redirectResult and no subscriber can\n  // handle it, set redirect result to null.\n  // An example of this scenario would be a link via redirect that was triggered\n  // by a user that was not logged in. canHandleAuthEvent will be false for all\n  // subscribers. So make sure getRedirectResult when called will resolve to a\n  // null user.\n  if (!this.redirectResultResolved_) {\n    this.redirectResultResolved_ = true;\n    // No Auth event available, getRedirectResult should resolve with null.\n    this.setRedirectResult_(false, null, null);\n  }\n};\n\n\n/**\n * Clears the cached redirect result as long as there is no pending redirect\n * result being processed. Unrecoverable errors will not be cleared.\n */\nfireauth.RedirectAuthEventProcessor.prototype.clearRedirectResult = function() {\n  // Clear the result if it is already resolved and no unrecoverable errors are\n  // detected.\n  if (this.redirectResultResolved_ && !this.unrecoverableErrorDetected_) {\n    this.setRedirectResult_(false, null, null);\n  }\n};\n\n\n/**\n * Processes the unknown event.\n * @return {!goog.Promise<undefined>}\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.processUnknownEvent_ =\n    function() {\n  // No Auth event available, getRedirectResult should resolve with null.\n  this.setRedirectResult_(false, null, null);\n  return goog.Promise.resolve();\n};\n\n\n/**\n * Processes an error event.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.processErrorEvent_ =\n    function(authEvent, owner) {\n  // Set redirect result to resolve with null if event is not a redirect or\n  // reject with error if event is an error.\n  this.setRedirectResult_(true, null, authEvent.getError());\n  return goog.Promise.resolve();\n};\n\n\n/**\n * Processes a successful event.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.processSuccessEvent_ =\n    function(authEvent, owner) {\n  var self = this;\n  var eventId = authEvent.getEventId();\n  var mode = authEvent.getType();\n  var handler = owner.getAuthEventHandlerFinisher(mode, eventId);\n  var requestUri = /** @type {string} */ (authEvent.getUrlResponse());\n  var sessionId = /** @type {string} */ (authEvent.getSessionId());\n  var postBody = /** @type {?string} */ (authEvent.getPostBody());\n  var isRedirect = fireauth.AuthEvent.isRedirect(authEvent);\n  // Complete sign in or link account operation and then pass result to\n  // relevant pending popup promise.\n  return handler(requestUri, sessionId, postBody)\n      .then(function(popupRedirectResponse) {\n    // Flow completed.\n    // For a redirect operation resolve with the popupRedirectResponse,\n    // otherwise resolve with null.\n    self.setRedirectResult_(isRedirect, popupRedirectResponse, null);\n  }).thenCatch(function(error) {\n    // Flow not completed due to error.\n    // For a redirect operation reject with the error, otherwise resolve\n    // with null.\n    self.setRedirectResult_(\n        isRedirect, null, /** @type {!fireauth.AuthError} */ (error));\n    // Always resolve.\n    return;\n  });\n};\n\n\n/**\n * Sets redirect error result.\n * @param {!fireauth.AuthError} error The redirect operation error.\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.setRedirectReject_ =\n    function(error) {\n  // If a redirect error detected, reject getRedirectResult with that error.\n  this.redirectedUserPromise_ = function() {\n    return goog.Promise.reject(error);\n  };\n  // Reject all pending getRedirectResult promises.\n  if (this.redirectReject_.length) {\n    for (var i = 0; i < this.redirectReject_.length; i++) {\n      this.redirectReject_[i](error);\n    }\n  }\n};\n\n\n/**\n * Sets redirect success result.\n * @param {!fireauth.AuthEventManager.Result} popupRedirectResult The\n *     resolved user for a successful or null user redirect.\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.setRedirectResolve_ =\n    function(popupRedirectResult) {\n  // If a redirect user detected, resolve getRedirectResult with the\n  // popupRedirectResult.\n  // Result should not be null in this case.\n  this.redirectedUserPromise_ = function() {\n    return goog.Promise.resolve(\n        /** @type {!fireauth.AuthEventManager.Result} */ (popupRedirectResult));\n  };\n  // Resolve all pending getRedirectResult promises.\n  if (this.redirectResolve_.length) {\n    for (var i = 0; i < this.redirectResolve_.length; i++) {\n      this.redirectResolve_[i](\n          /** @type {!fireauth.AuthEventManager.Result} */ (\n              popupRedirectResult));\n    }\n  }\n};\n\n\n/**\n * @param {boolean} isRedirect Whether Auth event is a redirect event.\n * @param {?fireauth.AuthEventManager.Result} popupRedirectResult The\n *     resolved user for a successful redirect. This user is null if no redirect\n *     operation run.\n * @param {?fireauth.AuthError} error The redirect operation error.\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.setRedirectResult_ =\n    function(isRedirect, popupRedirectResult, error) {\n  if (isRedirect) {\n    // This is a redirect operation, either resolves with user or error.\n    if (error) {\n      // If a redirect error detected, reject getRedirectResult with that error.\n      this.setRedirectReject_(error);\n    } else {\n      // If a redirect user detected, resolve getRedirectResult with the\n      // popupRedirectResult.\n      // Result should not be null in this case.\n      this.setRedirectResolve_(\n          /** @type {!fireauth.AuthEventManager.Result} */ (\n              popupRedirectResult));\n    }\n  } else {\n    // Not a redirect, set redirectUser_ to return null.\n    this.setRedirectResolve_({\n      'user': null\n    });\n  }\n  // Reset all pending promises.\n  this.redirectResolve_ = [];\n  this.redirectReject_ = [];\n};\n\n\n/**\n * Returns the redirect result. If coming back from a successful redirect sign\n * in, will resolve to the signed in user. If coming back from an unsuccessful\n * redirect sign, will reject with the proper error. If no redirect operation\n * called, resolves with null.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.RedirectAuthEventProcessor.prototype.getRedirectResult = function() {\n  var self = this;\n  // Initial result could be overridden in the case of Cordova.\n  // Auth domain must be included for this to resolve.\n  // If still pending just return the pending promise.\n  var p = new goog.Promise(function(resolve, reject) {\n    // The following logic works if this method was called before Auth event\n    // is triggered.\n    if (!self.redirectedUserPromise_) {\n      // Save resolves and rejects of pending promise for redirect operation.\n      self.redirectResolve_.push(resolve);\n      self.redirectReject_.push(reject);\n      // Start timeout listener to getRedirectResult pending promise.\n      // Call this only when redirectedUserPromise_ is not determined.\n      self.startRedirectTimeout_();\n    } else {\n      // Called after Auth event is triggered.\n      self.redirectedUserPromise_().then(resolve, reject);\n    }\n  });\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (p);\n};\n\n\n/**\n * Starts timeout listener for getRedirectResult pending promise. This method\n * should not be called again after getRedirectResult's redirectedUserPromise_\n * is determined.\n * @private\n */\nfireauth.RedirectAuthEventProcessor.prototype.startRedirectTimeout_ =\n    function() {\n  // Expire pending timeout promise for popup operation.\n  var self = this;\n  var error = new fireauth.AuthError(\n      fireauth.authenum.Error.TIMEOUT);\n  if (this.redirectTimeoutPromise_) {\n    this.redirectTimeoutPromise_.cancel();\n  }\n  // For redirect mode.\n  this.redirectTimeoutPromise_ =\n      goog.Timer.promise(fireauth.AuthEventManager.REDIRECT_TIMEOUT_MS_.get())\n      .then(function() {\n        // If not resolved yet, reject with timeout error.\n        if (!self.redirectedUserPromise_) {\n          // Consider redirect result resolved.\n          self.redirectResultResolved_ = true;\n          self.setRedirectResult_(true, null, error);\n        }\n      });\n\n};\n\n\n\n/**\n * Popup Auth event manager.\n * @param {!fireauth.AuthEventManager} manager The parent Auth event manager.\n * @constructor\n * @implements {fireauth.AuthEventProcessor}\n */\nfireauth.PopupAuthEventProcessor = function(manager) {\n  this.manager_ = manager;\n};\n\n\n/**\n * Completes the processing of an external Auth event detected by the embedded\n * iframe.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n * @override\n */\nfireauth.PopupAuthEventProcessor.prototype.processAuthEvent =\n    function(authEvent, owner) {\n  // This should not happen as fireauth.iframe.AuthRelay will not send null\n  // events.\n  if (!authEvent) {\n    return goog.Promise.reject(\n        new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT));\n  }\n  var mode = authEvent.getType();\n  var eventId = authEvent.getEventId();\n  if (authEvent.hasError()) {\n    return this.processErrorEvent_(authEvent, owner);\n  } else if (owner.getAuthEventHandlerFinisher(mode, eventId)) {\n    return this.processSuccessEvent_(authEvent, owner);\n  } else {\n    return goog.Promise.reject(\n        new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT));\n  }\n};\n\n\n/**\n * Processes an error event.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n * @private\n */\nfireauth.PopupAuthEventProcessor.prototype.processErrorEvent_ =\n    function(authEvent, owner) {\n  var eventId = authEvent.getEventId();\n  var mode = authEvent.getType();\n  // For pending popup promises trigger rejects with the error.\n  owner.resolvePendingPopupEvent(mode, null, authEvent.getError(), eventId);\n  return goog.Promise.resolve();\n};\n\n\n/**\n * Processes a successful event.\n * @param {?fireauth.AuthEvent} authEvent External Auth event detected by\n *     iframe.\n * @param {!fireauth.AuthEventHandler} owner The owner of the event.\n * @return {!goog.Promise<undefined>}\n * @private\n */\nfireauth.PopupAuthEventProcessor.prototype.processSuccessEvent_ =\n    function(authEvent, owner) {\n  var eventId = authEvent.getEventId();\n  var mode = authEvent.getType();\n  var handler = owner.getAuthEventHandlerFinisher(mode, eventId);\n  // Successful operation, complete the exchange for an ID token.\n  var requestUri = /** @type {string} */ (authEvent.getUrlResponse());\n  var sessionId = /** @type {string} */ (authEvent.getSessionId());\n  var postBody = /** @type {?string} */ (authEvent.getPostBody());\n  // Complete sign in or link account operation and then pass result to\n  // relevant pending popup promise.\n  return handler(requestUri, sessionId, postBody)\n      .then(function(popupRedirectResponse) {\n    // Flow completed.\n    // Resolve pending popup promise if it exists.\n    owner.resolvePendingPopupEvent(mode, popupRedirectResponse, null, eventId);\n  }).thenCatch(function(error) {\n    // Flow not completed due to error.\n    // Resolve pending promise if it exists.\n    owner.resolvePendingPopupEvent(\n        mode, null, /** @type {!fireauth.AuthError} */ (error), eventId);\n    // Always resolve.\n    return;\n  });\n};\n\n\n\n/**\n * The interface that represents an Auth event handler. It provides the\n * ability for the Auth event manager to determine the owner of an Auth event,\n * the ability to resolve a pending popup event and the appropriate handler for\n * an event.\n * @interface\n */\nfireauth.AuthEventHandler = function() {};\n\n\n/**\n * @param {!fireauth.AuthEvent.Type} mode The Auth type mode.\n * @param {?string=} opt_eventId The event ID.\n * @return {boolean} Whether the Auth event handler can handler the provided\n *     event.\n */\nfireauth.AuthEventHandler.prototype.canHandleAuthEvent =\n    function(mode, opt_eventId) {};\n\n\n/**\n * Completes the pending popup operation. If error is not null, rejects with the\n * error. Otherwise, it resolves with the popup redirect result.\n * @param {!fireauth.AuthEvent.Type} mode The Auth type mode.\n * @param {?fireauth.AuthEventManager.Result} popupRedirectResult The result\n *     to resolve with when no error supplied.\n * @param {?fireauth.AuthError} error When supplied, the promise will reject.\n * @param {?string=} opt_eventId The event ID.\n */\nfireauth.AuthEventHandler.prototype.resolvePendingPopupEvent =\n    function(mode, popupRedirectResult, error, opt_eventId) {};\n\n\n/**\n * Returns the handler's appropriate popup and redirect sign in operation\n * finisher.\n * @param {!fireauth.AuthEvent.Type} mode The Auth type mode.\n * @param {?string=} opt_eventId The optional event ID.\n * @return {?function(string,\n *     string, ?string=):!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthEventHandler.prototype.getAuthEventHandlerFinisher =\n    function(mode, opt_eventId) {};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * @fileoverview Defines the firebase.auth.AuthSettings structure.\n */\n\ngoog.provide('fireauth.AuthSettings');\n\n\n/**\n * The class used to initialize an Auth settings object currently used to\n * enable or disable app verification for testing.\n * @constructor\n */\nfireauth.AuthSettings = function() {\n  this.appVerificationDisabledForTesting_ = false;\n  Object.defineProperty(\n      /** @type {!Object} */ (this),\n      'appVerificationDisabled',\n      {\n        /**\n         * @this {!Object}\n         * @return {boolean} The current status.\n         */\n        get: function() {\n          return this.getAppVerificationDisabledForTesting();\n        },\n        /**\n         * @this {!Object}\n         * @param {boolean} value The new status.\n         */\n        set: function(value) {\n          this.setAppVerificationDisabledForTesting(value);\n        },\n        enumerable: false\n      });\n};\n\n\n/**\n * Sets whether app verification is disable for testing.\n * @param {boolean} status App verification status for testing.\n */\nfireauth.AuthSettings.prototype.setAppVerificationDisabledForTesting =\n    function(status) {\n  this.appVerificationDisabledForTesting_ = status;\n};\n\n\n/**\n * @return {boolean} Whether app verification is enabled or disabled for\n *     testing.\n */\nfireauth.AuthSettings.prototype.getAppVerificationDisabledForTesting =\n    function() {\n  return this.appVerificationDisabledForTesting_;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the firebase.auth.ConfirmationResult. This is needed\n * to provide first class support for phone Auth API: signInWithPhoneNumber,\n * linkWithPhoneNumber and reauthenticateWithPhoneNumber.\n */\n\ngoog.provide('fireauth.ConfirmationResult');\n\ngoog.require('fireauth.PhoneAuthProvider');\ngoog.require('fireauth.object');\ngoog.require('goog.Promise');\n\n\n/**\n * The confirmation result class. This takes in the verification ID returned\n * from the phone Auth provider and the credential resolver to run when\n * confirming with a verification code.\n * @param {string} verificationId The verification ID returned from the Phone\n *     Auth provider after sending the verification code.\n * @param {!function(!fireauth.AuthCredential):\n *     !goog.Promise<!fireauth.AuthEventManager.Result>} credentialResolver a\n *     function that takes in an AuthCredential and returns a promise that\n *     resolves with a UserCredential object.\n * @constructor\n */\nfireauth.ConfirmationResult = function(verificationId, credentialResolver) {\n  /**\n   * @const @private {!function(!fireauth.AuthCredential):\n   *     !goog.Promise<!fireauth.AuthEventManager.Result>} A function that takes\n   *     in an AuthCredential and returns a promise that resolves with a\n   *     UserCredential object.\n   */\n  this.credentialResolver_ = credentialResolver;\n  // Set verificationId as read-only property.\n  fireauth.object.setReadonlyProperty(this, 'verificationId', verificationId);\n};\n\n\n/**\n * Confirms the verification code and returns a promise that resolves with the\n * User Credential object.\n * @param {string} verificationCode The phone Auth verification code to use to\n *     complete the Auth flow.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.ConfirmationResult.prototype.confirm = function(verificationCode) {\n  // Initialize a phone Auth credential with the verification ID and code.\n  var credential = fireauth.PhoneAuthProvider.credential(\n      this['verificationId'], verificationCode);\n  // Run the credential resolver with the phone Auth credential and return its\n  // result.\n  return this.credentialResolver_(credential);\n};\n\n\n/**\n * Initializes a ConfirmationResult using the provided phone number, app\n * verifier and returns it asynchronously. On code confirmation, the result will\n * resolve using the credential resolver provided.\n * @param {!fireauth.Auth} auth The corresponding Auth instance.\n * @param {string} phoneNumber The phone number to authenticate with.\n * @param {!firebase.auth.ApplicationVerifier} appVerifier The application\n *     verifier.\n * @param {!function(!fireauth.AuthCredential):\n *     !goog.Promise<!fireauth.AuthEventManager.Result>} credentialResolver a\n *     function that takes in an AuthCredential and returns a promise that\n *     resolves with a UserCredential object.\n * @return {!goog.Promise<!fireauth.ConfirmationResult>}\n */\nfireauth.ConfirmationResult.initialize =\n    function(auth, phoneNumber, appVerifier, credentialResolver) {\n  // Initialize a phone Auth provider instance using the provided Auth\n  // instance.\n  var phoneAuthProvider = new fireauth.PhoneAuthProvider(auth);\n  // Verify the phone number.\n  return phoneAuthProvider.verifyPhoneNumber(phoneNumber, appVerifier)\n      .then(function(verificationId) {\n        // When code is sent and verification ID is returned, initialize a\n        // ConfirmationResult with the returned verification ID and credential\n        // resolver, and return that instance.\n        return new fireauth.ConfirmationResult(\n            verificationId, credentialResolver);\n      });\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the firebase.auth.IdTokenResult class that is obtained\n * from getIdTokenResult. It contains the ID token JWT string and other helper\n * properties for getting different data associated with the token as well as\n * all the decoded payload claims.\n */\n\ngoog.provide('fireauth.IdTokenResult');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.IdToken');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\n\n\n\n/**\n * This is the ID token result object obtained from getIdTokenResult. It\n * contains the ID token JWT string and other helper properties for getting\n * different data associated with the token as well as all the decoded payload\n * claims.\n * @param {string} tokenString The JWT token.\n * @constructor\n */\nfireauth.IdTokenResult = function(tokenString) {\n  var idToken = fireauth.IdToken.parseIdTokenClaims(tokenString);\n  if (!idToken || !idToken['exp'] || !idToken['auth_time'] || !idToken['iat']) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.INTERNAL_ERROR,\n        'An internal error occurred. The token obtained by Firebase appears ' +\n        'to be malformed. Please retry the operation.');\n  }\n  fireauth.object.setReadonlyProperties(this, {\n    'token': tokenString,\n    'expirationTime': fireauth.util.utcTimestampToDateString(\n        idToken['exp'] * 1000),\n    'authTime': fireauth.util.utcTimestampToDateString(\n        idToken['auth_time'] * 1000),\n    'issuedAtTime': fireauth.util.utcTimestampToDateString(\n        idToken['iat'] * 1000),\n    'signInProvider': (idToken['firebase'] &&\n                       idToken['firebase']['sign_in_provider']) ?\n                      idToken['firebase']['sign_in_provider'] : null,\n    'claims': idToken\n  });\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility for proactive refresh with exponential backoff\n * algorithm typically used to define a retry policy for certain async\n * operations.\n */\n\ngoog.provide('fireauth.ProactiveRefresh');\n\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.Timer');\n\n\n/**\n * The helper utility used to proactively refresh a certain operation based on\n * certain constraints with an exponential backoff retrial policy when\n * specific recoverable errors occur. Typically this is used to retry an\n * operation on network errors.\n * @param {!function():!goog.Promise} operation The promise returning operation\n *     to run.\n * @param {!function(*):boolean} retryPolicy A function that takes in an error\n *     and returns whether a retry policy should be implemented based on the\n *     error. If not, the operation will not run again.\n * @param {!function():number} getWaitDuration A function that returns the wait\n *     period before running again.\n * @param {number} lowerBound The lower bound duration to wait when an error\n *     occurs. This is the first interval to wait before rerunning after an\n *     error is detected.\n * @param {number} upperBound The upper bound duration to wait when an error\n *     keeps occurring. This upper bound should not be exceeded.\n * @param {boolean=} opt_runInBackground Whether to run in the background, when\n *     the tab is not visible. If the refresh should only run when the app is\n *     visible, the operation will block until the app is visible and then run.\n * @constructor @struct @final\n */\nfireauth.ProactiveRefresh = function(\n    operation,\n    retryPolicy,\n    getWaitDuration,\n    lowerBound,\n    upperBound,\n    opt_runInBackground) {\n  /**\n   * @const @private {!function():!goog.Promise} The promise returning operation\n   *     to run.\n   */\n  this.operation_ = operation;\n  /**\n   * @const @private {!function(*):boolean} The function that takes in an error\n   *     and returns whether a retry policy should be implemented based on the\n   *     error caught.\n   */\n  this.retryPolicy_ = retryPolicy;\n  /**\n   * @const @private {!function():number} The function that returns the wait\n   *     period after a successful operation before running again.\n   */\n  this.getWaitDuration_ = getWaitDuration;\n  /**\n   * @const @private {number} The lower bound duration to wait when an error\n   *     first occurs.\n   */\n  this.lowerBound_ = lowerBound;\n  /**\n   * @const @private {number} The upper bound duration to wait when an error\n   *     keeps occurring. This upper bound should not be exceeded.\n   */\n  this.upperBound_ = upperBound;\n  /**\n   * @const @private {boolean} Whether to run in the background, when the tab is\n   *     not visible.\n   */\n  this.runInBackground_ = !!opt_runInBackground;\n  /**\n   * @private {?goog.Promise} The pending promise for the next operation to run.\n   */\n  this.pending_ = null;\n  /**\n   * @private {number} The first wait interval when a new error occurs.\n   */\n  this.nextErrorWaitInterval_ = this.lowerBound_;\n  // Throw an error if the lower bound is greater than upper bound.\n  if (this.upperBound_ < this.lowerBound_) {\n    throw new Error('Proactive refresh lower bound greater than upper bound!');\n  }\n};\n\n\n/** Starts the proactive refresh based on the current configuration. */\nfireauth.ProactiveRefresh.prototype.start = function() {\n  // Set the next error wait interval to the lower bound. On each consecutive\n  // error, this will double in value until it reaches the upper bound.\n  this.nextErrorWaitInterval_ = this.lowerBound_;\n  // Start proactive refresh with clean slate (successful status).\n  this.process_(true);\n};\n\n\n/**\n * Returns the wait duration before the next run depending on the last run\n * status. If the last operation has succeeded, returns the getWaitDuration()\n * response. Otherwise, doubles the last error wait interval starting from\n * lowerBound and up to upperBound.\n * @param {boolean} hasSucceeded Whether last run succeeded.\n * @return {number} The wait time for the next run.\n * @private\n */\nfireauth.ProactiveRefresh.prototype.getNextRun_ = function(hasSucceeded) {\n  if (hasSucceeded) {\n    // If last operation succeeded, reset next error wait interval and return\n    // the default wait duration.\n    this.nextErrorWaitInterval_ = this.lowerBound_;\n    // Return typical wait duration interval after a successful operation.\n    return this.getWaitDuration_();\n  } else {\n    // Get next error wait interval.\n    var currentErrorWaitInterval = this.nextErrorWaitInterval_;\n    // Double interval for next consecutive error.\n    this.nextErrorWaitInterval_ *= 2;\n    // Make sure next wait interval does not exceed the maximum upper bound.\n    if (this.nextErrorWaitInterval_  > this.upperBound_) {\n      this.nextErrorWaitInterval_  = this.upperBound_;\n    }\n    return currentErrorWaitInterval;\n  }\n};\n\n\n/**\n * Processes one refresh call and sets the timer for the next call based on\n * the last recorded result.\n * @param {boolean} hasSucceeded Whether last run succeeded.\n * @private\n */\nfireauth.ProactiveRefresh.prototype.process_ = function(hasSucceeded) {\n  var self = this;\n  // Stop any other pending operation.\n  this.stop();\n  // Wait for next scheduled run based on whether an error occurred during last\n  // run.\n  this.pending_ = goog.Timer.promise(this.getNextRun_(hasSucceeded))\n      .then(function() {\n        // Block for conditions (if app is required to be visible) to be ready.\n        return self.waitUntilReady_();\n       })\n       .then(function() {\n         // Run the operation.\n         return self.operation_();\n       })\n      .then(function() {\n         // If successful, try again on next cycle with no previous error\n         // passed.\n         self.process_(true);\n       })\n      .thenCatch(function(error) {\n         // If an error occurs, only rerun when the error meets the retry\n         // policy.\n         if (self.retryPolicy_(error)) {\n           // Should retry with error to trigger exponentional backoff.\n           self.process_(false);\n         }\n         // Any other error is considered unrecoverable. Do not try again.\n       });\n};\n\n\n/**\n * Returns a promise which resolves when the current tab is visible.\n * This resolves quickly if refresh is supposed to run in the background too.\n * @return {!goog.Promise} The promise that resolves when the tab is visible or\n *     that requirement is not needed.\n * @private\n */\nfireauth.ProactiveRefresh.prototype.waitUntilReady_ = function() {\n  // Wait until app is in foreground if required.\n  if (this.runInBackground_) {\n    // If runs in background, resolve quickly.\n    return goog.Promise.resolve();\n  } else {\n    // Wait for the app to be visible before resolving the promise.\n    return fireauth.util.onAppVisible();\n  }\n};\n\n\n/** Stops the proactive refresh from running again. */\nfireauth.ProactiveRefresh.prototype.stop = function() {\n  // If there is a pending promise.\n  if (this.pending_) {\n    // Cancel the pending promise and nullify it.\n    this.pending_.cancel();\n    this.pending_ = null;\n  }\n};\n\n\n/** @return {boolean} Whether the proactive refresh is running or not. */\nfireauth.ProactiveRefresh.prototype.isRunning = function() {\n  return !!this.pending_;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the user info pertaining to an identity provider and\n * the Firebase user object.\n */\n\ngoog.provide('fireauth.AuthUser');\ngoog.provide('fireauth.AuthUser.AccountInfo');\ngoog.provide('fireauth.AuthUserInfo');\ngoog.provide('fireauth.TokenRefreshTime');\ngoog.provide('fireauth.UserEvent');\ngoog.provide('fireauth.UserEventType');\ngoog.provide('fireauth.UserMetadata');\n\ngoog.require('fireauth.ActionCodeSettings');\ngoog.require('fireauth.AdditionalUserInfo');\ngoog.require('fireauth.AuthCredential');\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthEvent');\ngoog.require('fireauth.AuthEventHandler');\ngoog.require('fireauth.AuthEventManager');\ngoog.require('fireauth.AuthProvider');\ngoog.require('fireauth.ConfirmationResult');\ngoog.require('fireauth.IdTokenResult');\ngoog.require('fireauth.PhoneAuthProvider');\ngoog.require('fireauth.ProactiveRefresh');\ngoog.require('fireauth.RpcHandler');\ngoog.require('fireauth.StsTokenManager');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.constants');\ngoog.require('fireauth.constants.AuthEventType');\ngoog.require('fireauth.deprecation');\ngoog.require('fireauth.idp');\ngoog.require('fireauth.iframeclient.IfcHandler');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.object');\n\n\n\n/**\n * Initializes an instance of a user metadata object.\n * @param {?string=} opt_createdAt The optional creation date UTC timestamp.\n * @param {?string=} opt_lastLoginAt The optional last login date UTC timestamp.\n * @constructor\n */\nfireauth.UserMetadata = function(opt_createdAt, opt_lastLoginAt) {\n  /** @private {?string} The created at UTC timestamp. */\n  this.createdAt_ = opt_createdAt || null;\n  /** @private {?string} The last login at UTC timestamp. */\n  this.lastLoginAt_ = opt_lastLoginAt || null;\n  fireauth.object.setReadonlyProperties(this, {\n    'lastSignInTime': fireauth.util.utcTimestampToDateString(\n        opt_lastLoginAt || null),\n    'creationTime': fireauth.util.utcTimestampToDateString(\n        opt_createdAt || null),\n  });\n};\n\n\n/**\n * @return {!fireauth.UserMetadata} A clone of the current user metadata object.\n */\nfireauth.UserMetadata.prototype.clone = function() {\n  return new fireauth.UserMetadata(this.createdAt_, this.lastLoginAt_);\n};\n\n\n/**\n * @return {!Object} The object representation of the user metadata instance.\n */\nfireauth.UserMetadata.prototype.toPlainObject = function() {\n  return {\n    'lastLoginAt': this.lastLoginAt_,\n    'createdAt': this.createdAt_\n  };\n};\n\n\n/**\n * Initializes an instance of the user info for an identity provider.\n * @param {string} uid The user ID.\n * @param {!fireauth.idp.ProviderId} providerId The provider ID.\n * @param {?string=} opt_email The optional user email.\n * @param {?string=} opt_displayName The optional display name.\n * @param {?string=} opt_photoURL The optional photo URL.\n * @param {?string=} opt_phoneNumber The optional phone number.\n * @constructor\n */\nfireauth.AuthUserInfo = function(\n    uid,\n    providerId,\n    opt_email,\n    opt_displayName,\n    opt_photoURL,\n    opt_phoneNumber) {\n  fireauth.object.setReadonlyProperties(this, {\n    'uid': uid,\n    'displayName': opt_displayName || null,\n    'photoURL': opt_photoURL || null,\n    'email': opt_email || null,\n    'phoneNumber': opt_phoneNumber || null,\n    'providerId': providerId\n  });\n};\n\n\n\n/**\n * User custom event.\n * @param {string} type The event type.\n * @param {?Object=} opt_properties The optional properties to set to the custom\n *     event using same keys as object provided.\n * @constructor\n * @extends {goog.events.Event}\n */\nfireauth.UserEvent = function(type, opt_properties) {\n  goog.events.Event.call(this, type);\n  // If optional properties provided.\n  // Add each property to custom event.\n  for (var key in opt_properties) {\n    this[key] = opt_properties[key];\n  }\n};\ngoog.inherits(fireauth.UserEvent, goog.events.Event);\n\n\n/**\n * Events dispatched by pages on containers.\n * @enum {string}\n */\nfireauth.UserEventType = {\n  /** Dispatched when token is changed due to Auth event. */\n  TOKEN_CHANGED: 'tokenChanged',\n\n  /** Dispatched when user is deleted. */\n  USER_DELETED: 'userDeleted',\n\n  /**\n   * Dispatched when user session is invalidated. This could happen when the\n   * following errors occur: user-disabled or user-token-expired.\n   */\n  USER_INVALIDATED: 'userInvalidated'\n};\n\n\n/**\n * Defines the proactive token refresh time constraints in milliseconds.\n * @enum {number}\n */\nfireauth.TokenRefreshTime = {\n  /**\n   * The offset time before token natural expiration to run the refresh.\n   * This is currently 5 minutes.\n   */\n  OFFSET_DURATION: 5 * 60 * 1000,\n  /**\n   * This is the first retrial wait after an error. This is currently\n   * 30 seconds.\n   */\n  RETRIAL_MIN_WAIT: 30 * 1000,\n  /**\n   * This is the maximum retrial wait, currently 16 minutes.\n   */\n  RETRIAL_MAX_WAIT: 16 * 60 * 1000\n};\n\n\n\n/**\n * The Firebase user.\n * @param {!Object} appOptions The application options.\n * @param {!Object} stsTokenResponse The server STS token response.\n * @param {?Object=} opt_accountInfo The optional user account info.\n * @constructor\n * @extends {goog.events.EventTarget}\n * @implements {fireauth.AuthEventHandler}\n */\nfireauth.AuthUser =\n    function(appOptions, stsTokenResponse, opt_accountInfo) {\n  /** @private {!Array<!goog.Promise<*, *>|!goog.Promise<void>>} List of pending\n   *      promises. */\n  this.pendingPromises_ = [];\n  // User is only created via Auth so API key should always be available.\n  /** @private {string} The API key. */\n  this.apiKey_ = /** @type {string} */ (appOptions['apiKey']);\n  // This is needed to associate a user to the corresponding Auth instance.\n  /** @private {string} The App name. */\n  this.appName_ = /** @type {string} */ (appOptions['appName']);\n  /** @private {?string} The Auth domain. */\n  this.authDomain_ = appOptions['authDomain'] || null;\n  var clientFullVersion = firebase.SDK_VERSION ?\n      fireauth.util.getClientVersion(\n          fireauth.util.ClientImplementation.JSCORE, firebase.SDK_VERSION) :\n      null;\n  /** @private {!fireauth.RpcHandler} The RPC handler instance. */\n  this.rpcHandler_ = new fireauth.RpcHandler(\n      this.apiKey_,\n      // Get the client Auth endpoint used.\n      fireauth.constants.getEndpointConfig(fireauth.constants.clientEndpoint),\n      clientFullVersion);\n  // TODO: Consider having AuthUser take a fireauth.StsTokenManager\n  // instance instead of a token response but make sure lastAccessToken_ also\n  // initialized at the right time. In this case initializeFromIdTokenResponse\n  // will take in a token response object and convert it to an instance of\n  // fireauth.StsTokenManager to properly initialize user.\n  /** @private {!fireauth.StsTokenManager} The STS token manager instance. */\n  this.stsTokenManager_ = new fireauth.StsTokenManager(this.rpcHandler_);\n\n  this.setLastAccessToken_(\n      stsTokenResponse[fireauth.RpcHandler.AuthServerField.ID_TOKEN]);\n  // STS token manager will always be populated using server response.\n  this.stsTokenManager_.parseServerResponse(stsTokenResponse);\n  fireauth.object.setReadonlyProperty(\n      this, 'refreshToken', this.stsTokenManager_.getRefreshToken());\n  this.setAccountInfo(/** @type {!fireauth.AuthUser.AccountInfo} */ (\n      opt_accountInfo || {}));\n  // Add call to superclass constructor.\n  fireauth.AuthUser.base(this, 'constructor');\n  /** @private {boolean} Whether popup and redirect is enabled on the user. */\n  this.popupRedirectEnabled_ = false;\n  if (this.authDomain_ &&\n      fireauth.AuthEventManager.ENABLED &&\n      // Make sure popup and redirects are supported in the current environment.\n      fireauth.util.isPopupRedirectSupported()) {\n    // Get the Auth event manager associated with this user.\n    this.authEventManager_ = fireauth.AuthEventManager.getManager(\n        this.authDomain_, this.apiKey_, this.appName_);\n  }\n  /** @private {!Array<!function(!fireauth.AuthUser):!goog.Promise>} The list of\n   *      state change listeners. This is needed to make sure state changes are\n   *      resolved before resolving user API promises. For example redirect\n   *      operations should make sure the associated event ID is saved before\n   *      redirecting.\n   */\n  this.stateChangeListeners_ = [];\n  /**\n   * @private {?fireauth.AuthError} The user invalidation error if it exists.\n   */\n  this.userInvalidatedError_ = null;\n  /**\n   * @private {!fireauth.ProactiveRefresh} The reference to the proactive token\n   *     refresher utility for the current user.\n   */\n  this.proactiveRefresh_ = this.initializeProactiveRefreshUtility_();\n  /**\n   * @private {!function(!Object)} The handler for user token changes used to\n   *     realign the proactive token refresh with external token refresh calls.\n   */\n  this.userTokenChangeListener_ = goog.bind(this.handleUserTokenChange_, this);\n  var self = this;\n  /** @private {?string} The current user's language code. */\n  this.languageCode_ = null;\n  /**\n   * @private {function(!goog.events.Event)} The on language code changed event\n   *     handler.\n   */\n  this.onLanguageCodeChanged_ = function(event) {\n    // Update the user language code.\n    self.setLanguageCode(event.languageCode);\n  };\n  /**\n   * @private {?goog.events.EventTarget} The language code change event\n   *     dispatcher.\n   */\n  this.languageCodeChangeEventDispatcher_ = null;\n\n  /** @private {!Array<string>} The current Firebase frameworks. */\n  this.frameworks_ = [];\n  /**\n   * @private {function(!goog.events.Event)} The on framework list changed event\n   *     handler.\n   */\n  this.onFrameworkChanged_ = function(event) {\n    // Update the Firebase frameworks.\n    self.setFramework(event.frameworks);\n  };\n  /**\n   * @private {?goog.events.EventTarget} The framework change event dispatcher.\n   */\n  this.frameworkChangeEventDispatcher_ = null;\n};\ngoog.inherits(fireauth.AuthUser, goog.events.EventTarget);\n\n\n/**\n * Updates the user language code.\n * @param {?string} languageCode The current language code to use in user\n *     requests.\n */\nfireauth.AuthUser.prototype.setLanguageCode = function(languageCode) {\n  // Save current language.\n  this.languageCode_ = languageCode;\n  // Update the custom locale header.\n  this.rpcHandler_.updateCustomLocaleHeader(languageCode);\n};\n\n\n/** @return {?string} The current user's language code. */\nfireauth.AuthUser.prototype.getLanguageCode = function() {\n  return this.languageCode_;\n};\n\n\n/**\n * Listens to language code changes triggered by the provided dispatcher.\n * @param {?goog.events.EventTarget} dispatcher The language code changed event\n *     dispatcher.\n */\nfireauth.AuthUser.prototype.setLanguageCodeChangeDispatcher =\n    function(dispatcher) {\n  // Remove any previous listener.\n  if (this.languageCodeChangeEventDispatcher_) {\n    goog.events.unlisten(\n        this.languageCodeChangeEventDispatcher_,\n        fireauth.constants.AuthEventType.LANGUAGE_CODE_CHANGED,\n        this.onLanguageCodeChanged_);\n  }\n  // Update current dispatcher.\n  this.languageCodeChangeEventDispatcher_ = dispatcher;\n  // Using an event listener makes it easy for non-currentUsers to detect\n  // language changes on the parent Auth instance. A developer could still call\n  // APIs that require localization on signed out user references.\n  if (dispatcher) {\n    goog.events.listen(\n        dispatcher,\n        fireauth.constants.AuthEventType.LANGUAGE_CODE_CHANGED,\n        this.onLanguageCodeChanged_);\n  }\n};\n\n\n/**\n * Updates the Firebase frameworks on the current user.\n * @param {!Array<string>} framework The list of Firebase frameworks.\n */\nfireauth.AuthUser.prototype.setFramework = function(framework) {\n  // Save current frameworks.\n  this.frameworks_ = framework;\n  // Update the client version in RPC handler with the new frameworks.\n  this.rpcHandler_.updateClientVersion(firebase.SDK_VERSION ?\n        fireauth.util.getClientVersion(\n            fireauth.util.ClientImplementation.JSCORE, firebase.SDK_VERSION,\n            this.frameworks_) :\n        null);\n};\n\n\n/** @return {!Array<string>} The current Firebase frameworks. */\nfireauth.AuthUser.prototype.getFramework = function() {\n  return goog.array.clone(this.frameworks_);\n};\n\n\n/**\n * Listens to framework changes triggered by the provided dispatcher.\n * @param {?goog.events.EventTarget} dispatcher The framework changed event\n *     dispatcher.\n */\nfireauth.AuthUser.prototype.setFrameworkChangeDispatcher =\n    function(dispatcher) {\n  // Remove any previous listener.\n  if (this.frameworkChangeEventDispatcher_) {\n    goog.events.unlisten(\n        this.frameworkChangeEventDispatcher_,\n        fireauth.constants.AuthEventType.FRAMEWORK_CHANGED,\n        this.onFrameworkChanged_);\n  }\n  // Update current dispatcher.\n  this.frameworkChangeEventDispatcher_ = dispatcher;\n  // Using an event listener makes it easy for non-currentUsers to detect\n  // framework changes on the parent Auth instance.\n  if (dispatcher) {\n    goog.events.listen(\n        dispatcher,\n        fireauth.constants.AuthEventType.FRAMEWORK_CHANGED,\n        this.onFrameworkChanged_);\n  }\n};\n\n\n/**\n * Handles user token changes. Currently used to realign the proactive token\n * refresh internal timing with successful external token refreshes.\n * @param {!Object} event The token change event.\n * @private\n */\nfireauth.AuthUser.prototype.handleUserTokenChange_ = function(event) {\n  // If an external service refreshes the token, reset the proactive token\n  // refresh utility in case it is still running so the next run time is\n  // up to date.\n  // This will currently also trigger when the proactive refresh succeeds.\n  // This is not ideal but should not have any downsides. It just adds a\n  // redundant reset which can be optimized not to run in the future.\n  if (this.proactiveRefresh_.isRunning()) {\n    this.proactiveRefresh_.stop();\n    this.proactiveRefresh_.start();\n  }\n};\n\n\n/**\n * @return {!fireauth.Auth} The corresponding Auth instance that created the\n *     current user.\n * @private\n */\nfireauth.AuthUser.prototype.getAuth_ = function() {\n  try {\n    // Get the Auth instance for the current app identified by the App name.\n    // This could fail if, for example, the App instance was deleted.\n    return firebase['app'](this.appName_)['auth']();\n  } catch (e) {\n    // Throw appropriate error.\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.INTERNAL_ERROR,\n        'No firebase.auth.Auth instance is available for the Firebase App ' +\n        '\\'' + this.appName_ + '\\'!');\n  }\n};\n\n\n/**\n * @return {string} The user's API key.\n */\nfireauth.AuthUser.prototype.getApiKey = function() {\n  return this.apiKey_;\n};\n\n\n/**\n * Used to initialize the current user's proactive token refresher utility.\n * @return {!fireauth.ProactiveRefresh} The user's proactive token refresh\n *     utility.\n * @private\n */\nfireauth.AuthUser.prototype.initializeProactiveRefreshUtility_ = function() {\n  var self = this;\n  return new fireauth.ProactiveRefresh(\n      // Force ID token refresh right before expiration.\n      function() {\n        // Keep in mind when this fails for any reason other than a network\n        // error, it will effectively stop the proactive refresh.\n        return self.getIdToken(true);\n      },\n      // Retry only on network errors.\n      function(error) {\n        if (error && error.code == 'auth/network-request-failed') {\n          return true;\n        }\n        return false;\n      },\n      // Return next time to run with offset applied.\n      function() {\n        // Get time until expiration minus the refresh offset.\n        var waitInterval =\n            self.stsTokenManager_.getExpirationTime() - goog.now() -\n            fireauth.TokenRefreshTime.OFFSET_DURATION;\n        // Set to zero if wait interval is negative.\n        return waitInterval > 0 ? waitInterval : 0;\n      },\n      // Retrial minimum wait.\n      fireauth.TokenRefreshTime.RETRIAL_MIN_WAIT,\n      // Retrial maximum wait.\n      fireauth.TokenRefreshTime.RETRIAL_MAX_WAIT,\n      // Do not run in background as it is common to have multiple tabs open\n      // in a browser and this could increase QPS on server.\n      false);\n};\n\n\n/** Starts token proactive refresh. */\nfireauth.AuthUser.prototype.startProactiveRefresh = function() {\n  // Only allow if not destroyed and not already started.\n  if (!this.destroyed_ && !this.proactiveRefresh_.isRunning()) {\n    this.proactiveRefresh_.start();\n    // Unlisten any previous token change listener.\n    goog.events.unlisten(\n        this,\n        fireauth.UserEventType.TOKEN_CHANGED,\n        this.userTokenChangeListener_);\n    // Listen to token changes to reset the token refresher.\n    goog.events.listen(\n        this,\n        fireauth.UserEventType.TOKEN_CHANGED,\n        this.userTokenChangeListener_);\n  }\n};\n\n\n/** Stops token proactive refresh. */\nfireauth.AuthUser.prototype.stopProactiveRefresh = function() {\n  // Remove internal token change listener.\n  goog.events.unlisten(\n      this,\n      fireauth.UserEventType.TOKEN_CHANGED,\n      this.userTokenChangeListener_);\n  // Stop proactive token refresh.\n  this.proactiveRefresh_.stop();\n};\n\n\n/**\n * Sets latest access token for the AuthUser object.\n * @param {string} lastAccessToken\n * @private\n */\nfireauth.AuthUser.prototype.setLastAccessToken_ = function(lastAccessToken) {\n  /** @private {?string} Latest access token. */\n  this.lastAccessToken_ = lastAccessToken;\n  fireauth.object.setReadonlyProperty(this, '_lat', lastAccessToken);\n};\n\n\n/**\n * @param {!function(!fireauth.AuthUser):!goog.Promise} listener The listener\n *     to state changes to add.\n */\nfireauth.AuthUser.prototype.addStateChangeListener = function(listener) {\n  this.stateChangeListeners_.push(listener);\n};\n\n\n/**\n * @param {!function(!fireauth.AuthUser):!goog.Promise} listener The listener\n *     to state changes to remove.\n */\nfireauth.AuthUser.prototype.removeStateChangeListener = function(listener) {\n  goog.array.removeAllIf(this.stateChangeListeners_, function(ele) {\n    return ele == listener;\n  });\n};\n\n\n/**\n * Executes all state change listener promises and when all fulfilled, resolves\n * with the current user.\n * @return {!goog.Promise} A promise that resolves when all state listeners\n *     fulfilled.\n * @private\n */\nfireauth.AuthUser.prototype.notifyStateChangeListeners_ = function() {\n  var promises = [];\n  var self = this;\n  for (var i = 0; i < this.stateChangeListeners_.length; i++) {\n    // Run listener with Auth user instance and add to list of promises.\n    promises.push(this.stateChangeListeners_[i](this));\n  }\n  return goog.Promise.allSettled(promises).then(function(results) {\n    // State change errors should be recoverable even if errors occur.\n    return self;\n  });\n};\n\n\n/**\n * Sets the user current pending popup event ID.\n * @param {string} eventId The pending popup event ID.\n */\nfireauth.AuthUser.prototype.setPopupEventId = function(eventId) {\n  // Saving a popup event in a separate property other than redirectEventId\n  // would prevent a pending redirect event from being overwritten by a newly\n  // called popup operation.\n  this.popupEventId_ = eventId;\n};\n\n\n/**\n * @return {?string} The pending popup event ID.\n */\nfireauth.AuthUser.prototype.getPopupEventId = function() {\n  return this.popupEventId_ || null;\n};\n\n\n/**\n * Sets the user current pending redirect event ID.\n * @param {string} eventId The pending redirect event ID.\n */\nfireauth.AuthUser.prototype.setRedirectEventId = function(eventId) {\n  this.redirectEventId_ = eventId;\n};\n\n\n/**\n * @return {?string} The pending redirect event ID.\n */\nfireauth.AuthUser.prototype.getRedirectEventId = function() {\n  return this.redirectEventId_ || null;\n};\n\n\n/**\n * Subscribes to Auth event manager to handle popup and redirect events.\n * This is an explicit operation as users could exist in temporary states. For\n * example a user change could be detected in another tab. When syncing to those\n * changes, a temporary user is retrieved from storage and then copied to\n * existing user. The temporary user should not subscribe to Auth event changes.\n */\nfireauth.AuthUser.prototype.enablePopupRedirect = function() {\n  // Subscribe to Auth event manager if available.\n  if (this.authEventManager_ && !this.popupRedirectEnabled_) {\n    this.popupRedirectEnabled_ = true;\n    this.authEventManager_.subscribe(this);\n  }\n};\n\n\n/**\n * getAccountInfo users field.\n * @const {string}\n */\nfireauth.AuthUser.GET_ACCOUNT_INFO_USERS = 'users';\n\n\n/**\n * getAccountInfo response user fields.\n * @enum {string}\n */\nfireauth.AuthUser.GetAccountInfoField = {\n  CREATED_AT: 'createdAt',\n  DISPLAY_NAME: 'displayName',\n  EMAIL: 'email',\n  LAST_LOGIN_AT: 'lastLoginAt',\n  LOCAL_ID: 'localId',\n  PASSWORD_HASH: 'passwordHash',\n  PASSWORD_UPDATED_AT: 'passwordUpdatedAt',\n  PHONE_NUMBER: 'phoneNumber',\n  PHOTO_URL: 'photoUrl',\n  PROVIDER_USER_INFO: 'providerUserInfo',\n  EMAIL_VERIFIED: 'emailVerified'\n};\n\n\n/**\n * setAccountInfo response user fields.\n * @enum {string}\n */\nfireauth.AuthUser.SetAccountInfoField = {\n  DISPLAY_NAME: 'displayName',\n  EMAIL: 'email',\n  PHOTO_URL: 'photoUrl',\n  PROVIDER_ID: 'providerId',\n  PROVIDER_USER_INFO: 'providerUserInfo'\n};\n\n\n/**\n * getAccountInfo response provider user info fields.\n * @enum {string}\n */\nfireauth.AuthUser.GetAccountInfoProviderField = {\n  DISPLAY_NAME: 'displayName',\n  EMAIL: 'email',\n  PHOTO_URL: 'photoUrl',\n  PHONE_NUMBER: 'phoneNumber',\n  PROVIDER_ID: 'providerId',\n  RAW_ID: 'rawId'\n};\n\n\n/**\n * verifyAssertion response fields.\n * @enum {string}\n */\nfireauth.AuthUser.VerifyAssertionField = {\n  ID_TOKEN: 'idToken',\n  PROVIDER_ID: 'providerId'\n};\n\n\n/** @return {!fireauth.StsTokenManager} The STS token manager instance */\nfireauth.AuthUser.prototype.getStsTokenManager = function() {\n  return this.stsTokenManager_;\n};\n\n\n/**\n * Sets the user account info.\n * @param {!fireauth.AuthUser.AccountInfo} accountInfo The account information\n *     from the default provider.\n */\nfireauth.AuthUser.prototype.setAccountInfo = function(accountInfo) {\n  fireauth.object.setReadonlyProperties(this, {\n    'uid': accountInfo['uid'],\n    'displayName': accountInfo['displayName'] || null,\n    'photoURL': accountInfo['photoURL'] || null,\n    'email': accountInfo['email'] || null,\n    'emailVerified': accountInfo['emailVerified'] || false,\n    'phoneNumber': accountInfo['phoneNumber'] || null,\n    'isAnonymous': accountInfo['isAnonymous'] || false,\n    'metadata': new fireauth.UserMetadata(\n        accountInfo['createdAt'], accountInfo['lastLoginAt']),\n    'providerData': []\n  });\n};\n\n\n/**\n * Type specifying the parameters that can be passed to the\n * {@code fireauth.AuthUser} constructor.\n * @typedef {{\n *   uid: (?string|undefined),\n *   displayName: (?string|undefined),\n *   photoURL: (?string|undefined),\n *   email: (?string|undefined),\n *   emailVerified: ?boolean,\n *   phoneNumber: (?string|undefined),\n *   isAnonymous: ?boolean,\n *   createdAt: (?string|undefined),\n *   lastLoginAt: (?string|undefined)\n * }}\n */\nfireauth.AuthUser.AccountInfo;\n\n\n/**\n * The provider for all fireauth.AuthUser objects is 'firebase'.\n */\nfireauth.object.setReadonlyProperty(fireauth.AuthUser.prototype, 'providerId',\n    fireauth.idp.ProviderId.FIREBASE);\n\n\n/**\n * Returns nothing. This can be used to consume the output of a Promise.\n * @private\n */\nfireauth.AuthUser.returnNothing_ = function() {\n  // Return nothing. Intentionally left empty.\n};\n\n\n/**\n * Ensures the user is still logged in before moving to the next promise\n * resolution.\n * @return {!goog.Promise<undefined,undefined>}\n * @private\n */\nfireauth.AuthUser.prototype.checkDestroyed_ = function() {\n  var self = this;\n  return goog.Promise.resolve().then(function() {\n    if (self.destroyed_) {\n      throw new fireauth.AuthError(fireauth.authenum.Error.MODULE_DESTROYED);\n    }\n  });\n};\n\n\n/**\n * @return {!Array<!fireauth.idp.ProviderId>} The list of provider IDs.\n */\nfireauth.AuthUser.prototype.getProviderIds = function() {\n  return goog.array.map(this['providerData'], function(userInfo) {\n    return userInfo['providerId'];\n  });\n};\n\n\n/**\n * Adds the provided user info to list of providers' data.\n * @param {?fireauth.AuthUserInfo} providerData Provider data to store for user.\n */\nfireauth.AuthUser.prototype.addProviderData = function(providerData) {\n  if (!providerData) {\n    return;\n  }\n  this.removeProviderData(providerData['providerId']);\n  this['providerData'].push(providerData);\n};\n\n\n/**\n * @param {!fireauth.idp.ProviderId} providerId The provider ID whose\n *     data should be removed.\n */\nfireauth.AuthUser.prototype.removeProviderData = function(providerId) {\n  goog.array.removeAllIf(this['providerData'], function(userInfo) {\n    return userInfo['providerId'] == providerId;\n  });\n};\n\n\n/**\n * @param {string} propName The property name to modify.\n * @param {?string|boolean} value The new value to set.\n */\nfireauth.AuthUser.prototype.updateProperty = function(propName, value) {\n  // User ID is required.\n  if (propName == 'uid' && !value) {\n    return;\n  }\n  if (this.hasOwnProperty(propName)) {\n    fireauth.object.setReadonlyProperty(this, propName, value);\n  }\n};\n\n\n/**\n * @param {!fireauth.AuthUser} otherUser The other user to compare to.\n * @return {boolean} True if both User objects have the same user ID.\n */\nfireauth.AuthUser.prototype.hasSameUserIdAs = function(otherUser) {\n  var thisId = this['uid'];\n  var thatId = otherUser['uid'];\n  if (thisId === undefined || thisId === null || thisId === '' ||\n      thatId === undefined || thatId === null || thatId === '') {\n    return false;\n  }\n  return thisId == thatId;\n};\n\n\n/**\n * Copies all properties and STS token manager instance from userToCopy to\n * current user without triggering any Auth state change or token change\n * listener.\n * @param {!fireauth.AuthUser} userToCopy The updated user to overwrite current\n *     user.\n */\nfireauth.AuthUser.prototype.copy = function(userToCopy) {\n  var self = this;\n  // Copy to self.\n  if (self == userToCopy) {\n    return;\n  }\n  fireauth.object.setReadonlyProperties(this, {\n    'uid': userToCopy['uid'],\n    'displayName': userToCopy['displayName'],\n    'photoURL': userToCopy['photoURL'],\n    'email': userToCopy['email'],\n    'emailVerified': userToCopy['emailVerified'],\n    'phoneNumber': userToCopy['phoneNumber'],\n    'isAnonymous': userToCopy['isAnonymous'],\n    'providerData': []\n  });\n  // This should always be available but just in case there is a conflict with\n  // a user from an older version.\n  if (userToCopy['metadata']) {\n    fireauth.object.setReadonlyProperty(\n        this,\n        'metadata',\n        /** @type{!fireauth.UserMetadata} */ (userToCopy['metadata']).clone());\n  } else {\n    // User to copy has no metadata. Align with that.\n    fireauth.object.setReadonlyProperty(\n        this, 'metadata', new fireauth.UserMetadata());\n  }\n  goog.array.forEach(userToCopy['providerData'], function(userInfo) {\n    self.addProviderData(userInfo);\n  });\n  this.stsTokenManager_.copy(userToCopy.getStsTokenManager());\n  fireauth.object.setReadonlyProperty(\n      this, 'refreshToken', this.stsTokenManager_.getRefreshToken());\n};\n\n\n/**\n * Set the Auth user redirect storage manager.\n * @param {?fireauth.storage.RedirectUserManager} redirectStorageManager The\n *     utility used to store or delete the user on redirect.\n */\nfireauth.AuthUser.prototype.setRedirectStorageManager =\n    function(redirectStorageManager) {\n  /**\n   * @private {?fireauth.storage.RedirectUserManager} The redirect user storage\n   *     manager.\n   */\n  this.redirectStorageManager_ = redirectStorageManager;\n};\n\n\n/**\n * Refreshes the current user, if signed in.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.reload = function() {\n  var self = this;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(this.checkDestroyed_().then(function() {\n    return self.reloadWithoutSaving_()\n        .then(function() {\n          return self.notifyStateChangeListeners_();\n        })\n        .then(fireauth.AuthUser.returnNothing_);\n  }));\n};\n\n\n/**\n * Refreshes the current user, if signed in.\n * @return {!goog.Promise<string>} Promise that resolves with the idToken.\n * @private\n */\nfireauth.AuthUser.prototype.reloadWithoutSaving_ = function() {\n  var self = this;\n  // ID token is required to refresh the user's data.\n  // If this is called after invalidation, getToken will throw the cached error.\n  return this.getIdToken().then(function(idToken) {\n    var isAnonymous = self['isAnonymous'];\n    return self.setUserAccountInfoFromToken_(idToken)\n        .then(function(user) {\n          if (!isAnonymous) {\n            // Preserves the not anonymous status of the stored user,\n            // even if no more credentials (federated or email/password)\n            // linked to the user.\n            self.updateProperty('isAnonymous', false);\n          }\n          return idToken;\n        });\n  });\n};\n\n\n/**\n * This operation resolves with the Firebase ID token result which contains\n * the entire payload claims.\n * @param {boolean=} opt_forceRefresh Whether to force refresh token exchange.\n * @return {!goog.Promise<!fireauth.IdTokenResult>} A Promise that resolves with\n *     the ID token result.\n */\nfireauth.AuthUser.prototype.getIdTokenResult = function(opt_forceRefresh) {\n  return this.getIdToken(opt_forceRefresh).then(function(idToken) {\n    return new fireauth.IdTokenResult(idToken);\n  });\n};\n\n\n/**\n * This operation resolves with the Firebase ID token.\n * @param {boolean=} opt_forceRefresh Whether to force refresh token exchange.\n * @return {!goog.Promise<string>} A Promise that resolves with the ID token.\n */\nfireauth.AuthUser.prototype.getIdToken = function(opt_forceRefresh) {\n  var self = this;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(this.checkDestroyed_().then(function() {\n    return self.stsTokenManager_.getToken(opt_forceRefresh);\n  }).then(function(response) {\n    if (!response) {\n      // If the user exists, the token manager should be initialized.\n      throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n    }\n    // Only if the access token is refreshed, notify Auth listeners.\n    if (response['accessToken'] != self.lastAccessToken_) {\n      self.setLastAccessToken_(response['accessToken']);\n      // Auth state change, notify listeners.\n      self.notifyAuthListeners_();\n    }\n    self.updateProperty('refreshToken', response['refreshToken']);\n    return response['accessToken'];\n  }));\n};\n\n\n/**\n * Checks if the error corresponds to a user invalidation action.\n * @param {*} error The error returned by a user operation.\n * @return {boolean} Whether the user is invalidated based on the error\n *     provided.\n * @private\n */\nfireauth.AuthUser.isUserInvalidated_ = function(error) {\n  return !!(error &&\n      (error.code == 'auth/user-disabled' ||\n       error.code == 'auth/user-token-expired'));\n};\n\n\n/**\n * Updates the current tokens using a server response, if new tokens are\n * present and are different from the current ones, and notify the Auth\n * listeners.\n * @param {!Object} response The response from the server.\n * @private\n */\nfireauth.AuthUser.prototype.updateTokensIfPresent_ = function(response) {\n  if (response[fireauth.RpcHandler.AuthServerField.ID_TOKEN] &&\n      this.lastAccessToken_ != response[\n          fireauth.RpcHandler.AuthServerField.ID_TOKEN]) {\n    this.stsTokenManager_.parseServerResponse(response);\n    this.notifyAuthListeners_();\n    this.setLastAccessToken_(response[\n        fireauth.RpcHandler.AuthServerField.ID_TOKEN]);\n    // Update refresh token property.\n    this.updateProperty(\n        'refreshToken', this.stsTokenManager_.getRefreshToken());\n  }\n};\n\n\n/**\n * Called internally on Auth (access token) changes to notify listeners.\n * @private\n */\nfireauth.AuthUser.prototype.notifyAuthListeners_ = function() {\n  this.dispatchEvent(\n      new fireauth.UserEvent(fireauth.UserEventType.TOKEN_CHANGED));\n};\n\n\n/**\n * Called internally on user deletion to notify listeners.\n * @private\n */\nfireauth.AuthUser.prototype.notifyUserDeletedListeners_ = function() {\n  this.dispatchEvent(\n      new fireauth.UserEvent(fireauth.UserEventType.USER_DELETED));\n};\n\n\n/**\n * Called internally on user session invalidation to notify listeners.\n * @private\n */\nfireauth.AuthUser.prototype.notifyUserInvalidatedListeners_ = function() {\n  this.dispatchEvent(\n      new fireauth.UserEvent(fireauth.UserEventType.USER_INVALIDATED));\n};\n\n\n/**\n * Queries the backend using the provided ID token for all linked accounts to\n * build the Firebase user object.\n * @param {!string} idToken The ID token string.\n * @return {!goog.Promise<undefined>}\n * @private\n */\nfireauth.AuthUser.prototype.setUserAccountInfoFromToken_ = function(idToken) {\n  return this.rpcHandler_.getAccountInfoByIdToken(idToken)\n      .then(goog.bind(this.parseAccountInfo_, this));\n};\n\n\n/**\n * Parses the response from the getAccountInfo endpoint.\n * @param {!Object} resp The backend response.\n * @private\n */\nfireauth.AuthUser.prototype.parseAccountInfo_ = function(resp) {\n  var users = resp[fireauth.AuthUser.GET_ACCOUNT_INFO_USERS];\n  if (!users || !users.length) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n  var user = users[0];\n  var accountInfo = /** @type {!fireauth.AuthUser.AccountInfo} */ ({\n    'uid': /** @type {string} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.LOCAL_ID]),\n    'displayName': /** @type {?string|undefined} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.DISPLAY_NAME]),\n    'photoURL': /** @type {?string|undefined} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.PHOTO_URL]),\n    'email': /** @type {?string|undefined} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.EMAIL]),\n    'emailVerified':\n        !!user[fireauth.AuthUser.GetAccountInfoField.EMAIL_VERIFIED],\n    'phoneNumber': /** @type {?string|undefined} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.PHONE_NUMBER]),\n    'lastLoginAt': /** @type {?string|undefined} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.LAST_LOGIN_AT]),\n    'createdAt': /** @type {?string|undefined} */ (\n        user[fireauth.AuthUser.GetAccountInfoField.CREATED_AT])\n  });\n  this.setAccountInfo(accountInfo);\n  var linkedAccounts = this.extractLinkedAccounts_(user);\n  for (var i = 0; i < linkedAccounts.length; i++) {\n    this.addProviderData(linkedAccounts[i]);\n  }\n  // Sets the isAnonymous flag based on email, passwordHash and providerData.\n  var isAnonymous = !(this['email'] &&\n      user[fireauth.AuthUser.GetAccountInfoField.PASSWORD_HASH]) &&\n      !(this['providerData'] && this['providerData'].length);\n  this.updateProperty('isAnonymous', isAnonymous);\n};\n\n\n/**\n * Extracts the linked accounts from getAccountInfo response and returns an\n * array of corresponding provider data.\n * @param {!Object} resp The response object.\n * @return {!Array.<!fireauth.AuthUserInfo>} The linked accounts.\n * @private\n */\nfireauth.AuthUser.prototype.extractLinkedAccounts_ = function(resp) {\n  var providerInfo =\n      resp[fireauth.AuthUser.GetAccountInfoField.PROVIDER_USER_INFO];\n  if (!providerInfo || !providerInfo.length) {\n    return [];\n  }\n\n  return goog.array.map(providerInfo, function(info) {\n    return new fireauth.AuthUserInfo(\n        info[fireauth.AuthUser.GetAccountInfoProviderField.RAW_ID],\n        info[fireauth.AuthUser.GetAccountInfoProviderField.PROVIDER_ID],\n        info[fireauth.AuthUser.GetAccountInfoProviderField.EMAIL],\n        info[fireauth.AuthUser.GetAccountInfoProviderField.DISPLAY_NAME],\n        info[fireauth.AuthUser.GetAccountInfoProviderField.PHOTO_URL],\n        info[fireauth.AuthUser.GetAccountInfoProviderField.PHONE_NUMBER]);\n  });\n};\n\n\n/**\n * Reauthenticates a user using a fresh credential, to be used before operations\n * such as updatePassword that require tokens from recent login attempts. It\n * also returns any additional user info data or credentials returned form the\n * backend.\n * @param {!fireauth.AuthCredential} credential\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthUser.prototype.reauthenticateAndRetrieveDataWithCredential =\n    function(credential) {\n  var self = this;\n  var userCredential = null;\n  // Register this pending promise but bypass user invalidation check.\n  return this.registerPendingPromise_(\n      // Match ID token from credential with the current user UID.\n      credential.matchIdTokenWithUid(this.rpcHandler_, this['uid'])\n      .then(function(response) {\n        // If the credential is valid and matches the current user ID, then\n        // update the tokens accordingly.\n        self.updateTokensIfPresent_(response);\n        // Get user credential.\n        userCredential = self.getUserCredential_(\n            response, fireauth.constants.OperationType.REAUTHENTICATE);\n        // This could potentially validate an invalidated user. This happens in\n        // the case a password reset was applied. The refresh token is expired.\n        // Reauthentication should revalidate the user.\n        // User would remain non current if already signed out, but should be\n        // enabled again.\n        self.userInvalidatedError_ = null;\n        return self.reload();\n      }).then(function() {\n        // Return user credential after reauthenticated user is reloaded.\n        return userCredential;\n      }),\n      // Skip invalidation check as reauthentication could revalidate a user.\n      true);\n};\n\n\n/**\n * Reauthenticates a user using a fresh credential, to be used before operations\n * such as updatePassword that require tokens from recent login attempts. It has\n * been deprecated in favor of reauthenticateAndRetrieveDataWithCredential.\n * @param {!fireauth.AuthCredential} credential\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.reauthenticateWithCredential =\n    function(credential) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.REAUTH_WITH_CREDENTIAL);\n  // Get reauthenticateAndRetrieveDataWithCredential result and return void.\n  return this.reauthenticateAndRetrieveDataWithCredential(credential)\n      .then(function(result) {\n        // Do not return anything. Promise should resolve with void.\n      });\n};\n\n\n/**\n * Reloads the user and then checks if a provider is already linked. If so,\n * this returns a Promise that rejects. Note that state change listeners are not\n * notified on success, so that operations using this can make changes and then\n * do one final listener notification.\n * @param {string} providerId\n * @return {!goog.Promise<void>}\n * @private\n */\nfireauth.AuthUser.prototype.checkIfAlreadyLinked_ =\n    function(providerId) {\n  var self = this;\n  // Reload first in case the user was updated elsewhere.\n  return this.reloadWithoutSaving_()\n      .then(function() {\n        if (goog.array.contains(self.getProviderIds(), providerId)) {\n          return self.notifyStateChangeListeners_()\n              .then(function() {\n                  throw new fireauth.AuthError(\n                      fireauth.authenum.Error.PROVIDER_ALREADY_LINKED);\n              });\n        }\n      });\n};\n\n\n/**\n * Links a provider to the current user and returns any additional user info\n * data or credentials returned form the backend.\n * @param {!fireauth.AuthCredential} credential The credential from the Auth\n *     provider.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthUser.prototype.linkAndRetrieveDataWithCredential =\n    function(credential) {\n  var self = this;\n  var userCredential = null;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(\n      this.checkIfAlreadyLinked_(credential['providerId'])\n      .then(function() {\n        return self.getIdToken();\n      })\n      .then(function(idToken) {\n        return credential.linkToIdToken(self.rpcHandler_, idToken);\n      })\n      .then(function(response) {\n        // Get user credential.\n        userCredential = self.getUserCredential_(\n            response, fireauth.constants.OperationType.LINK);\n        // Finalize linking.\n        return self.finalizeLinking_(response);\n      })\n      .then(function(user) {\n        // Return user credential after finalizing linking.\n        return userCredential;\n      })\n  );\n};\n\n\n/**\n * Links a provider to the current user. It has been deprecated in favor of\n * linkAndRetrieveDataWithCredential.\n * @param {!fireauth.AuthCredential} credential The credential from the Auth\n *     provider.\n * @return {!goog.Promise<!fireauth.AuthUser>}\n */\nfireauth.AuthUser.prototype.linkWithCredential = function(credential) {\n  fireauth.deprecation.log(\n      fireauth.deprecation.Deprecations.LINK_WITH_CREDENTIAL);\n  // Get linkAndRetrieveDataWithCredential result and return the user only.\n  return this.linkAndRetrieveDataWithCredential(credential)\n      .then(function(result) {\n        return result['user'];\n      });\n};\n\n\n/**\n * Links a phone number using the App verifier instance and returns a\n * promise that resolves with the confirmation result which on confirmation\n * will resolve with the UserCredential object.\n * @param {string} phoneNumber The phone number to authenticate with.\n * @param {!firebase.auth.ApplicationVerifier} appVerifier The application\n *     verifier.\n * @return {!goog.Promise<!fireauth.ConfirmationResult>}\n */\nfireauth.AuthUser.prototype.linkWithPhoneNumber =\n    function(phoneNumber, appVerifier) {\n  var self = this;\n  return /** @type {!goog.Promise<!fireauth.ConfirmationResult>} */ (\n      this.registerPendingPromise_(\n          // Check if linked already. If so, throw an error.\n          // This is redundant but is needed to prevent the need to send the\n          // SMS (worth the cost).\n          this.checkIfAlreadyLinked_(fireauth.idp.ProviderId.PHONE)\n              .then(function() {\n                return fireauth.ConfirmationResult.initialize(\n                    self.getAuth_(),\n                    phoneNumber,\n                    appVerifier,\n                    // This will check again if the credential is linked.\n                    goog.bind(self.linkAndRetrieveDataWithCredential, self));\n              })));\n};\n\n\n/**\n * Reauthenticates a user with a phone number using the App verifier instance\n * and returns a promise that resolves with the confirmation result which on\n * confirmation will resolve with the UserCredential object.\n * @param {string} phoneNumber The phone number to authenticate with.\n * @param {!firebase.auth.ApplicationVerifier} appVerifier The application\n *     verifier.\n * @return {!goog.Promise<!fireauth.ConfirmationResult>}\n */\nfireauth.AuthUser.prototype.reauthenticateWithPhoneNumber =\n    function(phoneNumber, appVerifier) {\n  var self = this;\n  return /** @type {!goog.Promise<!fireauth.ConfirmationResult>} */ (\n      this.registerPendingPromise_(\n          // Wrap this operation in a Promise since self.getAuth_() may throw an\n          // error synchronously.\n          goog.Promise.resolve().then(function() {\n            return fireauth.ConfirmationResult.initialize(\n                // Get corresponding Auth instance.\n                self.getAuth_(),\n                phoneNumber,\n                appVerifier,\n                goog.bind(self.reauthenticateAndRetrieveDataWithCredential,\n                    self));\n          }),\n          // Skip invalidation check as reauthentication could revalidate a\n          // user.\n          true));\n};\n\n\n/**\n * Converts an ID token response (eg. verifyAssertion) to a UserCredential\n * object.\n * @param {!Object} idTokenResponse The ID token response.\n * @param {!fireauth.constants.OperationType} operationType The operation type\n *     to set in the user credential.\n * @return {!fireauth.AuthEventManager.Result} The UserCredential object\n *     constructed from the response.\n * @private\n */\nfireauth.AuthUser.prototype.getUserCredential_ =\n    function(idTokenResponse, operationType) {\n  // Get credential if available in the response.\n  var credential = fireauth.AuthProvider.getCredentialFromResponse(\n      idTokenResponse);\n  // Get additional user info data if available in the response.\n  var additionalUserInfo = fireauth.AdditionalUserInfo.fromPlainObject(\n      idTokenResponse);\n  // Return the readonly copy of the user credential object.\n  return fireauth.object.makeReadonlyCopy({\n    // Return the current user reference.\n    'user': this,\n    // Return any credential passed from the backend.\n    'credential': credential,\n    // Return any additional IdP data passed from the backend.\n    'additionalUserInfo': additionalUserInfo,\n    // Return the operation type in the user credential object.\n    'operationType': operationType\n  });\n};\n\n\n/**\n * Finalizes a linking flow, updating idToken and user's data using the\n * RPC linking response.\n * @param {!Object} response The RPC linking response.\n * @return {!goog.Promise<!fireauth.AuthUser>}\n * @private\n */\nfireauth.AuthUser.prototype.finalizeLinking_ = function(response) {\n  // The response may contain a new access token,\n  // so we should update them just like a new sign in.\n  this.updateTokensIfPresent_(response);\n  // This will take care of saving the updated state.\n  var self = this;\n  return this.reload().then(function() {\n    return self;\n  });\n};\n\n\n/**\n * Updates the user's email.\n * @param {string} newEmail The new email.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.updateEmail = function(newEmail) {\n  var self = this;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(this.getIdToken()\n      .then(function(idToken) {\n        return self.rpcHandler_.updateEmail(idToken, newEmail);\n      })\n      .then(function(response) {\n        // Calls to SetAccountInfo may invalidate old tokens.\n        self.updateTokensIfPresent_(response);\n        // Reloads the user to update emailVerified.\n        return self.reload();\n      }));\n};\n\n\n/**\n * Updates the user's phone number.\n * @param {!fireauth.PhoneAuthCredential} phoneCredential\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.updatePhoneNumber = function(phoneCredential) {\n  var self = this;\n  return this.registerPendingPromise_(this.getIdToken()\n      .then(function(idToken) {\n        // The backend always overwrites the existing phone number during a\n        // link operation.\n        return phoneCredential.linkToIdToken(self.rpcHandler_, idToken);\n      })\n      .then(function(response) {\n        self.updateTokensIfPresent_(response);\n        return self.reload();\n      }));\n};\n\n\n/**\n * Updates the user's password.\n * @param {string} newPassword The new password.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.updatePassword = function(newPassword) {\n  var self = this;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(\n      this.getIdToken()\n      .then(function(idToken) {\n        return self.rpcHandler_.updatePassword(idToken, newPassword);\n      })\n      .then(function(response) {\n        self.updateTokensIfPresent_(response);\n        // Reloads the user in case email has also been updated and the user\n        // was anonymous.\n        return self.reload();\n      }));\n};\n\n\n/**\n * Updates the user's profile data.\n * @param {!Object} profile The profile data to update.\n * @return {!goog.Promise<undefined>}\n */\nfireauth.AuthUser.prototype.updateProfile = function(profile) {\n  if (profile['displayName'] === undefined &&\n      profile['photoURL'] === undefined) {\n    // No change, directly return.\n    return this.checkDestroyed_();\n  }\n  var self = this;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(\n      this.getIdToken().then(function(idToken) {\n        // Translate the request into one that the backend accepts.\n        var profileRequest = {\n          'displayName': profile['displayName'],\n          'photoUrl': profile['photoURL']\n        };\n        return self.rpcHandler_.updateProfile(idToken, profileRequest);\n      })\n      .then(function(response) {\n        // Calls to SetAccountInfo may invalidate old tokens.\n        self.updateTokensIfPresent_(response);\n        // Update properties.\n        self.updateProperty('displayName',\n            response[fireauth.AuthUser.SetAccountInfoField.DISPLAY_NAME] ||\n            null);\n        self.updateProperty('photoURL',\n            response[fireauth.AuthUser.SetAccountInfoField.PHOTO_URL] || null);\n        goog.array.forEach(self['providerData'], function(userInfo) {\n          // Check if password provider is linked.\n          if (userInfo['providerId'] === fireauth.idp.ProviderId.PASSWORD) {\n            // If so, update both fields in that provider.\n            fireauth.object.setReadonlyProperty(\n                userInfo, 'displayName', self['displayName']);\n            fireauth.object.setReadonlyProperty(\n                userInfo, 'photoURL', self['photoURL']);\n          }\n        });\n        // Notify changes and resolve.\n        return self.notifyStateChangeListeners_();\n      })\n      .then(fireauth.AuthUser.returnNothing_));\n};\n\n\n/**\n * Unlinks a provider from an account.\n * @param {!fireauth.idp.ProviderId} providerId The ID of the provider to\n *     unlink.\n * @return {!goog.Promise<!fireauth.AuthUser>}\n */\nfireauth.AuthUser.prototype.unlink = function(providerId) {\n  var self = this;\n  // Make sure we have updated user providers to avoid removing a linked\n  // provider that hasn't been updated in current copy of user.\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(\n      this.reloadWithoutSaving_()\n      .then(function(idToken) {\n        // Provider already unlinked.\n        if (!goog.array.contains(self.getProviderIds(), providerId)) {\n          return self.notifyStateChangeListeners_()\n              .then(function() {\n                throw new fireauth.AuthError(\n                    fireauth.authenum.Error.NO_SUCH_PROVIDER);\n              });\n        }\n        // We delete the providerId given.\n        return self.rpcHandler_\n            .deleteLinkedAccounts(idToken, [providerId])\n            .then(function(resp) {\n              // Construct the set of provider IDs returned by server.\n              var remainingProviderIds = {};\n              var userInfo = resp[fireauth.AuthUser.SetAccountInfoField.\n                  PROVIDER_USER_INFO] || [];\n              goog.array.forEach(userInfo, function(obj) {\n                remainingProviderIds[\n                    obj[fireauth.AuthUser.SetAccountInfoField.PROVIDER_ID]] =\n                    true;\n              });\n\n              // Remove all provider data objects where the provider ID no\n              // longer exists in this user.\n              goog.array.forEach(self.getProviderIds(), function(pId) {\n                if (!remainingProviderIds[pId]) {\n                  // This provider no longer linked, remove it from user.\n                  self.removeProviderData(pId);\n                }\n              });\n\n              // Remove the phone number if the phone provider was unlinked.\n              if (!remainingProviderIds[fireauth.PhoneAuthProvider[\n                      'PROVIDER_ID']]) {\n                fireauth.object.setReadonlyProperty(self, 'phoneNumber', null);\n              }\n\n              return self.notifyStateChangeListeners_();\n            });\n      }));\n};\n\n\n/**\n * Deletes the user, triggering an Auth token change if successful.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.delete = function() {\n  // Notice the way of declaring the method, it's to avoid a weird bug on IE8.\n  var self = this;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(\n      this.getIdToken()\n      .then(function(idToken) {\n        return self.rpcHandler_.deleteAccount(idToken);\n      })\n      .then(function() {\n        self.notifyUserDeletedListeners_();\n      }))\n      .then(function() {\n        // Destroying after the registered promise is handled ensures it won't\n        // be canceled.\n        self.destroy();\n      });\n};\n\n\n/**\n * Tells the Auth event manager if this user is the owner of a detected Auth\n * event. A user can handle linkWithPopup and linkWithRedirect operations.\n * In addition, the event ID should match the user's event IDs.\n * @param {!fireauth.AuthEvent.Type} mode The Auth operation mode (popup,\n *     redirect).\n * @param {?string=} opt_eventId The event ID.\n * @return {boolean} Whether the Auth event handler can handler the provided\n *     event.\n * @override\n */\nfireauth.AuthUser.prototype.canHandleAuthEvent = function(mode, opt_eventId) {\n  if (mode == fireauth.AuthEvent.Type.LINK_VIA_POPUP &&\n      this.getPopupEventId() == opt_eventId &&\n      this.pendingPopupResolvePromise_) {\n    // The link via popup event's ID matches the user's popup event ID which\n    // makes this user the owner of this event.\n    return true;\n  } else if (mode == fireauth.AuthEvent.Type.REAUTH_VIA_POPUP &&\n      this.getPopupEventId() == opt_eventId &&\n      this.pendingPopupResolvePromise_) {\n    // The reauth via popup event's ID matches the user's popup event ID which\n    // makes this user the owner of this event.\n    return true;\n  } else if (mode == fireauth.AuthEvent.Type.LINK_VIA_REDIRECT &&\n             this.getRedirectEventId() == opt_eventId) {\n    // The link via redirect event's ID matches the user's redirect event ID\n    // which makes this user the owner of this event.\n    return true;\n  } else if (mode == fireauth.AuthEvent.Type.REAUTH_VIA_REDIRECT &&\n             this.getRedirectEventId() == opt_eventId) {\n    // The reauth via redirect event's ID matches the user's redirect event ID\n    // which makes this user the owner of this event.\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Completes the pending popup operation. If error is not null, rejects with the\n * error. Otherwise, it resolves with the popup redirect result.\n * @param {!fireauth.AuthEvent.Type} mode The Auth operation mode (popup,\n *     redirect).\n * @param {?fireauth.AuthEventManager.Result} popupRedirectResult The result\n *     to resolve with when no error supplied.\n * @param {?fireauth.AuthError} error When supplied, the promise will reject.\n * @param {?string=} opt_eventId The event ID.\n * @override\n */\nfireauth.AuthUser.prototype.resolvePendingPopupEvent =\n    function(mode, popupRedirectResult, error, opt_eventId) {\n  // Only handles popup events with event IDs that match a pending popup ID.\n  if ((mode != fireauth.AuthEvent.Type.LINK_VIA_POPUP &&\n       mode != fireauth.AuthEvent.Type.REAUTH_VIA_POPUP) ||\n      opt_eventId != this.getPopupEventId()) {\n    return;\n  }\n  if (error && this.pendingPopupRejectPromise_) {\n    // Reject with error for supplied mode.\n    this.pendingPopupRejectPromise_(error);\n  } else if (popupRedirectResult &&\n             !error &&\n             this.pendingPopupResolvePromise_) {\n    // Resolve with result for supplied mode.\n    this.pendingPopupResolvePromise_(popupRedirectResult);\n  }\n  // Now that event is resolved, delete timeout promise.\n  if (this.popupTimeoutPromise_) {\n    this.popupTimeoutPromise_.cancel();\n    this.popupTimeoutPromise_ = null;\n  }\n  // Delete pending promises.\n  delete this.pendingPopupResolvePromise_;\n  delete this.pendingPopupRejectPromise_;\n};\n\n\n/**\n * Returns the handler's appropriate popup and redirect sign in operation\n * finisher. Can handle link or reauth events that match existing event IDs.\n * @param {!fireauth.AuthEvent.Type} mode The Auth operation mode (popup,\n *     redirect).\n * @param {?string=} opt_eventId The optional event ID.\n * @return {?function(string,\n *     string, ?string=):!goog.Promise<!fireauth.AuthEventManager.Result>}\n * @override\n */\nfireauth.AuthUser.prototype.getAuthEventHandlerFinisher =\n    function(mode, opt_eventId) {\n  if (mode == fireauth.AuthEvent.Type.LINK_VIA_POPUP &&\n      opt_eventId == this.getPopupEventId()) {\n    // Link with popup ID matches popup event ID.\n    return goog.bind(this.finishPopupAndRedirectLink, this);\n  } else if (mode == fireauth.AuthEvent.Type.REAUTH_VIA_POPUP &&\n      opt_eventId == this.getPopupEventId()) {\n    // Reauth with popup ID matches popup event ID.\n    return goog.bind(this.finishPopupAndRedirectReauth, this);\n  } else if (mode == fireauth.AuthEvent.Type.LINK_VIA_REDIRECT &&\n             this.getRedirectEventId() == opt_eventId) {\n    // Link with redirect ID matches redirect event ID.\n    return goog.bind(this.finishPopupAndRedirectLink, this);\n  } else if (mode == fireauth.AuthEvent.Type.REAUTH_VIA_REDIRECT &&\n             this.getRedirectEventId() == opt_eventId) {\n    // Reauth with redirect ID matches redirect event ID.\n    return goog.bind(this.finishPopupAndRedirectReauth, this);\n  }\n  return null;\n};\n\n\n/**\n * @return {string} The generated event ID used to identify a popup or redirect\n *     event.\n * @private\n */\nfireauth.AuthUser.prototype.generateEventId_ = function() {\n  return fireauth.util.generateEventId(this['uid'] + ':::');\n};\n\n\n/**\n * Links to Auth provider via popup.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthUser.prototype.linkWithPopup = function(provider) {\n  var self = this;\n  // Additional check to return to fail when the provider is already linked.\n  var additionalCheck = function() {\n    return self.checkIfAlreadyLinked_(provider['providerId'])\n        .then(function() {\n          // Notify state listeners after the check as it will update the user\n          // state.\n          return self.notifyStateChangeListeners_();\n        });\n  };\n  return this.runOperationWithPopup_(\n      fireauth.AuthEvent.Type.LINK_VIA_POPUP, provider, additionalCheck, false);\n};\n\n\n/**\n * Reauthenticate to Auth provider via popup.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthUser.prototype.reauthenticateWithPopup = function(provider) {\n  // No additional check needed before running this operation.\n  var additionalCheck = function() {\n    return goog.Promise.resolve();\n  };\n  return this.runOperationWithPopup_(\n      fireauth.AuthEvent.Type.REAUTH_VIA_POPUP,\n      provider,\n      additionalCheck,\n      // Do not update token and skip session invalidation check.\n      true);\n};\n\n\n/**\n * Runs a specific OAuth operation using the Auth provider via popup.\n * @param {!fireauth.AuthEvent.Type} mode The mode of operation (link or\n *     reauth).\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {!function():!goog.Promise} additionalCheck The additional check to\n *     run before proceeding with the popup processing.\n * @param {boolean} isReauthOperation whether this is a reauth operation or not.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n * @private\n */\nfireauth.AuthUser.prototype.runOperationWithPopup_ =\n    function(mode, provider, additionalCheck, isReauthOperation) {\n  // Check if popup and redirect are supported in this environment.\n  if (!fireauth.util.isPopupRedirectSupported()) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  }\n  // Quickly throw user invalidation error if already invalidated.\n  if (this.userInvalidatedError_ &&\n      // Skip invalidation check as reauthentication could revalidate a user.\n      !isReauthOperation) {\n    return goog.Promise.reject(this.userInvalidatedError_);\n  }\n  var self = this;\n  // Popup the window immediately to make sure the browser associates the\n  // popup with the click that triggered it.\n\n  // Get provider settings.\n  var settings = fireauth.idp.getIdpSettings(provider['providerId']);\n  // There could multiple users at the same time and multiple users could have\n  // the same UID. So try to ensure event ID uniqueness.\n  var eventId = this.generateEventId_();\n  // If incapable of redirecting popup from opener, popup destination URL\n  // directly. This could also happen in a sandboxed iframe.\n  var oauthHelperWidgetUrl = null;\n  if ((!fireauth.util.runsInBackground() || fireauth.util.isIframe()) &&\n      this.authDomain_ &&\n      provider['isOAuthProvider']) {\n    oauthHelperWidgetUrl =\n        fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(\n            this.authDomain_,\n            this.apiKey_,\n            this.appName_,\n            mode,\n            provider,\n            null,\n            eventId,\n            firebase.SDK_VERSION || null);\n  }\n  // The popup must have a name, otherwise when successive popups are triggered\n  // they will all render in the same instance and none will succeed since the\n  // popup cancel of first window will close the shared popup window instance.\n  var popupWin =\n      fireauth.util.popup(\n          oauthHelperWidgetUrl,\n          fireauth.util.generateRandomString(),\n          settings && settings.popupWidth,\n          settings && settings.popupHeight);\n  var p = additionalCheck().then(function() {\n    // Auth event manager must be available for account linking or\n    // reauthentication to be possible.\n    self.getAuthEventManager();\n    if (!isReauthOperation) {\n      // Some operations like reauthenticate do not require this.\n      return self.getIdToken().then(function(idToken) {});\n    }\n  }).then(function() {\n    // Process popup request.\n    return self.authEventManager_.processPopup(\n        popupWin, mode, provider, eventId, !!oauthHelperWidgetUrl);\n  }).then(function() {\n    return new goog.Promise(function(resolve, reject) {\n      // Expire other pending promises if still available.\n      self.resolvePendingPopupEvent(\n          mode,\n          null,\n          new fireauth.AuthError(fireauth.authenum.Error.EXPIRED_POPUP_REQUEST),\n          // Existing popup event ID.\n          self.getPopupEventId());\n      // Save current pending promises.\n      self.pendingPopupResolvePromise_ = resolve;\n      self.pendingPopupRejectPromise_ = reject;\n      // Overwrite popup event ID with new one.\n      self.setPopupEventId(eventId);\n      // Keep track of timeout promise to cancel it on promise resolution before\n      // it times out.\n      self.popupTimeoutPromise_ =\n          self.authEventManager_.startPopupTimeout(\n              self, mode, /** @type {!Window} */ (popupWin), eventId);\n    });\n  }).then(function(result) {\n    // On resolution, close popup if still opened and pass result through.\n    if (popupWin) {\n      fireauth.util.closeWindow(popupWin);\n    }\n    if (result) {\n      return fireauth.object.makeReadonlyCopy(result);\n    }\n    return null;\n  }).thenCatch(function(error) {\n    if (popupWin) {\n      fireauth.util.closeWindow(popupWin);\n    }\n    throw error;\n  });\n  // Register this pending promise. This will also check for user invalidation.\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(\n          p,\n          // Skip invalidation check as reauthentication could revalidate a\n          // user.\n          isReauthOperation));\n};\n\n\n/**\n * Links to Auth provider via redirect.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.linkWithRedirect = function(provider) {\n  var mode = fireauth.AuthEvent.Type.LINK_VIA_REDIRECT;\n  var self = this;\n  // Additional check to return to fail when the provider is already linked.\n  var additionalCheck = function() {\n    return self.checkIfAlreadyLinked_(provider['providerId']);\n  };\n  return this.runOperationWithRedirect_(mode, provider, additionalCheck, false);\n};\n\n\n/**\n * Reauthenticates to Auth provider via redirect.\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.reauthenticateWithRedirect = function(provider) {\n  // No additional check needed.\n  var additionalCheck = function() {\n    return goog.Promise.resolve();\n  };\n  return this.runOperationWithRedirect_(\n      fireauth.AuthEvent.Type.REAUTH_VIA_REDIRECT,\n      provider,\n      additionalCheck,\n      // Do not update token and skip session invalidation check.\n      true);\n};\n\n\n\n/**\n * Runs a specific OAuth operation using the Auth provider via redirect.\n * @param {!fireauth.AuthEvent.Type} mode The mode of operation (link or\n *     reauth).\n * @param {!fireauth.AuthProvider} provider The Auth provider to sign in with.\n * @param {!function():!goog.Promise} additionalCheck The additional check to\n *     run before proceeding with the redirect processing.\n * @param {boolean} isReauthOperation whether this is a reauth operation or not.\n * @return {!goog.Promise<void>}\n * @private\n */\nfireauth.AuthUser.prototype.runOperationWithRedirect_ =\n    function(mode, provider, additionalCheck, isReauthOperation) {\n  // Check if popup and redirect are supported in this environment.\n  if (!fireauth.util.isPopupRedirectSupported()) {\n    return goog.Promise.reject(new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));\n  }\n  // Quickly throw user invalidation error if already invalidated.\n  if (this.userInvalidatedError_ &&\n      // Skip invalidation check as reauthentication could revalidate a user.\n      !isReauthOperation) {\n    return goog.Promise.reject(this.userInvalidatedError_);\n  }\n  var self = this;\n  var errorThrown = null;\n  // There could multiple users at the same time and multiple users could have\n  // the same UID. So try to ensure event ID uniqueness.\n  var eventId = this.generateEventId_();\n  var p = additionalCheck().then(function() {\n    // Auth event manager must be available for account linking or\n    // reauthentication to be possible.\n    self.getAuthEventManager();\n    if (!isReauthOperation) {\n      // Some operations like reauthenticate do not require this.\n      return self.getIdToken().then(function(idToken) {});\n    }\n  }).then(function() {\n    // Process redirect operation.\n    self.setRedirectEventId(eventId);\n    // Before redirecting save the event ID.\n    // It is important that the user redirect event ID is updated in storage\n    // before redirecting.\n    return self.notifyStateChangeListeners_();\n  }).then(function(user) {\n    if (self.redirectStorageManager_) {\n      // Save the user before redirecting in case it is not current so that it\n      // can be retrieved after reloading for linking or reauthentication to\n      // succeed.\n      return self.redirectStorageManager_.setRedirectUser(self);\n    }\n    return user;\n  }).then(function(user) {\n    // Complete the redirect operation.\n    return self.authEventManager_.processRedirect(mode, provider, eventId);\n  }).thenCatch(function(error) {\n    // Catch error if any is generated.\n    errorThrown = error;\n    if (self.redirectStorageManager_) {\n      // If an error is detected, delete the redirected user from storage.\n      return self.redirectStorageManager_.removeRedirectUser();\n    }\n    // No storage manager, just throw error.\n    throw errorThrown;\n  }).then(function() {\n    // Rethrow the error.\n    if (errorThrown) {\n      throw errorThrown;\n    }\n  });\n  // Register this pending promise. This will also check for user invalidation.\n  return /** @type {!goog.Promise<void>} */ (this.registerPendingPromise_(\n      p,\n      // Skip invalidation check as reauthentication could revalidate a user.\n      isReauthOperation));\n};\n\n\n/**\n * @return {!fireauth.AuthEventManager} The user's Auth event manager.\n */\nfireauth.AuthUser.prototype.getAuthEventManager = function() {\n  // Either return the manager instance if available, otherwise throw an error.\n  if (this.authEventManager_ && this.popupRedirectEnabled_) {\n    return this.authEventManager_;\n  } else if (this.authEventManager_ && !this.popupRedirectEnabled_) {\n    // This should not happen as Auth will enable a user after it is created.\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);\n  }\n  throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_AUTH_DOMAIN);\n};\n\n\n/**\n * Finishes the popup and redirect account linking operations.\n * @param {string} requestUri The callback URL with the OAuth response.\n * @param {string} sessionId The session ID used to generate the authUri.\n * @param {?string=} opt_postBody The optional POST body content.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthUser.prototype.finishPopupAndRedirectLink =\n    function(requestUri, sessionId, opt_postBody) {\n  var self = this;\n  // Now that popup has responded, delete popup timeout promise.\n  if (this.popupTimeoutPromise_) {\n    this.popupTimeoutPromise_.cancel();\n    this.popupTimeoutPromise_ = null;\n  }\n  var userCredential = null;\n  // This routine could be run before init state, make sure it waits for that to\n  // complete otherwise this would fail as user not loaded from storage yet.\n  var p = this.getIdToken()\n      .then(function(idToken) {\n        var request = {\n          'requestUri': requestUri,\n          'postBody': opt_postBody,\n          'sessionId': sessionId,\n          'idToken': idToken\n        };\n        // This operation should fail if new ID token differs from old one.\n        // So this can be treate as a profile update operation.\n        return self.rpcHandler_.verifyAssertionForLinking(request);\n      })\n      .then(function(response) {\n        // Get user credential.\n        userCredential = self.getUserCredential_(\n            response, fireauth.constants.OperationType.LINK);\n        // Finalizes the linking process.\n        return self.finalizeLinking_(response);\n      })\n      .then(function(user) {\n        // Return the user credential response.\n        return userCredential;\n      });\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(p));\n};\n\n\n/**\n * Finishes the popup and redirect account reauthentication operations.\n * @param {string} requestUri The callback URL with the OAuth response.\n * @param {string} sessionId The session ID used to generate the authUri.\n * @param {?string=} opt_postBody The optional POST body content.\n * @return {!goog.Promise<!fireauth.AuthEventManager.Result>}\n */\nfireauth.AuthUser.prototype.finishPopupAndRedirectReauth =\n    function(requestUri, sessionId, opt_postBody) {\n  var self = this;\n  // Now that popup has responded, delete popup timeout promise.\n  if (this.popupTimeoutPromise_) {\n    this.popupTimeoutPromise_.cancel();\n    this.popupTimeoutPromise_ = null;\n  }\n  var userCredential = null;\n  // This routine could be run before init state, make sure it waits for that to\n  // complete otherwise this would fail as user not loaded from storage yet.\n  var p = goog.Promise.resolve()\n      .then(function() {\n        var request = {\n          'requestUri': requestUri,\n          'sessionId': sessionId,\n          'postBody': opt_postBody\n        };\n        // Finish sign in by calling verifyAssertionForExisting and then\n        // matching the returned ID token's UID with the current user's.\n        return fireauth.AuthCredential.verifyTokenResponseUid(\n            self.rpcHandler_.verifyAssertionForExisting(request),\n            self['uid']);\n      }).then(function(response) {\n        // Get credential from response if available.\n        // Get user credential.\n        userCredential = self.getUserCredential_(\n            response, fireauth.constants.OperationType.REAUTHENTICATE);\n        // If the credential is valid and matches the current user ID, then\n        // update the tokens accordingly.\n        self.updateTokensIfPresent_(response);\n        // This could potentially validate an invalidated user. This happens in\n        // the case a password reset was applied. The refresh token is expired.\n        // Reauthentication should revalidate the user.\n        // User would remain non current if already signed out, but should be\n        // enabled again.\n        self.userInvalidatedError_ = null;\n        return self.reload();\n      })\n      .then(function() {\n        // Return the user credential response.\n        return userCredential;\n      });\n  return /** @type {!goog.Promise<!fireauth.AuthEventManager.Result>} */ (\n      this.registerPendingPromise_(\n          p,\n          // Skip invalidation check as reauthentication could revalidate a\n          // user.\n          true));\n};\n\n\n/**\n * Sends the email verification email to the email in the user's account.\n * @param {?Object=} opt_actionCodeSettings The optional action code settings\n *     object.\n * @return {!goog.Promise<void>}\n */\nfireauth.AuthUser.prototype.sendEmailVerification =\n    function(opt_actionCodeSettings) {\n  var self = this;\n  var idToken = null;\n  // Register this pending promise. This will also check for user invalidation.\n  return this.registerPendingPromise_(\n      // Wrap in promise as ActionCodeSettings constructor could throw a\n      // synchronous error if invalid arguments are specified.\n      this.getIdToken().then(function(latestIdToken) {\n        idToken = latestIdToken;\n        if (typeof opt_actionCodeSettings !== 'undefined' &&\n            // Ignore empty objects.\n            !goog.object.isEmpty(opt_actionCodeSettings)) {\n          return new fireauth.ActionCodeSettings(\n              /** @type {!Object} */ (opt_actionCodeSettings)).buildRequest();\n        }\n        return {};\n      })\n      .then(function(additionalRequestData) {\n        return self.rpcHandler_.sendEmailVerification(\n            /** @type {string} */ (idToken), additionalRequestData);\n      })\n      .then(function(email) {\n        if (self['email'] != email) {\n          // Our local copy does not have an email. If the email changed,\n          // reload the user.\n          return self.reload();\n        }\n      })\n      .then(function() {\n        // Return nothing.\n      }));\n};\n\n\n/**\n * Destroys the user object and makes further operations invalid. Sensitive\n * fields (refreshToken) are also cleared.\n */\nfireauth.AuthUser.prototype.destroy = function() {\n  // Cancel all pending promises.\n  for (var i = 0; i < this.pendingPromises_.length; i++) {\n    this.pendingPromises_[i].cancel(fireauth.authenum.Error.MODULE_DESTROYED);\n  }\n  // Stop listening to language code changes.\n  this.setLanguageCodeChangeDispatcher(null);\n  // Stop listening to framework changes.\n  this.setFrameworkChangeDispatcher(null);\n  // Empty pending promises array.\n  this.pendingPromises_ = [];\n  this.destroyed_ = true;\n  // Stop proactive refresh if running.\n  this.stopProactiveRefresh();\n  fireauth.object.setReadonlyProperty(this, 'refreshToken', null);\n  // Make sure the destroyed user is unsubscribed from Auth event handling.\n  if (this.authEventManager_) {\n    this.authEventManager_.unsubscribe(this);\n  }\n};\n\n\n/**\n * Takes in a pending promise, saves it and adds a clean up callback which\n * forgets the pending promise after it is fulfilled and echoes the promise\n * back. If in the process, a user invalidation error is detected, caches the\n * error so next time a call is made on the user, the operation will fail with\n * the cached error.\n * @param {!goog.Promise<*, *>|!goog.Promise<void>} p The pending promise.\n * @param {boolean=} opt_skipInvalidationCheck Whether to skip invalidation\n *     check.\n * @return {!goog.Promise<*, *>|!goog.Promise<void>}\n * @private\n */\nfireauth.AuthUser.prototype.registerPendingPromise_ =\n    function(p, opt_skipInvalidationCheck) {\n  var self = this;\n  // Check if user invalidation occurs.\n  var processedP = this.checkIfInvalidated_(p, opt_skipInvalidationCheck);\n  // Save created promise in pending list.\n  this.pendingPromises_.push(processedP);\n  processedP.thenAlways(function() {\n    // When fulfilled, remove from pending list.\n    goog.array.remove(self.pendingPromises_, processedP);\n  });\n  // Return the promise.\n  return processedP;\n};\n\n\n/**\n * Check if user invalidation occurs. If so, it caches the error so it can be\n * thrown immediately the next time an operation is run on the user.\n * @param {!goog.Promise<*, *>|!goog.Promise<void>} p The pending promise.\n * @param {boolean=} opt_skipInvalidationCheck Whether to skip invalidation\n *     check.\n * @return {!goog.Promise<*, *>|!goog.Promise<void>}\n * @private\n */\nfireauth.AuthUser.prototype.checkIfInvalidated_ =\n    function(p, opt_skipInvalidationCheck) {\n  var self = this;\n  // Already invalidated, reject with token expired error.\n  // Unless invalidation check is to be skipped.\n  if (this.userInvalidatedError_ && !opt_skipInvalidationCheck) {\n    // Cancel pending promise.\n    p.cancel();\n    // Reject with cached error.\n    return goog.Promise.reject(this.userInvalidatedError_);\n  }\n  return p.thenCatch(function(error) {\n    // Session invalidated.\n    if (fireauth.AuthUser.isUserInvalidated_(error)) {\n      // Notify listeners of invalidated session.\n      if (!self.userInvalidatedError_) {\n        self.notifyUserInvalidatedListeners_();\n      }\n      // Cache the invalidation error.\n      self.userInvalidatedError_ = /** @type {!fireauth.AuthError} */ (error);\n    }\n    // Rethrow the error.\n    throw error;\n  });\n};\n\n\n/**\n * @return {!Object} The object representation of the user instance.\n * @override\n */\nfireauth.AuthUser.prototype.toJSON = function() {\n  // Return the plain object representation in case JSON.stringify is called on\n  // a user instance.\n  return this.toPlainObject();\n};\n\n\n/**\n * @return {!Object} The object representation of the user instance.\n */\nfireauth.AuthUser.prototype.toPlainObject = function() {\n  var obj = {\n    'uid': this['uid'],\n    'displayName': this['displayName'],\n    'photoURL': this['photoURL'],\n    'email': this['email'],\n    'emailVerified': this['emailVerified'],\n    'phoneNumber': this['phoneNumber'],\n    'isAnonymous': this['isAnonymous'],\n    'providerData': [],\n    'apiKey': this.apiKey_,\n    'appName': this.appName_,\n    'authDomain': this.authDomain_,\n    'stsTokenManager': this.stsTokenManager_.toPlainObject(),\n    // Redirect event ID must be maintained in case there is a pending redirect\n    // event.\n    'redirectEventId': this.getRedirectEventId()\n  };\n  // Extend user plain object with metadata object.\n  if (this['metadata']) {\n    goog.object.extend(obj, this['metadata'].toPlainObject());\n  }\n  goog.array.forEach(this['providerData'], function(userInfo) {\n    obj['providerData'].push(fireauth.object.makeWritableCopy(userInfo));\n  });\n  return obj;\n};\n\n\n/**\n * Converts a plain user object to {@code fireauth.AuthUser}.\n * @param {!Object} user The object representation of the user instance.\n * @return {?fireauth.AuthUser} The Firebase user object corresponding to\n *     object.\n */\nfireauth.AuthUser.fromPlainObject = function(user) {\n  if (!user['apiKey']) {\n    return null;\n  }\n  var options = {\n    'apiKey': user['apiKey'],\n    'authDomain': user['authDomain'],\n    'appName': user['appName']\n  };\n  // Convert to server response format. Constructor does not take\n  // stsTokenManager toPlainObject as that format is different than the return\n  // server response which is always used to initialize a user instance. It is\n  // also difficult to have toPlainObject equal server response due to expiresIn\n  // field in server response. toPlainObject will return an expiration time\n  // instead.\n  var stsTokenManagerResponse = {};\n  if (user['stsTokenManager'] &&\n      user['stsTokenManager']['accessToken'] &&\n      user['stsTokenManager']['expirationTime']) {\n    stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.ID_TOKEN] =\n        user['stsTokenManager']['accessToken'];\n    // Refresh token could be expired.\n    stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.REFRESH_TOKEN] =\n        user['stsTokenManager']['refreshToken'] || null;\n    stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.EXPIRES_IN] =\n        (user['stsTokenManager']['expirationTime'] - goog.now()) / 1000;\n  } else {\n    // Token response is a required field.\n    return null;\n  }\n  var firebaseUser = new fireauth.AuthUser(options,\n      stsTokenManagerResponse,\n      /** @type {!fireauth.AuthUser.AccountInfo} */ (user));\n  if (user['providerData']) {\n    goog.array.forEach(user['providerData'], function(userInfo) {\n      if (userInfo) {\n        firebaseUser.addProviderData(/** @type {!fireauth.AuthUserInfo} */ (\n            fireauth.object.makeReadonlyCopy(userInfo)));\n      }\n    });\n  }\n  // Redirect event ID must be restored to complete any pending link with\n  // redirect operation owned by this user.\n  if (user['redirectEventId']) {\n    firebaseUser.setRedirectEventId(user['redirectEventId']);\n  }\n  return firebaseUser;\n};\n\n\n\n/**\n * Factory method for initializing a Firebase user object and populating its\n * user info. This is the recommended way for initializing a user externally.\n * On sign in/up operation, the server returns a token response. The response is\n * all that is needed to initialize this user.\n * @param {!Object} appOptions The application options.\n * @param {!Object} stsTokenResponse The server STS token response.\n * @param {?fireauth.storage.RedirectUserManager=}\n *     opt_redirectStorageManager The utility used to store and delete a user on\n *     link with redirect.\n * @param {?Array<string>=} opt_frameworks The list of frameworks to log on the\n *     user on initialization.\n * @return {!goog.Promise<!fireauth.AuthUser>}\n */\nfireauth.AuthUser.initializeFromIdTokenResponse = function(appOptions,\n    stsTokenResponse, opt_redirectStorageManager, opt_frameworks) {\n  // Initialize the Firebase Auth user.\n  var user = new fireauth.AuthUser(\n      appOptions, stsTokenResponse);\n  // If redirect storage manager provided, set it.\n  if (opt_redirectStorageManager) {\n    user.setRedirectStorageManager(opt_redirectStorageManager);\n  }\n  // If frameworks provided, set it.\n  if (opt_frameworks) {\n    user.setFramework(opt_frameworks);\n  }\n  // Updates the user info and data and resolves with a user instance.\n  return user.reload().then(function() {\n    return user;\n  });\n};\n\n\n/**\n * Returns an AuthUser copy of the provided user using the provided parameters\n * without making any network request.\n * @param {!fireauth.AuthUser} user The user to be copied.\n * @param {?Object=} opt_appOptions The application options.\n * @param {?fireauth.storage.RedirectUserManager=}\n *     opt_redirectStorageManager The utility used to store and delete a user on\n *     link with redirect.\n * @param {?Array<string>=} opt_frameworks The list of frameworks to log on the\n *     user on initialization.\n * @return {!fireauth.AuthUser}\n */\nfireauth.AuthUser.copyUser = function(user, opt_appOptions,\n    opt_redirectStorageManager, opt_frameworks) {\n  var appOptions = opt_appOptions || {\n    'apiKey': user.apiKey_,\n    'authDomain': user.authDomain_,\n    'appName': user.appName_\n  };\n  var newUser = new fireauth.AuthUser(\n      appOptions, user.getStsTokenManager().toServerResponse());\n  // If redirect storage manager provided, set it.\n  if (opt_redirectStorageManager) {\n    newUser.setRedirectStorageManager(opt_redirectStorageManager);\n  }\n  // If frameworks provided, set it.\n  if (opt_frameworks) {\n    newUser.setFramework(opt_frameworks);\n  }\n  // Copy remaining properties.\n  newUser.copy(user);\n  return newUser;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility class to retrieve and cache STS token.\n */\ngoog.provide('fireauth.StsTokenManager');\ngoog.provide('fireauth.StsTokenManager.Response');\ngoog.provide('fireauth.StsTokenManager.ResponseData');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.RpcHandler');\ngoog.require('fireauth.authenum.Error');\ngoog.require('goog.Promise');\ngoog.require('goog.asserts');\n\n\n\n/**\n * Creates STS token manager.\n *\n * @param {!fireauth.RpcHandler} rpcHandler Handler for RPC requests.\n * @constructor\n */\nfireauth.StsTokenManager = function(rpcHandler) {\n  /**\n   * @const @private {!fireauth.RpcHandler} The RPC handler used to request STS\n   *     tokens.\n   */\n  this.rpcHandler_ = rpcHandler;\n  /** @private {?string} The STS refresh token. */\n  this.refreshToken_ = null;\n  /** @private {?string} The STS ID token. */\n  this.accessToken_ = null;\n  /** @private {number} The STS expiration timestamp. */\n  this.expirationTime_ = 0;\n};\n\n\n/**\n * @return {!Object} The plain object representation of the STS token manager.\n */\nfireauth.StsTokenManager.prototype.toPlainObject = function() {\n  return {\n    'apiKey': this.rpcHandler_.getApiKey(),\n    'refreshToken': this.refreshToken_,\n    'accessToken': this.accessToken_,\n    'expirationTime': this.expirationTime_\n  };\n};\n\n\n/**\n * @param {!fireauth.RpcHandler} rpcHandler The RPC handler for the token\n *     manager.\n * @param {?Object} obj The plain object whose STS token manager instance is to\n *     be returned.\n * @return {?fireauth.StsTokenManager} The STS token manager instance from the\n *     plain object provided using the RPC handler provided.\n */\nfireauth.StsTokenManager.fromPlainObject = function(rpcHandler, obj) {\n  var stsTokenManager = null;\n  if (obj && obj['apiKey']) {\n    // These should be always equals and must be enforced in internal use.\n    goog.asserts.assert(obj['apiKey'] == rpcHandler.getApiKey());\n    stsTokenManager = new fireauth.StsTokenManager(rpcHandler);\n    stsTokenManager.setRefreshToken(obj['refreshToken']);\n    stsTokenManager.setAccessToken(\n        obj['accessToken'], obj['expirationTime'] || 0);\n  }\n  return stsTokenManager;\n};\n\n\n/**\n * @typedef {{\n *   accessToken: (?string),\n *   expirationTime: (number),\n *   refreshToken: (?string)\n * }}\n */\nfireauth.StsTokenManager.Response;\n\n\n/**\n * @typedef {{\n *   access_token: (?string|undefined),\n *   expires_in: (number|undefined),\n *   refresh_token: (?string|undefined)\n * }}\n */\nfireauth.StsTokenManager.ResponseData;\n\n\n/**\n * @param {?string} refreshToken The STS refresh token.\n */\nfireauth.StsTokenManager.prototype.setRefreshToken = function(refreshToken) {\n  this.refreshToken_ = refreshToken;\n};\n\n\n/**\n * @param {?string} accessToken The STS access token.\n * @param {number} expirationTime  The STS token expiration time.\n */\nfireauth.StsTokenManager.prototype.setAccessToken = function(\n    accessToken, expirationTime) {\n  this.accessToken_ = accessToken;\n  this.expirationTime_ = expirationTime;\n};\n\n\n/**\n * @return {?string} The refresh token.\n */\nfireauth.StsTokenManager.prototype.getRefreshToken = function() {\n  return this.refreshToken_;\n};\n\n\n/**\n * @return {number} The STS access token expiration time.\n */\nfireauth.StsTokenManager.prototype.getExpirationTime = function() {\n  return this.expirationTime_;\n};\n\n\n/**\n * The number of milliseconds before the official expiration time of a token\n * to refresh that token, to provide a buffer for RPCs to complete.\n * @const {number}\n * @private\n */\nfireauth.StsTokenManager.TOKEN_REFRESH_BUFFER_ = 30 * 1000;\n\n\n/**\n * @return {boolean} Whether the STS access token is expired or not.\n * @private\n */\nfireauth.StsTokenManager.prototype.isExpired_ = function() {\n  return goog.now() >\n      this.expirationTime_ - fireauth.StsTokenManager.TOKEN_REFRESH_BUFFER_;\n};\n\n\n/**\n * Parses a response from the server that contains STS tokens (e.g. from\n * VerifyAssertion or VerifyPassword) and save the access token, refresh token,\n * and expiration time.\n * @param {!Object} response The backend response.\n * @return {!string} The STS access token.\n */\nfireauth.StsTokenManager.prototype.parseServerResponse = function(response) {\n  var idToken = response[fireauth.RpcHandler.AuthServerField.ID_TOKEN];\n  var refreshToken =\n      response[fireauth.RpcHandler.AuthServerField.REFRESH_TOKEN];\n  var expirationTime = fireauth.StsTokenManager.calcOffsetTimestamp_(\n      response[fireauth.RpcHandler.AuthServerField.EXPIRES_IN]);\n  this.setAccessToken(idToken, expirationTime);\n  this.setRefreshToken(refreshToken);\n  return idToken;\n};\n\n\n/**\n * Converts STS token manager instance to server response object.\n * @return {!Object}\n */\nfireauth.StsTokenManager.prototype.toServerResponse = function() {\n  var stsTokenManagerResponse = {};\n  stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.ID_TOKEN] =\n      this.accessToken_;\n  // Refresh token could be expired.\n  stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.REFRESH_TOKEN] =\n      this.getRefreshToken();\n  stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.EXPIRES_IN] =\n      (this.getExpirationTime() - goog.now()) / 1000;\n  return stsTokenManagerResponse;\n};\n\n\n/**\n * Copies IdToken, refreshToken and expirationTime from tokenManagerToCopy.\n * @param {!fireauth.StsTokenManager} tokenManagerToCopy\n */\nfireauth.StsTokenManager.prototype.copy = function(tokenManagerToCopy) {\n  this.accessToken_ = tokenManagerToCopy.accessToken_;\n  this.refreshToken_ = tokenManagerToCopy.refreshToken_;\n  this.expirationTime_ = tokenManagerToCopy.expirationTime_;\n};\n\n\n/**\n * @param {number|string} offset The offset to add to the current time, in\n *     seconds.\n * @return {number} The timestamp corresponding to the current time plus offset.\n * @private\n */\nfireauth.StsTokenManager.calcOffsetTimestamp_ = function(offset) {\n  return goog.now() + parseInt(offset, 10) * 1000;\n};\n\n\n/**\n * Exchanges the current refresh token with an access and refresh token.\n * @return {!goog.Promise<?fireauth.StsTokenManager.Response>}\n * @private\n */\nfireauth.StsTokenManager.prototype.exchangeRefreshToken_ = function() {\n  var data = {\n    'grant_type': 'refresh_token',\n    'refresh_token': this.refreshToken_\n  };\n  return this.requestToken_(data);\n};\n\n\n/**\n * Sends a request to STS token endpoint for an access/refresh token.\n * @param {!Object} data The request data to send to STS token endpoint.\n * @return {!goog.Promise<?fireauth.StsTokenManager.Response>}\n * @private\n */\nfireauth.StsTokenManager.prototype.requestToken_ = function(data) {\n  var self = this;\n  // Send RPC request to STS token endpoint.\n  return this.rpcHandler_.requestStsToken(data).then(function(resp) {\n    var response = /** @type {!fireauth.StsTokenManager.ResponseData} */ (resp);\n    self.accessToken_ =\n        response[fireauth.RpcHandler.StsServerField.ACCESS_TOKEN];\n    // Update expiration time.\n    self.expirationTime_ = fireauth.StsTokenManager.calcOffsetTimestamp_(\n        response[fireauth.RpcHandler.StsServerField.EXPIRES_IN]);\n    self.refreshToken_ =\n        response[fireauth.RpcHandler.StsServerField.REFRESH_TOKEN];\n    return /** @type {fireauth.StsTokenManager.Response} */ ({\n      'accessToken': self.accessToken_,\n      'expirationTime': self.expirationTime_,\n      'refreshToken': self.refreshToken_\n    });\n  }).thenCatch(function(error) {\n    // Refresh token expired or user deleted. In this case, reset refresh token\n    // to prevent sending the request again to the STS server unless\n    // the token is manually updated, perhaps via successful reauthentication.\n    if (error['code'] == 'auth/user-token-expired') {\n      self.refreshToken_ = null;\n    }\n    throw error;\n  });\n};\n\n\n/** @return {boolean} Whether the refresh token is expired. */\nfireauth.StsTokenManager.prototype.isRefreshTokenExpired = function() {\n  return !!(this.accessToken_ && !this.refreshToken_);\n};\n\n\n/**\n * Returns an STS token. If the cached one is unexpired it is directly returned.\n * Otherwise the existing ID token or refresh token is exchanged for a new one.\n * If there is no user signed in, returns null.\n *\n * @param {boolean=} opt_forceRefresh Whether to force refresh token exchange.\n * @return {!goog.Promise<?fireauth.StsTokenManager.Response>}\n */\nfireauth.StsTokenManager.prototype.getToken = function(opt_forceRefresh) {\n  var self = this;\n  var forceRefresh = !!opt_forceRefresh;\n  // Refresh token is expired.\n  if (this.isRefreshTokenExpired()) {\n    return goog.Promise.reject(\n        new fireauth.AuthError(fireauth.authenum.Error.TOKEN_EXPIRED));\n  }\n  if (!forceRefresh && this.accessToken_ && !this.isExpired_()) {\n    // Cached STS access token not expired, return it.\n    return /** @type {!goog.Promise} */ (goog.Promise.resolve({\n      'accessToken': self.accessToken_,\n      'expirationTime': self.expirationTime_,\n      'refreshToken': self.refreshToken_\n    }));\n  } else if (this.refreshToken_) {\n    // Expired but refresh token available, exchange refresh token for STS\n    // token.\n    return this.exchangeRefreshToken_();\n  } else {\n    // No token, return null token.\n    return goog.Promise.resolve(\n        /** @type {?fireauth.StsTokenManager.Response} */ (null));\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the fireauth.storage.RedirectUserManager class which\n * provides utilities to store, retrieve and delete an Auth user during a\n * redirect operation.\n */\n\ngoog.provide('fireauth.storage.RedirectUserManager');\n\ngoog.require('fireauth.AuthUser');\ngoog.require('fireauth.authStorage');\n\n\n/**\n * Defines the Auth redirect user storage manager. It provides methods\n * to store, load and delete a user going through a link with redirect\n * operation.\n * @param {string} appId The Auth state's application ID.\n * @param {?fireauth.authStorage.Manager=} opt_manager The underlying storage\n *     manager to use. If none is provided, the default global instance is used.\n * @constructor @struct @final\n */\nfireauth.storage.RedirectUserManager = function(appId, opt_manager) {\n  /** @const @private{string} appId The Auth state's application ID. */\n  this.appId_ = appId;\n  /**\n   * @const @private{!fireauth.authStorage.Manager} The underlying storage\n   *     manager.\n   */\n  this.manager_ = opt_manager || fireauth.authStorage.Manager.getInstance();\n};\n\n\n/**\n * @const @private{!fireauth.authStorage.Key} The Auth redirect user storage\n *     identifier.\n */\nfireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_ = {\n  name: 'redirectUser',\n  persistent: fireauth.authStorage.Persistence.SESSION\n};\n\n\n/**\n * Stores the user being redirected for the provided application ID.\n * @param {!fireauth.AuthUser} redirectUser The user being redirected.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.RedirectUserManager.prototype.setRedirectUser =\n    function(redirectUser) {\n  return this.manager_.set(\n      fireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_,\n      redirectUser.toPlainObject(),\n      this.appId_);\n};\n\n\n/**\n * Removes the stored redirected user for provided app ID.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.RedirectUserManager.prototype.removeRedirectUser =\n    function() {\n  return this.manager_.remove(\n      fireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_, this.appId_);\n};\n\n\n/**\n * @param {?string=} opt_authDomain The optional Auth domain to override if\n *     provided.\n * @return {!goog.Promise<?fireauth.AuthUser>} A promise that resolves with\n *     the stored redirected user for the provided app ID.\n */\nfireauth.storage.RedirectUserManager.prototype.getRedirectUser =\n    function(opt_authDomain) {\n  return this.manager_.get(\n      fireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_, this.appId_)\n      .then(function(response) {\n        // If potential user saved, override Auth domain if authDomain is\n        // provided.\n        if (response && opt_authDomain) {\n          response['authDomain'] = opt_authDomain;\n        }\n        return fireauth.AuthUser.fromPlainObject(response || {});\n      });\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the fireauth.storage.UserManager class which provides\n * utilities to retrieve, store and delete the currently logged in user and to\n * listen to external authentication changes for the same app.\n * With the ability to modify Auth state persistence. The behavior is as\n * follows:\n * Common cases:\n * <ul>\n * <li>Initially, local and session storage will be checked and the state will\n *     be loaded from there without changing it unless the developer calls\n *     setPersistence explicitly. The requirement is that at any time, Auth\n *     state can be saved using one type only of persistence and never more than\n *     one.</li>\n * <li>If the developer tries to sign in with no persistence specified, the\n *     default setting will be used (local in a browser).</li>\n * <li>If the user is not signed in and persistence is set, any future sign-in\n *     attempt will use that type of persistence.</li>\n * <li>If the user is signed in and the developer then switches persistence,\n *     that existing signed in user will change persistence to the new one. All\n *     future sign-in attempts will use that same persistence.</li>\n * <li>When signInWithRedirect is called, the current persistence type is passed\n *     along with that request and on redirect back to app will pass that type\n *     to determine how that state is saved (overriding the default). If the\n *     persistence is explicitly specified on that page, it will change that\n *     redirected Auth state persistence. This is the only time the persistence\n *     is passed from one page to another.\n *     So internally, on redirect, the redirect state is retrieved and then we\n *     check: If the persistence was explicitly provided, we override the\n *     previous type and save the Auth state using that. If no persistence was\n *     explicitly provided, we use the previous persistence type that was passed\n *     in the redirect response.</li>\n * </ul>\n * Behavior across tabs:\n * <ul>\n * <li>User can sign in using session storage on multiple tabs. Each tab cannot\n *     see the state of the other tab.</li>\n * <li>Any attempt to sign in using local storage will be detected and\n *     synchronized on all tabs. If the user was previously signed in on a\n *     specific tab using session storage, that state will be cleared.</li>\n * <li>If the user was previously signed in using local storage and then signs\n *     in using session storage, the user will be signed in on the current tab\n *     only and signed out on all other tabs.</li>\n * <li>Similar logic is applied to the ‘none’ state. In one tab, switching to\n *     ‘none’ state will delete any previously saved state in ‘local’\n *     persistence in other tabs.</li>\n * </ul>\n */\n\ngoog.provide('fireauth.storage.UserManager');\n\ngoog.require('fireauth.AuthUser');\ngoog.require('fireauth.authStorage');\ngoog.require('goog.Promise');\n\n\n/**\n * Defines the Auth user storage manager. It provides methods to\n * store, load and delete an authenticated current user. It also provides\n * methods to listen to external user changes (updates, sign in, sign out, etc.)\n * @param {string} appId The Auth state's application ID.\n * @param {?fireauth.authStorage.Manager=} opt_manager The underlying storage\n *     manager to use. If none is provided, the default global instance is used.\n * @constructor @struct @final\n */\nfireauth.storage.UserManager = function(appId, opt_manager) {\n  /** @const @private{string} appId The Auth state's application ID. */\n  this.appId_ = appId;\n  /**\n   * @const @private{!fireauth.authStorage.Manager} The underlying storage\n   *     manager.\n   */\n  this.manager_ = opt_manager || fireauth.authStorage.Manager.getInstance();\n  /**\n   * @private {?fireauth.authStorage.Key} The current Auth user storage\n   *     identifier.\n   */\n  this.currentAuthUserKey_ = null;\n  /**\n   * @private {!goog.Promise} Storage operation serializer promise. This will\n   *     initialize the current persistence used and clean up any duplicate\n   *     states or temporary values (persistence for pending redirect).\n   *     Afterwards this is used to queue storage requests to make sure\n   *     storage operations are always synchronized and read/write events are\n   *     processed on the same storage.\n   */\n  this.onReady_ = this.initialize_();\n  // This internal listener will always run before the external ones.\n  // This is needed to queue processing of this first before any getCurrentUser\n  // is called from external listeners.\n  this.manager_.addListener(\n      fireauth.storage.UserManager.getAuthUserKey_(\n          fireauth.authStorage.Persistence.LOCAL),\n      this.appId_,\n      goog.bind(this.switchToLocalOnExternalEvent_, this));\n};\n\n\n/**\n * Switches to local storage on external storage event. This will happen when\n * state is specified as local in an external tab while it is none or session\n * in the current one. If a user signs in in an external tab, the current window\n * should detect this, clear existing storage and switch to local storage.\n * @private\n */\nfireauth.storage.UserManager.prototype.switchToLocalOnExternalEvent_ =\n    function() {\n  var self = this;\n  var localKey = fireauth.storage.UserManager.getAuthUserKey_(\n      fireauth.authStorage.Persistence.LOCAL);\n  // Wait for any pending operation to finish first.\n  // Block next read/write operation until persistence is transitioned to\n  // local.\n  this.waitForReady_(function() {\n    return goog.Promise.resolve().then(function() {\n      // If current persistence is not already local.\n      if (self.currentAuthUserKey_ &&\n          self.currentAuthUserKey_.persistent !=\n          fireauth.authStorage.Persistence.LOCAL) {\n        // Check if new current user is available in local storage.\n        return self.manager_.get(localKey, self.appId_);\n      }\n      return null;\n    }).then(function(response) {\n      // Sign in on an external tab.\n      if (response) {\n        // Remove any existing non-local user.\n        return self.removeAllExcept_(\n            fireauth.authStorage.Persistence.LOCAL).then(function() {\n              // Set persistence to local.\n              self.currentAuthUserKey_ = localKey;\n            });\n      }\n    });\n  });\n};\n\n\n/**\n * Removes all states stored in all supported persistence types excluding the\n * specified one.\n * @param {?fireauth.authStorage.Persistence} persistence The type of storage\n *     persistence to switch to.\n * @return {!goog.Promise} The promise that resolves when all stored values are\n *     removed for types of storage excluding specified persistence. This helps\n *     ensure there is always one type of persistence at any time.\n * @private\n */\nfireauth.storage.UserManager.prototype.removeAllExcept_ =\n    function(persistence) {\n  var promises = [];\n  // Queue all promises to remove current user in any other persistence type.\n  for (var key in fireauth.authStorage.Persistence) {\n    // Skip specified persistence.\n    if (fireauth.authStorage.Persistence[key] !== persistence) {\n      var storageKey = fireauth.storage.UserManager.getAuthUserKey_(\n          fireauth.authStorage.Persistence[key]);\n      promises.push(this.manager_.remove(\n          /** @type {!fireauth.authStorage.Key} */ (storageKey),\n          this.appId_));\n    }\n  }\n  // Clear persistence key (only useful for initial load upon returning from a\n  // a redirect sign-in operation).\n  promises.push(this.manager_.remove(\n      fireauth.storage.UserManager.PERSISTENCE_KEY_,\n      this.appId_));\n  return goog.Promise.all(promises);\n};\n\n\n/**\n * Initializes the current persistence state. This will check the 3 supported\n * types. The first one that is found will be the current persistence. All\n * others will be cleared. If none is found we check PERSISTENCE_KEY_ which\n * when specified means that the operation is returning from a\n * signInWithRedirect call. This persistence will be applied.\n * Otherwise the default local persistence is used.\n * @return {!goog.Promise} A promise that resolves when the current persistence\n *     is resolved.\n * @private\n */\nfireauth.storage.UserManager.prototype.initialize_ = function() {\n  var self = this;\n  // Local key.\n  var localKey = fireauth.storage.UserManager.getAuthUserKey_(\n      fireauth.authStorage.Persistence.LOCAL);\n  // Session key.\n  var sessionKey = fireauth.storage.UserManager.getAuthUserKey_(\n      fireauth.authStorage.Persistence.SESSION);\n  // In memory key. This is unlikely to contain anything on load.\n  var inMemoryKey = fireauth.storage.UserManager.getAuthUserKey_(\n      fireauth.authStorage.Persistence.NONE);\n  // Migrate any old currentUser from localStorage to indexedDB.\n  // This keeps any user signed in without the need for reauthentication and\n  // minimizes risks of dangling Auth states.\n  return this.manager_.migrateFromLocalStorage(\n      localKey, this.appId_).then(function() {\n    // Check if state is stored in session storage.\n    return self.manager_.get(sessionKey, self.appId_);\n  }).then(function(response) {\n    if (response) {\n      // Session storage is being used.\n      return sessionKey;\n    } else {\n      // Session storage is empty. Check in memory storage.\n      return self.manager_.get(inMemoryKey, self.appId_)\n          .then(function(response) {\n            if (response) {\n              // In memory storage being used.\n              return inMemoryKey;\n            } else {\n              // Check local storage.\n              return self.manager_.get(localKey, self.appId_)\n                  .then(function(response) {\n                    if (response) {\n                      // Local storage being used.\n                      return localKey;\n                    } else {\n                      // Nothing found in any supported storage.\n                      // Check current user persistence in storage.\n                      return self.manager_.get(\n                          fireauth.storage.UserManager.PERSISTENCE_KEY_,\n                          self.appId_).then(function(persistence) {\n                            if (persistence) {\n                              // Sign in with redirect operation, apply this\n                              // persistence to any current user.\n                              return fireauth.storage.UserManager\n                                  .getAuthUserKey_(persistence);\n                            } else {\n                              // No persistence found, use the default.\n                              return localKey;\n                            }\n                          });\n                    }\n                  });\n            }\n          });\n    }\n  }).then(function(currentKey) {\n    // Set current key according to the persistence detected.\n    self.currentAuthUserKey_ = currentKey;\n    // Make sure only one state available. Clean up everything else.\n    return self.removeAllExcept_(currentKey.persistent);\n  }).thenCatch(function(error) {\n    // If an error occurs in the process and no current key detected, set to\n    // persistence value to default.\n    if (!self.currentAuthUserKey_) {\n      self.currentAuthUserKey_ = localKey;\n    }\n  });\n};\n\n\n/**\n * @const @private {string} The Auth current user storage identifier name.\n */\nfireauth.storage.UserManager.AUTH_USER_KEY_NAME_ = 'authUser';\n\n\n/**\n * @const @private{!fireauth.authStorage.Key} The Auth user storage persistence\n *     identifier. This is needed to remember the previous persistence state for\n *     sign-in with redirect.\n */\nfireauth.storage.UserManager.PERSISTENCE_KEY_ = {\n  name: 'persistence',\n  persistent: fireauth.authStorage.Persistence.SESSION\n};\n\n\n/**\n * Returns the Auth user key corresponding to the persistence type provided.\n * @param {!fireauth.authStorage.Persistence} persistence The key for the\n *     specified type of persistence.\n * @return {!fireauth.authStorage.Key} The corresponding Auth user storage\n *     identifier.\n * @private\n */\nfireauth.storage.UserManager.getAuthUserKey_ = function(persistence) {\n  return {\n    name: fireauth.storage.UserManager.AUTH_USER_KEY_NAME_,\n    persistent: persistence\n  };\n};\n\n\n/**\n * Sets the persistence to the specified type.\n * If an existing user already is in storage, it copies that value to the new\n * storage and clears all the others.\n * @param {!fireauth.authStorage.Persistence} persistence The type of storage\n *     persistence to switch to.\n * @return {!goog.Promise} A promise that resolves when persistence change is\n *     applied.\n */\nfireauth.storage.UserManager.prototype.setPersistence = function(persistence) {\n  var currentUser = null;\n  var self = this;\n  // Validate the persistence type provided. This will throw a synchronous error\n  // if invalid.\n  fireauth.authStorage.validatePersistenceArgument(persistence);\n  // Wait for turn in queue.\n  return this.waitForReady_(function() {\n    // If persistence hasn't changed, do nothing.\n    if (persistence != self.currentAuthUserKey_.persistent) {\n      // Persistence changed. Copy from current storage to new one.\n      return self.manager_.get(\n        /** @type {!fireauth.authStorage.Key} */ (self.currentAuthUserKey_),\n        self.appId_).then(function(result) {\n        // Save current user.\n        currentUser = result;\n        // Clear from current storage.\n        return self.removeAllExcept_(persistence);\n      }).then(function() {\n        // Update persistence key to the new one.\n        self.currentAuthUserKey_ =\n            fireauth.storage.UserManager.getAuthUserKey_(persistence);\n        // Copy current storage type to the new one.\n        if (currentUser) {\n          return self.manager_.set(\n              /** @type {!fireauth.authStorage.Key} */ (\n                  self.currentAuthUserKey_),\n              currentUser,\n              self.appId_);\n        }\n      });\n    }\n    // No change in persistence type.\n    return goog.Promise.resolve();\n  });\n};\n\n\n/**\n * Saves the current persistence type so it can be retrieved after a page\n * redirect. This is relevant for signInWithRedirect.\n * @return {!goog.Promise} Promise that resolve when current persistence is\n *     saved.\n */\nfireauth.storage.UserManager.prototype.savePersistenceForRedirect = function() {\n  var self = this;\n  return this.waitForReady_(function() {\n    // Save persistence to survive redirect.\n    return self.manager_.set(\n        fireauth.storage.UserManager.PERSISTENCE_KEY_,\n        self.currentAuthUserKey_.persistent,\n        self.appId_);\n  });\n};\n\n\n/**\n * Stores the current Auth user for the provided application ID.\n * @param {!fireauth.AuthUser} currentUser The app current Auth user to save.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.UserManager.prototype.setCurrentUser = function(currentUser) {\n  var self = this;\n  // Wait for any pending persistence change to be resolved.\n  return this.waitForReady_(function() {\n    return self.manager_.set(\n        /** @type {!fireauth.authStorage.Key} */ (self.currentAuthUserKey_),\n        currentUser.toPlainObject(),\n        self.appId_);\n  });\n};\n\n\n/**\n * Removes the stored current user for provided app ID.\n * @return {!goog.Promise<void>} A promise that resolves on success.\n */\nfireauth.storage.UserManager.prototype.removeCurrentUser = function() {\n  var self = this;\n  // Wait for any pending persistence change to be resolved.\n  return this.waitForReady_(function() {\n    return self.manager_.remove(\n        /** @type {!fireauth.authStorage.Key} */ (self.currentAuthUserKey_),\n        self.appId_);\n  });\n};\n\n\n/**\n * @param {?string=} opt_authDomain The optional Auth domain to override if\n *     provided.\n * @return {!goog.Promise<?fireauth.AuthUser>} A promise that resolves with\n *     the stored current user for the provided app ID.\n */\nfireauth.storage.UserManager.prototype.getCurrentUser =\n    function(opt_authDomain) {\n  var self = this;\n  // Wait for any pending persistence change to be resolved.\n  return this.waitForReady_(function() {\n    return self.manager_.get(\n        /** @type {!fireauth.authStorage.Key} */ (self.currentAuthUserKey_),\n        self.appId_).then(function(response) {\n          // If potential user saved, override Auth domain if authDomain is\n          // provided.\n          // This is useful in cases where on one page the developer initializes\n          // the Auth instance without authDomain and signs in user using\n          // headless methods. On another page, Auth is initialized with\n          // authDomain for the purpose of linking with a popup. The loaded user\n          // (stored without the authDomain) must have this field updated with\n          // the current authDomain.\n          if (response && opt_authDomain) {\n            response['authDomain'] = opt_authDomain;\n          }\n          return fireauth.AuthUser.fromPlainObject(response || {});\n        });\n  });\n};\n\n\n/**\n * Serializes storage access operations especially since persistence\n * could be updated from one type to the other while read/write operations\n * occur.\n * @param {function():!goog.Promise<T>} cb The promise return callback to chain\n *     when pending operations are resolved.\n * @return {!goog.Promise<T>} The resulting promise that resolves when provided\n *     promise finally resolves.\n * @template T\n * @private\n */\nfireauth.storage.UserManager.prototype.waitForReady_ = function(cb) {\n  // Wait for any pending persistence change to be resolved before running\n  // storage related operation. Chain to onReady so next call will wait for\n  // this operation to resolve.\n  // While an error is unlikely, run callback even if it happens, otherwise\n  // no storage related event will be allowed to complete after an error.\n  this.onReady_ = this.onReady_.then(cb, cb);\n  return this.onReady_;\n};\n\n\n/**\n * Adds a listener to Auth current user change event for app ID provided.\n * @param {!function()} listener The listener to run on current user change\n *     event.\n */\nfireauth.storage.UserManager.prototype.addCurrentUserChangeListener =\n    function(listener) {\n  // When this is triggered, getCurrentUser is called, that will have to wait\n  // for switchToLocalOnExternalEvent_ to resolve which is ahead of it in the\n  // queue.\n  this.manager_.addListener(\n      fireauth.storage.UserManager.getAuthUserKey_(\n          fireauth.authStorage.Persistence.LOCAL),\n      this.appId_,\n      listener);\n};\n\n\n/**\n * Removes a listener to Auth current user change event for app ID provided.\n * @param {!function()} listener The listener to remove from current user change\n *     event changes.\n */\nfireauth.storage.UserManager.prototype.removeCurrentUserChangeListener =\n    function(listener) {\n  this.manager_.removeListener(\n      fireauth.storage.UserManager.getAuthUserKey_(\n          fireauth.authStorage.Persistence.LOCAL),\n      this.appId_,\n      listener);\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * @fileoverview Defines the grecaptcha interface.\n */\n\ngoog.provide('fireauth.grecaptcha');\n\n\n/**\n * The reCAPTCHA interface for initializing and managing visible v2\n * reCAPTCHAs as well as invisible ones.\n * @interface\n */\nfireauth.grecaptcha = function() {};\n\n\n/**\n * Creates a new instance of the recaptcha client.\n *\n * @param {!Element|string} elementOrId Element or element ID for the\n *     placeholder to render the reCAPTCHA client.\n * @param {!Object} params Parameters for the recaptcha client.\n * @return {number} The client ID.\n */\nfireauth.grecaptcha.prototype.render = function(elementOrId, params) {};\n\n\n/**\n * Resets a client with the given ID.  If an ID is not provided, resets the\n * default client.\n *\n * @param {number=} id The ID of the recaptcha client.\n * @param {?Object=} params Parameters for the recaptcha client.\n */\nfireauth.grecaptcha.prototype.reset = function(id, params) {};\n\n\n/**\n * Gets the response for the client with the given ID.  If an ID is not\n * provided, gets the response for the default client.\n *\n * @param {number=} id The ID of the recaptcha client.\n * @return {?string}\n */\nfireauth.grecaptcha.prototype.getResponse = function(id) {};\n\n\n/**\n * Programmatically triggers the invisible reCAPTCHA.\n *\n * @param {number=} opt_id The ID of the recaptcha client. Defaults to the\n *     first widget created if unspecified.\n */\nfireauth.grecaptcha.prototype.execute = function(opt_id) {};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * @fileoverview Defines the RecaptchaLoader implementation used to mock loading\n * of grecaptcha dependencies.\n */\n\ngoog.provide('fireauth.RecaptchaMockLoader');\n\ngoog.require('fireauth.GRecaptchaMockFactory');\ngoog.require('fireauth.RecaptchaLoader');\ngoog.require('goog.Promise');\n\n\n/**\n * Defines a mock reCAPTCHA loader by implementing the fireauth.RecaptchaLoader\n * interface.\n * @constructor\n * @implements {fireauth.RecaptchaLoader}\n */\nfireauth.RecaptchaMockLoader = function() {};\n\n\n/**\n * Loads the grecaptcha mock library if it is not loaded and returns a promise\n * that resolves on success. If the right conditions are available, will reload\n * the dependencies for a specified language code.\n * @param {?string} hl The reCAPTCHA language code.\n * @return {!goog.Promise<!fireauth.grecaptcha>} A promise that resolves when\n *     grecaptcha is loaded.\n * @override\n */\nfireauth.RecaptchaMockLoader.prototype.loadRecaptchaDeps =\n    function(hl) {\n  return goog.Promise.resolve(\n  \t/** @type {!fireauth.grecaptcha} */ (fireauth.GRecaptchaMockFactory.getInstance()));\n};\n\n\n/**\n * Decrements the reCAPTCHA instance counter.\n * @override\n */\nfireauth.RecaptchaMockLoader.prototype.clearSingleRecaptcha =\n    function() {};\n\n\n/**\n * @private {?fireauth.RecaptchaMockLoader} The singleton instance\n *     for the mock reCAPTCHA dependency loader.\n */\nfireauth.RecaptchaMockLoader.instance_ = null;\n\n\n/**\n * @return {!fireauth.RecaptchaMockLoader} The singleton mock reCAPTCHA\n *     dependency loader instance.\n */\nfireauth.RecaptchaMockLoader.getInstance = function() {\n  // Check if there is an existing instance. Otherwise create one and cache it.\n  if (!fireauth.RecaptchaMockLoader.instance_) {\n    fireauth.RecaptchaMockLoader.instance_ =\n        new fireauth.RecaptchaMockLoader();\n  }\n  return fireauth.RecaptchaMockLoader.instance_;\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * @fileoverview Defines the RecaptchaLoader implementation used to load all\n * the grecaptcha dependencies.\n */\n\ngoog.provide('fireauth.RecaptchaRealLoader');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.RecaptchaLoader');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.net.jsloader');\ngoog.require('goog.string.Const');\n\n\n/**\n * Utility to help load reCAPTCHA dependencies for specified languages.\n * @constructor\n * @implements {fireauth.RecaptchaLoader}\n */\nfireauth.RecaptchaRealLoader = function() {\n  /**\n   * @private {number} The reCAPTCHA instance counter. This is used to track the\n   *     number of reCAPTCHAs rendered on the page. This is needed to allow\n   *     localization of the reCAPTCHA. Localization is applied by loading the\n   *     grecaptcha SDK with the hl field provided. However, this will break\n   *     existing reCAPTCHAs. So we should only support i18n when there are no\n   *     other widgets rendered on this screen. If the developer is already\n   *     using reCAPTCHA in another context, we will disable localization so we\n   *     don't accidentally break existing reCAPTCHA widgets.\n   */\n  this.counter_ = goog.global['grecaptcha'] ? Infinity : 0;\n  /** @private {?string} The current reCAPTCHA language code. */\n  this.hl_ = null;\n  /** @const @private {string} The reCAPTCHA callback name. */\n  this.cbName_ = '__rcb' + Math.floor(Math.random() * 1000000).toString();\n};\n\n\n/** @private @const {!goog.string.Const} The reCAPTCHA javascript source URL. */\nfireauth.RecaptchaRealLoader.RECAPTCHA_SRC_ = goog.string.Const.from(\n    'https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit' +\n    '&hl=%{hl}');\n\n\n/**\n * The default timeout delay (units in milliseconds) for requests loading\n * the external reCAPTCHA dependencies.\n * @const {!fireauth.util.Delay}\n * @private\n */\nfireauth.RecaptchaRealLoader.DEFAULT_DEPENDENCY_TIMEOUT_ =\n    new fireauth.util.Delay(30000, 60000);\n\n\n/**\n * Loads the grecaptcha client library if it is not loaded and returns a promise\n * that resolves on success. If the right conditions are available, will reload\n * the dependencies for a specified language code.\n * @param {?string} hl The reCAPTCHA language code.\n * @return {!goog.Promise<!fireauth.grecaptcha>} A promise that resolves when\n *     grecaptcha is loaded.\n * @override\n */\nfireauth.RecaptchaRealLoader.prototype.loadRecaptchaDeps =\n    function(hl) {\n  var self = this;\n  return new goog.Promise(function(resolve, reject) {\n    var timer = setTimeout(\n        function() {\n          reject(new fireauth.AuthError(\n              fireauth.authenum.Error.NETWORK_REQUEST_FAILED));\n        },\n        fireauth.RecaptchaRealLoader.DEFAULT_DEPENDENCY_TIMEOUT_\n            .get()\n    );\n    // Load grecaptcha SDK if not already loaded or language changed since last\n    // load and no other rendered reCAPTCHA is visible,\n    if (!goog.global['grecaptcha'] || (hl !== self.hl_ && !self.counter_)) {\n      // reCAPTCHA saves the onload function and applies it on subsequent\n      // reloads. This means that the callback name has to remain the same.\n      goog.global[self.cbName_] = function() {\n        if (!goog.global['grecaptcha']) {\n          clearTimeout(timer);\n          // This should not happen.\n          reject(new fireauth.AuthError(\n              fireauth.authenum.Error.INTERNAL_ERROR));\n        } else {\n          // Update the current language code.\n          self.hl_ = hl;\n          var render = goog.global['grecaptcha']['render'];\n          // Wrap grecaptcha.render to keep track of rendered grecaptcha. This\n          // helps detect if the developer rendered a non\n          // firebase.auth.RecaptchaVerifier reCAPTCHA.\n          goog.global['grecaptcha']['render'] =\n              function(container, parameters) {\n            var widgetId = render(container, parameters);\n            // Increment only after render succeeds, in case an error is thrown\n            // during rendering.\n            self.counter_++;\n            return widgetId;\n          };\n          clearTimeout(timer);\n          resolve(goog.global['grecaptcha']);\n        }\n        delete goog.global[self.cbName_];\n      };\n      // Construct reCAPTCHA URL and on load, run the temporary function.\n      var url = goog.html.TrustedResourceUrl.format(\n          fireauth.RecaptchaRealLoader.RECAPTCHA_SRC_,\n          {'onload': self.cbName_, 'hl': hl || ''});\n      // TODO: eventually, replace all dependencies on goog.net.jsloader.\n      goog.Promise.resolve(goog.net.jsloader.safeLoad(url))\n          .thenCatch(function(error) {\n            clearTimeout(timer);\n            // In case library fails to load, typically due to a network error,\n            // reset cached loader to null to force a refresh on a retrial.\n            reject(new fireauth.AuthError(\n                fireauth.authenum.Error.INTERNAL_ERROR,\n                'Unable to load external reCAPTCHA dependencies!'));\n          });\n    } else {\n      clearTimeout(timer);\n      resolve(goog.global['grecaptcha']);\n    }\n  });\n};\n\n\n/**\n * Decrements the reCAPTCHA instance counter.\n * @override\n */\nfireauth.RecaptchaRealLoader.prototype.clearSingleRecaptcha =\n    function() {\n  this.counter_--;\n};\n\n\n/**\n * @private {?fireauth.RecaptchaRealLoader} The singleton instance\n *     for reCAPTCHA dependency loader.\n */\nfireauth.RecaptchaRealLoader.instance_ = null;\n\n\n/**\n * @return {!fireauth.RecaptchaRealLoader} The singleton reCAPTCHA\n *     dependency loader instance.\n */\nfireauth.RecaptchaRealLoader.getInstance = function() {\n  // Check if there is an existing instance. Otherwise create one and cache it.\n  if (!fireauth.RecaptchaRealLoader.instance_) {\n    fireauth.RecaptchaRealLoader.instance_ =\n        new fireauth.RecaptchaRealLoader();\n  }\n  return fireauth.RecaptchaRealLoader.instance_;\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the reCAPTCHA app verifier and its base class. The\n * former is currently used for web phone authentication whereas the latter is\n * used for the mobile app verification web fallback.\n */\ngoog.provide('fireauth.BaseRecaptchaVerifier');\ngoog.provide('fireauth.RecaptchaVerifier');\n\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.RecaptchaMockLoader');\ngoog.require('fireauth.RecaptchaRealLoader');\ngoog.require('fireauth.RpcHandler');\ngoog.require('fireauth.authenum.Error');\ngoog.require('fireauth.constants');\ngoog.require('fireauth.object');\ngoog.require('fireauth.util');\ngoog.require('goog.Promise');\ngoog.require('goog.array');\ngoog.require('goog.dom');\n\n\n/**\n * Creates the firebase base reCAPTCHA app verifier independent of Firebase\n * App or Auth instances.\n *\n * @param {string} apiKey The API key used to initialize the RPC handler for\n *     querying the Auth backend.\n * @param {!Element|string} container The reCAPTCHA container parameter. This\n *     has different meaning depending on whether the reCAPTCHA is hidden or\n *     visible.\n * @param {?Object=} opt_parameters The optional reCAPTCHA parameters.\n * @param {?(function():?string)=} opt_getLanguageCode The language code getter\n *     function.\n * @param {?string=} opt_clientVersion The optional client version to append to\n *     RPC header.\n * @param {?Object=} opt_rpcHandlerConfig The optional RPC handler\n *     configuration, typically passed when different Auth endpoints are to be\n *     used.\n * @param {boolean=} opt_isTestingMode Whether the reCAPTCHA is to be rendered\n *     in testing mode.\n * @constructor\n */\nfireauth.BaseRecaptchaVerifier = function(apiKey, container, opt_parameters,\n    opt_getLanguageCode, opt_clientVersion, opt_rpcHandlerConfig,\n    opt_isTestingMode) {\n  // Set the type readonly property needed for full implementation of the\n  // firebase.auth.ApplicationVerifier interface.\n  fireauth.object.setReadonlyProperty(this, 'type', 'recaptcha');\n  /**\n   * @private {?goog.Promise<void>} The cached reCAPTCHA ready response. This is\n   *     null until the first time it is triggered or when an error occurs in\n   *     getting ready.\n   */\n  this.cachedReadyPromise_ = null;\n  /** @private {?number} The reCAPTCHA widget ID. Null when not rendered. */\n  this.widgetId_ = null;\n  /** @private {boolean} Whether the instance is already destroyed. */\n  this.destroyed_ = false;\n  /** @private {!Element|string} The reCAPTCHA container. */\n  this.container_ = container;\n  /**\n   * @private {?fireauth.grecaptcha} The reCAPTCHA client library namespace.\n   */\n  this.grecaptcha_ = null;\n  /**\n   * @const @private {!fireauth.RecaptchaLoader} The grecaptcha loader.\n   */\n  this.recaptchaLoader_ = !!opt_isTestingMode ?\n      fireauth.RecaptchaMockLoader.getInstance() :\n      fireauth.RecaptchaRealLoader.getInstance();\n  // If no parameters passed, use default settings.\n  // Currently, visible recaptcha is the default setting as invisible reCAPTCHA\n  // is not yet supported by the backend.\n  /** @private {!Object} The reCAPTCHA parameters. */\n  this.parameters_ = opt_parameters || {\n    'theme': 'light',\n    'type': 'image'\n  };\n  /** @private {!Array<!goog.Promise<*>|!goog.Promise<void>>} List of\n   *      pending promises. */\n  this.pendingPromises_ = [];\n  if (this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.SITEKEY]) {\n    // sitekey should not be provided.\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        'sitekey should not be provided for reCAPTCHA as one is ' +\n        'automatically provisioned for the current project.');\n  }\n  /** @private {boolean} Whether the reCAPTCHA is invisible or not. */\n  this.isInvisible_ =\n      this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.SIZE] ===\n      'invisible';\n  // Check if DOM is supported.\n  if (!fireauth.util.isDOMSupported()) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.OPERATION_NOT_SUPPORTED,\n        'RecaptchaVerifier is only supported in a browser HTTP/HTTPS ' +\n        'environment with DOM support.');\n  }\n  // reCAPTCHA container must be valid and if visible, not empty.\n  // An invisible reCAPTCHA will not render in its container. That container\n  // will execute the reCAPTCHA when it is clicked.\n  if (!goog.dom.getElement(container) ||\n      (!this.isInvisible_ && goog.dom.getElement(container).hasChildNodes())) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        'reCAPTCHA container is either not found or already contains inner ' +\n        'elements!');\n  }\n  /**\n   * @private {!fireauth.RpcHandler} The RPC handler for querying the auth\n   *     backend.\n   */\n  this.rpcHandler_ = new fireauth.RpcHandler(\n      apiKey,\n      opt_rpcHandlerConfig || null,\n      opt_clientVersion || null);\n  /**\n   * @private {function():?string} Current language code getter.\n   */\n  this.getLanguageCode_ = opt_getLanguageCode || function() {return null;};\n  var self = this;\n  /**\n   * @private {!Array<function(?string)>} The token change listeners.\n   */\n  this.tokenListeners_ = [];\n  // Wrap token callback.\n  var existingCallback =\n      this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.CALLBACK];\n  this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.CALLBACK] =\n      function(response) {\n    // Dispatch internal event for the token response.\n    self.dispatchEvent_(response);\n    if (typeof existingCallback === 'function') {\n      existingCallback(response);\n    } else if (typeof existingCallback === 'string') {\n      // Check if the provided callback is a global function name.\n      var cb = fireauth.util.getObjectRef(existingCallback, goog.global);\n      if (typeof cb === 'function') {\n        // If so, trigger it.\n        cb(response);\n      }\n    }\n  };\n  // Wrap expired token callback.\n  var existingExpiredCallback = this.parameters_[\n    fireauth.BaseRecaptchaVerifier.ParamName.EXPIRED_CALLBACK];\n  this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.EXPIRED_CALLBACK] =\n      function() {\n    // Dispatch internal event for the token expiration.\n    self.dispatchEvent_(null);\n    if (typeof existingExpiredCallback === 'function') {\n      existingExpiredCallback();\n    } else if (typeof existingExpiredCallback === 'string') {\n      // Check if the provided expired callback is a global function name.\n      var cb = fireauth.util.getObjectRef(existingExpiredCallback, goog.global);\n      if (typeof cb === 'function') {\n        // If so, trigger it.\n        cb();\n      }\n    }\n  };\n};\n\n\n/**\n * grecaptcha parameter names.\n * @enum {string}\n */\nfireauth.BaseRecaptchaVerifier.ParamName = {\n  CALLBACK: 'callback',\n  EXPIRED_CALLBACK: 'expired-callback',\n  SITEKEY: 'sitekey',\n  SIZE: 'size'\n};\n\n\n/**\n * Dispatches the token change event to all subscribed listeners.\n * @param {?string} token The current detected token, null for none.\n * @private\n */\nfireauth.BaseRecaptchaVerifier.prototype.dispatchEvent_ = function(token) {\n  for (var i = 0; i < this.tokenListeners_.length; i++) {\n    try {\n      this.tokenListeners_[i](token);\n    } catch (e) {\n      // If any handler fails, ignore and run next handler.\n    }\n  }\n};\n\n\n/**\n * Add a reCAPTCHA token change listener.\n * @param {function(?string)} listener The token listener to add.\n * @private\n */\nfireauth.BaseRecaptchaVerifier.prototype.addTokenChangeListener_ =\n    function(listener) {\n  this.tokenListeners_.push(listener);\n};\n\n\n/**\n * Remove a reCAPTCHA token change listener.\n * @param {function(?string)} listener The token listener to remove.\n * @private\n */\nfireauth.BaseRecaptchaVerifier.prototype.removeTokenChangeListener_ =\n    function(listener) {\n  goog.array.removeAllIf(this.tokenListeners_, function(ele) {\n    return ele == listener;\n  });\n};\n\n\n/**\n * Takes in a pending promise, saves it and adds a clean up callback which\n * forgets the pending promise after it is fulfilled and echoes the promise\n * back.\n * @param {!goog.Promise<*, *>|!goog.Promise<void>} p The pending promise.\n * @return {!goog.Promise<*, *>|!goog.Promise<void>}\n * @private\n */\nfireauth.BaseRecaptchaVerifier.prototype.registerPendingPromise_ = function(p) {\n  var self = this;\n  // Save created promise in pending list.\n  this.pendingPromises_.push(p);\n  p.thenAlways(function() {\n    // When fulfilled, remove from pending list.\n    goog.array.remove(self.pendingPromises_, p);\n  });\n  // Return the promise.\n  return p;\n};\n\n\n/** @return {boolean} Whether verifier instance has pending promises. */\nfireauth.BaseRecaptchaVerifier.prototype.hasPendingPromises = function() {\n  return this.pendingPromises_.length != 0;\n};\n\n\n/**\n * Gets the current RecaptchaVerifier in a ready state for rendering by first\n * checking that the environment supports a reCAPTCHA, loading reCAPTCHA\n * dependencies if not already available and then getting the Firebase project's\n * provisioned reCAPTCHA configuration.\n * @return {!goog.Promise<void>} The promise that resolves when recaptcha\n *     is ready for rendering.\n * @private\n */\nfireauth.BaseRecaptchaVerifier.prototype.isReady_ = function() {\n  var self = this;\n  // If previously called, return the cached response.\n  if (this.cachedReadyPromise_) {\n    return this.cachedReadyPromise_;\n  }\n  this.cachedReadyPromise_ = this.registerPendingPromise_(goog.Promise.resolve()\n      .then(function() {\n        // Verify environment first.\n        // Fail quickly from a worker environment or non-HTTP/HTTPS environment.\n        if (fireauth.util.isHttpOrHttps() && !fireauth.util.isWorker()) {\n          // Wait for DOM to be ready as this feature depends on that.\n          return fireauth.util.onDomReady();\n        } else {\n          throw new fireauth.AuthError(\n              fireauth.authenum.Error.OPERATION_NOT_SUPPORTED,\n              'RecaptchaVerifier is only supported in a browser HTTP/HTTPS ' +\n              'environment.');\n        }\n      })\n      .then(function() {\n        // Load external reCAPTCHA dependencies if not already there, taking\n        // into account the current language code.\n        return self.recaptchaLoader_.loadRecaptchaDeps(self.getLanguageCode_());\n      })\n      .then(function(grecaptcha) {\n        self.grecaptcha_ = grecaptcha;\n        // Load Firebase project's reCAPTCHA configuration.\n        return self.rpcHandler_.getRecaptchaParam();\n      })\n      .then(function(result) {\n        // Update the reCAPTCHA parameters.\n        self.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.SITEKEY] =\n            result[fireauth.RpcHandler.AuthServerField.RECAPTCHA_SITE_KEY];\n      }).thenCatch(function(error) {\n        // Anytime an error occurs, reset the cached ready promise to rerun on\n        // retrial.\n        self.cachedReadyPromise_ = null;\n        // Rethrow the error.\n        throw error;\n      }));\n  // Return the cached/pending ready promise.\n  return this.cachedReadyPromise_;\n};\n\n/**\n * Renders the reCAPTCHA and returns the allocated widget ID.\n * @return {!goog.Promise<number>} The promise that resolves with the reCAPTCHA\n *     widget ID when it is rendered.\n */\nfireauth.BaseRecaptchaVerifier.prototype.render = function() {\n  this.checkIfDestroyed_();\n  var self = this;\n  // Get reCAPTCHA ready.\n  return this.registerPendingPromise_(this.isReady_().then(function() {\n    if (self.widgetId_ === null) {\n      // For a visible reCAPTCHA, embed in a wrapper DIV container to allow\n      // re-rendering in the same developer provided container.\n      var container = self.container_;\n      if (!self.isInvisible_) {\n        // Get outer container (the developer provided container).\n        var outerContainer = goog.dom.getElement(container);\n        // Create wrapper temp DIV container.\n        container = goog.dom.createDom(goog.dom.TagName.DIV);\n        // Add temp DIV to outer container.\n        outerContainer.appendChild(container);\n      }\n      // If not initialized, initialize reCAPTCHA and return its widget ID.\n      self.widgetId_ = self.grecaptcha_.render(container, self.parameters_);\n    }\n    return self.widgetId_;\n  }));\n};\n\n\n/**\n * Gets the reCAPTCHA ready and waits for the reCAPTCHA token to be available\n * before resolving the promise returned.\n * @return {!goog.Promise<string>} The promise that resolves with the reCAPTCHA\n *     token when reCAPTCHA challenge is solved.\n */\nfireauth.BaseRecaptchaVerifier.prototype.verify = function() {\n  // Fail if reCAPTCHA is already destroyed.\n  this.checkIfDestroyed_();\n  var self = this;\n  // Render reCAPTCHA.\n  return this.registerPendingPromise_(this.render().then(function(widgetId) {\n    return new goog.Promise(function(resolve, reject) {\n      // Get current reCAPTCHA token.\n      var recaptchaToken = self.grecaptcha_.getResponse(widgetId);\n      if (recaptchaToken) {\n        // Unexpired token already available. Resolve pending promise with that\n        // token.\n        resolve(recaptchaToken);\n      } else {\n        // No token available. Listen to token change.\n        var cb = function(token) {\n          if (!token) {\n            // Ignore token expirations.\n            return;\n          }\n          // Remove temporary token change listener.\n          self.removeTokenChangeListener_(cb);\n          // Resolve with new token.\n          resolve(token);\n        };\n        // Add temporary token change listener.\n        self.addTokenChangeListener_(cb);\n        if (self.isInvisible_) {\n          // Execute invisible reCAPTCHA to force a challenge.\n          // This should do nothing if already triggered either by developer or\n          // by a button click.\n          self.grecaptcha_.execute(/** @type {number} */ (self.widgetId_));\n        }\n      }\n    });\n  }));\n};\n\n\n/**\n * Resets the reCAPTCHA widget.\n */\nfireauth.BaseRecaptchaVerifier.prototype.reset = function() {\n  this.checkIfDestroyed_();\n  if (this.widgetId_ !== null) {\n    this.grecaptcha_.reset(this.widgetId_);\n  }\n};\n\n\n/**\n * Throws an error if the reCAPTCHA verifier is already cleared.\n * @private\n */\nfireauth.BaseRecaptchaVerifier.prototype.checkIfDestroyed_ = function() {\n  if (this.destroyed_) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.INTERNAL_ERROR,\n        'RecaptchaVerifier instance has been destroyed.');\n  }\n};\n\n\n/**\n * Removes the reCAPTCHA from the DOM.\n */\nfireauth.BaseRecaptchaVerifier.prototype.clear = function() {\n  this.checkIfDestroyed_();\n  this.destroyed_ = true;\n  // Decrement reCAPTCHA instance counter.\n  this.recaptchaLoader_.clearSingleRecaptcha();\n  // Cancel all pending promises.\n  for (var i = 0; i < this.pendingPromises_.length; i++) {\n    this.pendingPromises_[i].cancel(\n        'RecaptchaVerifier instance has been destroyed.');\n  }\n  if (!this.isInvisible_) {\n    goog.dom.removeChildren(goog.dom.getElement(this.container_));\n  }\n};\n\n\n/**\n * Creates the Firebase reCAPTCHA app verifier, publicly available, for the\n * Firebase app provided, used for web phone authentication.\n * This is a subclass of fireauth.BaseRecaptchaVerifier.\n *\n * @param {!Element|string} container The reCAPTCHA container parameter. This\n *     has different meaning depending on whether the reCAPTCHA is hidden or\n *     visible.\n * @param {?Object=} opt_parameters The optional reCAPTCHA parameters.\n * @param {?firebase.app.App=} opt_app The corresponding Firebase app.\n * @constructor\n * @extends {fireauth.BaseRecaptchaVerifier}\n */\nfireauth.RecaptchaVerifier = function(container, opt_parameters, opt_app) {\n  var isTestingMode = false;\n  var apiKey;\n  try {\n    /** @private {!firebase.app.App} The corresponding Firebase app instance. */\n    this.app_ = opt_app || firebase.app();\n  } catch (error) {\n    throw new fireauth.AuthError(\n        fireauth.authenum.Error.ARGUMENT_ERROR,\n        'No firebase.app.App instance is currently initialized.');\n  }\n  // API key is required for web client RPC calls.\n  if (this.app_.options && this.app_.options['apiKey']) {\n    apiKey = this.app_.options['apiKey'];\n  } else {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_API_KEY);\n  }\n  var self = this;\n  // Construct the language code getter based on the underlying Auth instance.\n  var getLanguageCode = function() {\n    var languageCode;\n    // Get the latest language setting.\n    // reCAPTCHA does not support updating the language of an already\n    // rendered reCAPTCHA. Reloading the SDK with the new hl will break\n    // the existing rendered localized reCAPTCHA. We will need to\n    // document that a new fireauth.BaseRecaptchaVerifier instance needs\n    // to be instantiated after the language is updated. Otherwise, the\n    // old language code will remain active on the existing instance.\n    try {\n      languageCode = self.app_['auth']().getLanguageCode();\n    } catch (e) {\n      languageCode = null;\n    }\n    return languageCode;\n  };\n  // Get the framework version from Auth instance.\n  var frameworkVersion = null;\n  try {\n    frameworkVersion = this.app_['auth']().getFramework();\n  } catch (e) {\n    // Do nothing.\n  }\n  try {\n    isTestingMode =\n        this.app_['auth']()['settings']['appVerificationDisabledForTesting'];\n  } catch (e) {\n    // Do nothing.\n  }\n  // Get the client version based on the Firebase JS version.\n  var clientFullVersion = firebase.SDK_VERSION ?\n      fireauth.util.getClientVersion(\n          fireauth.util.ClientImplementation.JSCORE, firebase.SDK_VERSION,\n          frameworkVersion) :\n      null;\n  // Call the superclass constructor with the computed API key, reCAPTCHA\n  // container, optional parameters, language code getter, Firebase JS client\n  // version and the current client configuration endpoints.\n  fireauth.RecaptchaVerifier.base(this, 'constructor', apiKey,\n      container, opt_parameters, getLanguageCode, clientFullVersion,\n      fireauth.constants.getEndpointConfig(fireauth.constants.clientEndpoint),\n      isTestingMode);\n};\ngoog.inherits(fireauth.RecaptchaVerifier, fireauth.BaseRecaptchaVerifier);\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides function argument validation for third-party calls\n * that cannot be validated with Closure compiler.\n */\n\ngoog.provide('fireauth.args');\ngoog.provide('fireauth.args.Argument');\n\ngoog.require('fireauth.Auth');\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthUser');\ngoog.require('fireauth.authenum.Error');\n\n\n/**\n * Represents an argument to a function. Fields:\n * <ul>\n * <li> name: A label for the argument. For example, the names of the arguments\n *      to a signIn() function might be \"email\" and \"password\".\n * <li> typeLabel: A label for the expected type of the argument, starting with\n *      an article, for example, \"an object\" or \"a valid credential\".\n * <li> optional: Whether or not this argument is optional. Optional arguments\n *      cannot come after non-optional arguments in the input to validate().\n * <li> validator: A function that takes the passed value of this argument\n *      and returns whether the value is valid or not.\n * </ul>\n * @typedef {{\n *   name: string,\n *   typeLabel: string,\n *   optional: boolean,\n *   validator: function (*) : boolean,\n * }}\n */\nfireauth.args.Argument;\n\n\n/**\n * Validates the arguments to a method call and throws an error if invalid. This\n * can be used to validate external calls where the Closure compiler cannot\n * detect errors.\n *\n * Example usage:\n * function greet(recipient, opt_useFormalLanguage) {\n *   fireauth.args.validate('greet', [\n *     fireauth.args.string('recipient'),\n *     fireauth.args.bool('opt_useFormalLanguage', true)\n *   ], arguments);\n *   if (opt_useFormalLanguage) {\n *     console.log('Good day, ' + recipient + '.');\n *   } else {\n *     console.log('Wassup, ' + recipient + '?');\n *   }\n * }\n * greet('Mr. Manager', true); // Prints 'Good day, Mr. Manager.'\n * greet('Billy Bob'); // Prints 'Wassup, Billy Bob?'\n * greet(133); // Throws 'greet failed: First argument \"recipient\" must be a\n *             // valid string.'\n * greet(); // Throws 'greet failed: Expected 1-2 arguments but got 0.'\n * greet('Mr. Manager', true, 'ohno'); // Throws 'greet failed: Expected 1-2\n *                                     // arguments but got 3.'\n *\n * This can also be used to validate setters by passing an additional true\n * argument to fireauth.args.validate. This modifies the error message to be\n * relevant for that setter.\n *\n * @param {string} apiName The name of the method being called, to display in\n *     the error message for debugging purposes.\n * @param {!Array<!fireauth.args.Argument>} expected The expected arguments.\n * @param {!IArrayLike} actual The arguments object of the function whose\n *     parameters we want to validate.\n * @param {boolean=} opt_isSetter Whether the function is a setter which takes\n *     a single argument.\n */\nfireauth.args.validate = function(apiName, expected, actual, opt_isSetter) {\n  // Convert the arguments object into a real array.\n  var actualAsArray = Array.prototype.slice.call(actual);\n  var errorMessage = fireauth.args.validateAndGetMessage_(\n      expected, actualAsArray, opt_isSetter);\n  if (errorMessage) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,\n        apiName + ' failed: ' + errorMessage);\n  }\n};\n\n\n/**\n * @param {!Array<!fireauth.args.Argument>} expected\n * @param {!Array<*>} actual\n * @param {boolean=} opt_isSetter Whether the function is a setter which takes\n *     a single argument.\n * @return {?string} The error message if there is an error, or otherwise\n *     null.\n * @private\n */\nfireauth.args.validateAndGetMessage_ =\n    function(expected, actual, opt_isSetter) {\n  var minNumArgs = fireauth.args.calcNumRequiredArgs_(expected);\n  var maxNumArgs = expected.length;\n  if (actual.length < minNumArgs || maxNumArgs < actual.length) {\n    return fireauth.args.makeLengthError_(minNumArgs, maxNumArgs,\n        actual.length);\n  }\n\n  for (var i = 0; i < actual.length; i++) {\n    // Argument is optional and undefined is explicitly passed.\n    var optionalUndefined = expected[i].optional && actual[i] === undefined;\n    // Check if invalid argument and the argument is not optional with undefined\n    // passed.\n    if (!expected[i].validator(actual[i]) && !optionalUndefined) {\n      return fireauth.args.makeErrorAtPosition_(i, expected[i], opt_isSetter);\n    }\n  }\n\n  return null;\n};\n\n\n/**\n * @param {!Array<!fireauth.args.Argument>} expected\n * @return {number} The number of required arguments.\n * @private\n */\nfireauth.args.calcNumRequiredArgs_ = function(expected) {\n  var numRequiredArgs = 0;\n  var isOptionalSection = false;\n  for (var i = 0; i < expected.length; i++) {\n    if (expected[i].optional) {\n      isOptionalSection = true;\n    } else {\n      if (isOptionalSection) {\n        throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n            'Argument validator encountered a required argument after an ' +\n            'optional argument.');\n      }\n      numRequiredArgs++;\n    }\n  }\n  return numRequiredArgs;\n};\n\n\n/**\n * @param {number} min The minimum number of arguments to the function,\n *     inclusive.\n * @param {number} max The maximum number of arguments to the function,\n *     inclusive.\n * @param {number} actual The actual number of arguments received.\n * @return {string} The error message.\n * @private\n */\nfireauth.args.makeLengthError_ = function(min, max, actual) {\n  var numExpectedString;\n  if (min == max) {\n    if (min == 1) {\n      numExpectedString = '1 argument';\n    } else {\n      numExpectedString = min + ' arguments';\n    }\n  } else {\n    numExpectedString = min + '-' + max + ' arguments';\n  }\n  return 'Expected ' + numExpectedString + ' but got ' + actual + '.';\n};\n\n\n/**\n * @param {number} position The position at which there was an error.\n * @param {!fireauth.args.Argument} expectedType The expected type of the\n *     argument, which was violated.\n * @param {boolean=} opt_isSetter Whether the function is a setter which takes\n *     a single argument.\n * @return {string} The error message.\n * @private\n */\nfireauth.args.makeErrorAtPosition_ =\n    function(position, expectedType, opt_isSetter) {\n  var ordinal = fireauth.args.makeOrdinal_(position);\n  var argName = expectedType.name ?\n      fireauth.args.quoteString_(expectedType.name) + ' ' : '';\n  // Add support to setters for readable/writable properties which take a\n  // required single argument.\n  var errorPrefix = !!opt_isSetter ? '' : ordinal + ' argument ';\n  return errorPrefix + argName + 'must be ' +\n      expectedType.typeLabel + '.';\n};\n\n\n/** @private {!Array<string>} The first few ordinal numbers. */\nfireauth.args.ORDINAL_NUMBERS_ = ['First', 'Second', 'Third', 'Fourth',\n  'Fifth', 'Sixth', 'Seventh', 'Eighth', 'Ninth'];\n\n\n/**\n * @param {number} cardinal An integer.\n * @return {string} The integer converted to an ordinal number, starting at\n *     \"First\". That is, makeOrdinal_(0) returns \"First\" and makeOrdinal_(1)\n *     returns \"Second\", etc.\n * @private\n */\nfireauth.args.makeOrdinal_ = function(cardinal) {\n  // We only support the first few ordinal numbers. We could provide a more\n  // robust solution, but it is unlikely that a function would need more than\n  // nine arguments.\n  if (cardinal < 0 || cardinal >= fireauth.args.ORDINAL_NUMBERS_.length) {\n    throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,\n        'Argument validator received an unsupported number of arguments.');\n  }\n  return fireauth.args.ORDINAL_NUMBERS_[cardinal];\n};\n\n\n/**\n * Specifies a string argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.string = function(opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: 'a valid string',\n    optional: !!opt_optional,\n    validator: goog.isString\n  };\n};\n\n\n/**\n * Specifies a boolean argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.bool = function(opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: 'a boolean',\n    optional: !!opt_optional,\n    validator: goog.isBoolean\n  };\n};\n\n\n/**\n * Specifies a number argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.number = function(opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: 'a valid number',\n    optional: !!opt_optional,\n    validator: goog.isNumber\n  };\n};\n\n\n/**\n * Specifies an object argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.object = function(opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: 'a valid object',\n    optional: !!opt_optional,\n    validator: goog.isObject\n  };\n};\n\n\n/**\n * Specifies a function argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.func = function(opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: 'a function',\n    optional: !!opt_optional,\n    validator: goog.isFunction\n  };\n};\n\n\n/**\n * Specifies a null argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.null = function(opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: 'null',\n    optional: !!opt_optional,\n    validator: goog.isNull\n  };\n};\n\n\n/**\n * Specifies an HTML element argument.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.element = function(opt_name, opt_optional) {\n   return /** @type {!fireauth.args.Argument} */ ({\n    name: opt_name || '',\n    typeLabel: 'an HTML element',\n    optional: !!opt_optional,\n    validator: /** @type {function(!Element) : boolean} */ (\n        function(element) {\n          return !!(element && element instanceof Element);\n        })\n  });\n};\n\n\n/**\n * Specifies an instance of Firebase Auth.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.firebaseAuth = function(opt_optional) {\n  return /** @type {!fireauth.args.Argument} */ ({\n    name: 'auth',\n    typeLabel: 'an instance of Firebase Auth',\n    optional: !!opt_optional,\n    validator: /** @type {function(!fireauth.Auth) : boolean} */ (\n        function(auth) {\n          return !!(auth && auth instanceof fireauth.Auth);\n        })\n  });\n};\n\n\n/**\n * Specifies an instance of Firebase User.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.firebaseUser = function(opt_optional) {\n  return /** @type {!fireauth.args.Argument} */ ({\n    name: 'user',\n    typeLabel: 'an instance of Firebase User',\n    optional: !!opt_optional,\n    validator: /** @type {function(!fireauth.AuthUser) : boolean} */ (\n        function(user) {\n          return !!(user && user instanceof fireauth.AuthUser);\n        })\n  });\n};\n\n\n/**\n * Specifies an instance of Firebase App.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.firebaseApp = function(opt_optional) {\n  return /** @type {!fireauth.args.Argument} */ ({\n    name: 'app',\n    typeLabel: 'an instance of Firebase App',\n    optional: !!opt_optional,\n    validator: /** @type {function(!firebase.app.App) : boolean} */ (\n        function(app) {\n          return !!(app && app instanceof firebase.app.App);\n        })\n  });\n};\n\n\n/**\n * Specifies an argument that implements the fireauth.AuthCredential interface.\n * @param {?fireauth.idp.ProviderId=} opt_requiredProviderId The required type\n *     of provider.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.authCredential =\n    function(opt_requiredProviderId, opt_name, opt_optional) {\n  var name = opt_name ||\n      (opt_requiredProviderId ?\n       opt_requiredProviderId + 'Credential' :\n       'credential');\n  var typeLabel = opt_requiredProviderId ?\n      'a valid ' + opt_requiredProviderId + ' credential' :\n      'a valid credential';\n  return /** @type {!fireauth.args.Argument} */ ({\n    name: name,\n    typeLabel: typeLabel,\n    optional: !!opt_optional,\n    validator: /** @type {function(!fireauth.AuthCredential) : boolean} */ (\n        function(credential) {\n          if (!credential) {\n            return false;\n          }\n          // If opt_requiredProviderId is set, make sure it matches the\n          // credential's providerId.\n          var matchesRequiredProvider = !opt_requiredProviderId ||\n              (credential['providerId'] === opt_requiredProviderId);\n          return !!(credential.getIdTokenProvider && matchesRequiredProvider);\n        })\n  });\n};\n\n\n/**\n * Specifies an argument that implements the fireauth.AuthProvider interface.\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.authProvider = function(opt_name, opt_optional) {\n  return /** @type {!fireauth.args.Argument} */ ({\n    name: opt_name || 'authProvider',\n    typeLabel: 'a valid Auth provider',\n    optional: !!opt_optional,\n    validator: /** @type {function(!fireauth.AuthProvider) : boolean} */ (\n        function(provider) {\n          return !!(provider &&\n                    provider['providerId'] &&\n                    provider.hasOwnProperty &&\n                    provider.hasOwnProperty('isOAuthProvider'));\n        })\n  });\n};\n\n\n/**\n * Specifies an argument that implements the firebase.auth.ApplicationVerifier\n * interface.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.applicationVerifier = function(opt_optional) {\n  return /** @type {!fireauth.args.Argument} */ ({\n    name: 'applicationVerifier',\n    typeLabel: 'an implementation of firebase.auth.ApplicationVerifier',\n    optional: !!opt_optional,\n    validator:\n        /** @type {function(!firebase.auth.ApplicationVerifier) : boolean} */ (\n        function(applicationVerifier) {\n          return !!(applicationVerifier &&\n                    goog.isString(applicationVerifier.type) &&\n                    goog.isFunction(applicationVerifier.verify));\n        })\n  });\n};\n\n\n/**\n * Specifies an argument that can be either of two argument types.\n * @param {!fireauth.args.Argument} optionA\n * @param {!fireauth.args.Argument} optionB\n * @param {?string=} opt_name The name of the argument.\n * @param {?boolean=} opt_optional Whether or not this argument is optional.\n *     Defaults to false.\n * @return {!fireauth.args.Argument}\n */\nfireauth.args.or = function(optionA, optionB, opt_name, opt_optional) {\n  return {\n    name: opt_name || '',\n    typeLabel: optionA.typeLabel + ' or ' + optionB.typeLabel,\n    optional: !!opt_optional,\n    validator: function(value) {\n      return optionA.validator(value) || optionB.validator(value);\n    }\n  };\n};\n\n\n/**\n * @param {string} str\n * @return {string} The string surrounded with quotes.\n * @private\n */\nfireauth.args.quoteString_ = function(str) {\n  return '\"' + str + '\"';\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides utilities for exporting public APIs, with error\n *     checking.\n */\n\ngoog.provide('fireauth.exportlib');\ngoog.provide('fireauth.exportlib.ExportedMethod');\n\ngoog.require('fireauth.args');\n\n\n/**\n * Type constant for Firebase Auth.\n * @const {string}\n */\nfireauth.exportlib.AUTH_TYPE = 'auth';\n\n\n/**\n * Represents an exported method, with the exported name of the method and the\n * expected arguments to that method.\n * @typedef {{\n *   name: string,\n *   args: (Array<!fireauth.args.Argument>|null|undefined)\n * }}\n */\nfireauth.exportlib.ExportedMethod;\n\n\n/**\n * Represents an exported property, with the exported name of the property and\n * the expected argument to the setter of this property.\n * @typedef {{\n *   name: string,\n *   arg: !fireauth.args.Argument\n * }}\n */\nfireauth.exportlib.ExportedProperty;\n\n\n/**\n * Exports prototype methods of an object.\n * @param {!Object} protObj The prototype of an object.\n * @param {!Object<string, fireauth.exportlib.ExportedMethod>} fnMap The map of\n *     prototype functions to their export name and expected arguments.\n */\nfireauth.exportlib.exportPrototypeMethods = function(protObj, fnMap) {\n  // This method exports methods by aliasing the unobfuscated function name\n  // (specified as a string in the \"name\" field of ExportedMethod) to the\n  // obfuscated function name (specified as a key of the fnMap object).\n  //\n  // To give a concrete example, let's say that we have this method:\n  // fireauth.Auth.prototype.fetchProvidersForEmail = function() { ... };\n  //\n  // In the exports file, we export as follows:\n  // fireauth.exportlib.exportPrototypeMethods(fireauth.Auth.prototype, {\n  //   fetchProvidersForEmail: {name: 'fetchProvidersForEmail', args: ...}\n  // });\n  //\n  // When the compiler obfuscates the code, the code above will become something\n  // like this:\n  // fireauth.Auth.prototype.qZ = function() { ... };\n  // fireauth.exportlib.exportPrototypeMethods(fireauth.Auth.prototype, {\n  //   qZ: {name: 'fetchProvidersForEmail', args: ...}\n  // });\n  //\n  // (Of course, fireauth.Auth and fireauth.exportlib.exportPrototypeMethods\n  // would also be obfuscated). Note that the key in fnMap is obfuscated but the\n  // \"name\" field in the ExportedMethod is not. Now, exportPrototypeMethods can\n  // export fetchProvidersForEmail by reading the key (\"qZ\") and the \"name\"\n  // field (\"fetchProvidersForEmail\") and essentially executing this:\n  // fireauth.Auth.prototype['fetchProvidersForEmail'] =\n  //     fireauth.Auth.prototype['qZ'];\n  for (var obfuscatedFnName in fnMap) {\n    var unobfuscatedFnName = fnMap[obfuscatedFnName].name;\n    protObj[unobfuscatedFnName] =\n        fireauth.exportlib.wrapMethodWithArgumentVerifier_(\n        unobfuscatedFnName, protObj[obfuscatedFnName],\n        fnMap[obfuscatedFnName].args);\n  }\n};\n\n\n/**\n * Exports properties of an object. See the docs for exportPrototypeMethods for\n * more information about how this works.\n * @param {!Object} protObj The prototype of an object.\n * @param {!Object<string, !fireauth.exportlib.ExportedProperty>} propMap The\n *     map of properties to their export names.\n */\nfireauth.exportlib.exportPrototypeProperties = function(protObj, propMap) {\n  for (var obfuscatedPropName in propMap) {\n    var unobfuscatedPropName = propMap[obfuscatedPropName].name;\n    // Don't alias a property to itself.\n    // Downside is that argument validation will not be possible. For now, to\n    // get around it, ensure unobfuscated property names are different\n    // than the corresponding obfuscated property names.\n    if (unobfuscatedPropName === obfuscatedPropName) {\n      continue;\n    }\n    /**\n     * @this {!Object}\n     * @param {string} obfuscatedPropName The obfuscated property name.\n     * @return {*} The value of the property.\n     */\n    var getter = function(obfuscatedPropName) {\n      return this[obfuscatedPropName];\n    };\n    /**\n     * @this {!Object}\n     * @param {string} unobfuscatedPropName The unobfuscated property name.\n     * @param {string} obfuscatedPropName The obfuscated property name.\n     * @param {!fireauth.args.Argument} expectedArg The expected argument to the\n     *     setter of this property.\n     * @param {*} value The new value of the property.\n     */\n    var setter = function(unobfuscatedPropName, obfuscatedPropName,\n                          expectedArg, value) {\n      // Validate the argument before setting it.\n      fireauth.args.validate(\n          unobfuscatedPropName, [expectedArg], [value], true);\n      this[obfuscatedPropName] = value;\n    };\n    // Get the expected argument.\n    var expectedArg = propMap[obfuscatedPropName].arg;\n    Object.defineProperty(protObj, unobfuscatedPropName, {\n      /**\n       * @this {!Object}\n       * @return {*} The value of the property.\n       */\n      get: goog.partial(getter, obfuscatedPropName),\n      /**\n       * @this {!Object}\n       * @param {*} value The new value of the property.\n       */\n      set: goog.partial(setter, unobfuscatedPropName, obfuscatedPropName,\n                        expectedArg),\n      enumerable: true\n    });\n  }\n};\n\n\n/**\n * Export a static method as a public API.\n * @param {!Object} parentObj The parent object to patch.\n * @param {string} name The public name of the method.\n * @param {!Function} func The method.\n * @param {?Array<!fireauth.args.Argument>=} opt_expectedArgs The expected\n *     arguments to the method.\n */\nfireauth.exportlib.exportFunction = function(parentObj, name, func,\n    opt_expectedArgs) {\n  parentObj[name] = fireauth.exportlib.wrapMethodWithArgumentVerifier_(\n      name, func, opt_expectedArgs);\n};\n\n\n/**\n * Wraps a method with a function that first verifies the arguments to the\n * method and then calls the original method.\n * @param {string} methodName The name of the method, which will be displayed\n *     on the error message if the arguments are not valid.\n * @param {!Function} method The method to be wrapped.\n * @param {?Array<!fireauth.args.Argument>=} opt_expectedArgs The expected\n *     arguments.\n * @return {!Function} The wrapped method.\n * @private\n */\nfireauth.exportlib.wrapMethodWithArgumentVerifier_ = function(methodName,\n    method, opt_expectedArgs) {\n  if (!opt_expectedArgs) {\n    return method;\n  }\n  var shortName = fireauth.exportlib.extractMethodNameFromFullPath_(methodName);\n  var wrapper = function() {\n    var argumentsAsArray = Array.prototype.slice.call(arguments);\n    fireauth.args.validate(shortName,\n        /** @type {!Array<!fireauth.args.Argument>} */ (opt_expectedArgs),\n        argumentsAsArray);\n    return method.apply(this, argumentsAsArray);\n  };\n  // Reattach all static stuff to wrapper.\n  for (var key in method) {\n    wrapper[key] = method[key];\n  }\n  // Reattach all prototype stuff to wrapper.\n  for (var key in method.prototype) {\n    wrapper.prototype[key] = method.prototype[key];\n  }\n  // Return wrapper with all of method's static and prototype methods and\n  // properties.\n  return wrapper;\n};\n\n\n/**\n * From a full path to a method (e.g. \"fireauth.GoogleAuthProvider.credential\"),\n * get just the method name (\"credential\").\n * @param {string} path The full path.\n * @return {string} The method name.\n * @private\n */\nfireauth.exportlib.extractMethodNameFromFullPath_ = function(path) {\n  var parts = path.split('.');\n  return parts[parts.length - 1];\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('fireauth.exports');\n\ngoog.require('fireauth.Auth');\ngoog.require('fireauth.AuthError');\ngoog.require('fireauth.AuthErrorWithCredential');\ngoog.require('fireauth.AuthSettings');\ngoog.require('fireauth.AuthUser');\ngoog.require('fireauth.ConfirmationResult');\ngoog.require('fireauth.EmailAuthProvider');\ngoog.require('fireauth.FacebookAuthProvider');\ngoog.require('fireauth.GRecaptchaMockFactory');\ngoog.require('fireauth.GithubAuthProvider');\ngoog.require('fireauth.GoogleAuthProvider');\ngoog.require('fireauth.InvalidOriginError');\ngoog.require('fireauth.OAuthProvider');\ngoog.require('fireauth.PhoneAuthProvider');\ngoog.require('fireauth.RecaptchaVerifier');\ngoog.require('fireauth.SAMLAuthProvider');\ngoog.require('fireauth.TwitterAuthProvider');\ngoog.require('fireauth.args');\ngoog.require('fireauth.authStorage.Persistence');\ngoog.require('fireauth.exportlib');\ngoog.require('fireauth.grecaptcha');\ngoog.require('fireauth.idp.ProviderId');\ngoog.require('goog.Promise');\n\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.Auth.prototype, {\n      applyActionCode: {\n        name: 'applyActionCode',\n        args: [fireauth.args.string('code')]\n      },\n      checkActionCode: {\n        name: 'checkActionCode',\n        args: [fireauth.args.string('code')]\n      },\n      confirmPasswordReset: {\n        name: 'confirmPasswordReset',\n        args: [\n          fireauth.args.string('code'),\n          fireauth.args.string('newPassword')\n        ]\n      },\n      createUserWithEmailAndPassword: {\n        name: 'createUserWithEmailAndPassword',\n        args: [fireauth.args.string('email'), fireauth.args.string('password')]\n      },\n      createUserAndRetrieveDataWithEmailAndPassword: {\n        name: 'createUserAndRetrieveDataWithEmailAndPassword',\n        args: [fireauth.args.string('email'), fireauth.args.string('password')]\n      },\n      fetchProvidersForEmail: {\n        name: 'fetchProvidersForEmail',\n        args: [fireauth.args.string('email')]\n      },\n      fetchSignInMethodsForEmail: {\n        name: 'fetchSignInMethodsForEmail',\n        args: [fireauth.args.string('email')]\n      },\n      getRedirectResult: {\n        name: 'getRedirectResult',\n        args: []\n      },\n      isSignInWithEmailLink: {\n        name: 'isSignInWithEmailLink',\n        args: [fireauth.args.string('emailLink')]\n      },\n      onAuthStateChanged: {\n        name: 'onAuthStateChanged',\n        args: [\n          fireauth.args.or(\n              fireauth.args.object(),\n              fireauth.args.func(),\n              'nextOrObserver'),\n          fireauth.args.func('opt_error', true),\n          fireauth.args.func('opt_completed', true)\n        ]\n      },\n      onIdTokenChanged: {\n        name: 'onIdTokenChanged',\n        args: [\n          fireauth.args.or(\n              fireauth.args.object(),\n              fireauth.args.func(),\n              'nextOrObserver'),\n          fireauth.args.func('opt_error', true),\n          fireauth.args.func('opt_completed', true)\n        ]\n      },\n      sendPasswordResetEmail: {\n        name: 'sendPasswordResetEmail',\n        args: [\n          fireauth.args.string('email'),\n          fireauth.args.or(\n              fireauth.args.object('opt_actionCodeSettings', true),\n              fireauth.args.null(null, true),\n              'opt_actionCodeSettings',\n              true)\n        ]\n      },\n      sendSignInLinkToEmail: {\n        name: 'sendSignInLinkToEmail',\n        args: [\n          fireauth.args.string('email'),\n          fireauth.args.object('actionCodeSettings')\n        ]\n      },\n      setPersistence: {\n        name: 'setPersistence',\n        args:  [fireauth.args.string('persistence')]\n      },\n      signInAndRetrieveDataWithCredential: {\n        name: 'signInAndRetrieveDataWithCredential',\n        args: [fireauth.args.authCredential()]\n      },\n      signInAnonymously: {\n        name: 'signInAnonymously',\n        args: []\n      },\n      signInAnonymouslyAndRetrieveData: {\n        name: 'signInAnonymouslyAndRetrieveData',\n        args: []\n      },\n      signInWithCredential: {\n        name: 'signInWithCredential',\n        args: [fireauth.args.authCredential()]\n      },\n      signInWithCustomToken: {\n        name: 'signInWithCustomToken',\n        args: [fireauth.args.string('token')]\n      },\n      signInAndRetrieveDataWithCustomToken: {\n        name: 'signInAndRetrieveDataWithCustomToken',\n        args: [fireauth.args.string('token')]\n      },\n      signInWithEmailAndPassword: {\n        name: 'signInWithEmailAndPassword',\n        args: [fireauth.args.string('email'), fireauth.args.string('password')]\n      },\n      signInWithEmailLink: {\n        name: 'signInWithEmailLink',\n        args: [\n          fireauth.args.string('email'), fireauth.args.string('emailLink', true)\n        ]\n      },\n      signInAndRetrieveDataWithEmailAndPassword: {\n        name: 'signInAndRetrieveDataWithEmailAndPassword',\n        args: [fireauth.args.string('email'), fireauth.args.string('password')]\n      },\n      signInWithPhoneNumber: {\n        name: 'signInWithPhoneNumber',\n        args: [\n          fireauth.args.string('phoneNumber'),\n          fireauth.args.applicationVerifier()\n        ]\n      },\n      signInWithPopup: {\n        name: 'signInWithPopup',\n        args: [fireauth.args.authProvider()]\n      },\n      signInWithRedirect: {\n        name: 'signInWithRedirect',\n        args: [fireauth.args.authProvider()]\n      },\n      updateCurrentUser: {\n        name: 'updateCurrentUser',\n        args: [\n          fireauth.args.or(\n            fireauth.args.firebaseUser(),\n            fireauth.args.null(),\n            'user')\n        ]\n      },\n      signOut: {\n        name: 'signOut',\n        args: []\n      },\n      toJSON: {\n        name: 'toJSON',\n        // This shouldn't take an argument but a blank string is being passed\n        // on JSON.stringify and causing this to fail with an argument error.\n        // So allow an optional string.\n        args: [fireauth.args.string(null, true)]\n      },\n      useDeviceLanguage: {\n        name: 'useDeviceLanguage',\n        args: []\n      },\n      verifyPasswordResetCode: {\n        name: 'verifyPasswordResetCode',\n        args: [fireauth.args.string('code')]\n      }\n    });\n\nfireauth.exportlib.exportPrototypeProperties(\n    fireauth.Auth.prototype, {\n      'lc': {\n        name: 'languageCode',\n        arg: fireauth.args.or(\n            fireauth.args.string(),\n            fireauth.args.null(),\n            'languageCode')\n      }\n    });\n\n// Exports firebase.auth.Auth.Persistence.\nfireauth.Auth['Persistence'] = fireauth.authStorage.Persistence;\nfireauth.Auth['Persistence']['LOCAL'] = fireauth.authStorage.Persistence.LOCAL;\nfireauth.Auth['Persistence']['SESSION'] =\n    fireauth.authStorage.Persistence.SESSION;\nfireauth.Auth['Persistence']['NONE'] = fireauth.authStorage.Persistence.NONE;\n\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.AuthUser.prototype, {\n      'delete': {\n        name: 'delete',\n        args: []\n      },\n      getIdTokenResult: {\n        name: 'getIdTokenResult',\n        args: [fireauth.args.bool('opt_forceRefresh', true)]\n      },\n      getIdToken: {\n        name: 'getIdToken',\n        args: [fireauth.args.bool('opt_forceRefresh', true)]\n      },\n      linkAndRetrieveDataWithCredential: {\n        name: 'linkAndRetrieveDataWithCredential',\n        args: [fireauth.args.authCredential()]\n      },\n      linkWithCredential: {\n        name: 'linkWithCredential',\n        args: [fireauth.args.authCredential()]\n      },\n      linkWithPhoneNumber: {\n        name: 'linkWithPhoneNumber',\n        args: [\n          fireauth.args.string('phoneNumber'),\n          fireauth.args.applicationVerifier()\n        ]\n      },\n      linkWithPopup: {\n        name: 'linkWithPopup',\n        args: [fireauth.args.authProvider()]\n      },\n      linkWithRedirect: {\n        name: 'linkWithRedirect',\n        args: [fireauth.args.authProvider()]\n      },\n      reauthenticateAndRetrieveDataWithCredential: {\n        name: 'reauthenticateAndRetrieveDataWithCredential',\n        args: [fireauth.args.authCredential()]\n      },\n      reauthenticateWithCredential: {\n        name: 'reauthenticateWithCredential',\n        args: [fireauth.args.authCredential()]\n      },\n      reauthenticateWithPhoneNumber: {\n        name: 'reauthenticateWithPhoneNumber',\n        args: [\n          fireauth.args.string('phoneNumber'),\n          fireauth.args.applicationVerifier()\n        ]\n      },\n      reauthenticateWithPopup: {\n        name: 'reauthenticateWithPopup',\n        args: [fireauth.args.authProvider()]\n      },\n      reauthenticateWithRedirect: {\n        name: 'reauthenticateWithRedirect',\n        args: [fireauth.args.authProvider()]\n      },\n      reload: {\n        name: 'reload',\n        args: []\n      },\n      sendEmailVerification: {\n        name: 'sendEmailVerification',\n        args: [\n          fireauth.args.or(\n              fireauth.args.object('opt_actionCodeSettings', true),\n              fireauth.args.null(null, true),\n              'opt_actionCodeSettings',\n              true)\n        ]\n      },\n      toJSON: {\n        name: 'toJSON',\n        // This shouldn't take an argument but a blank string is being passed\n        // on JSON.stringify and causing this to fail with an argument error.\n        // So allow an optional string.\n        args: [fireauth.args.string(null, true)]\n      },\n      unlink: {\n        name: 'unlink',\n        args: [fireauth.args.string('provider')]\n      },\n      updateEmail: {\n        name: 'updateEmail',\n        args: [fireauth.args.string('email')]\n      },\n      updatePassword: {\n        name: 'updatePassword',\n        args: [fireauth.args.string('password')]\n      },\n      updatePhoneNumber: {\n        name: 'updatePhoneNumber',\n        args: [fireauth.args.authCredential(fireauth.idp.ProviderId.PHONE)]\n      },\n      updateProfile: {\n        name: 'updateProfile',\n        args: [fireauth.args.object('profile')]\n      }\n    });\n\n// Ensure internal grecaptcha mock API do not get obfuscated.\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.GRecaptchaMockFactory.prototype, {\n      execute: {\n        name: 'execute'\n      },\n      render: {\n        name: 'render'\n      },\n      reset: {\n        name: 'reset'\n      },\n      getResponse: {\n        name: 'getResponse'\n      }\n    });\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.grecaptcha.prototype, {\n      execute: {\n        name: 'execute'\n      },\n      render: {\n        name: 'render'\n      },\n      reset: {\n        name: 'reset'\n      },\n      getResponse: {\n        name: 'getResponse'\n      }\n    });\n\nfireauth.exportlib.exportPrototypeMethods(\n    goog.Promise.prototype, {\n      thenAlways: {\n        name: 'finally'\n      },\n      thenCatch: {\n        name: 'catch'\n      },\n      then: {\n        name: 'then'\n      }\n    });\n\nfireauth.exportlib.exportPrototypeProperties(\n    fireauth.AuthSettings.prototype, {\n      'appVerificationDisabled': {\n        name: 'appVerificationDisabledForTesting',\n        arg: fireauth.args.bool('appVerificationDisabledForTesting')\n      }\n    });\n\nfireauth.exportlib.exportPrototypeMethods(\n   fireauth.ConfirmationResult.prototype, {\n      confirm: {\n        name: 'confirm',\n        args: [\n          fireauth.args.string('verificationCode')\n        ]\n      }\n    });\n\nfireauth.exportlib.exportFunction(\n    fireauth.EmailAuthProvider, 'credential',\n    fireauth.EmailAuthProvider.credential, [\n      fireauth.args.string('email'),\n      fireauth.args.string('password')\n    ]);\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.FacebookAuthProvider.prototype, {\n      addScope: {\n        name: 'addScope',\n        args: [fireauth.args.string('scope')]\n      },\n      setCustomParameters: {\n        name: 'setCustomParameters',\n        args: [fireauth.args.object('customOAuthParameters')]\n      }\n    });\nfireauth.exportlib.exportFunction(\n    fireauth.FacebookAuthProvider, 'credential',\n    fireauth.FacebookAuthProvider.credential, [\n      fireauth.args.or(fireauth.args.string(), fireauth.args.object(),\n          'token')\n    ]);\nfireauth.exportlib.exportFunction(\n    fireauth.EmailAuthProvider, 'credentialWithLink',\n    fireauth.EmailAuthProvider.credentialWithLink, [\n      fireauth.args.string('email'),\n      fireauth.args.string('emailLink')\n    ]);\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.GithubAuthProvider.prototype, {\n      addScope: {\n        name: 'addScope',\n        args: [fireauth.args.string('scope')]\n      },\n      setCustomParameters: {\n        name: 'setCustomParameters',\n        args: [fireauth.args.object('customOAuthParameters')]\n      }\n    });\nfireauth.exportlib.exportFunction(\n    fireauth.GithubAuthProvider, 'credential',\n    fireauth.GithubAuthProvider.credential, [\n      fireauth.args.or(fireauth.args.string(), fireauth.args.object(),\n          'token')\n    ]);\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.GoogleAuthProvider.prototype, {\n      addScope: {\n        name: 'addScope',\n        args: [fireauth.args.string('scope')]\n      },\n      setCustomParameters: {\n        name: 'setCustomParameters',\n        args: [fireauth.args.object('customOAuthParameters')]\n      }\n    });\nfireauth.exportlib.exportFunction(\n    fireauth.GoogleAuthProvider, 'credential',\n    fireauth.GoogleAuthProvider.credential, [\n      fireauth.args.or(fireauth.args.string(),\n          fireauth.args.or(fireauth.args.object(), fireauth.args.null()),\n          'idToken'),\n      fireauth.args.or(fireauth.args.string(), fireauth.args.null(),\n          'accessToken', true)\n    ]);\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.TwitterAuthProvider.prototype, {\n      setCustomParameters: {\n        name: 'setCustomParameters',\n        args: [fireauth.args.object('customOAuthParameters')]\n      }\n    });\nfireauth.exportlib.exportFunction(\n    fireauth.TwitterAuthProvider, 'credential',\n    fireauth.TwitterAuthProvider.credential, [\n      fireauth.args.or(fireauth.args.string(), fireauth.args.object(),\n          'token'),\n      fireauth.args.string('secret', true)\n    ]);\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.OAuthProvider.prototype, {\n      addScope: {\n        name: 'addScope',\n        args: [fireauth.args.string('scope')]\n      },\n      credential: {\n        name: 'credential',\n        args: [\n          fireauth.args.or(fireauth.args.string(), fireauth.args.null(),\n              'idToken', true),\n          fireauth.args.or(fireauth.args.string(), fireauth.args.null(),\n              'accessToken', true),\n          fireauth.args.or(fireauth.args.string(), fireauth.args.null(),\n              'nonce', true)\n        ]\n      },\n      setCustomParameters: {\n        name: 'setCustomParameters',\n        args: [fireauth.args.object('customOAuthParameters')]\n      }\n    });\nfireauth.exportlib.exportFunction(\n    fireauth.PhoneAuthProvider, 'credential',\n    fireauth.PhoneAuthProvider.credential, [\n      fireauth.args.string('verificationId'),\n      fireauth.args.string('verificationCode')\n    ]);\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.PhoneAuthProvider.prototype, {\n      verifyPhoneNumber: {\n        name: 'verifyPhoneNumber',\n        args: [\n          fireauth.args.string('phoneNumber'),\n          fireauth.args.applicationVerifier()\n        ]\n      }\n    });\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.AuthError.prototype, {\n      toJSON: {\n        name: 'toJSON',\n        // This shouldn't take an argument but a blank string is being passed\n        // on JSON.stringify and causing this to fail with an argument error.\n        // So allow an optional string.\n        args: [fireauth.args.string(null, true)]\n      }\n    });\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.AuthErrorWithCredential.prototype, {\n      toJSON: {\n        name: 'toJSON',\n        // This shouldn't take an argument but a blank string is being passed\n        // on JSON.stringify and causing this to fail with an argument error.\n        // So allow an optional string.\n        args: [fireauth.args.string(null, true)]\n      }\n    });\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.InvalidOriginError.prototype, {\n      toJSON: {\n        name: 'toJSON',\n        // This shouldn't take an argument but a blank string is being passed\n        // on JSON.stringify and causing this to fail with an argument error.\n        // So allow an optional string.\n        args: [fireauth.args.string(null, true)]\n      }\n    });\n\nfireauth.exportlib.exportPrototypeMethods(\n    fireauth.RecaptchaVerifier.prototype, {\n      clear: {\n        name: 'clear',\n        args: []\n      },\n      render: {\n        name: 'render',\n        args: []\n      },\n      verify: {\n        name: 'verify',\n        args: []\n      }\n    });\n\n\n(function() {\n  if (typeof firebase === 'undefined' || !firebase.INTERNAL ||\n      !firebase.INTERNAL.registerService) {\n    throw new Error('Cannot find the firebase namespace; be sure to include ' +\n        'firebase-app.js before this library.');\n  } else {\n    /** @type {!firebase.ServiceFactory} */\n    var factory = function(app, extendApp) {\n      var auth = new fireauth.Auth(app);\n      extendApp({\n        'INTERNAL': {\n          // Extend app.INTERNAL.getUid.\n          'getUid': goog.bind(auth.getUid, auth),\n          'getToken': goog.bind(auth.getIdTokenInternal, auth),\n          'addAuthTokenListener':\n              goog.bind(auth.addAuthTokenListenerInternal, auth),\n          'removeAuthTokenListener':\n              goog.bind(auth.removeAuthTokenListenerInternal, auth)\n        }\n      });\n      return auth;\n    };\n\n    var namespace = {\n      'Auth': fireauth.Auth,\n      'Error': fireauth.AuthError\n    };\n    fireauth.exportlib.exportFunction(namespace,\n        'EmailAuthProvider', fireauth.EmailAuthProvider, []);\n    fireauth.exportlib.exportFunction(namespace,\n        'FacebookAuthProvider', fireauth.FacebookAuthProvider, []);\n    fireauth.exportlib.exportFunction(namespace,\n        'GithubAuthProvider', fireauth.GithubAuthProvider, []);\n    fireauth.exportlib.exportFunction(namespace,\n        'GoogleAuthProvider', fireauth.GoogleAuthProvider, []);\n    fireauth.exportlib.exportFunction(namespace,\n        'TwitterAuthProvider', fireauth.TwitterAuthProvider, []);\n    fireauth.exportlib.exportFunction(namespace,\n        'OAuthProvider', fireauth.OAuthProvider, [\n          fireauth.args.string('providerId')\n        ]);\n    fireauth.exportlib.exportFunction(namespace,\n        'SAMLAuthProvider', fireauth.SAMLAuthProvider, [\n          fireauth.args.string('providerId')\n        ]);\n    fireauth.exportlib.exportFunction(namespace,\n        'PhoneAuthProvider', fireauth.PhoneAuthProvider, [\n          fireauth.args.firebaseAuth(true)\n        ]);\n    fireauth.exportlib.exportFunction(namespace,\n        'RecaptchaVerifier', fireauth.RecaptchaVerifier, [\n          fireauth.args.or(\n              fireauth.args.string(),\n              fireauth.args.element(),\n              'recaptchaContainer'),\n          fireauth.args.object('recaptchaParameters', true),\n          fireauth.args.firebaseApp(true)\n        ]);\n\n    // Register Auth service with firebase.App.\n    firebase.INTERNAL.registerService(\n        fireauth.exportlib.AUTH_TYPE,\n        factory,\n        namespace,\n        // Initialize Auth when an App is created, so that tokens and Auth state\n        // listeners are available.\n        function (event, app) {\n          if (event === 'create') {\n            try {\n              app[fireauth.exportlib.AUTH_TYPE]();\n            } catch (e) {\n              // This is a silent operation in the background. If the auth\n              // initialization fails, it should not cause a fatal error.\n              // Instead when the developer tries to initialize again manually,\n              // the error will be thrown.\n              // One specific use case here is the initialization for the nodejs\n              // client when no API key is provided. This is commonly used\n              // for unauthenticated database access.\n            }\n          }\n        }\n        );\n\n\n    // Expose User as firebase.User.\n    firebase.INTERNAL.extendNamespace({\n      'User': fireauth.AuthUser\n    });\n  }\n})();\n","import '@firebase/auth';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n","document.addEventListener('DOMContentLoaded', () => {\n  'use strict' \n\n  const firebase = require('firebase/app')\n  require('firebase/auth')\n  const config = {\n    apiKey: \"AIzaSyCbwkLe6ZFPLMxAoT7iNjSKEFf6hsCuXZA\",\n    authDomain: \"test-store-b68ee.firebaseapp.com\",\n  }\n  firebase.initializeApp(config)\n\n\n}) "]}